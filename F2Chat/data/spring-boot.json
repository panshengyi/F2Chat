[
    {
        "id": 0,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5f0112f16c06cd1bf472a9fb",
                "text": "hi. I tried to use layered docker image from spring boot 2.3.0 but my application fails to start with this error. any suggestions please?\n```\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nAn attempt was made to call a method that does not exist. The attempt was made from the following location:\n\n    org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration.resourceServerProperties(OAuth2AutoConfiguration.java:60)\n\nThe following method did not exist:\n\n    'java.lang.String org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties.getClientId()'\n\nThe method's class, org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties, is available from the following locations:\n\n    jar:file:/application/BOOT-INF/lib/spring-boot-autoconfigure-2.3.0.RELEASE.jar!/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.class\n    jar:file:/application/BOOT-INF/lib/spring-security-oauth2-autoconfigure-2.3.0.RELEASE.jar!/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.class\n\nIt was loaded from the following location:\n\n    file:/application/BOOT-INF/lib/spring-boot-autoconfigure-2.3.0.RELEASE.jar\n\n\nAction:\n\nCorrect the classpath of your application so that it contains a single, compatible version of org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties\n```",
                "time": "2020-07-04 23:38:25",
                "index": 0,
                "user": "bukajsytlos"
            },
            {
                "id": "5f017592b8152d3484823ac0",
                "text": "@bukajsytlos Check if you need spring-security-oauth2-autoconfigure. Spring Security\u2019s own OAuth support and Boot\u2019s auto-configuration of it may give you all that you need. If you do need it, you should disable Boot\u2019s `org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration`.",
                "time": "2020-07-05 06:39:14",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5f01e93fec4a341bee0be6ca",
                "text": "@wilkinsona thank you. We need it and I am not sure how to disable boot's autoconfiguration?\nI found org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration only in spring-security-oauth2-autoconfigure-2.3.0.RELEASE.jar. When I disable autoconfigs from spring-boot-autoconfigure-2.3.0.RELEASE.jar namely OAuth2ResourceServerAutoConfiguration and OAuth2ClientAutoConfiguration nothing really changes in case of an error. Also I would like to know why there is no problem when running as regular jar.",
                "time": "2020-07-05 14:52:47",
                "index": 37,
                "user": "bukajsytlos"
            },
            {
                "id": "5f01f1c37ba3965373ebba5a",
                "text": "@bukajsytlos If it works as a regular jar and fails when built as a Docker image, it sounds like the ordering of the classpath has changed. That shouldn\u2019t happen. Can you please open a Spring Boot issue with a small sample that reproduces the problem so that we can investigate?",
                "time": "2020-07-05 15:29:07",
                "index": 38,
                "user": "wilkinsona"
            },
            {
                "id": "5f0236903a0d3931fad4a318",
                "text": "@wilkinsona I tried to create a reproducer, and I've find out that it works in 2.3.1 but fails in 2.3.0. Not sure if I should create issue for others to find?",
                "time": "2020-07-05 20:22:40",
                "index": 44,
                "user": "bukajsytlos"
            }
        ]
    },
    {
        "id": 1,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bedcb8cfee6703aaf776692",
                "text": "I'm researching whether Spring Boot jar deployment supports serving up resources from the BOOT-INF/classes/META-INF/resources folder. I haven't been able to get it working locally using Tomcat as the embedded container. I don't see the code in AbstractEmbeddedServletContainerFactory.java supporting this. ",
                "time": "2018-11-15 19:39:56",
                "index": 0,
                "user": "sudr"
            },
            {
                "id": "5bedcbe27a36913a9a4a2fcc",
                "text": "Looks like @wilkinsona may know about this area. Could you chime in please.",
                "time": "2018-11-15 19:41:22",
                "index": 1,
                "user": "sudr"
            },
            {
                "id": "5bedcd384e7ca14520af84b4",
                "text": "I see that this is listed as an open issue: https://github.com/spring-projects/spring-boot/issues/8324",
                "time": "2018-11-15 19:47:04",
                "index": 2,
                "user": "sudr"
            },
            {
                "id": "5bedd7257326df140e0fcdcc",
                "text": "@sudr That issue is unlikely to be implemented in the short to medium-term. In fact, I'm wondering if we shouldn't just close it. I'd recommend that you use one of the two alternatives that I described in that issue. They are the following:\n\n1. Package your application as a war file and use src/main/webapp/ for your resources rather than src/main/resources/META-INF/resources/. You can still launch it using java -jar.\n2. Continue packaging your application as a jar file, but move your resources into a separate module and make your app depend on the module such that its jar is packaged in BOOT-INF/lib",
                "time": "2018-11-15 20:29:25",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bedd75062866f7473a4e948",
                "text": "thanks for the response..we are moving forward with 2.",
                "time": "2018-11-15 20:30:08",
                "index": 4,
                "user": "sudr"
            }
        ]
    },
    {
        "id": 2,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5bc96eddc08b8b306739709b",
                "text": "Hey,  could any contributor give me some feedback on @wilkinsona c",
                "time": "2018-10-19 05:42:53",
                "index": 0,
                "user": "eiselems"
            },
            {
                "id": "5bc96f0bae7be940167e8ab0",
                "text": "https://github.com/spring-projects/spring-boot/pull/14807 (woah gitter on Chrome mobile is really a pain)",
                "time": "2018-10-19 05:43:39",
                "index": 1,
                "user": "eiselems"
            },
            {
                "id": "5bca0857c08b8b30673d6b85",
                "text": "@eiselems I'll take a look if I can find some time. I have a few things to finish off before taking a week's vacation",
                "time": "2018-10-19 16:37:43",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bca47bb1c100a4f29b19c64",
                "text": "@wilkinsona Hey wilkinsona, think you really were busy with the release. Enjoy your vacation, well deserved I guess :+1: :smiley: \nAlso thanks for your feedback/review, really appreciated. Just did the changes and updated the PR.",
                "time": "2018-10-19 21:08:11",
                "index": 11,
                "user": "eiselems"
            }
        ]
    },
    {
        "id": 3,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d3aea524a32b65507dc3107",
                "text": "Hi, i want to use the ```io.micrometer.core.annotation.Timed``` on my spring components.\nI've created a TimedConfiguration \n\n```\n/**\n * Micrometer\u2019s Spring Boot configuration does not recognize @Timed on arbitrary methods.\n * https://micrometer.io/docs/concepts#_the_code_timed_code_annotation\n */\n\n@Configuration\npublic class TimedConfiguration {\n\n    @Bean\n    public TimedAspect timedAspect(final MeterRegistry registry) {\n        return new TimedAspect(registry);\n    }\n}\n```\n\n```\n@Component\n@RequiredArgsConstructor\npublic class MyAwesomeComponent {\n\n    private final MyService myService;\n\n    @Timed(\"my-metric\")\n    public void awesomeMethod() {\n       myService.anyMethod();\n    }\n}\n```\nThis works well, but when i've enabled the spring dev tools the injected MyService is always null.\nAny ideas?",
                "time": "2019-07-26 11:56:02",
                "index": 0,
                "user": "sklaholz"
            },
            {
                "id": "5d3aead3ad9a483d8c43f0da",
                "text": "SpringBoot 2.1.6",
                "time": "2019-07-26 11:58:11",
                "index": 1,
                "user": "sklaholz"
            },
            {
                "id": "5d3b125b422eab0d33389af5",
                "text": "that seems unrelated to micrometer. Does ```MyService``` has ```@Component``` annotation or is it part of component scan ?",
                "time": "2019-07-26 14:46:51",
                "index": 2,
                "user": "prabhatcraz"
            },
            {
                "id": "5d3b1269a8e8ed132812e6ac",
                "text": "@sklaholz that seems unrelated to micrometer. Does ```MyService``` has ```@Component``` annotation or is it part of component scan ?",
                "time": "2019-07-26 14:47:05",
                "index": 3,
                "user": "prabhatcraz"
            },
            {
                "id": "5d3e9a59f0ff3e2bba886927",
                "text": "@prabhatcraz MyService is annotated with ```@Component```. I think its the combination of Spring DevTools and the TimedAspect. When i remove the TimedAspect bean it works without writing metrics.",
                "time": "2019-07-29 07:03:53",
                "index": 36,
                "user": "sklaholz"
            },
            {
                "id": "5d3eab0ece271b4acd27a681",
                "text": "@prabhatcraz when i start the aplication with ```System.setProperty(\"spring.devtools.restart.enabled\", \"false\u201c);``` the dependency injection works too",
                "time": "2019-07-29 08:15:10",
                "index": 37,
                "user": "sklaholz"
            }
        ]
    },
    {
        "id": 4,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c93abb29d9cc8114afa0553",
                "text": "Hello All .. I am trying to get all the application config properties in my spring boot app as key -> value pairs .. I am unable to find info on that (my google fu is failing me) .. any pointers  on how I can achieve that.",
                "time": "2019-03-21 15:20:18",
                "index": 0,
                "user": "Chandu"
            },
            {
                "id": "5c93adc48aa66959b649b70b",
                "text": "@Chandu I think you might get it out of ConfigurableEnvironment (drill into getPropertySources). But beware that resolving them is hierarchical (i.e. you can specify properties as environment variables for example)...",
                "time": "2019-03-21 15:29:08",
                "index": 2,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c93ae049d9cc8114afa13bd",
                "text": "thinking a bit about it, I really wouldn't do that unless I have to.",
                "time": "2019-03-21 15:30:12",
                "index": 3,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c93ae106a3d2e230dffeb9b",
                "text": "@TomRauchenwald  Thank you. I found this post on SO: https://stackoverflow.com/questions/23506471/spring-access-all-environment-properties-as-a-map-or-properties-object",
                "time": "2019-03-21 15:30:24",
                "index": 4,
                "user": "Chandu"
            },
            {
                "id": "5c93aec049fdaa0d81f0f2b1",
                "text": "@TomRauchenwald  So there is no defined way of getting all the config from a spring boot app .. Is that a correct conclusion?",
                "time": "2019-03-21 15:33:20",
                "index": 5,
                "user": "Chandu"
            },
            {
                "id": "5c93b0396a3d2e230dfffcc4",
                "text": "Hmm I'm not sure I'd describe it that way, what I know is that this is more tricky to do than it appears at a glance.",
                "time": "2019-03-21 15:39:37",
                "index": 6,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c93b8655547f7744840beed",
                "text": "@TomRauchenwald  Thanks ..",
                "time": "2019-03-21 16:14:29",
                "index": 7,
                "user": "Chandu"
            }
        ]
    },
    {
        "id": 5,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ef1f564c4bdd83475fea11b",
                "text": "Hi all, \nI have a similar issue to this one: https://github.com/spring-projects/spring-boot/issues/22014. \nBasically I have the following configuration:\nserver.shutdown: graceful\nspring.lifecycle.timeout-per-shutdown-phase: PT20S\nI'm using webclient and Flux to consume events from a API. For testing purposes I have a Thread sleep of 30 secs for each event consumed. Since I have a graceful shutdown timeout of 20s, I was expecting that the shutdown timeout occurs after 20s, however, the applications waits 30 secs and then shutdowns. Do you know what may have been causing this issue? Thanks in advance",
                "time": "2020-06-23 12:28:20",
                "index": 0,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef215ca3a0d3931faac5f63",
                "text": "@ruioliveiraz If your application has a parent context (either because you've configured one yourself or because you're using Spring Cloud), #22014 will be the cause. If there's no parent context then I cannot explain why the configured timeout isn't being used. I'd need to see a small sample to investigate further.",
                "time": "2020-06-23 14:46:34",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ef236827ba3965373c4a712",
                "text": "Hi @wilkinson I don't have a parent context configured on my application or Spring Cloud. ",
                "time": "2020-06-23 17:06:10",
                "index": 6,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef236bd54d7862dc4a43da3",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/JNjI/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/JNjI/image.png)",
                "time": "2020-06-23 17:07:09",
                "index": 7,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef236d9405be935cdbaa1b9",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/gKQR/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/gKQR/image.png)",
                "time": "2020-06-23 17:07:37",
                "index": 8,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef23707fa0c9221fc56f67b",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/QUyS/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/QUyS/image.png)",
                "time": "2020-06-23 17:08:23",
                "index": 9,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef2379e47fdfd21edded45c",
                "text": "Since the shutdown timeout is configured for 10sec, and the thread sleeps for 60 secs, I was expecting the following error: Graceful shutdown aborted with one or more requests still active",
                "time": "2020-06-23 17:10:54",
                "index": 10,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef27777405be935cdbb4de7",
                "text": "@ruioliveiraz The built-in support is for server-side handling (receiving requests and sending responses). Your `EventHandler` is a client. If you want it to participate in graceful shutdown it should implement `SmartLifecycle`.",
                "time": "2020-06-23 21:43:19",
                "index": 12,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 6,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ca4d86c759abc043c5dbb89",
                "text": "Hey y'all. Not sure if this is the right place to ask, I can't find a gitter room for spring-framework.\nI have a circular dependency in my beans:\n```\n@Bean\npublic BeanA beanA(BeanB beanB) {\n\treturn new BeanA(beanB);\n}\n\nclass BeanA {\n\tBeanB beanB;\n\n\tpublic BeanA(BeanB beanB) {\n\t\tthis.beanB = beanB;\n\t}\n}\n\n@Bean\npublic BeanB beanB(Optional<BeanA> beanA) {\n\treturn new BeanB(beanA);\n}\n\n@RefreshScope\nclass BeanB {\n\tOptional<BeanA> beanA;\n\n\tpublic BeanB(Optional<BeanA> beanA) {\n\t\tthis.beanA = beanA;\n\t}\n}\n```\nI know this is considered a smell, but when `/refresh` is called, the bean re-initialises, and does find BeanA.\nI'm wondering why the Optional injection of BeanA still throws the `BeanCurrentlyInCreationException`?\nAdding `@Lazy` doesn't work either, since it's constructor injection.\nWhat would be the most elegant solution here?",
                "time": "2019-04-03 15:59:40",
                "index": 0,
                "user": "andreasevers"
            },
            {
                "id": "5ca4d9e00aad635019210417",
                "text": "you could try to do it with a Supplier instead of the Optional",
                "time": "2019-04-03 16:05:52",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5ca4dc213ebbdc55b3563125",
                "text": "How would that work exactly?",
                "time": "2019-04-03 16:15:29",
                "index": 2,
                "user": "andreasevers"
            },
            {
                "id": "5ca4e37a759abc043c5e110c",
                "text": "never mind, doesn't work, just tried it. what does almighty google say about solving circular dependencies in spring? i mean, it's far from a unique problem :D",
                "time": "2019-04-03 16:46:50",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5ca4f70e1f6e900d5ed25e5d",
                "text": "@tonisostrat I read a lot on it, mostly the general advice is just don't make circular dependencies. In my case the @RefreshScope does make it a bit specific.\nSwitching to setter injection using @Lazy on the setter parameter does seem to work, but it's not as elegant as constructor injection with `Optional`.",
                "time": "2019-04-03 18:10:22",
                "index": 5,
                "user": "andreasevers"
            },
            {
                "id": "5ca4f87425686a7dc3cd74a5",
                "text": "ah yes, utilizing setter injection sounds vaguely familiar as a best-case scenario for circular deps",
                "time": "2019-04-03 18:16:20",
                "index": 6,
                "user": "tonisostrat"
            },
            {
                "id": "5ca567d88148e555b24578f7",
                "text": "circular references in java config are always a pain. Spring has the ```ObjectProvider``` type for optional/lazy loading, too. There's also ```GenericBeanDefinition``` if you want to build it on the fly and register it with the ```BeanDefinitionRegistry```",
                "time": "2019-04-04 02:11:36",
                "index": 7,
                "user": "jimador"
            },
            {
                "id": "5ca5abc10aad635019264ddb",
                "text": "if i'm writing my own (auto)configuration class, what's the \"correct\" way to fail? is there a specific class of exception that I should throw or do I use `Assert`, or...?",
                "time": "2019-04-04 07:01:21",
                "index": 8,
                "user": "tonisostrat"
            },
            {
                "id": "5ca5dac7016a930a455f7ac1",
                "text": "@tonisostrat It depends on the nature of the failure. I can't recall a place in Spring Boot itself where we've wanted to fail. We generally try to back off rather than failing. Can you provide a bit more context?",
                "time": "2019-04-04 10:21:59",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5ca5db9ca0790b29c95ce004",
                "text": "let's say that my configuration is dependent on an environment property and it doesn't exist in the environment",
                "time": "2019-04-04 10:25:32",
                "index": 12,
                "user": "tonisostrat"
            },
            {
                "id": "5ca5dced8148e555b2489acb",
                "text": "Why not use `@ConditionalOnProperty` and back off if the property isn't there?",
                "time": "2019-04-04 10:31:09",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5ca5dd4a8148e555b2489d63",
                "text": "If you want to fail, throwing any exception will work. To make things easier for users of your auto-configuration, you may want to consider using a custom exception type and adding a `FailureAnalyzer` for it.",
                "time": "2019-04-04 10:32:42",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5ca5de58f851ee043d5d4aae",
                "text": "i can't use a Conditional because the property is namespaced. my configuration registers X amount of beans in the context dynamically",
                "time": "2019-04-04 10:37:12",
                "index": 15,
                "user": "tonisostrat"
            },
            {
                "id": "5ca5fd83a0790b29c95dd5d7",
                "text": "@andreasevers if your question is specific to `@RefreshScope` please ask on #spring-cloud. Otherwise, as you\u2019ve found out there is no room for framework related questions so use StackOverflow.",
                "time": "2019-04-04 12:50:11",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5ca650c01f6e900d5edb789a",
                "text": "Thanks @snicoll. Eventually I got rid of the circular dependency + got rid of @RefreshScope all together.",
                "time": "2019-04-04 18:45:20",
                "index": 49,
                "user": "andreasevers"
            }
        ]
    },
    {
        "id": 7,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bea9c599600d10e64a19722",
                "text": "Hi everyone, I am having a REST Get mapping to return me a pdf file from within the project. Now, the issue I am facing is that upon packaging the pdf file I have gets corrupted somehow (if I try to open it, the text is no longer present ---also the file increases in size). I believe this is due to compression -- is there any way to turn off compression for some files, or for everything altogether? I could not find anything on the documentation or on a quick search",
                "time": "2018-11-13 09:41:45",
                "index": 0,
                "user": "gigiblender"
            },
            {
                "id": "5bea9dd17326df140efaf095",
                "text": "@gigiblender maybe the PDF is filtered by Maven?",
                "time": "2018-11-13 09:48:01",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5beaa19c3102f14521942fe0",
                "text": "@snicoll this was the issue! I was excluding it somewhere in the pom and after including the pdf again somewhere else",
                "time": "2018-11-13 10:04:12",
                "index": 3,
                "user": "gigiblender"
            },
            {
                "id": "5beaa1a03102f14521942fe7",
                "text": "Many thanks !",
                "time": "2018-11-13 10:04:16",
                "index": 4,
                "user": "gigiblender"
            }
        ]
    },
    {
        "id": 8,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cb48c23a0790b29c9becd09",
                "text": "How can I access an external configuration property (class with `@ConfigurationProperties` annotation) from inside a conditional?",
                "time": "2019-04-15 13:50:27",
                "index": 0,
                "user": "spockz"
            },
            {
                "id": "5cb48cb531aec969e8ad35b6",
                "text": "via the `Environment`. Check `OnPropertyCondition`",
                "time": "2019-04-15 13:52:53",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cb48d51b34ccd69e7c14eb9",
                "text": "@snicoll But then I'm reading it as a property instead of using the default defined in my class, and I won't be able to find it through code uses.",
                "time": "2019-04-15 13:55:29",
                "index": 2,
                "user": "spockz"
            },
            {
                "id": "5cb48d69759abc043cc6935e",
                "text": "you can\u2019t get any default from there, such classes won\u2019t have been bound yet",
                "time": "2019-04-15 13:55:53",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5cb48dd9a0790b29c9beda1a",
                "text": "So is there a way I can document the properties used in `@ConditionalOnProperty` in the same way as `ConfigurationProperties` are documented (e.g. for code completion)?",
                "time": "2019-04-15 13:57:45",
                "index": 4,
                "user": "spockz"
            },
            {
                "id": "5cb48ded25686a7dc3358a36",
                "text": "I am not following",
                "time": "2019-04-15 13:58:05",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5cb48e7825686a7dc3359031",
                "text": "By creating classes with fields I get two things: 1) typed properties (+conversions) and 2) the spring processor will generate json files which contain descriptions of all the configuration properties. This is used by intellij for code completion and we use it for automatically documenting the configuration options of our app. If I can not use the type safety of the property I want to at least retain the ability to document which properties are configurable",
                "time": "2019-04-15 14:00:24",
                "index": 6,
                "user": "spockz"
            },
            {
                "id": "5cb48e9cbd70a40d5f539344",
                "text": "I don\u2019t see the link with your original question",
                "time": "2019-04-15 14:01:00",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5cb48eb925686a7dc33591d3",
                "text": "perhaps you can take a step back and explain what you\u2019re trying to do?",
                "time": "2019-04-15 14:01:29",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5cb48f56bd70a40d5f539af8",
                "text": "I have a auto configuration class which contains beans that I want to be conditionally loaded on a property `feature.enabled`. We also have a class `FeatureProperties` which contains other configuration options for this feature. I can use `@ConditionalOnProperty(\"feature.enabled\", havingValue=\"true\", matchIfMissing=true)` to get the feature toggle. But this `feature.enabled` property will not be documented.",
                "time": "2019-04-15 14:04:06",
                "index": 9,
                "user": "spockz"
            },
            {
                "id": "5cb48f7320fbe911eebcc230",
                "text": "okay that makes more sense now, thanks",
                "time": "2019-04-15 14:04:35",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5cb48f8d8148e555b2abea62",
                "text": "There\u2019s manual meta-data. If you\u2019re bored writing json manually you can keep the field in `FeatureProperties` for the purpose of metadata generation",
                "time": "2019-04-15 14:05:01",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5cb48f9f016a930a45c38bde",
                "text": "either way there\u2019s no condition where you can inject `FeatureProperties` and look at the value of something",
                "time": "2019-04-15 14:05:19",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5cb48fbd3ebbdc55b3c06baf",
                "text": "Spring Boot itself does that in various places (the former as we don\u2019t want to write dead code)",
                "time": "2019-04-15 14:05:49",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5cb48fcc93fb4a7dc232d342",
                "text": "The manual meta-data? Can you point me to it?",
                "time": "2019-04-15 14:06:04",
                "index": 14,
                "user": "spockz"
            },
            {
                "id": "5cb48fdd93fb4a7dc232d349",
                "text": "it\u2019s explained in the doc as well",
                "time": "2019-04-15 14:06:21",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5cb49021bd70a40d5f53a23b",
                "text": "https://github.com/spring-projects/spring-boot/blob/84df37fd7337c8d87642685a5c63244e4d7099e3/spring-boot-project/spring-boot/src/main/resources/META-INF/additional-spring-configuration-metadata.json#L50-L56",
                "time": "2019-04-15 14:07:29",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5cb4907f1f6e900d5e391155",
                "text": "Ah just found this: https://docs.spring.io/spring-boot/docs/current/reference/html/configuration-metadata.html#configuration-metadata-additional-metadata",
                "time": "2019-04-15 14:09:03",
                "index": 17,
                "user": "spockz"
            }
        ]
    },
    {
        "id": 9,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ecff2023ffa6106f1ddfd7c",
                "text": "@snicoll I also have an `annotationProcessor \"org.springframework.boot:spring-boot-configuration-processor\"` but nothing gets generated. What's the task that triggers the generation?",
                "time": "2020-05-28 17:16:50",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5ecff3ecff7a920a7219dfb8",
                "text": "A correction: it seems it's generated in the output jar file. Isn't it supposed to be generated and put in the `src/main/resources/META-INF` as well or?",
                "time": "2020-05-28 17:25:00",
                "index": 1,
                "user": "asgarj"
            },
            {
                "id": "5ecff4064c9b0f060d2d4c7a",
                "text": "no it\u2019s not supposed to be generated in your sources",
                "time": "2020-05-28 17:25:26",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5ecff453f0b8a2053abcd698",
                "text": "Ah, ill double-check my output jar - i thought i did but maybe not (i assumed it would be a part of the generated maven artifacts before the jar is made).",
                "time": "2020-05-28 17:26:43",
                "index": 3,
                "user": "kjq"
            },
            {
                "id": "5ecff478a91f120a6ccbdedb",
                "text": "And what's the gradle task that generates it exactly?",
                "time": "2020-05-28 17:27:20",
                "index": 4,
                "user": "asgarj"
            },
            {
                "id": "5ecff4b83ffa6106f1de0567",
                "text": "the docs mention `compileJava` and `processResources` (and their dependency), so is it their output is ignored unless you package the output?",
                "time": "2020-05-28 17:28:24",
                "index": 5,
                "user": "asgarj"
            },
            {
                "id": "5ecff5102280c80cbfd4d3be",
                "text": "I don\u2019t know how you\u2019ve configured your build but it\u2019s an anotation processor like any other annotation processor. So the doc of your build system (Gradle it seems) should tell you that",
                "time": "2020-05-28 17:29:52",
                "index": 6,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 10,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ca36cae8148e555b237bf04",
                "text": "I'm trying to upgrade my project from spring-boot-starter-parent version 2.0.5 to 2.1.3. I had following class\n ```\n@Configuration\npublic class ObjectMapperCustomizer {\n\n    private static final String SPRING_HATEOAS_OBJECT_MAPPER = \"_halObjectMapper\";\n\n    @Autowired\n    @Qualifier(SPRING_HATEOAS_OBJECT_MAPPER)\n    private ObjectMapper springHateoasObjectMapper;\n\n\n\n    @Bean(name = \"objectMapper\")\n    @Primary\n    ObjectMapper objectMapper() {\n\n    }\n}\n```",
                "time": "2019-04-02 14:07:42",
                "index": 0,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36d298148e555b237c273",
                "text": "when I upgrade I get the following problem \n```\nNoSuchBeanDefinitionException: No qualifying bean of type 'com.fasterxml.jackson.databind.ObjectMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=_halObjectMapper)}\n```",
                "time": "2019-04-02 14:09:45",
                "index": 1,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36d58b34ccd69e751ccc8",
                "text": "the code will cause compile error",
                "time": "2019-04-02 14:10:32",
                "index": 2,
                "user": "jang675953"
            },
            {
                "id": "5ca36d5a25686a7dc3c2a385",
                "text": "Any idea what I'm missing?",
                "time": "2019-04-02 14:10:34",
                "index": 3,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36d6bbd70a40d5fe3179f",
                "text": "yeah I know I left out the code in the objectmapper",
                "time": "2019-04-02 14:10:51",
                "index": 4,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36dd78148e555b237c6e3",
                "text": "well, it says plain and simple - there aren't any ObjectMapper instances with that name in the context.\n\ndisable that configuration so the app will boot up and then check the context - maybe that configuration class runs too early?",
                "time": "2019-04-02 14:12:39",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5ca36ddda0790b29c94c61f6",
                "text": "oh, why do you inject  here ?",
                "time": "2019-04-02 14:12:45",
                "index": 6,
                "user": "jang675953"
            },
            {
                "id": "5ca36edd31aec969e83e03c0",
                "text": "I inject the objectmapper and change some setting on the mapper and pass it on",
                "time": "2019-04-02 14:17:01",
                "index": 7,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36f11f851ee043d4c7d79",
                "text": "I get what the error says, but can't seem to figure out where he gets the bean from in an earlier version",
                "time": "2019-04-02 14:17:53",
                "index": 8,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36f615a83c30a46fa882f",
                "text": "it could be possible that with the version jump the initialization logic behind the scenes changed somewhat so when that class is called the hateoas part hasn't been created yet",
                "time": "2019-04-02 14:19:13",
                "index": 9,
                "user": "tonisostrat"
            },
            {
                "id": "5ca36f7eb34ccd69e751dc2b",
                "text": "ok that sound logical",
                "time": "2019-04-02 14:19:42",
                "index": 10,
                "user": "jschutijzer"
            },
            {
                "id": "5ca36f818148e555b237d2f1",
                "text": "like i said, disable that conf, let the app boot and then inspect the context to see if `_halObjectMapper` exists",
                "time": "2019-04-02 14:19:45",
                "index": 11,
                "user": "tonisostrat"
            },
            {
                "id": "5ca36fa3a0790b29c94c6fc6",
                "text": "if it does then it's about the initialization order, if it doesn't then you have bigger problems :D",
                "time": "2019-04-02 14:20:19",
                "index": 12,
                "user": "tonisostrat"
            },
            {
                "id": "5ca3704225686a7dc3c2b891",
                "text": "Ok thanks already. I'll take a look at that",
                "time": "2019-04-02 14:22:58",
                "index": 13,
                "user": "jschutijzer"
            },
            {
                "id": "5ca3718a016a930a454eac24",
                "text": "i try it in ide ,it prompt that there is no bean named SPRING_HATEOAS_OBJECT_MAPPER",
                "time": "2019-04-02 14:28:26",
                "index": 14,
                "user": "jang675953"
            },
            {
                "id": "5ca3718ef851ee043d4c8ed8",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/9rdm/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/9rdm/image.png)",
                "time": "2019-04-02 14:28:30",
                "index": 15,
                "user": "jang675953"
            },
            {
                "id": "5ca372125a83c30a46fa9928",
                "text": "there is no error when i changed the value of bean name ",
                "time": "2019-04-02 14:30:42",
                "index": 16,
                "user": "jang675953"
            },
            {
                "id": "5ca372153ebbdc55b34c56be",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/DVYJ/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/DVYJ/image.png)",
                "time": "2019-04-02 14:30:45",
                "index": 17,
                "user": "jang675953"
            }
        ]
    },
    {
        "id": 11,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0d052ecedb297a8190abf8",
                "text": "What is the difference between ClientDetailsServiceConfigurer and HttpSecurity?",
                "time": "2019-06-21 16:26:22",
                "index": 0,
                "user": "joaopedroleiteslisboa"
            },
            {
                "id": "5d0d06487456db0bb82b79f1",
                "text": "They're completely different. As different as ClientDetailsService and HTTP.",
                "time": "2019-06-21 16:31:04",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d0d069c1e35ef14b691611a",
                "text": "The only similarity is that they're part of Spring Security configuration.",
                "time": "2019-06-21 16:32:28",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5d0d06eed1aaa16964e2ab52",
                "text": "thanks]",
                "time": "2019-06-21 16:33:50",
                "index": 3,
                "user": "joaopedroleiteslisboa"
            }
        ]
    },
    {
        "id": 12,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b99fec90cfe7f30f18892c6",
                "text": "Hi friends so I have a post request in my spring boot application, and when I upload an MP4 using that post method the size is correct, but the video is unplayable. I'm uploading using npm file-dialog to upload like this https://pastebin.com/8jQ3RhuU\n\nMy post method has a FileInputStream as the incoming param, and again the size is correct, so i'm kinda confused\n\nffmpeg can't do anything with the video, so I'm quite confident something got messed up during the upload process",
                "time": "2018-09-13 06:08:09",
                "index": 0,
                "user": "Redmancometh"
            },
            {
                "id": "5b9a197ea56b215c972f0bba",
                "text": "@Redmancometh Could you try to accept the file as MultipartFile in your controller? I had to implement file upload and download feature quite recently on my work and I've just went and gave it a try with a mp4 file. Everything works as expected.",
                "time": "2018-09-13 08:02:06",
                "index": 1,
                "user": "dseljan"
            },
            {
                "id": "5b9a19a554587954f9965aef",
                "text": "I will give that a shot is that just changing the produces or the actual param? Thanks btw",
                "time": "2018-09-13 08:02:45",
                "index": 2,
                "user": "Redmancometh"
            },
            {
                "id": "5b9a1a5e8909f71f75c87e43",
                "text": "nvm see the class...wow this looks WAY easier to work with",
                "time": "2018-09-13 08:05:50",
                "index": 3,
                "user": "Redmancometh"
            },
            {
                "id": "5b9a1b5d1ee2ca65020cb4ab",
                "text": "Np. I hope it works once you try it ",
                "time": "2018-09-13 08:10:05",
                "index": 4,
                "user": "dseljan"
            },
            {
                "id": "5b9a1d33e5c2cc56ad81d48d",
                "text": "oof the multipartfile is null from react this one's gonna be fun :(",
                "time": "2018-09-13 08:17:55",
                "index": 5,
                "user": "Redmancometh"
            },
            {
                "id": "5b9a25eeb4990c30eeaaf04c",
                "text": "Got it working! Thanks again",
                "time": "2018-09-13 08:55:10",
                "index": 6,
                "user": "Redmancometh"
            },
            {
                "id": "5b9a4454a56b215c97301c77",
                "text": "@Redmancometh Glad to hear it!",
                "time": "2018-09-13 11:04:52",
                "index": 8,
                "user": "dseljan"
            }
        ]
    },
    {
        "id": 13,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8c9943d8d36815e5c9708a",
                "text": "Hi, \n\nSuggestion from a spring expert saying that we should expose both \n\n1. Controller and Service class as REST APIs \n2. When a user sends a request, the controller receives the request. Later the controller should invoke a REST API call to the service method \n\nHe said this is the latest design and it has lots of advantages on the same. \n\nNeed help on the following\n\na. Is this is the right way ? \nb. What does this design is being called ? \nc. Advantages and dis-advantages of the above. \nd. Is this is a service oriented architecture\ne. Need a reference link where i can see example of making controller and service class as REST API\n\nThanks.",
                "time": "2018-09-03 02:15:31",
                "index": 0,
                "user": "prog20901"
            },
            {
                "id": "5b8d06d7d8d36815e5cbf179",
                "text": "@jkathir idk, for me this doesn't make sense, starting from the \"controller and service as REST API\"",
                "time": "2018-09-03 10:03:03",
                "index": 4,
                "user": "lppedd"
            },
            {
                "id": "5b8d070260f9ee7aa4ce6418",
                "text": "The usual workflow is front-end < REST controller < Service < other resources",
                "time": "2018-09-03 10:03:46",
                "index": 5,
                "user": "lppedd"
            },
            {
                "id": "5b8d7100c2bd5d117a138416",
                "text": "@lppedd this is the link which i am confused with - https://dzone.com/articles/quick-guide-to-microservices-with-kubernetes-sprin where the controller and service methods are exposed as REST APIs",
                "time": "2018-09-03 17:36:00",
                "index": 42,
                "user": "prog20901"
            },
            {
                "id": "5b8d7108c9500b4bab786a41",
                "text": "please let me know your comments",
                "time": "2018-09-03 17:36:08",
                "index": 43,
                "user": "prog20901"
            }
        ]
    },
    {
        "id": 14,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bf2bded2ef5b06e408e4817",
                "text": "Hi all\nI'm trying to upgrade a Spring Boot application from 2.0.4 to 2.1.0, but for some reason that changes it isn't reflected, when I start the application I still see version 2.0.4. I have another Spring Boot application, in these case it was version 2.0.5 and I didn't find any problems upgrading it. Any clues why I can't upgrade the first application?",
                "time": "2018-11-19 13:43:09",
                "index": 0,
                "user": "Afsoon"
            },
            {
                "id": "5bf2bdf84bad337eb9038981",
                "text": "```\nbuildscript {\n    ext {\n        kotlinVersion = '1.2.61'\n        springBootVersion = '2.1.0.RELEASE'\n    }\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n        classpath(\"org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}\")\n        classpath(\"org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}\")\n    }\n}\n\napply plugin: 'kotlin'\napply plugin: 'kotlin-spring'\napply plugin: 'eclipse'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\napply plugin: 'kotlin-kapt'\n\ngroup = 'roc.backend'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = 1.8\ncompileKotlin {\n    kotlinOptions {\n        freeCompilerArgs = [\"-Xjsr305=strict\"]\n        jvmTarget = \"1.8\"\n    }\n}\ncompileTestKotlin {\n    kotlinOptions {\n        freeCompilerArgs = [\"-Xjsr305=strict\"]\n        jvmTarget = \"1.8\"\n    }\n}\n\nrepositories {\n    mavenCentral()\n    jcenter()\n    maven { url \"https://repo.spring.io/milestone\" }\n}\n\ndef arrow_version = \"0.7.3\"\n\ndependencies {\n    compile('org.springframework.boot:spring-boot-starter-actuator')\n    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')\n    compile('org.springframework.boot:spring-boot-starter-security')\n    compile('org.springframework.boot:spring-boot-starter-webflux')\n    compile('com.fasterxml.jackson.module:jackson-module-kotlin')\n    compile('org.springframework.cloud:spring-cloud-starter-sleuth')\n    compile('org.springframework.retry:spring-retry')\n    compile(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8\")\n    compile(\"org.jetbrains.kotlin:kotlin-reflect\")\n    compile 'javax.xml.bind:jaxb-api:2.3.0'\n    compile 'com.auth0:java-jwt:3.4.0'\n    compile 'io.sentry:sentry-logback:1.7.10'\n    compileOnly \"org.springframework.boot:spring-boot-configuration-processor\"\n\n    compile \"io.arrow-kt:arrow-core:$arrow_version\"\n    compile \"io.arrow-kt:arrow-syntax:$arrow_version\"\n    compile \"io.arrow-kt:arrow-typeclasses:$arrow_version\"\n    compile \"io.arrow-kt:arrow-data:$arrow_version\"\n    compile \"io.arrow-kt:arrow-instances-core:$arrow_version\"\n    compile \"io.arrow-kt:arrow-instances-data:$arrow_version\"\n    kapt    \"io.arrow-kt:arrow-annotations-processor:$arrow_version\"\n    compile \"io.arrow-kt:arrow-effects-reactor:$arrow_version\"\n    compile \"io.arrow-kt:arrow-generic:$arrow_version\"\n\n    runtime('org.springframework.boot:spring-boot-devtools')\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n    testCompile('io.projectreactor:reactor-test')\n    testCompile('org.springframework.security:spring-security-test')\n    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.10'\n    testCompile 'io.kotlintest:kotlintest-extensions-spring:3.1.10'\n    testCompile 'io.kotlintest:kotlintest-assertions-arrow:3.1.10'\n}\n\ndependencyManagement {\n    imports {\n      mavenBom 'org.springframework.cloud:spring-cloud-sleuth:2.0.1.RELEASE'\n    }\n}\n```\n",
                "time": "2018-11-19 13:43:20",
                "index": 1,
                "user": "Afsoon"
            },
            {
                "id": "5bf2be0a1665691e0fca49dc",
                "text": "That it's my build.gradle",
                "time": "2018-11-19 13:43:38",
                "index": 2,
                "user": "Afsoon"
            },
            {
                "id": "5bf2be9d6183a977eedf6850",
                "text": "@Afsoon why are you importing spring cloud sleuth as a BOM? It's not a BOM.",
                "time": "2018-11-19 13:46:05",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5bf2c12c80e46b4266d6b322",
                "text": "Because we have found troubles trying to startup and compile the application. ",
                "time": "2018-11-19 13:57:00",
                "index": 4,
                "user": "Afsoon"
            },
            {
                "id": "5bf2c1ab2735965dfefd858e",
                "text": "You probably need the spring cloud BOM instead of adding spring cloud sleuth as a BOM",
                "time": "2018-11-19 13:59:07",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5bf2c1d74720c11e0e8ef46f",
                "text": "Also, you're probably using the wrong Spring Cloud version here, and this is importing the spring boot version it's been compiled with",
                "time": "2018-11-19 13:59:51",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5bf2c1dd80e46b4266d6b776",
                "text": "hence the issue you're seeing",
                "time": "2018-11-19 13:59:57",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5bf2c2151ad4155d3aebb599",
                "text": "Try creating a new SPring Boot 2.1.0 app on start.spring.io (with a spring cloud sleuth dependency) and copy/paste the dependencymanagement bit to your build.",
                "time": "2018-11-19 14:00:53",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5bf2c2392735965dfefd896d",
                "text": "don't forget to add back the compile dependency on spring cloud sleuth in your build, once you've removed the old dependencymanagement section",
                "time": "2018-11-19 14:01:29",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5bf2c29e2ef5b06e408e6bee",
                "text": "Thank you, I am going to try it",
                "time": "2018-11-19 14:03:10",
                "index": 10,
                "user": "Afsoon"
            },
            {
                "id": "5bf2c4d51665691e0fca7953",
                "text": "@bclozel thank you!! It's working right now.",
                "time": "2018-11-19 14:12:37",
                "index": 14,
                "user": "Afsoon"
            }
        ]
    },
    {
        "id": 15,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d1f1603b5d39c1bfef5e35f",
                "text": "Hi all,\nHow update this code to the Spring Boot 2.1.6 version?\n```\n    @Bean\n    public WebMvcRegistrationsAdapter webMvcRegistrationsHandlerMapping() {\n        return new WebMvcRegistrationsAdapter() {\n            @Override\n            public RequestMappingHandlerMapping getRequestMappingHandlerMapping() {\n                return new CustomRequestMappingHandlerMapping();\n            }\n        };\n    }\n```\n\nWebMvcRegistrationsAdapter not found.",
                "time": "2019-07-05 09:18:59",
                "index": 0,
                "user": "ladyka"
            },
            {
                "id": "5d1f7a705e957c4d48d9d344",
                "text": "@ladyka Just implement `WebMvcRegistrations` directly instead. The interface has Java 8 default methods for all of its methods so the adapter is no longer needed.",
                "time": "2019-07-05 16:27:28",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 16,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e8b395038198d56a184ad9d",
                "text": "I am sorry to post again but just out of desperation,  I would really appreciate if someone could help me on disregarding any obvious Boot facility for something like @SpringBootTest(args = \"--myargfoo=${test.foo.value}\") (test.foo.value found in application.yml)",
                "time": "2020-04-06 14:14:40",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5e8b3b0be7ca460b064151a4",
                "text": "https://reflectoring.io/spring-boot-test/ @nightswimmings  - Look at custom configuration at this page",
                "time": "2020-04-06 14:22:03",
                "index": 1,
                "user": "venks61176"
            },
            {
                "id": "5e8b3b2ae24b4d6c44ed6c2d",
                "text": "that might help you. You can override, specify or load different property file depending on your need",
                "time": "2020-04-06 14:22:34",
                "index": 2,
                "user": "venks61176"
            }
        ]
    },
    {
        "id": 17,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c361d735ec8fe5a85284397",
                "text": "hello, i think i'm missing a very simple solution, but i just can't figure it out",
                "time": "2019-01-09 16:12:35",
                "index": 0,
                "user": "rlsf"
            },
            {
                "id": "5c361d864ed182787783aa92",
                "text": "i have a 3rd party library that requires apache.commons.configuration object",
                "time": "2019-01-09 16:12:54",
                "index": 1,
                "user": "rlsf"
            },
            {
                "id": "5c361da012db9607e75fac48",
                "text": "however, my code is written in spring, so i don't have a configuration object, i only have spring's Environment",
                "time": "2019-01-09 16:13:20",
                "index": 2,
                "user": "rlsf"
            },
            {
                "id": "5c361db11948ad07e812c79e",
                "text": "is there a simple conversion from environment to configuration? ",
                "time": "2019-01-09 16:13:37",
                "index": 3,
                "user": "rlsf"
            },
            {
                "id": "5c361de582a6c30b90ad73a6",
                "text": "i looks a bit stupid to read the same configuration files that spring already parsed as configuration and then feed it to the 3rd party library",
                "time": "2019-01-09 16:14:29",
                "index": 4,
                "user": "rlsf"
            },
            {
                "id": "5c361f6d8b6399655e315e6e",
                "text": "@rlsf there\u2019s no such thing as far as I am aware but given it\u2019s key/value if guess the mapping should be straightforward",
                "time": "2019-01-09 16:21:01",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c36204f1d1c2c3f9ce8782a",
                "text": "@snicoll i'm not sure i follow your line of thought, i guess i can read all of the properties in the environment and parse them into a configuration object, it just strikes me odd that such \"pipe\" doesn't exist already in spring\nisn't it common for a library to be configured using apache's configuration object?",
                "time": "2019-01-09 16:24:47",
                "index": 7,
                "user": "rlsf"
            },
            {
                "id": "5c370c355aa04d46c5890068",
                "text": "@rlsf I don\u2019t think that\u2019s common sorry. We don\u2019t have integration for this API at the moment and you\u2019re the first one asking as far as I know. I haven\u2019t looked at it but it should be straightforward to do really",
                "time": "2019-01-10 09:11:17",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5c3712508db70e46c4e33e09",
                "text": "@snicoll ok, so what is the common pattern of using properties/configuration files for a library that requires a list of them? maybe it's worth suggesting a different constructor for the 3rd library i'm using",
                "time": "2019-01-10 09:37:20",
                "index": 15,
                "user": "rlsf"
            },
            {
                "id": "5c3712b36a394e2821858c18",
                "text": "There\u2019s no common pattern as each library is different. What is the problem concretely?",
                "time": "2019-01-10 09:38:59",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c3716506a394e282185a65c",
                "text": "@snicoll i'm using sqlg library: https://github.com/pietermartin/sqlg, this library defines a set of constructors, but all of them are using apache's configuration object",
                "time": "2019-01-10 09:54:24",
                "index": 18,
                "user": "rlsf"
            },
            {
                "id": "5c37165a66f3433023a4dde6",
                "text": "Yeah I got that",
                "time": "2019-01-10 09:54:34",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5c3716658db70e46c4e356e3",
                "text": "What is the problem of creating such object is my question",
                "time": "2019-01-10 09:54:45",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5c3716766a394e282185a6f8",
                "text": "oh, that's not a problem, i already did that",
                "time": "2019-01-10 09:55:02",
                "index": 21,
                "user": "rlsf"
            },
            {
                "id": "5c37167fda98233022eadc96",
                "text": "ok :)",
                "time": "2019-01-10 09:55:11",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5c37168a5aa04d46c5894370",
                "text": "i just wondered if there's a common pattern of using properties in 3rd party libraries",
                "time": "2019-01-10 09:55:22",
                "index": 23,
                "user": "rlsf"
            },
            {
                "id": "5c371695783a5553d80f2625",
                "text": "maybe i can suggest it to the creator of this library",
                "time": "2019-01-10 09:55:33",
                "index": 24,
                "user": "rlsf"
            },
            {
                "id": "5c371696e7832c7aa8a1b68a",
                "text": "I am sorry I don\u2019t understand that question",
                "time": "2019-01-10 09:55:34",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5c37169e54d8bb07ccc9130f",
                "text": "You mean a common API or something?",
                "time": "2019-01-10 09:55:42",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5c3716b866f3433023a4df2f",
                "text": "yes, to pass properties from spring based applications to other libraries",
                "time": "2019-01-10 09:56:08",
                "index": 27,
                "user": "rlsf"
            },
            {
                "id": "5c3716e75aa04d46c589469f",
                "text": "if the other library is using a different API you need to comply to that. I really don\u2019t understand what you\u2019d expect",
                "time": "2019-01-10 09:56:55",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5c3717045aa04d46c5894728",
                "text": "let's say i want to build a library, and for its configuration it requires a set of propeties.",
                "time": "2019-01-10 09:57:24",
                "index": 29,
                "user": "rlsf"
            },
            {
                "id": "5c371718e7832c7aa8a1c28f",
                "text": "how would i build it to integrate seamlessly with spring?",
                "time": "2019-01-10 09:57:44",
                "index": 30,
                "user": "rlsf"
            },
            {
                "id": "5c37172ca57b501bcfe003e3",
                "text": "so from a spring application i could easily initialize my library",
                "time": "2019-01-10 09:58:04",
                "index": 31,
                "user": "rlsf"
            },
            {
                "id": "5c371738a57b501bcfe003f5",
                "text": "Whatever you do you\u2019ll have to \u201cfill\u201d an object",
                "time": "2019-01-10 09:58:16",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5c37174c2e25e453d75bc42b",
                "text": "If you decide to go with a dedicated type you still need to initialize it. If it\u2019s a generic container (like the configuration api from commons) you need to initialize it",
                "time": "2019-01-10 09:58:36",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5c3717775aa04d46c58949ad",
                "text": "`@ConfigurationProperties` is a nice way to \u201cfill\u201d an object with configuration keys that share a common prefix",
                "time": "2019-01-10 09:59:19",
                "index": 34,
                "user": "snicoll"
            },
            {
                "id": "5c371783e7832c7aa8a1c516",
                "text": "yes, i've read about this one",
                "time": "2019-01-10 09:59:31",
                "index": 35,
                "user": "rlsf"
            },
            {
                "id": "5c371785dfe133282029abad",
                "text": "I would do that and then use the object to adapt to whatever API is required by the library",
                "time": "2019-01-10 09:59:33",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5c37179783c7e3776547ceb2",
                "text": "how would you convert this object to the library API?",
                "time": "2019-01-10 09:59:51",
                "index": 37,
                "user": "rlsf"
            },
            {
                "id": "5c37179adfe133282029ac24",
                "text": "Spring Boot does that a lot in auto-configuration",
                "time": "2019-01-10 09:59:54",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5c3717a29289cc7aa74e92de",
                "text": "assuming i need a map in the end?",
                "time": "2019-01-10 10:00:02",
                "index": 39,
                "user": "rlsf"
            },
            {
                "id": "5c3717bca57b501bcfe00790",
                "text": "That\u2019s a general programming question, there isn\u2019t a single answer to that. It depends on the API. May I suggest to ask on SO?",
                "time": "2019-01-10 10:00:28",
                "index": 40,
                "user": "snicoll"
            },
            {
                "id": "5c3718098db70e46c4e3616e",
                "text": "let me rephrase it",
                "time": "2019-01-10 10:01:45",
                "index": 41,
                "user": "rlsf"
            },
            {
                "id": "5c3718276a394e282185b42a",
                "text": "assuming i create such object from the properties, how can i then convert this object to a map of keys and values?",
                "time": "2019-01-10 10:02:15",
                "index": 42,
                "user": "rlsf"
            },
            {
                "id": "5c373aeaef78da1bcedb837e",
                "text": "@rlsf Like @snicoll says there is no standard way in spring to fetch all available properties and turn them into a `Map`. If that is what you need then that is something you will most likely have to build. You can look at Spring Boot\u2019s `EnvironmentEndpoint` where it goes through each and every `PropertySource` and transforms its representation into a different representation (not it does not create a `Map` of property key|value pairs, but it demonstrates how you might build your own logic from each available `PropertySource`. Note that multiple `PropertySource`es may contain the same key with the same or different values.",
                "time": "2019-01-10 12:30:34",
                "index": 45,
                "user": "edeandrea"
            },
            {
                "id": "5c373c6366f3433023a5dc52",
                "text": "as for the original problem of trying to convert properties to apache commons configuration, Spring does not use that library so as @snicoll states if you require that for some other library you are using then you\u2019d have to configure it yourself or build your own adapter that knows how to translate Spring `PropertySource`es (or Spring\u2019s `Environment`) to an apache commons configuration object.",
                "time": "2019-01-10 12:36:51",
                "index": 47,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 18,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e86841209e0c46ace530160",
                "text": "Hello, when using WebSockets with Spring, is it possible to retrieve the path that was used to establish the session initially? \nFor example, in my `WebSocketMessageBrokerConfigurer`, if I register stomp endpoint as follows: `registry.addEndpoint(\"/example/ws/{var}\");` is there a way I could retrieve the path variable `var`?   I need to be able to send messages only to the sessions that signed up on that specific `var`. ",
                "time": "2020-04-03 00:32:18",
                "index": 0,
                "user": "ntherrien"
            },
            {
                "id": "5e8684dc4e14eb618b991590",
                "text": "If I could read the path, I could associate it with a session id...",
                "time": "2020-04-03 00:35:40",
                "index": 1,
                "user": "ntherrien"
            },
            {
                "id": "5e870938a95bc942564db821",
                "text": "@ntherrien You can use `@DestinationVariable` with `@MessageMapping`. Does that help?",
                "time": "2020-04-03 10:00:24",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5e8709666cecb73d2fd7dd5c",
                "text": "That works with `@SendTo` as well",
                "time": "2020-04-03 10:01:10",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5e8709844e14eb618b9a6166",
                "text": "See https://stackoverflow.com/a/27055764/1384297 for some examples",
                "time": "2020-04-03 10:01:40",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5e872dd60649fc5f355d2d16",
                "text": "@wilkinsona thanks for helping out!   I have decided to rely on STOMP's subscription mechanism combined with DestinationVariables as suggested.  ",
                "time": "2020-04-03 12:36:38",
                "index": 15,
                "user": "ntherrien"
            }
        ]
    },
    {
        "id": 19,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df8a0aec6ce6027ebd78f58",
                "text": "what is the condition for jdbc templates to do a rollback for methods annotated with `@Transactional`? Any exception being thrown?",
                "time": "2019-12-17 09:32:30",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5df8a30dce2b2e652beec7c7",
                "text": "@konstantinblaesi  If you set it like that, the answer is yes, you can use rollbackFor , but more about that you can read it on [official documentation](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/transaction/annotation/Transactional.html).",
                "time": "2019-12-17 09:42:37",
                "index": 1,
                "user": "tomicarsk6"
            },
            {
                "id": "5df8e65ace2b2e652bf0a98b",
                "text": "@tomicarsk6 yeah thanks",
                "time": "2019-12-17 14:29:46",
                "index": 8,
                "user": "konstantinblaesi"
            }
        ]
    },
    {
        "id": 20,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c373c325aa04d46c58a3c84",
                "text": "Dear Team, we have problems using Java's Service Provider Interface to use a Java NIO `FileSystemProvider` within embedded Tomcat.  The problem is, that the `ServiceLoader` in the JDK uses `ClassLoader.getSystemClassLoader()` and this AppClassLoader can't access the classpath of  the web application, where the mentioned `FileSystemProvider` is available. Is it possible to replace Tomcats SystemClassloader with the one provided by Spring Boot? I tried with `PropertiesLauncher` and gave the missing JAR with `-Dloader.path`. However, the AppClassLoader is not able to find the class. Thank you!",
                "time": "2019-01-10 12:36:02",
                "index": 0,
                "user": "timomeinen"
            },
            {
                "id": "5c376565317e2407cd0df44f",
                "text": "@timomeinen The system class loader isn't provided by Tomcat but by the JVM. As such, you can't replace it.",
                "time": "2019-01-10 15:31:49",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5c3766ad83c7e3776549ed33",
                "text": "You'll either need to change the code that's creating the FileSystem  using one of the overloads that takes a `ClassLoader` (https://docs.oracle.com/javase/7/docs/api/java/nio/file/FileSystems.html#newFileSystem(java.net.URI,%20java.util.Map,%20java.lang.ClassLoader), for example), or you'll need to package your file system implementation in the root of the Spring Boot fat jar.",
                "time": "2019-01-10 15:37:17",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c3766b9317e2407cd0dfe15",
                "text": "The latter is fairly easy with Gradle and a bit harder with Maven.",
                "time": "2019-01-10 15:37:29",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5c37761e2e25e453d75e40b7",
                "text": "@wilkinsona Thank you very much for taking time helping me. The problem with the overloaded method which takes a ClassLoader is, that the `FileSystemProvider` is not registered globally by `FileSystemProvider#loadInstalledProviders()` and upcoming calls of e.g. `Paths.get` will not find the provider. The reason is, that `loadInstalledProviders` uses `ClassLoader.getSystemClassLoader()` hardcoded.  The `FileSystemProvider` is provided as 3rd party JAR file. I will give the idea of putting it into the root a try.",
                "time": "2019-01-10 16:43:10",
                "index": 6,
                "user": "timomeinen"
            }
        ]
    },
    {
        "id": 21,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5dc480e6a3f0b1784905bb06",
                "text": "> For those of you upgrading from Spring Boot 2.2.0 to Spring Boot 2.2.1, if you relied on the @ConfigurationProperties scanning support, please note that this feature is now disabled by default. Scanning of @ConfigurationProperties needs to be explicitly opted into by adding the @ConfigurationPropertiesScan annotation. More details related to this change can be found here.\n\nhmm... so this means beans won't automatically be created for them? or does it mean the metadata won't automatically be generated, is adding `@Component` to the class effectively the same thing?\n\n",
                "time": "2019-11-07 20:39:02",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5dc532dab95ae413dc9dff40",
                "text": "@xenoterracide No, adding `@Component` isn't really the same thing. You don't need to do anything unless you'd upgraded to 2.2.0 and already started to make use of configuration property scanning. If that's you, then you now need to explicitly add `@ConfigurationPropertiesScan` as it's no longer enabled automatically by `@SpringBootApplication`.",
                "time": "2019-11-08 09:18:18",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5dc5afa3fd6fe41fc04baee3",
                "text": "@wilkinsona I'm on 2.2.1 now\n\n```\n@SpringBootApplication\n@ConfigurationPropertiesScan\npublic class Application {\n```\n\nbut still having issues...",
                "time": "2019-11-08 18:10:43",
                "index": 60,
                "user": "xenoterracide"
            },
            {
                "id": "5dc5b2b935889012b1d273e0",
                "text": "```\n    Parameter 0 of constructor in com.potreromed.phg.model.GatewayProperties required a bean of type 'java.lang.String' that could not be found.\n```\n\n```\n@Getter\n@ConfigurationProperties(\"gateway\")\npublic class GatewayProperties {\n    private final String id;\n\n    /**\n     * site id\n     */\n    private final String site;\n\n    public GatewayProperties( String id, String site ) {\n        this.id = id;\n        this.site = site;\n    }\n}\n```",
                "time": "2019-11-08 18:23:53",
                "index": 61,
                "user": "xenoterracide"
            },
            {
                "id": "5dc5b774add5717a88d1b482",
                "text": "```\ntasks.withType<JavaCompile>().configureEach {\n    options.compilerArgs.addAll(listOf(\"-parameters\"))\n}\n```\n",
                "time": "2019-11-08 18:44:04",
                "index": 62,
                "user": "xenoterracide"
            },
            {
                "id": "5dc6f3b850010612b28b343f",
                "text": "@xenoterracide If you want `GatewayProperties` to have properties bound into its constructor, you need to annotate it with `@ConstructorBinding`: https://docs.spring.io/spring-boot/docs/2.2.1.RELEASE/reference/htmlsingle/#boot-features-external-config-constructor-binding",
                "time": "2019-11-09 17:13:28",
                "index": 70,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 22,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bb7a2123844923661ecb44c",
                "text": "if you run devtools in docker and make the override change suggested to make it work, will this also disable the \"auto disabling in production\" feature? For some reason I can't find the override you need to make at the moment, but I remember reading it somewhere",
                "time": "2018-10-05 17:40:34",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5bb7a23cae7be9401607f6d0",
                "text": "@springroll12 Please read here: Developer tools are automatically disabled when running a fully packaged application. If your application is launched from java -jar or if it is started from a special classloader, then it is considered a \u201cproduction application\u201d.\n\nhttps://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html",
                "time": "2018-10-05 17:41:16",
                "index": 1,
                "user": "abhishekransing_twitter"
            },
            {
                "id": "5bb7a956435c2a518e589a96",
                "text": "@abhishekransing_twitter That's what I mean. If you run in docker, the docker container will likely run 'java -jar'.",
                "time": "2018-10-05 18:11:34",
                "index": 2,
                "user": "springroll12"
            },
            {
                "id": "5bb7a96c5331811c2e557920",
                "text": "and there is a workaround to enable devtools for that scenario",
                "time": "2018-10-05 18:11:56",
                "index": 3,
                "user": "springroll12"
            },
            {
                "id": "5bb7a9803844923661ece450",
                "text": "but I imagine it also disables the \"auto disable in production\" functionality",
                "time": "2018-10-05 18:12:16",
                "index": 4,
                "user": "springroll12"
            },
            {
                "id": "5bb7b2761c100a4f2937834d",
                "text": "I guess to clarify I should say that I do all my development in docker",
                "time": "2018-10-05 18:50:30",
                "index": 5,
                "user": "springroll12"
            }
        ]
    },
    {
        "id": 23,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e8ba12cf87c5956a23f6749",
                "text": "Who offers the best training for Spring? Willing to travel in the US if we ever get out of this lock-down",
                "time": "2020-04-06 21:37:48",
                "index": 0,
                "user": "stephenpatten"
            },
            {
                "id": "5e8ba158f87c5956a23f6793",
                "text": "@wilkinsona Would you be able to recommend training resources? :)",
                "time": "2020-04-06 21:38:32",
                "index": 1,
                "user": "stephenpatten"
            },
            {
                "id": "5e8bb887fea5216d6960b57d",
                "text": "@stephenpatten Checkout Udemy courses.  Many are discounted at the moment, I can recommend John Thompson (a.k.a. Spring Framework Guru), who has several courses on Spring topics",
                "time": "2020-04-06 23:17:27",
                "index": 2,
                "user": "dfcoffin"
            },
            {
                "id": "5e8bb8c31aaf8e4b8e66362c",
                "text": "@dfcoffin  Thanks Donald! Checking him out now",
                "time": "2020-04-06 23:18:27",
                "index": 3,
                "user": "stephenpatten"
            }
        ]
    },
    {
        "id": 24,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bd185563844923661958b65",
                "text": "Hi, I've got a question. We've got an endpoint for a POST call, that has an optional request parameter and a request body. When calling the endpoint without the request parameter it works, but when adding the parameter to the request we get an HttpMediaTypeNotAcceptableException",
                "time": "2018-10-25 08:56:54",
                "index": 0,
                "user": "jwalgemoed"
            },
            {
                "id": "5bd1858982893a2f3b3883d4",
                "text": "As far as I can tell, this should be possible, but I am looking for the right way to configure this",
                "time": "2018-10-25 08:57:45",
                "index": 1,
                "user": "jwalgemoed"
            },
            {
                "id": "5bd1860e435c2a518e00b63f",
                "text": "```\n@PostMapping(\"/productlabels\", produces = [\"application/pdf\"], consumes = [\"application/json\"])\nfun productlabels(@RequestParam(required = false, defaultValue = \"AVERY_J8159\") format: String, @RequestBody labelsToPrint: ProductLabelSpecification)\n```",
                "time": "2018-10-25 08:59:58",
                "index": 2,
                "user": "jwalgemoed"
            },
            {
                "id": "5bd18626c08b8b30676cee29",
                "text": "Any ideas?",
                "time": "2018-10-25 09:00:22",
                "index": 3,
                "user": "jwalgemoed"
            },
            {
                "id": "5bd188d7bbdc0b25059848b5",
                "text": "If I recall correctly, this is supposed to work. I am on Spring Boot 2 btw",
                "time": "2018-10-25 09:11:51",
                "index": 4,
                "user": "jwalgemoed"
            },
            {
                "id": "5bd1912d1c100a4f29df7a51",
                "text": "i did it for the hole restcontroller @RequestMapping(path = \"/rest/v1/yourresources\", produces = \"application/json\")",
                "time": "2018-10-25 09:47:25",
                "index": 5,
                "user": "Saturas89"
            },
            {
                "id": "5bd19da51c100a4f29dfc768",
                "text": "@Saturas89 what exactly?",
                "time": "2018-10-25 10:40:37",
                "index": 6,
                "user": "jwalgemoed"
            },
            {
                "id": "5bd1a4573844923661965b45",
                "text": "Hello, I want to use azure notification hub for notification in my spring boot project, but I have no idea about Microsoft azure. Could anybody guide me with it.?\nAny help would be appreciated.",
                "time": "2018-10-25 11:09:11",
                "index": 7,
                "user": "TeamTricksense_twitter"
            },
            {
                "id": "5bd1c366bbdc0b250599db8f",
                "text": "@jwalgemoed  \n\n@RestController\n@RequestMapping(path = \"/rest/productlabels\", produces = \"application/json\")\npublic class ProductLabelsController {",
                "time": "2018-10-25 13:21:42",
                "index": 8,
                "user": "Saturas89"
            }
        ]
    },
    {
        "id": 25,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5de638328e906a1c8d5f894a",
                "text": "@wilkinsona I am having a problem that appears very similar to this one you raised/resolved https://jira.spring.io/browse/DATAJDBC-267",
                "time": "2019-12-03 10:25:54",
                "index": 0,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6387326eeb8518f5dea38",
                "text": "I am updating the lib we use from an old version to the latest, but upon building/testing I get errors saying the RelationalMappingContext is missing\n```Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.data.relational.core.mapping.RelationalMappingContext' available: expected at least 1 bean which qualifies ```",
                "time": "2019-12-03 10:26:59",
                "index": 1,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de638928e906a1c8d5f8c37",
                "text": "When I add that bean I get an error stating there are two beans now available and spring doesn't  know which one to use",
                "time": "2019-12-03 10:27:30",
                "index": 2,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6391a5ac7f22fb551c2b9",
                "text": "I've also removed prior instances of JdbcConfiguration from our code base ",
                "time": "2019-12-03 10:29:46",
                "index": 3,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6392746397c721c7ac85b",
                "text": "which seemed to be conflicting and is now deprecated",
                "time": "2019-12-03 10:29:59",
                "index": 4,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6399726eeb8518f5df472",
                "text": "I've forked the spring-data-jdbc lib to see if I can work out whats going on and the RelationalMappingContext appears to be optional",
                "time": "2019-12-03 10:31:51",
                "index": 5,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de63d629319bb5190d5090f",
                "text": "Not sure how likely a cause this is yet but should `JdbcConfiguration` from spring-data-jdbc return something like a `JdbcRelationalConverter` rather than a `RelationalConverter` (...and a `JdbcRelationalMappingContext` in place of a `RelationalMappingContext`)?",
                "time": "2019-12-03 10:48:02",
                "index": 6,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de63e2232df1245cbd5eba2",
                "text": "hmm . seems that class is deprecated",
                "time": "2019-12-03 10:51:14",
                "index": 7,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de63f1305eec2433dc6917b",
                "text": "```Caused by: org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'org.springframework.data.relational.core.mapping.RelationalMappingContext' available: expected single matching bean but found 2: relationalMappingContextCoreApi,jdbcMappingContext\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveNotUnique(DependencyDescriptor.java:220)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1265)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:711)```",
                "time": "2019-12-03 10:55:15",
                "index": 9,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de63f2426eeb8518f5e2093",
                "text": "this is the error I get when I supply the bean",
                "time": "2019-12-03 10:55:32",
                "index": 10,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de642d508d0c961b7e1bbbd",
                "text": "I think this is what lead me here @wilkinsona https://github.com/spring-projects/spring-boot/issues/14489",
                "time": "2019-12-03 11:11:17",
                "index": 12,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6453fd75ad3721d4694e1",
                "text": "It seems to me like there's a conflict between spring-boot and spring-data-jdbc. When I just extend the `AbstractJdbcConfiguration` and remove any related beans I had configured for the datasource, there's a conflict between `org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration.class`providing `jdbcMappingContext` (A `RelationalMappingContext` bean) and what `AbstractJdbcConfiguration` supplies",
                "time": "2019-12-03 11:21:35",
                "index": 13,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6459826eeb8518f5e587a",
                "text": "as you mention here: https://github.com/spring-projects/spring-boot/issues/14489#issuecomment-423210147",
                "time": "2019-12-03 11:23:04",
                "index": 14,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6459c5ac7f22fb5522e2f",
                "text": "@RobEvansUK_twitter `SpringBootJdbcConfiguration` should back off as soon as you provide your own `AbstractJdbcConfiguration` subclass as it's `@ConditionalOnMissingBean({ AbstractJdbcConfiguration.class, JdbcConfiguration.class })`",
                "time": "2019-12-03 11:23:08",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5de6460a05eec2433dc6c9fe",
                "text": "I think I'll try another approach now - add the beans individually (copy paste of `AbstractJdbcConfiguration`) and set `autowireCandidate` to `false` for any that conflict",
                "time": "2019-12-03 11:24:57",
                "index": 16,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de646589319bb5190d54b89",
                "text": "ok thanks for this @wilkinsona - hopefully not spamming too much",
                "time": "2019-12-03 11:26:16",
                "index": 17,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de646e746397c721c7b38f9",
                "text": "The condition evaluation report should confirm that `SpringBootJdbcConfiguration` has backed off. If that's happened your conflict must be coming from elsewhere",
                "time": "2019-12-03 11:28:39",
                "index": 18,
                "user": "wilkinsona"
            },
            {
                "id": "5de66ef046397c721c7c830a",
                "text": "So I've resolved the issue by adding the required beans from AbstractJdbcConfiguration in my own config and declaring them `@Primary` ",
                "time": "2019-12-03 14:19:28",
                "index": 19,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de66f096a85195b9eeeaa7f",
                "text": "I tried upgrading the spring boot library but that gave unrelated issues",
                "time": "2019-12-03 14:19:53",
                "index": 20,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de66f456a85195b9eeeac02",
                "text": "I also tried specifying the beans as `autowireCandidate=false` but that failed",
                "time": "2019-12-03 14:20:53",
                "index": 21,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de679ec05eec2433dc87a6f",
                "text": "found a cleaner/simpler way to prevent the issue, by adding `exclude = JdbcRepositoriesAutoConfiguration.class` to the `@SpringBootApplication` annotation and extending the `AbstractJdbcConfiguration` in my config and removing `JdbcConfiguration`. ",
                "time": "2019-12-03 15:06:20",
                "index": 22,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de67a37f65fec1c8eb5e5fb",
                "text": "based on https://stackoverflow.com/questions/53104697/datasource-bean-overriding-in-spring-boot-2-1",
                "time": "2019-12-03 15:07:35",
                "index": 23,
                "user": "RobEvansUK_twitter"
            }
        ]
    },
    {
        "id": 26,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5be312439600d10e6472eb84",
                "text": "i'm trying to convert a project from boot 2.0.5 to 2.1.0. But tests were made using fakemongo, and I get this error:\n```\njava.lang.NoClassDefFoundError: com/mongodb/OperationExecutor\n\tat com.github.fakemongo.Fongo.createMongo(Fongo.java:190)\nCaused by: java.lang.ClassNotFoundException: com.mongodb.OperationExecutor\netc\n```\nany idea?",
                "time": "2018-11-07 16:26:43",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5be3156df1b87534048ce9bb",
                "text": "Seems to be a long-standing problem with Fongo: https://github.com/fakemongo/fongo/issues/316",
                "time": "2018-11-07 16:40:13",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5be315e947217e07ffe71572",
                "text": "Looks like Fongo 2.2.0-RC1 might offer some hope.",
                "time": "2018-11-07 16:42:17",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5be3174dc0e6da07feecc51b",
                "text": "im using 2.2.0-RC2 actually",
                "time": "2018-11-07 16:48:13",
                "index": 3,
                "user": "ofabricio"
            },
            {
                "id": "5be3175692b7d1172151617d",
                "text": "ill try RC1",
                "time": "2018-11-07 16:48:22",
                "index": 4,
                "user": "ofabricio"
            },
            {
                "id": "5be318617a36913a9a0750ba",
                "text": "not working either",
                "time": "2018-11-07 16:52:49",
                "index": 5,
                "user": "ofabricio"
            },
            {
                "id": "5be31b4ee8add80e63b73fc6",
                "text": "Actually, as far as I can tell, `OperationExecutor` has been in the `com.mongodb.operation` package for a long time",
                "time": "2018-11-07 17:05:18",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5be31b62c0e6da07feece3e5",
                "text": "It was there in 3.4 and later so I have no idea what Fongo's doing",
                "time": "2018-11-07 17:05:38",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5be31b772138723405ce112c",
                "text": ":( ",
                "time": "2018-11-07 17:05:59",
                "index": 8,
                "user": "ofabricio"
            },
            {
                "id": "5be31bda6b9822140df3c55a",
                "text": "2.2.0-RC2 uses the correct package: https://github.com/fakemongo/fongo/blob/fongo-2.2.0-RC2/src/main/java/com/github/fakemongo/Fongo.java#L27",
                "time": "2018-11-07 17:07:38",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5be31c4392b7d117215180dc",
                "text": "What's the full stack trace of the failure?",
                "time": "2018-11-07 17:09:23",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5be31c4ed001b9172023a65b",
                "text": "i had to use it when i was converting from 1.5 to 2.0, because of the same problem. But now from 2.0 to 2.1 this happens again",
                "time": "2018-11-07 17:09:34",
                "index": 11,
                "user": "ofabricio"
            },
            {
                "id": "5be31c6292b7d1172151822a",
                "text": "```\njava.lang.NoClassDefFoundError: com/mongodb/OperationExecutor\n\n\tat com.github.fakemongo.Fongo.createMongo(Fongo.java:190)\n\tat com.github.fakemongo.Fongo.<init>(Fongo.java:103)\n\tat com.github.fakemongo.Fongo.<init>(Fongo.java:90)\n\tat com.github.fakemongo.Fongo.<init>(Fongo.java:82)\n\tat com.lordofthejars.nosqlunit.mongodb.InMemoryMongoDbLifecycleManager.fongo(InMemoryMongoDbLifecycleManager.java:42)\n\tat com.lordofthejars.nosqlunit.mongodb.InMemoryMongoDbLifecycleManager.doStart(InMemoryMongoDbLifecycleManager.java:36)\n\tat com.lordofthejars.nosqlunit.core.AbstractLifecycleManager.startEngine(AbstractLifecycleManager.java:14)\n\tat com.lordofthejars.nosqlunit.mongodb.InMemoryMongoDb.before(InMemoryMongoDb.java:48)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:39)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:79)\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:70)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:74)\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\nCaused by: java.lang.ClassNotFoundException: com.mongodb.OperationExecutor\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\t... 36 more\n```",
                "time": "2018-11-07 17:09:54",
                "index": 12,
                "user": "ofabricio"
            },
            {
                "id": "5be31cafbb06d73a993a1bb0",
                "text": "What did you have to use? What's \"it\" in \"I had to use it\"?",
                "time": "2018-11-07 17:11:11",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5be31ccac0e6da07feecee7a",
                "text": "i had to update to 2.2.0-RC2 in order to work from 1.5 to 2.0",
                "time": "2018-11-07 17:11:38",
                "index": 14,
                "user": "ofabricio"
            },
            {
                "id": "5be31cd94e7ca145206c3005",
                "text": "I see",
                "time": "2018-11-07 17:11:53",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5be31d077326df140eccb591",
                "text": "I can't see any code in Fongo that's referencing com.mongodb.OperationExecutor",
                "time": "2018-11-07 17:12:39",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5be31e1d7a36913a9a0777d6",
                "text": "i just found a sub module importing fongo v2.1.0. I tried to update it too, but same result",
                "time": "2018-11-07 17:17:17",
                "index": 17,
                "user": "ofabricio"
            },
            {
                "id": "5be31e44d001b9172023b3fb",
                "text": "i have this too:\n```\n    <dependency>\n            <groupId>org.mongodb</groupId>\n            <artifactId>mongo-java-driver</artifactId>\n        </dependency>\n```",
                "time": "2018-11-07 17:17:56",
                "index": 18,
                "user": "ofabricio"
            },
            {
                "id": "5be31e4b2138723405ce2658",
                "text": "maybe i should set the version?",
                "time": "2018-11-07 17:18:03",
                "index": 19,
                "user": "ofabricio"
            },
            {
                "id": "5be32090bb8878747491a38d",
                "text": "The 3.6 driver has two `OperationExecutor` classes:\n\n- `com.mongodb.OperationExecutor`\n- `com.mongodb.operation.OperationExecutor`",
                "time": "2018-11-07 17:27:44",
                "index": 20,
                "user": "wilkinsona"
            },
            {
                "id": "5be320b67a36913a9a078af9",
                "text": "The 3.8 driver has only got `com.mongodb.operation.OperationExecutor` so that's what the problem is",
                "time": "2018-11-07 17:28:22",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5be320dbd001b9172023c988",
                "text": "You could try downgrading the driver, but I'd only consider that to be a short-term solution. In the longer term, I think you should look to replace Fongo with something else. The project seems to be dormant at best.",
                "time": "2018-11-07 17:28:59",
                "index": 22,
                "user": "wilkinsona"
            },
            {
                "id": "5be3218c7326df140eccd851",
                "text": "ill consider the options. Thanks for you help!",
                "time": "2018-11-07 17:31:56",
                "index": 23,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 27,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e252aac8e073f465f208b7e",
                "text": "should it not happen that use applicationContext in a Bean to use its method \"getBean()\"?Why it is so complex, for example, to implement the ApplicationContextAware. why is it still not achieved that use @Autowired ApplicationContext context to get a context? Thanks...",
                "time": "2020-01-20 04:21:00",
                "index": 0,
                "user": "XSun771"
            },
            {
                "id": "5e2565a65b81ab262e59899a",
                "text": "you can do that",
                "time": "2020-01-20 08:32:38",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e2565b9ea55e3623e86638c",
                "text": "Altough getting a bean programmatically is not really a mainstream use case IMO",
                "time": "2020-01-20 08:32:57",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5e2565c6c7647778a5f4f310",
                "text": "(or getting a reference to the `ApplicationContext` for that matter)",
                "time": "2020-01-20 08:33:10",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 28,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce5251f8f019114ae981056",
                "text": "I am runi junit with configuration context xml file and the component scan from dependent jar is not working",
                "time": "2019-05-22 10:31:59",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce5252e63dea422b4c622c8",
                "text": "Any ideas to work around this",
                "time": "2019-05-22 10:32:14",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce52a768f019114ae9837fd",
                "text": "How can I import  a application-beans-context.xml of a depenent jar in my configuration context like  <import resource=\"classpath:/application-beans-context.xml\" />",
                "time": "2019-05-22 10:54:46",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce52a8e7c363c75a722d8cb",
                "text": "This should solve most of my problems",
                "time": "2019-05-22 10:55:10",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce52af79404bf2aed8c74a7",
                "text": "@SpringBootTest\n@RunWith(SpringRunner.class)",
                "time": "2019-05-22 10:56:55",
                "index": 4,
                "user": "codecln"
            },
            {
                "id": "5ce52b1613e9854e334865c6",
                "text": "have you used these two annotations in your spring boot App ?",
                "time": "2019-05-22 10:57:26",
                "index": 5,
                "user": "codecln"
            },
            {
                "id": "5ce52e037c363c75a722f4f2",
                "text": "@DoraRajappan, did you google it?\n`@ImportResource(\"[XML_LOCATION\")`",
                "time": "2019-05-22 11:09:55",
                "index": 6,
                "user": "tonisostrat"
            },
            {
                "id": "5ce52e92ef853135c802dec8",
                "text": "I will check this out I got from google <import resource=\"classpath*:spring-configuration.xml\" /> ",
                "time": "2019-05-22 11:12:18",
                "index": 7,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce52ebd879f4478c7c0f358",
                "text": "I need to know if I can import a java configuration to my configuration context xml?",
                "time": "2019-05-22 11:13:01",
                "index": 8,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce52ef09404bf2aed8c8f44",
                "text": "Or at least I go with a java configuration context how can I import the configuration context of a a dependent jar",
                "time": "2019-05-22 11:13:52",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce52f14879f4478c7c0f637",
                "text": "Thank you very much",
                "time": "2019-05-22 11:14:28",
                "index": 10,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce5307213e9854e33488bda",
                "text": "I am having the configuration in some dependent jars in java and in some dependent jars in xml",
                "time": "2019-05-22 11:20:18",
                "index": 11,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 29,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c4d6a3eceb5a2264f4a3568",
                "text": "Is there a way of getting spring to initialize log4j2 logging without having a log4j2.[yml/json/properties] in my classpath?\n\nI have a file called `log4j2-common.yml` and log4j2-[<env name>].yml, and I set up log4j2 using the property `log4j.configurationFile`, except unless I have `log4j2.yml` in my classpath (even if it's an empty file), spring doesn't seem to use my log4j2 logging configuration.",
                "time": "2019-01-27 08:22:22",
                "index": 0,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c4d6a7f9221b9382dcbb33a",
                "text": "Also, does spring add its own console appender or something? Even if I turn off logging in the root logger, messages logged on error or above show up on the console?",
                "time": "2019-01-27 08:23:27",
                "index": 1,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c4d6afab6953b1be794aff2",
                "text": "@Anmol78840097_twitter You have to provide following config in `application.yml` file\n\n```yaml\nlogging:\n    config: classpath:log4j-common.xml\n```\n",
                "time": "2019-01-27 08:25:30",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5c4d6b22f2511c625cbe4d45",
                "text": "and i think that `classpath:` can be replaced by `file://path/to/log4j-common.xml`, but just check it out",
                "time": "2019-01-27 08:26:10",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5c4ebbb513a2814df6dc4846",
                "text": "@nnanda2016 That doesn't seem to help, spring logs still don't respect my log4j config, and that actually seems to be breaking my logging",
                "time": "2019-01-28 08:22:12",
                "index": 18,
                "user": "Anmol78840097_twitter"
            }
        ]
    },
    {
        "id": 30,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cd9922e5d48a24fd0bfe054",
                "text": "Hi Spring Booters :),\nI would like to know if we have a cache listener associated with the `@Cache....` annotations? Thanks",
                "time": "2019-05-13 15:50:06",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5cd993a76fd7c11cd8af73f7",
                "text": "@akuma8 what kind of listener are you looking for?",
                "time": "2019-05-13 15:56:23",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5cd99459da34620ff93594e7",
                "text": "@snicoll When the cache is hit , I need to add some custom http headers to the controller's response.",
                "time": "2019-05-13 15:59:21",
                "index": 3,
                "user": "akuma8"
            },
            {
                "id": "5cd9946e0f381d0a76aca7a1",
                "text": "doesn\u2019t sound like the job of a listener to me",
                "time": "2019-05-13 15:59:42",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5cd9948479d7005099653dbf",
                "text": "The cache abstraction is a light declarative model, it doesn\u2019t provide caching features per se. ",
                "time": "2019-05-13 16:00:04",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5cd994b60f381d0a76acaa51",
                "text": "https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/integration.html#cache-specific-config",
                "time": "2019-05-13 16:00:54",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5cd994e456271260f9561316",
                "text": "Thanks for these clarifications, I already read the doc ^^. ",
                "time": "2019-05-13 16:01:40",
                "index": 7,
                "user": "akuma8"
            }
        ]
    },
    {
        "id": 31,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be235c69c65e607e70ea569",
                "text": "Hello people, I am trying to implement a spring webFlux that has an endpoint that answers the http call with status code 200 and then do some processing, do anyone have any idea on how can I do that?\n\n        private Mono<ServerResponse> getAllPersons(ServerRequest request){\n            return this.personService.list() // returns a Flux<Person>\n            .collectList()\n            // turns the flux into a Mono<List<T>> to allow sending a single response\n            .flatMap(JsonWriter::write)\n\n            //Send response right away\n            .flatMap((json) -> ServerResponse.ok()\n                .body(Mono.just(json), String.class)\n            )\n\n            //Do something after the response has been sent\n            .doSomething after sending serverResponse\n            .onErrorResume(\n                JsonProcessingException.class,\n                (e) -> ServerResponse.status(INTERNAL_SERVER_ERROR)\n                .body(Mono.just(e.getMessage()), String.class)\n            );\n        }",
                "time": "2018-11-07 00:45:57",
                "index": 0,
                "user": "evandro-machado"
            },
            {
                "id": "5be2424b923b275eaa1f82a3",
                "text": "After the response is sent?",
                "time": "2018-11-07 01:39:23",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5be2426ca7cd1e7b975d5745",
                "text": "that\u2019s little confusing\u2026however, if you want to do some post processing, you can attach a `Filter`",
                "time": "2018-11-07 01:39:56",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5be242ad065d62408e451dc5",
                "text": "if you use Router function of WebFlux, please provide an implementation of `HandlerFilterFunction<ServerResponse, ServerResponse>`, and if you use regular non-Fn, provide an implementation of `WebFilter`",
                "time": "2018-11-07 01:41:01",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5be242c3a33a6461095c3e78",
                "text": "and all your post processing should go there in those filters",
                "time": "2018-11-07 01:41:23",
                "index": 4,
                "user": "nnanda2016"
            },
            {
                "id": "5be245019088fe25bc70e6fe",
                "text": "thank you very much!",
                "time": "2018-11-07 01:50:57",
                "index": 5,
                "user": "evandro-machado"
            },
            {
                "id": "5be248bcfbb6f507e644fae2",
                "text": "@nnanda2016 I would like to send a 200 ServerResponse, and after the response is sent I would like to process some data, I have made some research on filter but it looks like its not capable of doing that, am I wrong ?",
                "time": "2018-11-07 02:06:52",
                "index": 6,
                "user": "evandro-machado"
            },
            {
                "id": "5be259dc3d1d9565049e5eac",
                "text": "@evandro-machado once response is sent, you are out of the context of the current request. If you want to do anything, you have to do asynchronously - which means you can submit that task to a thread pool and execute ",
                "time": "2018-11-07 03:19:56",
                "index": 7,
                "user": "nnanda2016"
            },
            {
                "id": "5be25a33a7cd1e7b975d574a",
                "text": "and you cannot send two HTTP statuses for same request (unless, it\u2019s a long polling request like WebSocket or Server Sent Events)",
                "time": "2018-11-07 03:21:23",
                "index": 8,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 32,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e1dea6bb990d50d81b0b57f",
                "text": "ServerPropertiesAutoConfiguration missing in SpringBoot 2.2.1 ! What is the workaround/solution?",
                "time": "2020-01-14 16:20:59",
                "index": 0,
                "user": "connectedsoftec_twitter"
            },
            {
                "id": "5e1dec6943c3b62d79f40091",
                "text": "@connectedsoftec_twitter it's beenteh case since 2.0 and it shouldn't matter. If a library is referring to that type, maybe you need to upgrade that library too.",
                "time": "2020-01-14 16:29:29",
                "index": 1,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 33,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5cdac82e56271260f95e0112",
                "text": "what is the best IDE for spring boot development",
                "time": "2019-05-14 13:52:46",
                "index": 0,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5cdac859bdc3b64fcf45750e",
                "text": "IntelliJ Idea Ultimate is the best bet",
                "time": "2019-05-14 13:53:29",
                "index": 1,
                "user": "deepakmehra10"
            },
            {
                "id": "5cdac85ff251e60ffa7e1320",
                "text": "anyday",
                "time": "2019-05-14 13:53:35",
                "index": 2,
                "user": "deepakmehra10"
            },
            {
                "id": "5cdac8665d48a24fd0c83dbe",
                "text": "is it free",
                "time": "2019-05-14 13:53:42",
                "index": 3,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5cdac86f5d48a24fd0c83dca",
                "text": "That's not free",
                "time": "2019-05-14 13:53:51",
                "index": 4,
                "user": "deepakmehra10"
            },
            {
                "id": "5cdac8820f381d0a76b4ddc6",
                "text": "oh can you please suggest me anything for free",
                "time": "2019-05-14 13:54:10",
                "index": 5,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5cdac8925a1d435d463dcf7e",
                "text": "IntelliJ Idea  Community can also be used for development but you won't get spring boot support ",
                "time": "2019-05-14 13:54:26",
                "index": 6,
                "user": "deepakmehra10"
            },
            {
                "id": "5cdac8b3e7f42160fa89b2b0",
                "text": "Start with IntelliJ Idea community ",
                "time": "2019-05-14 13:54:59",
                "index": 7,
                "user": "deepakmehra10"
            },
            {
                "id": "5cdac90d0f381d0a76b4e44d",
                "text": "@a-c-sreedhar-reddy Spring boot's documentation is really good to start.",
                "time": "2019-05-14 13:56:29",
                "index": 8,
                "user": "deepakmehra10"
            },
            {
                "id": "5cdacd9a56271260f95e2a6f",
                "text": "@a-c-sreedhar-reddy Before starting with Spring Boot, I\u2019ll suggest you to start learning Spring. Spring Boot is too magic for beginners to understand what happens behind the scene. You can buy the book Spring In Action, I read the 2 last editions but I prefer the 4th edition (based on Spring 4) since the last one (based on Spring 5) assumes that we already know Spring.",
                "time": "2019-05-14 14:15:54",
                "index": 11,
                "user": "akuma8"
            }
        ]
    },
    {
        "id": 34,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c45a7bd20b78635b65acadb",
                "text": "Hi Team, If I use @Transient for any field in @Entity class, it's value isn't gonna saved in DB. if I make some changes in an instance of this Entity class via setter methods and  retrieve an instance of this class afterwards, the value of the @Transient field for the object will not change right? What is the alternative here to change the @Transient field? Please clarify.",
                "time": "2019-01-21 11:06:37",
                "index": 0,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c45f06e7a0f4d5b19e51ad7",
                "text": "@RaviShekhawat The transient field will not be stored in the serialized object, but you can still modify it as much as you want as a normal class property.",
                "time": "2019-01-21 16:16:46",
                "index": 11,
                "user": "isaakm_gitlab"
            },
            {
                "id": "5c46137cf780a1521f48322f",
                "text": "@isaakm_gitlab I'm finding strange result with @Transient fields.I've a list annotated as transient and I've a separate controller to initialize the transient field. I print the object after initializing the transient field but when I consume the same object in some other controller, the transient field is found to be null. I know it's confusing to describe like this. Will raise a stack overflow for this. Please help me out here.",
                "time": "2019-01-21 18:46:20",
                "index": 17,
                "user": "RaviShekhawat"
            }
        ]
    },
    {
        "id": 35,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bee8c335f5c92504066c9c1",
                "text": "I\u2019m working on one enhancement and I try to write a unit test but I face a problem : I can\u2019t mock a final class. Can somebody give me  advise how I can do it ?",
                "time": "2018-11-16 09:21:55",
                "index": 0,
                "user": "ayudovin"
            },
            {
                "id": "5bee9b511665691e0fb15dd6",
                "text": "Mockito can do it, but you have to enable it. The setting affects the entire module so it can affect things more broadly than you might like. I'd look for an alternative approach.",
                "time": "2018-11-16 10:26:25",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5beea55a061f2e6bbb779508",
                "text": "@wilkinsona thank you ",
                "time": "2018-11-16 11:09:14",
                "index": 5,
                "user": "ayudovin"
            }
        ]
    },
    {
        "id": 36,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cf0f5655de053468bea82c0",
                "text": "Hi guys,  I'm using reactive spring and MongoDB. Is there any option to set  setMaxConnectionIdleTime ?",
                "time": "2019-05-31 09:35:33",
                "index": 0,
                "user": "akuch_gitlab"
            },
            {
                "id": "5cf0fb5e9b50f639355a7dbc",
                "text": "@akuch_gitlab Yes. Provide your own `MongoClientOptions` configured via its builder.",
                "time": "2019-05-31 10:01:02",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cf10810ff3f016baa7ee799",
                "text": "@wilkinsona  Thanks! But is it possible that i cannot pass this MongoClientOptions to reactivestreams.client.MongoClient ?",
                "time": "2019-05-31 10:55:12",
                "index": 7,
                "user": "akuch_gitlab"
            },
            {
                "id": "5cf11539e41fe15e75eb5d8e",
                "text": "@akuch_gitlab Sorry, you're right, that doesn't appear to be an option with the reactive client. Looking at `com.mongodb.reactivestreams.client.MongoClients.create(MongoClientSettings)` is appears to be something that Mongo's reactive driver does not support.",
                "time": "2019-05-31 11:51:21",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5cf1157582c2dc79a528c831",
                "text": "Scratch that, looks like it's available via the connection pool settings",
                "time": "2019-05-31 11:52:21",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5cf11631bf4cbd167c08ba1a",
                "text": "You can tune it using a customizer for the `MongoClientSettings` `Builder`. Something like this:\n\n```\n@Bean\npublic MongoClientSettingsBuilderCustomizer customizer() {\n\treturn (builder) -> builder\n\t\t\t.applyToConnectionPoolSettings((connectionPool) -> connectionPool\n\t\t\t\t\t.maxConnectionIdleTime(5, TimeUnit.MINUTES));\n}\n```",
                "time": "2019-05-31 11:55:29",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5cf1175bf3a60a79a42dc50d",
                "text": "@wilkinsona  That looks great! Thanks",
                "time": "2019-05-31 12:00:27",
                "index": 13,
                "user": "akuch_gitlab"
            }
        ]
    },
    {
        "id": 37,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5c6b270d9e430b30868b8114",
                "text": "<rant>\nDoes anyone actually use Spring Webflux for anything other than blogging about it? The more I look into the reactive stack, the more I see how not ready it is for any serious usage. It's nice to have Spring integration for Mongo built-in, but most serious projects need a bit more than a simple CRUD. So let's say you want to upload a file:\n\nhttps://github.com/entzik/reactive-spring-boot-examples/blob/master/src/main/java/com/thekirschners/springbootsamples/reactiveupload/ReactiveUploadResource.java\n\nYeah... that does hurt to read. This example uses the NIO which thankfully is fully async, but storing a file to disk is rarely an optimal solution. You'd most likely want to store it in some datastore or external service. Both Amazon S3 and GCP Storage offer only blocking API's. A very ugly solution would be to simply block the thread upon file upload and get the complete inputstream, but blocking is not allowed. So as far as I can tell, we would have to create some temporary file storage that would be written to asynchronously and then read from in a separate thread. \n\n Actually, majority of java libraries or clients only offer blocking libraries. Now there are mediocore workarounds with dedicated thread pools and whatnot, but integrations are far from easy. \n\nI've decided to give reactive one more try after attempting to build a serious app using Akka streams in Scala, but was turned off by the complexity overhead. I hoped that Java's much simpler syntax would make it easier to focus on the functionality rather than spending hours searching for obscure problems, but unfortunately things aren't much better. Until we build enough libraries and tools with built-in async API's, it feels more trouble than it's worth. But I guess I should have understood that before trying Webflux in the first place.\n\n</rant> ",
                "time": "2019-02-18 21:43:41",
                "index": 0,
                "user": "Humblehound_gitlab"
            },
            {
                "id": "5c6bb96f1f14630421e51c06",
                "text": "@Humblehound_gitlab a large chunk of your sample can be replaced with a call to `DataBufferUtils.write(data, channel)`. I agree though that the ecosystem has yet to catch up in many ways - but the offering of reactive data stores with Spring Data and the work being done on R2DBC definitely help here. As for S3/GCP storage, those might not have reactive clients now (I honestly don't know), but if they provide HTTP endpoints `WebClient` could definitely help here.",
                "time": "2019-02-19 08:08:15",
                "index": 2,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 38,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ba40f241043315947bf8100",
                "text": "@snicoll I was looking at https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/Hibernate2ndLevelCacheIntegrationTests.java as suggested but I really wonder what is actually tested here..\nE.g. the Hibernate property `hibernate.cache.use_second_level_cache` is not set under `spring.jpa.properties` so Hibernate second level caching is not even enabled I think.\nI've setup a basic [demo](https://github.com/marceloverdijk/spring-boot-hibernate-l2-cache) app using the configuration in the test you mentioned. With the `hibernate.cache.use_second_level_cache=true` configuration Hibernate L2 caching **is** working . The first time I request a record by id I see the query being executed, and the second time not.\nHowever it seems not to be integrated with Spring's cache manager, nor does it integrate with the metrics like `/actuator/metrics/cache.puts` unfortunately, which I was hoping for.\nIs this expected behaviour?\n",
                "time": "2018-09-20 21:20:36",
                "index": 0,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba412fcf7e1580625fec544",
                "text": "Digging a bit deeper while debugging...\nWhen using `javax.cache.Caching.getCachingProvider(Thread.currentThread().getContextClassLoader().getParent())` it returns a `CacheManager` with correct statistics (I see misses, puts, gets).\nNow, when using `javax.cache.Caching.getCachingProvider()` it returns a different `CacheManager` instance with different cache instances. The statistics for this one have 0 for misses, puts and gets. ",
                "time": "2018-09-20 21:37:00",
                "index": 1,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba414a5be4f300626c3b0ef",
                "text": "If this is expected behaviour I might better create a custom HibernateStatisticsEndpoint using `HibernateUtil.sessionFactory.getStatistics();` to manually collect statistics as described [here](http://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/Hibernate_User_Guide.html#caching-statistics)",
                "time": "2018-09-20 21:44:05",
                "index": 2,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba414d7913ba7799b1dc057",
                "text": "what do you think @snicoll ?",
                "time": "2018-09-20 21:44:55",
                "index": 3,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba48f28f7e15806250175e2",
                "text": "@marceloverdijk the purpose of the test is to make sure that we create the cache manager before Hibernate does (otherwise it\u2019s failing because there is one that already exists). There was an init issue and that test used to fail before we fixed it so I wonder why Hibernate would use a different `CacheManager` for you. Spring Boot does not have explicit support for second level cache (it\u2019s about configuring the right hibernate properties yourself). Again, I don\u2019t know what Hibernate does but if you have a minimal sample that reproduces the issue, I can have a look",
                "time": "2018-09-21 06:26:48",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ba4984833da0f649e2f5721",
                "text": "Thx @snicoll I created https://github.com/marceloverdijk/spring-boot-hibernate-l2-cache yesterday to have a simple demo setup. It might benefit others as well I guess.",
                "time": "2018-09-21 07:05:44",
                "index": 7,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba49895e5c2cc56adbf8eae",
                "text": "And that doesn\u2019t work then? You see two cache manager being created with that setup?",
                "time": "2018-09-21 07:07:01",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5ba498b3e6046343f393cdb6",
                "text": "I think I remember the difference now",
                "time": "2018-09-21 07:07:31",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5ba498bd7dca3065033171c0",
                "text": "It was ehcache 2 and the singleton lookup the problem",
                "time": "2018-09-21 07:07:41",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5ba498dff7e158062501aa51",
                "text": "Btw I noticed the same behaviour with Caffeine, so I suspect Hibernate to be honest..",
                "time": "2018-09-21 07:08:15",
                "index": 11,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba498e6d655361f762f8d4c",
                "text": "You could easily add a breakpoint to see what classloader is being used (you should get two hits)",
                "time": "2018-09-21 07:08:22",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5ba49916d655361f762f8e8c",
                "text": "If there is something we can do to help you workaround the issue (if it\u2019s in hibernate) I am more than happy to have a look",
                "time": "2018-09-21 07:09:10",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ba499231ee2ca65024a2ccf",
                "text": "Can you have a look and report here when you\u2019re done?",
                "time": "2018-09-21 07:09:23",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5ba49b3cbe4f300626c694c8",
                "text": "Yes I will. Will probably do it in the weekend.",
                "time": "2018-09-21 07:18:20",
                "index": 15,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4a8b4f4bd1056ac951adb",
                "text": "@snicoll \nI did some further investigation and I found out indeed different classloaders are used.\nSpring Boot's `JCacheCacheAutoConfiguration` is using the `RestartClassLoader` and Hibernate's `JCacheRegionFactory` is using a `ClassLoading$DefaultClassLoader`.\nI also noticed that `JCacheCacheAutoConfiguration`/`JCacheRegionFactory` are getting a different instance of the `CachingProvider` (in this case a `EhcacheCachingProvider` as expected).\nI found out that both are calling `Caching.getCachingProvider(cachingProviderFqn)`and that the cachingProviderFqn were different. This was caused by the wrong Hibernate property defined. I copied `spring.jpa.properties.hibernate.cache.provider` from the test case you mentioned, but this should be `spring.jpa.properties.hibernate.javax.cache.provider` (see also https://github.com/hibernate/hibernate-orm/blob/master/hibernate-jcache/src/main/java/org/hibernate/cache/jcache/ConfigSettings.java#L28).\nAfter fixing that still different `EhcacheCachingProvider`instances are created btw.\n\n",
                "time": "2018-09-21 08:15:48",
                "index": 21,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4a90b5df5194734efa0cb",
                "text": "If there\u2019s a different classloader, I am sure it does",
                "time": "2018-09-21 08:17:15",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5ba4a910f7e15806250209d7",
                "text": "Can you try without devtools?",
                "time": "2018-09-21 08:17:20",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5ba4a9d65df5194734efa55f",
                "text": "@snicoll  Without devtools Spring's `JCacheCacheAutoConfiguration` is using a `Launcher@AppClassLoader`.\nHibernate's `JCacheRegionFactory` is still using the `ClassLoading$DefaultClassLoader`.",
                "time": "2018-09-21 08:20:38",
                "index": 36,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4ab888909f71f750706f3",
                "text": "@snicoll Hibernate's `JCacheRegionFactory` is doing:\n```\nprotected ClassLoader getClassLoader(CachingProvider cachingProvider) {\n  // todo (5.3) : shouldn't this use Hibernate's AggregatedClassLoader?\n  return cachingProvider.getDefaultClassLoader();\n}\n```\nwhich is this case is calling `EhcacheCachingProvider.getDefaultClassLoader()`which in turn resolves to the Ehcache internally defined `DEFAULT_CLASSLOADER`:\n```\nstatic {\n    DEFAULT_CLASSLOADER = AccessController.doPrivileged((PrivilegedAction<ClassLoader>) DefaultClassLoader::new);\n  }\n```\n",
                "time": "2018-09-21 08:27:52",
                "index": 46,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4ac1f7dca30650331ea49",
                "text": "So I guess it's teaching Ehcache... although the TODO in HIbernate's code does suspects that Hibernate calling `cachingProvider.getDefaultClassLoader()` might not be the best option...",
                "time": "2018-09-21 08:30:23",
                "index": 47,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4acc9b4990c30eee8c493",
                "text": "I wonder *if* they would use the `AggregatedClassLoader ` it would work though",
                "time": "2018-09-21 08:33:13",
                "index": 48,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b062b4990c30eee8d937",
                "text": "@marceloverdijk probably not",
                "time": "2018-09-21 08:48:34",
                "index": 51,
                "user": "snicoll"
            },
            {
                "id": "5ba4b141f4bd1056ac9553d0",
                "text": "@snicoll so there is nothing to do about it then I guess? ",
                "time": "2018-09-21 08:52:17",
                "index": 54,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b160d655361f76301933",
                "text": "I certainly hope we can do something. If Hibernate hardcodes the classloader with no way for us to teach them, there\u2019s nothing we can do about it I think",
                "time": "2018-09-21 08:52:48",
                "index": 55,
                "user": "snicoll"
            },
            {
                "id": "5ba4b17fbe4f300626c72757",
                "text": "It\u2019s especially important with JCache setup since it uses the classloader as a way to identify the cache manager",
                "time": "2018-09-21 08:53:19",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5ba4b19fd655361f76301a30",
                "text": "I\u2019d open an issue if I were you. Please share the link if you do as I\u2019d like to see if I can help",
                "time": "2018-09-21 08:53:51",
                "index": 57,
                "user": "snicoll"
            },
            {
                "id": "5ba4b205e6046343f39472ce",
                "text": "I now see that Hibernate has the option to provide an explicit cache manager using property `spring.jpa.properties.hibernate.javax.cache.cache_manager` let me see first if I could use that one...",
                "time": "2018-09-21 08:55:33",
                "index": 58,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b21ebe4f300626c72b5e",
                "text": "@marceloverdijk sweet. You could use the new `HibernatePropertiesCustomizer` for this",
                "time": "2018-09-21 08:55:58",
                "index": 60,
                "user": "snicoll"
            },
            {
                "id": "5ba4b65433da0f649e300ea7",
                "text": "@snicoll Yes, adding the below config worked:\n```\n@Configuration\npublic class HibernateConfig {\n\n    @Autowired\n    private CacheManager cacheManager;\n\n    @Bean\n    public HibernatePropertiesCustomizer hibernatePropertiesCustomizer() {\n        return hibernateProperties -> hibernateProperties.put(ConfigSettings.CACHE_MANAGER, cacheManager);\n    }\n}\n```\nThis way Hibernate seems to use the same cache manager. \nI'm noticing some other unexpected behaviour, but might be unrelated, so will dig into that.\nNote also the `/actuator/metrics/cache.gets` now return correct data like gets, puts etc., albeit very broad (not per cache).\nDid Spring Boot ever considered exposing JCache statistics as part of the Caches endpoint in case the user us using JCache?\nAnyway , thx a lot for your help!",
                "time": "2018-09-21 09:13:56",
                "index": 70,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b8581043315947c33317",
                "text": "@snicoll Yes there is a cache metrics endpoint already but very broad. It shows only measurements (counts) over all caches and not per cache",
                "time": "2018-09-21 09:22:32",
                "index": 78,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b8770cfe7f30f1c7cb49",
                "text": "That\u2019s more of a micrometer question to me",
                "time": "2018-09-21 09:23:03",
                "index": 79,
                "user": "snicoll"
            },
            {
                "id": "5ba4b88db4990c30eee90981",
                "text": "It\u2019s not really about JCache though, JCache is very limited in what they expose.",
                "time": "2018-09-21 09:23:25",
                "index": 80,
                "user": "snicoll"
            },
            {
                "id": "5ba4b899b4990c30eee90989",
                "text": "Which does not make it that useful to be honest. I would like to know per cache what the hit/miss rate so independent caches can be fine tuned. Yes that's more of a micrometer question indeed.",
                "time": "2018-09-21 09:23:37",
                "index": 81,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b8bcb4990c30eee909c4",
                "text": "It\u2019s not exposed for JCache because the spec does not expose that information (as far as I remember, it\u2019s been a while)",
                "time": "2018-09-21 09:24:12",
                "index": 82,
                "user": "snicoll"
            },
            {
                "id": "5ba4b8db0cfe7f30f1c7cda9",
                "text": "Besides the metrics endpoint there is also the `/actuator/caches` endpoint itself, but I agree hit rate would belong to metrics.",
                "time": "2018-09-21 09:24:43",
                "index": 83,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b916f7e1580625026b6c",
                "text": "JCache exposes a [CacheStatisticsMXBean](https://static.javadoc.io/javax.cache/cache-api/1.0.0/javax/cache/management/CacheStatisticsMXBean.html) with some cache statistics per cache ",
                "time": "2018-09-21 09:25:42",
                "index": 84,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b93af4bd1056ac958611",
                "text": "I was thinking of exposing these somehow via a custom actuator endpoint...",
                "time": "2018-09-21 09:26:18",
                "index": 85,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b94c0cfe7f30f1c7d0c3",
                "text": "together with size of current caches etc.",
                "time": "2018-09-21 09:26:36",
                "index": 86,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b96c7dca306503323cb0",
                "text": "I will create a documentation PR somewhere this weekend mentioning how to use the explicit cache manager. ",
                "time": "2018-09-21 09:27:08",
                "index": 87,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4b98f8909f71f75075f32",
                "text": "wait a minute",
                "time": "2018-09-21 09:27:43",
                "index": 88,
                "user": "snicoll"
            },
            {
                "id": "5ba4b9be0cfe7f30f1c7d2b9",
                "text": "Check `JCacheMetrics` in the micrometer project. If there is something missing in there, please open an issue in their tracker",
                "time": "2018-09-21 09:28:30",
                "index": 89,
                "user": "snicoll"
            },
            {
                "id": "5ba4b9caf7e1580625026f29",
                "text": "and the caches endpoint should not expose any metrics indeed",
                "time": "2018-09-21 09:28:42",
                "index": 90,
                "user": "snicoll"
            },
            {
                "id": "5ba4ba9b8909f71f7507653f",
                "text": "Is that `JCacheMetrics` enabled by default or should I do something to enable it? I haven't used micrometer that much yet, only the actuator endpoints..",
                "time": "2018-09-21 09:32:11",
                "index": 91,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4bab3b9531f2dfa9c14e4",
                "text": "if you have a spring boot app with the actuator, it is there yes",
                "time": "2018-09-21 09:32:35",
                "index": 92,
                "user": "snicoll"
            },
            {
                "id": "5ba4bad0913ba7799b2140b3",
                "text": "You said it was basic so I assumed you had actually checked",
                "time": "2018-09-21 09:33:04",
                "index": 93,
                "user": "snicoll"
            },
            {
                "id": "5ba4bb19e5c2cc56adc05daa",
                "text": "yes I checked `/actuator/metrics`:-) and `/actuator/metrics/cache.puts`",
                "time": "2018-09-21 09:34:17",
                "index": 94,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4bb361ee2ca65024b01d4",
                "text": "but is not per cache, maybe I missed another metrics, let me check",
                "time": "2018-09-21 09:34:46",
                "index": 95,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4bb42f7e15806250275a2",
                "text": "it is per cache",
                "time": "2018-09-21 09:34:58",
                "index": 96,
                "user": "snicoll"
            },
            {
                "id": "5ba4bb498909f71f75076969",
                "text": "there is a tag with the cache name",
                "time": "2018-09-21 09:35:05",
                "index": 97,
                "user": "snicoll"
            },
            {
                "id": "5ba4bb64e6046343f394a7f3",
                "text": "Try add `?tag=cache:mycache`",
                "time": "2018-09-21 09:35:32",
                "index": 98,
                "user": "snicoll"
            },
            {
                "id": "5ba4bbf0913ba7799b2146d5",
                "text": "ah that's how micrometer works, like I said I have not much knowledge about micrometer..",
                "time": "2018-09-21 09:37:52",
                "index": 99,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4bbf8be4f300626c76720",
                "text": ":shrug:",
                "time": "2018-09-21 09:38:00",
                "index": 100,
                "user": "snicoll"
            },
            {
                "id": "5ba4bd9ef4bd1056ac95a32f",
                "text": "thx @snicoll I will look more into micrometer, e.g. need to find out how the metric names map to properties in e.g. JCacheMetrics. Like I see metric names `cache.gets`, `cache.puts`but nothing like `cache.misses` although `JCacheMetrics` has `missCount() `",
                "time": "2018-09-21 09:45:02",
                "index": 102,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba4be167dca3065033259bf",
                "text": "there is a `miss` tag on `cache.gets`",
                "time": "2018-09-21 09:47:02",
                "index": 103,
                "user": "snicoll"
            },
            {
                "id": "5ba4bf73b4990c30eee930ed",
                "text": "I see. metric name are more or less multi dimensional , I think I should look for some view on top of it.",
                "time": "2018-09-21 09:52:51",
                "index": 107,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba501dfd655361f763220b6",
                "text": "@snicoll I have created https://github.com/spring-projects/spring-boot/pull/14570 for documentation of the Hibernate second-level caching. ",
                "time": "2018-09-21 14:36:15",
                "index": 118,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba502a7e5c2cc56adc21957",
                "text": "The week-end was closer than I thought it seems :) Thanks!",
                "time": "2018-09-21 14:39:35",
                "index": 119,
                "user": "snicoll"
            },
            {
                "id": "5ba5039ef7e15806250453f4",
                "text": "Yes it was :-)",
                "time": "2018-09-21 14:43:42",
                "index": 120,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba55f198909f71f750b7c23",
                "text": "@snicoll I was once more thinking about the Hibernate L2 cache... what do you think about introducing a `spring.jpa.hibernate.use-cache-manager` property, which when set to `true` auto configures a `HibernatePropertiesCustomizer` which sets the `CacheManager` automatically?",
                "time": "2018-09-21 21:14:01",
                "index": 122,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba67b091ee2ca650254e675",
                "text": "@marceloverdijk Yeah I thought of making this a bit more official. I think I\u2019d be tempted to do that automatigcally as long as it does not have any impact on Hiberante itself (i.e. you need to enable something for that property to work)",
                "time": "2018-09-22 17:25:29",
                "index": 126,
                "user": "snicoll"
            },
            {
                "id": "5ba73e677dca30650340388d",
                "text": "@snicoll shall I create an issue for automagically setting the Hibernate L2 cache manager?",
                "time": "2018-09-23 07:19:03",
                "index": 153,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba7454e0cfe7f30f1d62ca7",
                "text": "@marceloverdijk certainly worth discussing. That would probably change your PR",
                "time": "2018-09-23 07:48:30",
                "index": 155,
                "user": "snicoll"
            },
            {
                "id": "5ba77c581043315947d27b28",
                "text": "@snicoll I created https://github.com/spring-projects/spring-boot/issues/14586 to discuss / track the feature request to add auto configuration for setting up the Hibernate second-level caching automagically",
                "time": "2018-09-23 11:43:20",
                "index": 160,
                "user": "marceloverdijk"
            }
        ]
    },
    {
        "id": 39,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bcd8b07c7bf7c36624e5dee",
                "text": "Is there is any spring boot starter for weblogic server",
                "time": "2018-10-22 08:32:07",
                "index": 0,
                "user": "ssnarvariya"
            },
            {
                "id": "5bcda3921c100a4f29c5d2ae",
                "text": "@ssnarvariya No, there isn't. The Weblogic Liberty team is trying something different (https://www.ibm.com/support/knowledgecenter/en/was_beta_liberty/com.ibm.websphere.wlp.nd.multiplatform.doc/ae/rwlp_springboot.html) - the Spring Boot team does not particularly endorses this deployment mode. ",
                "time": "2018-10-22 10:16:50",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5bcdae18c08b8b306753afae",
                "text": "@bclozel  ok, so can we create customer starter for web logic?",
                "time": "2018-10-22 11:01:44",
                "index": 12,
                "user": "ssnarvariya"
            },
            {
                "id": "5bcdae3364cfc273f9079f18",
                "text": "@bclozel  custom boot starter",
                "time": "2018-10-22 11:02:11",
                "index": 13,
                "user": "ssnarvariya"
            },
            {
                "id": "5bcdc623c08b8b3067544b5c",
                "text": "@ssnarvariya creating a starter is easy, it's just about adding dependencies to a pom. The real problem is adding auto-configuration support for weblogic as an embedded server. I'm not sure this is fully supported+advertised by the weblogic team for spring boot applications. Maybe the Weblogic team would be willing to create and support it officially.",
                "time": "2018-10-22 12:44:19",
                "index": 16,
                "user": "bclozel"
            },
            {
                "id": "5bcdc9f0c08b8b3067546b45",
                "text": "@bclozel  thanks ",
                "time": "2018-10-22 13:00:32",
                "index": 18,
                "user": "ssnarvariya"
            }
        ]
    },
    {
        "id": 40,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e33ef42dc52c34ace35c87e",
                "text": "@snicoll  hello I ve got a problem after migrating from 2.1.9 to 2.2.2 Restemplate.exchange with application/json heder by default set charset to ISO-8859-1 and all my cyrillic letter goes to non readable questions mark? I deep into abstractHtmlMessageconverter class where setdefaultCharset is get and cannot find who set this standart? Even when I try to use deprecated mimetype with charset utf-8 they still used another ",
                "time": "2020-01-31 09:11:30",
                "index": 0,
                "user": "fac30ff"
            },
            {
                "id": "5e33fbf91594133558465e6d",
                "text": "@fac30ff I believe this is a bug in Spring Framework 5.2.2 (Spring Boot 2.2.2 depends on it). See https://github.com/spring-projects/spring-framework/issues/24123\nUpgrading to Spring Boot 2.2.3 or later should fix it!",
                "time": "2020-01-31 10:05:45",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5e387601159413355853cf8c",
                "text": "@fac30ff @bclozel I experience a similar issue with charsets even though I'm on boot version 2.2.4. Have an example project here https://github.com/dawiking/contracttest which runs into problem if not `application/json;charset=UTF-8` is specified as produces in the controller.",
                "time": "2020-02-03 19:35:29",
                "index": 35,
                "user": "dawiking"
            }
        ]
    },
    {
        "id": 41,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d07e285e527d95addef06d9",
                "text": "how to mimic binder without springboot ?",
                "time": "2019-06-17 18:57:09",
                "index": 0,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d07e295faf70031f92f6e48",
                "text": "Can this be done with springframework only ?",
                "time": "2019-06-17 18:57:25",
                "index": 1,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d07eea82313502d385dabc6",
                "text": "@rajjaiswalsaumya this is how i've done it\n``` \nBinder.get(environment)\n                .bind(\"inferno.subscriber\", SubscriberProperties.class)\n                .ifBound(properties -> properties.getRegistration()\n``` \nrefer to this post [Binder](https://stackoverflow.com/questions/53851533/access-properties-in-beanfactorypostprocessor/53856612#53856612) of @wilkinsona \n\n",
                "time": "2019-06-17 19:48:56",
                "index": 4,
                "user": "jselamy"
            },
            {
                "id": "5d07eec5f5cf1f10bc8cd3f4",
                "text": "@jselamy, that's SB-specific code - he wants to do it without SB",
                "time": "2019-06-17 19:49:25",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5d07ef47f5cf1f10bc8cd93b",
                "text": "@tonisostrat Oh my bad! I didn't see that",
                "time": "2019-06-17 19:51:35",
                "index": 6,
                "user": "jselamy"
            },
            {
                "id": "5d0a660cbb789747fb40ff13",
                "text": "@jselamy Thanks buddy, but this is all boot. I was trying to get to where I can do this with Spring only. Sorry i dont have boot in my classpath. Again, I have to ask this here as Spring framework doesnot have a gitter room and I believe now Spring boot drives most of Spring things so people must be already aware of how to do this with Spring.",
                "time": "2019-06-19 16:42:52",
                "index": 72,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d0a6731325b465cc367402c",
                "text": "I was wondering if @Value annotation can do exact same thing to bind my hashmap ",
                "time": "2019-06-19 16:47:45",
                "index": 73,
                "user": "rajjaiswalsaumya"
            }
        ]
    },
    {
        "id": 42,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b98d407e481f854a6a7e668",
                "text": "Hi guys, i'm developing a web application with spring boot and mongoDB, can you tell me how can I set the password of mongoDB in application.properties? ",
                "time": "2018-09-12 08:53:27",
                "index": 0,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b98d420550f8808f599fca2",
                "text": "now, my application.properties in like this :",
                "time": "2018-09-12 08:53:52",
                "index": 1,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b98d430550f8808f599fd59",
                "text": "spring.data.mongodb.host=localhost\nspring.data.mongodb.port=27017\nspring.data.mongodb.database=test",
                "time": "2018-09-12 08:54:08",
                "index": 2,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b98d4681e2b442a25fdbeb3",
                "text": "@ninja_java_twitter  you can find it here https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html",
                "time": "2018-09-12 08:55:04",
                "index": 3,
                "user": "marcosbarbero"
            },
            {
                "id": "5b98d469a04db554a713a3a5",
                "text": "but how can I add the password here?  as I know the password of mongoDB is a array of characters",
                "time": "2018-09-12 08:55:05",
                "index": 4,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b98d59e33ebb72e37069273",
                "text": "@marcosbarbero  thank you,  but when i write a password like  mypass1 as the value of spring.data.mongodb.password, it does not work",
                "time": "2018-09-12 09:00:14",
                "index": 5,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b98d5d01e2b442a25fdc792",
                "text": "the password of mongoDB is an array of character, so how can I configure it as an value of spring.data.mongodb.password in application.proprties?",
                "time": "2018-09-12 09:01:04",
                "index": 6,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b98f7030fb4232e38b196da",
                "text": "@ninja_java_twitter i think u can seperate with commahttps://stackoverflow.com/questions/6212898/spring-properties-file-get-element-as-an-array",
                "time": "2018-09-12 11:22:43",
                "index": 10,
                "user": "kapeel45"
            }
        ]
    },
    {
        "id": 43,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ca75130a0790b29c966f7dc",
                "text": "Hi, I have a question related to JMX and Spring-Boot. Some infinispan users do need to activate JMX with client/server infinispan. When they do so, they get a MBean registration exception InstanceAlreadyExistsException,  because Infinispan registers a bean and spring (spring-boot?) auto-registers jmx beans. The way they have solved the issue right now is using the `spring.jmx.enabled=false`. I'm wondering if there is a way to just disable infinispan bean registration because I'm thinking (maybe overthinking) about the situation where an app uses jmx with infinispan , disabling that on spring will force the app to register all the MBeans by themselfs ? ",
                "time": "2019-04-05 12:59:28",
                "index": 0,
                "user": "karesti"
            },
            {
                "id": "5ca77e610aad63501932d0db",
                "text": "@karesti That sounds like a bug. If Boot's auto-configured an Infinispan-related bean, it should also set a flag so that it's not exported to JMX twice. We do that in a few places already. Here's one example: https://github.com/spring-projects/spring-boot/blob/8626a33bbb85911806258c76d5cca8394427d43b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceJmxConfiguration.java#L69-L72. Could you please open an issue with a small sample that reproduces the problem?",
                "time": "2019-04-05 16:12:17",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5caa5f09bd70a40d5f110395",
                "text": "@wilkinsona Thanks! I'm using the infinispan spring-boot starter. Here is the issue with a link of the reproducer https://github.com/spring-projects/spring-boot/issues/16482",
                "time": "2019-04-07 20:35:21",
                "index": 34,
                "user": "karesti"
            },
            {
                "id": "5cab0566c55bd14d35ab0cfe",
                "text": "@snicoll thanks for the help on the JMX issue! As you suggest, the best IMO will be to handle this problem in the Spring-Boot Infinispan starter. I'm totally aligned to what you say,  it is super weird to disable jmx on spring to have a jmx bean registered! Currently this is a hack now, but needs to be fixed in another way. The code in the PR looks like a good starting point already. Merci mille!!",
                "time": "2019-04-08 08:25:10",
                "index": 53,
                "user": "karesti"
            },
            {
                "id": "5cab819e25686a7dc3f89892",
                "text": "@karesti you\u2019re welcome :) ",
                "time": "2019-04-08 17:15:10",
                "index": 98,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 44,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dc2f701e1c5e9150844a29c",
                "text": "Hello Room, I'm trying to achieve a : Parent -> N children relation with Spring Boot and I'm having a hard time setting it up. I have the following code from the parent module :\n```\n    public static void main(String[] args) {\n    \tnew SpringApplicationBuilder()\n    \t\t.parent(WSRParentContext.class).web(WebApplicationType.NONE)\n    \t\t.child(com.tx.child1.SpringConfig.class).web(WebApplicationType.SERVLET)\n    \t\t.sibling(com.tx.child2.SpringConfig.class).web(WebApplicationType.SERVLET)\n    \t\t.run(args);\n\t}\n```\nChild 1 and Child 2 are in different modules (completely different jars, standalone and not dependent) included both in the parent, my problems are the following :\n1 - Even if I limit the @componentScan to the child 1 packages, it will try to scan the Child 2 packages as well\n2 - I was expecting 2 different contexts (one for every child), in which, each child will (independently) load his beans and not getting mixed with the other child beans, but this is not happening (seems like everything is loaded in the same context, as it complains about the same bean names)\n3 - The property file from child 1 is being overwritten by the properties file of the child 2.\n\nHere's how a springConfig.class of the child 1 (child 2 has the same) look like :\n```\n@EnableAutoConfiguration(exclude = {MongoAutoConfiguration.class, MongoDataAutoConfiguration.class})\n@EnableAspectJAutoProxy(proxyTargetClass = true)\n@ComponentScan(basePackages = \"com.tx.child1\")\npublic class SpringConfig { }\n```\n\nAny ideas on what am I doing wrong ? Thank you",
                "time": "2019-11-06 16:38:25",
                "index": 0,
                "user": "ailes17"
            },
            {
                "id": "5dc2f8503d669b28a047a4c4",
                "text": "@ailes17\n\n1. There could be a few reasons for that. It's hard to diagnose without seeing more of your code and everywhere that `@ComponentScan` or `@SpringBootApplication` are used\n2. You should get three contexts. One for the parent and one for each of the children\n3. I assume you're talking about `application.properties`. By default it's discovered via the classpath and, as with class loading, the first one on the classpath will win. If the jars for both children contain an `application.properties` file, only one of them will be used.",
                "time": "2019-11-06 16:44:00",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dc2f9a6196ffb4db919e4b5",
                "text": "Yes, but it's not doing this, and the beans are all mixed up, I'm not using @SpringBootApplication at all, all what I use is above, no more tags or componentScan here, child 2 has the following config:\n```\n@EnableAutoConfiguration(exclude = {MongoAutoConfiguration.class, MongoDataAutoConfiguration.class})\n@EnableAspectJAutoProxy(proxyTargetClass = true)\n@ComponentScan(basePackages = \"com.tx.child2\")\npublic class SpringConfig { }\n ```\nAnd the parent config look like:\n ```\n@ComponentScan(basePackages = \"com.tx.parent\")\npublic class WSRParentContext { }\n ```\nNothing else, and this seems not working, do you know if there is a complete example of what I'm trying to achieve somewhere ? I could find children creation in the same module, but nothing in 2 completely different jars\n",
                "time": "2019-11-06 16:49:42",
                "index": 3,
                "user": "ailes17"
            },
            {
                "id": "5dc2fa689825bd6bac3a0173",
                "text": "I don't think that can be all that's involved as Framework won't scan packages that it hasn't been told to scan. Something must be telling it about a package that you don't expect. The fact that the code is in different jars shouldn't make any difference. It's all just stuff on the classpath at runtime.",
                "time": "2019-11-06 16:52:56",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5dc2fa8bfb4dab784a75e80c",
                "text": "If you can share a complete example that reproduces the problem you're seeing, I'm happy to take a look",
                "time": "2019-11-06 16:53:31",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5dc2fb6efb4dab784a75ee87",
                "text": "Alright, Let me create a simplified one and post it here, thank you for your help\n",
                "time": "2019-11-06 16:57:18",
                "index": 6,
                "user": "ailes17"
            },
            {
                "id": "5dc33ac4a3f0b17849fca1d4",
                "text": "@wilkinsona Hi Andy, here's my follow-up, I pushed a simple parent-child code here : https://github.com/ailes17/springboot\nYou can build from the root and run the jar created in the parent app-boot-parent : `java -jar target/app-boot-parent-0.0.1-SNAPSHOT-spring-boot.jar`\nIt fails at startup, as the parent tries to load the first child beans (for some reason), but since the properties weren't injected yet (it will be injected at the child level), it's failing. Can you please review it to see if I'm doing it correctly ? Thank you.",
                "time": "2019-11-06 21:27:32",
                "index": 14,
                "user": "ailes17"
            },
            {
                "id": "5dc3c58ba03ae1584f814993",
                "text": "@ailes17 Thanks. I'll have a look later this morning",
                "time": "2019-11-07 07:19:39",
                "index": 20,
                "user": "wilkinsona"
            },
            {
                "id": "5dc3ed5110bd4128a1d627de",
                "text": "@ailes17 Your sample is using `WSRChild2Context` to create the parent. With that corrected, the children then fail to start as their `server.port` properties aren't available. This is because you haven't told them about their custom config file names. Here's a modified version of the main method that fixes things and adds some system.out calls to that you can see when things are happening:\n\n```\n    \tSpringApplicationBuilder parent = new SpringApplicationBuilder()\n    \t\t.parent(WSRParentContext.class).web(WebApplicationType.NONE);\n    \tparent.run(args);\n    \tSystem.out.println(\"Parent running\");\n\t\tSpringApplicationBuilder child1 = parent\n    \t\t.child(WSRChild1Context.class).web(WebApplicationType.SERVLET).properties(\"spring.config.name=application-child1\");\n\t\tchild1.run(args);\n\t\tSystem.out.println(\"Child 1 running\");\n\t\tSpringApplicationBuilder child2 = child1\n    \t\t.sibling(WSRChild2Context.class).web(WebApplicationType.SERVLET).properties(\"spring.config.name=application-child2\");\n\t\tchild2.run(args);\n\t\tSystem.out.println(\"Child 2 running\");\n```",
                "time": "2019-11-07 10:09:21",
                "index": 22,
                "user": "wilkinsona"
            },
            {
                "id": "5dc3edbba3f0b178490175af",
                "text": "And here's the equivalent code without separating things out:\n\n```\n    \tnew SpringApplicationBuilder()\n    \t\t.parent(WSRParentContext.class).web(WebApplicationType.NONE)\n    \t\t.child(WSRChild1Context.class).web(WebApplicationType.SERVLET).properties(\"spring.config.name=application-child1\")\n    \t\t.sibling(WSRChild2Context.class).web(WebApplicationType.SERVLET).properties(\"spring.config.name=application-child2\")\n    \t\t.run(args);\n```",
                "time": "2019-11-07 10:11:07",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5dc43c5510bd4128a1d8687c",
                "text": "@wilkinsona Thank you Andy, that was on oversight on my end as I was rushing it a little bit (I fixed it).\nI see that you're injecting the configuration file at the parent, is it possible to do it at the child level itself ? as I'm doing here : https://github.com/ailes17/springboot\nEvery child is supposed to load his properties independently and not have them mixed, but somehow, child 2 is getting the properties from child 1, even if they are in different contexts (see the server port below, it's still pointing on 8081 for child 2 even if in the properties it set to 8082) :\n\n",
                "time": "2019-11-07 15:46:29",
                "index": 55,
                "user": "ailes17"
            },
            {
                "id": "5dc43c59196ffb4db9230f6d",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/OoHp/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/OoHp/image.png)",
                "time": "2019-11-07 15:46:33",
                "index": 56,
                "user": "ailes17"
            },
            {
                "id": "5dc43e95e886fb5aa26e5b15",
                "text": "@wilkinsona , Here's the weirdest part that I'm not able to understand, even if I remove the child1 from the loading process : \n```\npublic static void main(String[] args) {\n    \tnew SpringApplicationBuilder()\n    \t\t.parent(WSRParentContext.class).web(WebApplicationType.NONE)\n    \t\t//.child(WSRChild1Context.class).web(WebApplicationType.SERVLET)\n    \t\t.child(WSRChild2Context.class).web(WebApplicationType.SERVLET)\n    \t\t.run(args);\n\t}\n```\nChild 2 still loads child 1 configuration :\n ",
                "time": "2019-11-07 15:56:05",
                "index": 57,
                "user": "ailes17"
            },
            {
                "id": "5dc43eafe886fb5aa26e5b42",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/FHZi/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/FHZi/image.png)",
                "time": "2019-11-07 15:56:31",
                "index": 58,
                "user": "ailes17"
            },
            {
                "id": "5dc445419c39821509fd9c61",
                "text": "@ailes17 I'm not injecting the properties at the parent. For each child, I'm configuring them to look for their own .properties file. Without that, they don't load any properties at all for me.",
                "time": "2019-11-07 16:24:33",
                "index": 59,
                "user": "wilkinsona"
            },
            {
                "id": "5dc44d469825bd6bac438779",
                "text": "@wilkinsona , they do by the following code (based on the profile):\n```\n@Profile({\"default\"})\n    @Bean\n    public static PropertySourcesPlaceholderConfigurer localPropertyConfigurer() throws IOException {\n        final PropertySourcesPlaceholderConfigurer  props = new PropertySourcesPlaceholderConfigurer ();\n        props.setLocations(new ClassPathResource(\"application.properties\"));\n        return props;\n    }\n```\nI put a breakpoint there and it's called at every child initialization (in its own files).\nBut somehow, the second child will always get the properties of the first child, even if this one is not loaded at all, is there any logical explanation for that ? or maybe this is not the proper way to do it ? (I like using @profile to have some flexibility on the configuration)",
                "time": "2019-11-07 16:58:46",
                "index": 60,
                "user": "ailes17"
            },
            {
                "id": "5dc44d4de469ef4358ddddf1",
                "text": "@ailes17 I've just looked at your minor fixes commit and see what you mean now. The problem is your use of classpath resources and having multiple files named `application.properties`. One of those will win so both children will use whichever child's `application.properties` file comes first on the classpath. IIRC, we talked about this yesterday. You could fix your problem by using a less generic name for each child's configuration file so that they won't clash.",
                "time": "2019-11-07 16:58:53",
                "index": 61,
                "user": "wilkinsona"
            },
            {
                "id": "5dc45d29e886fb5aa26f5131",
                "text": "@wilkinsona, Thank you Andy, that's what I wanted to know. I was just under the impression that the classpathResource, loaded from child 1, will only have access to the child level and not globally as the context is limited there to child1 only ...",
                "time": "2019-11-07 18:06:33",
                "index": 66,
                "user": "ailes17"
            },
            {
                "id": "5dc46af5e1c5e915084f6e1d",
                "text": "@ailes17 The scope is the class loader and you're using the same class loader to load the parent and both of the children",
                "time": "2019-11-07 19:05:25",
                "index": 67,
                "user": "wilkinsona"
            },
            {
                "id": "5dc485f2fb4dab784a810288",
                "text": "@wilkinsona , So what's the recommended way ? is it fine with different property file names ? or should I try to get the ClassLoader of the Child only ?\nOn a different subject now, I see that every child is starting a Tomcat Service with a different port, was wondering if it's possible to use the same instance (on the same port: `localhost:8080/ctx1` && `localhost:8080/ctx2`) ?  Thank you.",
                "time": "2019-11-07 21:00:34",
                "index": 70,
                "user": "ailes17"
            },
            {
                "id": "5dc533a168ad1c4a0f8b8e81",
                "text": "@ailes17 Yes it's fine. I'd recommend using different file names rather than messing around with separate class loaders. If you want a single web server then use a single application context rather than one per-child. You could separate things out with multiple dispatcher servlets but that starts to get quite complicated. Without knowing what you're trying to achieve, I can see if that complexity is worth it.",
                "time": "2019-11-08 09:21:37",
                "index": 80,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 45,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bf40a19f9993b42673c0e86",
                "text": "isEmpty of WebTestClient.BodySpec returns false on a Mono.empty(), this seems illogical to me. I can see it expects responsebody to be null rather than a MonoProcessor with byte[0] as value. Am I completely wrong here?",
                "time": "2018-11-20 13:20:25",
                "index": 0,
                "user": "mowol"
            },
            {
                "id": "5bf40a831ad4155d3af4175a",
                "text": "If the method was called isNull i could agree. But empty is many things",
                "time": "2018-11-20 13:22:11",
                "index": 1,
                "user": "mowol"
            },
            {
                "id": "5bf40b63ddad8777ef9310ca",
                "text": "I mean getBodyAsString even returns \"\" if body is null as opposed to returning a null object",
                "time": "2018-11-20 13:25:55",
                "index": 2,
                "user": "mowol"
            },
            {
                "id": "5bf415375f5c925040894e90",
                "text": "@mowol That sounds like a bug to me, but it's in Spring Framework rather than Spring Boot. I'd expect a `byte[0]` or `null` to result in `isEmpty` being `true`. You may want to open an issue here: https://jira.spring.io/browse/SPR",
                "time": "2018-11-20 14:07:51",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bf4155f6183a977eee8583e",
                "text": "@wilkinsona Thank you. I was looking for issues on github but found nothing",
                "time": "2018-11-20 14:08:31",
                "index": 5,
                "user": "mowol"
            }
        ]
    },
    {
        "id": 46,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ea5afb8a634f42f7a0478a7",
                "text": "Hi, I'm create a RESTful API and on the client  side (localhost)  I'm getting HTTP 503, how do you troubleshoot this issue? Any help is greatly appreciated.",
                "time": "2020-04-26 15:58:48",
                "index": 0,
                "user": "Josebuendia"
            },
            {
                "id": "5ea5ea05501f8f72a5076257",
                "text": "@Josebuendia Do you have any code? What's your service trying to do?",
                "time": "2020-04-26 20:07:33",
                "index": 7,
                "user": "pnewhook"
            },
            {
                "id": "5ea5ea663c03d320626cb7df",
                "text": "I have a lot of code, maybe too much to put in a gist, I could zip  it. I'm trying to make a banking RESTful API. @pnewhook ",
                "time": "2020-04-26 20:09:10",
                "index": 8,
                "user": "Josebuendia"
            }
        ]
    },
    {
        "id": 47,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5be99657fee6703aaf5c4ef5",
                "text": "im trying to convert a spring boot project from java 1.8 to 11, but i get this error:\n> Caused by: java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlType\n\nAny idea?",
                "time": "2018-11-12 15:03:51",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5be997db7326df140ef495b2",
                "text": "@ofabricio There's some advice on the wiki about using Java 9+: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-with-Java-9-and-above",
                "time": "2018-11-12 15:10:19",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5be998e33102f145218db58b",
                "text": "Thanks! shouldn`t the spring boot add the jabx depedence ?",
                "time": "2018-11-12 15:14:43",
                "index": 2,
                "user": "ofabricio"
            },
            {
                "id": "5be99917f1b8753404b51c1a",
                "text": "When do in some places where we know it's needed, but we can't know about all of them.",
                "time": "2018-11-12 15:15:35",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5be999c692b7d1172179a1e0",
                "text": "i see",
                "time": "2018-11-12 15:18:30",
                "index": 4,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 48,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c47b6820a491251e33cc071",
                "text": "Is there a way to send a JSON Object to a spring controller without having to model the JSON using a domain. e.g., in grails if I post an object to an endpoint I can access the object's properties by doing `JSONElement json = request.getJSON()` followed by `json.userpass`  but if I wanted to access to send data and access a data I have to model that json object as a domain object...",
                "time": "2019-01-23 00:34:10",
                "index": 0,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5c47b69fba355012a480a9ec",
                "text": "`@RequestBody Person person for example...`",
                "time": "2019-01-23 00:34:39",
                "index": 1,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5c47b6c19bfa375aab44a55e",
                "text": "But how about if I had a lot data to send not to an endpoint, not relating to the Person object",
                "time": "2019-01-23 00:35:13",
                "index": 2,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5c47ce1d35350772cf74a616",
                "text": "@EmmanuelAdeleke  you could receive the request as String and parse it using your preferred parser (jackson, gson)",
                "time": "2019-01-23 02:14:53",
                "index": 3,
                "user": "jonhkr"
            },
            {
                "id": "5c47ce498318994524325f26",
                "text": "Alternatively, I believe it is possible to receive the data as ObjectNode (jackson) in the request",
                "time": "2019-01-23 02:15:37",
                "index": 4,
                "user": "jonhkr"
            }
        ]
    },
    {
        "id": 49,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e270021342e1054d05af26d",
                "text": "Hello everyone , I have a question : Spring data Mongodb how to find the last element inserted !",
                "time": "2020-01-21 13:44:01",
                "index": 0,
                "user": "Rebaiahmed"
            },
            {
                "id": "5e27048a42ae383fa9604db2",
                "text": "@Rebaiahmed there is a #spring-data channel for questions like that. I believe this SO answer should help you: https://stackoverflow.com/questions/4421207/how-to-get-the-last-n-records-in-mongodb",
                "time": "2020-01-21 14:02:50",
                "index": 1,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 50,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e35f0ba6f9d3d3498161283",
                "text": "We use AutoConfiguration's primarily for \"all\" beans.  There is no component scanning and each bean is explicitly configured in the autoconfig.  In a lot of cases we are just constructing that bean as-is (no special logic, no conditionals, etc.).  Is it acceptable to use the @Import to import those beans in on the autoconfiguration?  And, if i recall having @Import on a @Configuration with conditions, the imports took precedence before any conditional logic was applied - is that still the case or if I have @ConditionalOnBean and @Import the conditional gets processed and the imports get pulled in if it meets the criteria?",
                "time": "2020-02-01 21:42:18",
                "index": 0,
                "user": "kjq"
            },
            {
                "id": "5e36b9ede8a83835590f4cc5",
                "text": "@kjq If a class is annotated with conditions and `@Import`, the import will only take effect if the conditions match.",
                "time": "2020-02-02 12:00:45",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5e36e2c4e8a83835590fa98d",
                "text": "@wilkinsona thanks.  I could of sworn that did not work for me but ill give it a whirl.",
                "time": "2020-02-02 14:55:00",
                "index": 2,
                "user": "kjq"
            }
        ]
    },
    {
        "id": 51,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d0add3d6f0ec85ade4a3dc2",
                "text": "I am running into a scenario where I have a bean of `java.sql.DataSource` provided from application auto configuration.  Application classpath has HikariCP library present that kicks in the autoconfiguration from `org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.Hikari` \n\nI was under impression that `\t@ConditionalOnMissingBean(DataSource.class)` on top of the Hikari auto configuration is going to instruct it to back-off. \n\nUpon debugging it further I found `org.springframework.boot.autoconfigure.condition.OnBeanCondition#getMatchOutcome` results into `true` outcome and the auto configuration from user space was never executed. \n\nIn the condition analysis report. It shows the application bean under positive match and the Hikari datasource under positive match too\n\n",
                "time": "2019-06-20 01:11:25",
                "index": 0,
                "user": "javaman20"
            },
            {
                "id": "5d0add464e8f972d375d3af5",
                "text": "I am working on creating a minimal example to reproduce it.",
                "time": "2019-06-20 01:11:34",
                "index": 1,
                "user": "javaman20"
            },
            {
                "id": "5d0add51a8d9871b32c9d843",
                "text": "Any further pointer to debug it before I report it as a bug?",
                "time": "2019-06-20 01:11:45",
                "index": 2,
                "user": "javaman20"
            },
            {
                "id": "5d0add6a4e8f972d375d3c81",
                "text": "@snicoll @wilkinsona ",
                "time": "2019-06-20 01:12:10",
                "index": 3,
                "user": "javaman20"
            },
            {
                "id": "5d0b2930bc834f76a4a85894",
                "text": "@javaman20 Sounds like an auto-configuration ordering problem. Have you configured your own auto-configuration such that it will run before Boot's `DataSourceAutoConfiguration` using `@AutoConfigureBefore`?",
                "time": "2019-06-20 06:35:28",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5d0b2fcad1aaa16964d270be",
                "text": "@javaman20 \"provided from application auto configuration\u201d does not sound very legit. Do you mean custom auto-configuration? Is it ordered to run before ours?",
                "time": "2019-06-20 07:03:38",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5d0be47c007cff7a82e775be",
                "text": "@snicoll @wilkinsona Yes it was ordering issue.  Is it possible/considered before to always process autoconfigurations coming from org.springframework.* package name space after any other by default?",
                "time": "2019-06-20 19:54:36",
                "index": 33,
                "user": "javaman20"
            },
            {
                "id": "5d0be7c9bc834f76a4aefe5e",
                "text": "@javaman20 No. The default ordering is deterministic and changing the ordering may break existing auto-configurations. That said, you really shouldn't rely on the default ordering and should use `@AutoConfigureBefore` and `@AutoConfigureAfter` to achieve the ordering that you need.",
                "time": "2019-06-20 20:08:41",
                "index": 37,
                "user": "wilkinsona"
            },
            {
                "id": "5d0bec27e7267a62a90e8dd4",
                "text": "@wilkinsona ack. Thank you",
                "time": "2019-06-20 20:27:19",
                "index": 38,
                "user": "javaman20"
            }
        ]
    },
    {
        "id": 52,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c9b38958126720abc4ef74b",
                "text": "i am bit confused on realtime data change..\ni am creating a demo on spring flux and rxjava2-jdbc (mysql database), now what i am thinking of  realtime data change on mysql database.\nwhen user request to server via browser i will give it response in stream \n``` \n@GetMapping(value = \"/employes\", produces = MediaType.TEXT_EVENT_STREAM_VALUE)\n    public Flux<String> getAll() {\n       return employeeRepository.findAll().delayElements(Duration.ofMillis(5000));\n    }\n```\nbut when i add new record on mysql table (employee) that record will not be shown on browser (as i am thinking of realtime data change on client and server ) can any one makes me understand or clear my confusion thanks.",
                "time": "2019-03-27 08:47:17",
                "index": 0,
                "user": "iammohsinar"
            },
            {
                "id": "5c9b4101e7341060caed3ea4",
                "text": "@iammohsinar is MySQL and the driver you're using supporting that feature? I'm aware of some datastores supporting this, like mongodb but it's not universal. https://docs.spring.io/spring-data/mongodb/docs/2.1.5.RELEASE/reference/html/#tailable-cursors",
                "time": "2019-03-27 09:23:13",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5c9b4277cf786a56c786a781",
                "text": "As far as I understand, your code snippet is doing a \"SELECT *\" on that table and streaming the data (but not keeping the cursor opened) ",
                "time": "2019-03-27 09:29:27",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5c9b43cc81b15c5e4b93efae",
                "text": "@bclozel  yes, i am using `select`, how do i keep opened cursor ( of mysql connection ) ?",
                "time": "2019-03-27 09:35:08",
                "index": 4,
                "user": "iammohsinar"
            },
            {
                "id": "5c9b444f6a3d2e230d31a8a7",
                "text": "@iammohsinar I don't know.",
                "time": "2019-03-27 09:37:19",
                "index": 6,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 53,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf41fc61665691e0fd32de9",
                "text": "Hey there !",
                "time": "2018-11-20 14:52:54",
                "index": 0,
                "user": "meveno"
            },
            {
                "id": "5bf4201d4f4bb579f3a6fc8e",
                "text": "We're working with RestTemplate class and we're wondering how to control date path param in our url in the entire application. Does anybody have a way to do that ?",
                "time": "2018-11-20 14:54:21",
                "index": 1,
                "user": "meveno"
            },
            {
                "id": "5bf42062f9993b42673cad9f",
                "text": "Our purpose is to avoid each service client to define the way to marshall date path param but to handle it once for all in the app",
                "time": "2018-11-20 14:55:30",
                "index": 2,
                "user": "meveno"
            },
            {
                "id": "5bf4239980652945c390a72f",
                "text": "@meveno In `RestTemplate`, the expansion of variables in the URI is done by a `UriTemplateBuilder`. In a Spring Boot context, you could add  a `RestTemplateBuilder` bean to the context configured with a `UriTemplateBuilder` that treated the date in the required way. You'd then require  everywhere in your app that needs a `RestTemplate` to inject the builder and use it to create the template.",
                "time": "2018-11-20 15:09:13",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bf42887ddad8777ef93dbf8",
                "text": "@wilkinsona Thanks, I'll have a look at that",
                "time": "2018-11-20 15:30:15",
                "index": 21,
                "user": "meveno"
            }
        ]
    },
    {
        "id": 54,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ea345582bf9ef1269a0d0d0",
                "text": "hey everyone, I've just updated to spring-boot from `2.2.5.RELEASE` to `2.2.6.RELEASE` and now when I run my tests I get this:\n```\nCaused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'guestLoginValidator' for bean class [com.samplepackage.storefront.validator.GuestLoginValidator] conflicts with existing, non-compatible bean definition of same name and class [com.samplepackage.storefront.validator.GuestLoginValidator]\n\tat org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)\n\tat org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)\n```\nThe `GuestLoginValidator` has `@Component` annotation and I have also added `@ComponentScan(basePackages = { \"com.samplepackage\" })` on my test configuration. ",
                "time": "2020-04-24 20:00:24",
                "index": 0,
                "user": "ptahchiev"
            },
            {
                "id": "5ea3456b61a0002f7948c011",
                "text": "I believe this is caused by this https://github.com/spring-projects/spring-boot/commit/ee7555750ebb8e7b53ba2051ff525f3112f830a3",
                "time": "2020-04-24 20:00:43",
                "index": 1,
                "user": "ptahchiev"
            },
            {
                "id": "5ea34570a634f42f7aff05c8",
                "text": "I just don't know how ...",
                "time": "2020-04-24 20:00:48",
                "index": 2,
                "user": "ptahchiev"
            },
            {
                "id": "5ea3dcd8a634f42f7a00480b",
                "text": "I don\u2019t think this is caused by that, it\u2019s just offering an option that has no configuration by default",
                "time": "2020-04-25 06:46:48",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ea3dce494ac2758e3085ce9",
                "text": "Are you sure that you only changed the Spring Boot version and nothing else?",
                "time": "2020-04-25 06:47:00",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5ea3dd0df6a6e5397975eca9",
                "text": "The error message looks a bit odd",
                "time": "2020-04-25 06:47:41",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ea3f00894ac2758e30887d2",
                "text": "yes, I just updated the spring-bom version ... i'll work on a sample project from start.spring.io",
                "time": "2020-04-25 08:08:40",
                "index": 6,
                "user": "ptahchiev"
            },
            {
                "id": "5ea400341e3d5e2063427c64",
                "text": "I have some progress... so what happens is that the classpath scanner detects my test configuration (which has `@ComponentScan` annotation) and that adds the `guestLoginValidator` bean, but it also picks up the `DemoApplication` (the class with the main method). So it does classpath scanning for the DemoApplication again",
                "time": "2020-04-25 09:17:40",
                "index": 7,
                "user": "ptahchiev"
            },
            {
                "id": "5ea4008e501f8f72a502eff4",
                "text": "so the `ComponentScanAnnotationParser` performs the scan, and finds the `guestLoginValidator` again and then calls the `isCompatible` method here:",
                "time": "2020-04-25 09:19:10",
                "index": 8,
                "user": "ptahchiev"
            },
            {
                "id": "5ea4008fe5ed621d4ddcbaef",
                "text": "https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.java#L364",
                "time": "2020-04-25 09:19:11",
                "index": 9,
                "user": "ptahchiev"
            },
            {
                "id": "5ea400f2a634f42f7a00986b",
                "text": "and this is where situation diverges - 1) in the demo app `newDefinition.getSource()` is not null and is the same as `existingDefinition.getSource()` so the `isCompatible` returns true 2) while in my application both `newDefinition.getSource()` and `existingDefinition.getSource()` are `null` so the method returns false",
                "time": "2020-04-25 09:20:50",
                "index": 10,
                "user": "ptahchiev"
            },
            {
                "id": "5ea400f89a04a259f2301712",
                "text": "will keep on debugging",
                "time": "2020-04-25 09:20:56",
                "index": 11,
                "user": "ptahchiev"
            },
            {
                "id": "5ea47f3aafa1f51d4e1db6af",
                "text": "@ptahchiev maybe removing the @Configuration annotation? Just load it Cia @classes of the spring boot test",
                "time": "2020-04-25 18:19:38",
                "index": 12,
                "user": "davebarda"
            },
            {
                "id": "5ea47f525d245d59f319ba9b",
                "text": "Via classes*",
                "time": "2020-04-25 18:20:02",
                "index": 13,
                "user": "davebarda"
            },
            {
                "id": "5ea555ac61a0002f794d4017",
                "text": "I got some more progress... like I said the beans are scanned twice. One of the `ScannedGenericBeanDefinition` has these attributes:\n```\norg.springframework.context.annotation.ConfigurationClassPostProcessor.configurationClass -> {BeanMetadataAttribute@5781} \"metadata attribute 'org.springframework.context.annotation.ConfigurationClassPostProcessor.configurationClass'\"\n```\nwhile the other does not have them.. so spring thinks they are different",
                "time": "2020-04-26 09:34:36",
                "index": 17,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55bc361a0002f794d4fe8",
                "text": "HA!",
                "time": "2020-04-26 10:00:35",
                "index": 18,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55bcf9a04a259f2332f1d",
                "text": "I was able to reproduce it with a sample project from start.spring.io :D",
                "time": "2020-04-26 10:00:47",
                "index": 19,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55c579a04a259f2332fd5",
                "text": "@snicoll do you think you can have a look: https://github.com/ptahchiev/conflicting-bean",
                "time": "2020-04-26 10:03:03",
                "index": 20,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55c66568e5258e485c88a",
                "text": "fails with 2.2.6, works fine with 2.2.5",
                "time": "2020-04-26 10:03:18",
                "index": 21,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55c9211ffed126836601b",
                "text": "if you rename the bean `ABean` to `DemoBean` then it also works fine - I think the component scan finds candidates sorted by beanName",
                "time": "2020-04-26 10:04:02",
                "index": 22,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55ca961a0002f794d5251",
                "text": "so if `ABean` comes before `DemoApplication`  then it will fail",
                "time": "2020-04-26 10:04:25",
                "index": 23,
                "user": "ptahchiev"
            },
            {
                "id": "5ea55cbff6a6e53979795797",
                "text": "if  I name it `DemoBean` then it will come after `DemoApplication`",
                "time": "2020-04-26 10:04:47",
                "index": 24,
                "user": "ptahchiev"
            },
            {
                "id": "5ea58a365d245d59f31bf45d",
                "text": "you need all those dependencies to reproduces a component scan problem?",
                "time": "2020-04-26 13:18:46",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5ea58a61f6a6e5397979c5d4",
                "text": "It looks like a framework issue to me. I would try first with `2.2.7.BUILD-SNAPSHOT` to see if that wasn\u2019t fixed yet",
                "time": "2020-04-26 13:19:29",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5ea58ac0afa1f51d4e1fe4fc",
                "text": "still fails with the snapshot",
                "time": "2020-04-26 13:21:04",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5ea58b3ea634f42f7a041ec2",
                "text": "can you raise a spring framework issue? This setup is quite complicated so we\u2019d need to debug the sample",
                "time": "2020-04-26 13:23:10",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5ea59fa83c03d320626bfb38",
                "text": "Here it is https://github.com/spring-projects/spring-framework/issues/24978",
                "time": "2020-04-26 14:50:16",
                "index": 29,
                "user": "ptahchiev"
            },
            {
                "id": "5ea691b661a0002f794ff49f",
                "text": "Thanks for raising the issue @ptahchiev ",
                "time": "2020-04-27 08:03:02",
                "index": 44,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 55,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d07a8e24e8f972d3736aa31",
                "text": "Hi,\n\nI have a problem, and i'm not sure how to handle it.\n\n1) Spring boot autoconfiguration starter (Based on some infos provided), this auto_configuration project has the responsability to dynamically create beans and register them into the ApplicationContext.\n2) Spring boot microservice (has in it's dependency the autoconfiguration project, with the provided info to creates the bean(s) and register them). Once this is completed we used the SPEL to dynamically create a rabbitMQ consumer \n\n```\n@RabbitListener(\n\t\tautoStartup = \"true\",\n\t\texclusive = true,\n\t\tbindings = @QueueBinding(\n\t\t\t\tvalue = @Queue(value = REGISTRATION_INCOMING_QUEUE, durable = \"true\"),\n\t\t\t\texchange = @Exchange(value = \"#{some_bean_name.channel}\", type = ExchangeTypes.TOPIC),\n\t\t\t\tkey = \"#{some_bean_name.routingKey}\"))\n```\n\nThe problem with that is that the bean creation hasn't happened yet. therefore it crashes saying that the bean provided in the SPEL does not exist.",
                "time": "2019-06-17 14:51:14",
                "index": 0,
                "user": "jselamy"
            },
            {
                "id": "5d07b78cbb789747fb1efa0a",
                "text": "@jselamy The SpEL expression should just require the bean to have been defined. Its evaluation will create it if necessary. In other words it sounds like an ordering problem between your dynamic bean definitions and the expression evaluation. How are you doing the dynamic bean stuff?",
                "time": "2019-06-17 15:53:48",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5d07b904bc56c731f8d5f56f",
                "text": "@wilkinsona it is in fact an Ordering problem\nAs for now this is how i do it \n``` \n@Slf4j\n@EnableConfigurationProperties(SubscriberProperties.class)\n@Configuration\npublic class SubscriberAutoConfiguration implements ApplicationContextAware {\n    @Bean\n    @ConditionalOnMissingBean(RestTemplate.class)\n    public RestTemplate oAuth2RestTemplate() {\n        log.warn(\"There was no oAuth2RestTemplate security injected. A default RestTemplate was provided. Note that the replay all endpoint might be secured.\");\n        return new RestTemplate();\n    }\n\n    @Bean(\"replayAllListener\")\n    @ConditionalOnProperty(prefix = \"inferno.subscriber\", value = {\"host\", \"replay.streams\"})\n    @ConditionalOnMissingBean(ReplayAllApplicationListener.class)\n    public ApplicationListener<ApplicationReadyEvent> replayAllApplicationListener(RestTemplate restTemplate, SubscriberProperties properties) {\n        log.info(\"Initializing replayAll application listener bean.\");\n        return new ReplayAllApplicationListener(restTemplate, properties);\n    }\n\n    @Bean(\"streamRegistrationListener\")\n    @ConditionalOnProperty(prefix = \"inferno.subscriber\", value = {\"host\", \"registration.streams\"})\n    @ConditionalOnMissingBean(StreamRegistrationApplicationListener.class)\n    public ApplicationListener<ApplicationReadyEvent> streamRegistration(RestTemplate restTemplate, SubscriberProperties properties) {\n        log.info(\"Initializing streamRegistration application listener bean.\");\n        return new StreamRegistrationApplicationListener(restTemplate, properties);\n    }\n\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        log.info(\"ApplicationContextAware\");\n    }\n}\n``` \nBut clearly there's something wrong with the ordering sequence. The beans are of type `ApplicationListener<ApplicationReadyEvent>`\n\n``` \n@Slf4j\npublic class StreamRegistrationApplicationListener implements ApplicationListener<ApplicationReadyEvent>, ApplicationContextAware {\n\n    private RestTemplate restTemplate;\n    private SubscriberProperties properties;\n    private GenericApplicationContext ctx;\n\n    StreamRegistrationApplicationListener(RestTemplate restTemplate, SubscriberProperties properties) {\n        this.restTemplate = restTemplate;\n        this.properties = properties;\n    }\n\n    @Override\n    public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {\n         properties.getRegistration()\n                .getStreams()\n                .stream()\n                .peek(stream -> log.info(\"Initializing client registration on stream {} for client -> {}\", stream, properties.getClient()))\n                .map(stream -> UriComponentsBuilder\n                        .fromUriString(properties.getHost())\n                        .path(properties.getRegistration().getBasePath() + \"/{stream}/{client}\")\n                        .buildAndExpand(stream, properties.getClient()).toUriString())\n                .map(this::performRequest)\n                .map(ResponseEntity::getBody)\n                .filter(Objects::nonNull)\n                .forEach(this::registerBean);\n    }\n\n    ResponseEntity<StreamRegistration> performRequest(String url) {\n        return restTemplate.exchange(RequestEntity\n                .post(URI.create(url))\n                .build(), StreamRegistration.class);\n    }\n\n    void registerBean(StreamRegistration streamRegistration) {\n        String beanName = \"stream_registration_\" + streamRegistration.getStream().toLowerCase();\n        ctx.registerBean(beanName, StreamRegistration.class, () -> streamRegistration, bd -> bd.setAutowireCandidate(true));\n        log.info(\"Registering bean StreamRegistration as {}\", beanName);\n        ctx.getBean(beanName);\n    }\n\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        ctx = (GenericApplicationContext) applicationContext;\n    }\n}\n``` ",
                "time": "2019-06-17 16:00:04",
                "index": 2,
                "user": "jselamy"
            },
            {
                "id": "5d07c4688e050f62aa353542",
                "text": "You need to perform bean registration in a bean factory post-processor",
                "time": "2019-06-17 16:48:40",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5d07c5ed26477710bbc8f5cc",
                "text": "@wilkinsona will i have access to a context with the injection of the props ? at this moment ?",
                "time": "2019-06-17 16:55:09",
                "index": 4,
                "user": "jselamy"
            },
            {
                "id": "5d07caf2325b465cc34604b7",
                "text": "It's not really safe to inject beans into a bean factory post-processor. It's too early in the context's lifecycle. A better option is to use the `Binder` API directly.",
                "time": "2019-06-17 17:16:34",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d07d8c8f5cf1f10bc8c150d",
                "text": "@wilkinsona yes of course i wasn't clear",
                "time": "2019-06-17 18:15:36",
                "index": 6,
                "user": "jselamy"
            }
        ]
    },
    {
        "id": 56,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5df12b1fc6ce6027eba3511b",
                "text": "What would cause a property to not be found in a Configuration file when a dependency Configuration file is importing it? \n\nI have a Configuration class `MessagingModuleConfig` that has a Conditional on it:\n```\n@Configuration\n@ConditionalOnProperty(\"messaging.enable\")\npublic class MessagingModuleConfig {\n    ....\n    @Bean\n    public MessagingService messagingService(){}\n}\n```\nIn it's pom, it depends on the `CommonModule` which imports `application.properties` from a file location:\n```\n@Configuration\n@PropertySource(value = \"file:${ENV_VAR}/application.properties\", ignoreResourceNotFound = true)\npublic class CommonModuleConfig{\n    ...\n}\n```\nI have a client module which depends on the MessagingModule and tries to create a class that depends on a bean present in the `MessagingModuleConfig`:\n```\n@Component\npublic class ClientComponent {\n    @Autowired(required = false)\n    public ClientComponent(MessagingService service){}\n}\n```\nin the `application.properties` i have set `messaging.enable = true`. For some reason (I can't understand why, and we've tried a million different things to get it to recognize the property) it does not create a bean of `MessagingService` and consequently does not create the `ClientComponent` correctly due to the bean not being present.\n\nHowever, if I pass `messaging.enable=true` as a `-D`, it wires in correctly.\n\nWhat am I missing in how Spring's injection and context gets wired in that this property would not be present?",
                "time": "2019-12-11 17:45:03",
                "index": 0,
                "user": "kpaxton"
            },
            {
                "id": "5df12bcf0dc628523e1ac61d",
                "text": "Additionally, we've created a `@PostConstruct` in the Client module and have verified that the `messaging.enable` property is there and is set to `true` on load. But the bean still isn't created by the time it tries to create the `ClientComponent`.  <- this is without the `-D` at run time.",
                "time": "2019-12-11 17:47:59",
                "index": 1,
                "user": "kpaxton"
            },
            {
                "id": "5df1477a072446515d8cbb1f",
                "text": "@kpaxton I suspect that `@PropertySource` is adding the contents of your `application.properties` file to the environment after `@ConditionalOnProperty(\"messaging.enable\")` has been evaluated. When you set it as a system property, it's available from when the JVM first launches so there's no ordering problem.",
                "time": "2019-12-11 19:46:02",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5df147a87ce7ea1e3568c076",
                "text": "@wilkinsona yea we figured it had something to do with the order of loading. But we aren't sure how to force the `application.properties` to load first?",
                "time": "2019-12-11 19:46:48",
                "index": 5,
                "user": "kpaxton"
            },
            {
                "id": "5df147bd0dc628523e1b8c6d",
                "text": "Use an `EnvironmentPostProcessor` registered in `spring.factories` rather than `@PropertySource`.",
                "time": "2019-12-11 19:47:09",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 57,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce6b5c175d9a575a62fe920",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/Xu66/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/Xu66/image.png)",
                "time": "2019-05-23 15:01:21",
                "index": 0,
                "user": "ankursinghdeveloper"
            },
            {
                "id": "5ce6b8da879f4478c7cbf469",
                "text": "Hi, I'm facing little problem in integrating hibernate with spring boot 2.1.2.RELEASE, PFB my code \n\nDBconfig.java\n\n```\n@Configuration\n@EnableTransactionManagement\npublic class DBConfiguration {\n\n\t@Bean(name = \"dataSource\")\n\tpublic DriverManagerDataSource dataSource() {\n\t\tDriverManagerDataSource driverManagerDataSource = new DriverManagerDataSource();\n\t\tdriverManagerDataSource.setDriverClassName(\"com.mysql.cj.jdbc.Driver\");\n\t\tdriverManagerDataSource.setUrl(\"jdbc:mysql://localhost:3306/watch\");\n\t\tdriverManagerDataSource.setUsername(\"root\");\n\t\tdriverManagerDataSource.setPassword(\"pwd\");\n\t\treturn driverManagerDataSource;\n\t}\n\t@Bean\n\tpublic PlatformTransactionManager transactionManager(EntityManagerFactory emf) {\n\t    JpaTransactionManager transactionManager = new JpaTransactionManager();\n\t    transactionManager.setEntityManagerFactory(emf);\n\t \n\t    return transactionManager;\n\t}\n\t \n\t@Bean\n\tpublic PersistenceExceptionTranslationPostProcessor exceptionTranslation(){\n\t    return new PersistenceExceptionTranslationPostProcessor();\n\t}\n\t \n\tProperties hibernateProperties() {\n\t    Properties properties = new Properties();\n\t    properties.setProperty(\"hibernate.hbm2ddl.auto\", \"update\");\n\t    properties.setProperty(\"hibernate.show_sql\", \"true\");\n\t    properties.setProperty(\"hibernate.dialect\", \"org.hibernate.dialect.MySQL5Dialect\");\n\t    properties.setProperty(\"hibernate.format_sql\", \"true\"); \n\t        \n\t    return properties;\n\t}\n\t\n\t@Bean\n    public LocalSessionFactoryBean sessionFactory() {\n        LocalSessionFactoryBean sessionFactory = new LocalSessionFactoryBean();\n        sessionFactory.setDataSource(dataSource());\n        sessionFactory.setPackagesToScan(\"com.watch\");\n        sessionFactory.setHibernateProperties(hibernateProperties());\n        return sessionFactory;\n    }\n\t\n\t@Bean\n\t   public LocalContainerEntityManagerFactoryBean entityManagerFactory() {\n\t      LocalContainerEntityManagerFactoryBean em \n\t        = new LocalContainerEntityManagerFactoryBean();\n\t      em.setDataSource(dataSource());\n\t      em.setPackagesToScan(new String[] { \"com.pkg\" });\n\t \n\t      JpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();\n\t      em.setJpaVendorAdapter(vendorAdapter);\n\t      em.setJpaProperties(hibernateProperties());\n\t \n\t      return em;\n\t   }\n\t\n}\n```\nUserDaoImpl.java\n\n```\n@Repository\npublic class UserDaoImpl implements UserDao {\n\n\t\n\t @Autowired\n\t    private SessionFactory sessionFactory;\n\t \n\t@Override\n\tpublic void addUser(User user) {\n        Session session = sessionFactory.getCurrentSession();\n        session.save(user);\n        \n        System.out.println(\"saved using session factory\");\n\t\t\n\t\t\n\t}\n\n}\n```\n\nUserServiceImpl.java\n\n```\n@Service\npublic class UserServiceImpl implements UserService {\n\n\t@Autowired\n\tUserDao userDao;\n\n\t@Override\n\tpublic void addUser(User user) {\n\t\ttry {\n\t\t\t//userRepo.save(user);\n\t\t\tuserDao.addUser(user);\n\t\t} catch (Exception e) {\n\n\t\t}\n\t}\n}\n```\n\n\n**Step 1** \nWhen i'm not defining sessionFactory and entityManagerFactory in DBConfig.java\n\n**Error log**\n\n```\nDescription:\n\nField sessionFactory in com.watch.dao.impl.UserDaoImpl required a bean of type 'org.hibernate.SessionFactory' that could not be found.\n\nThe injection point has the following annotations:\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\n\n\nAction:\n\nConsider defining a bean of type 'org.hibernate.SessionFactory' in your configuration.\n```\n\n**Step 2**\nNow after defining sessionFactory in DBConfig.java\n\n**Error log**\n\n```\nDescription:\n\nMethod mvcConversionService in org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration required a bean named 'entityManagerFactory' that could not be found.\n\n\nAction:\n\nConsider defining a bean named 'entityManagerFactory' in your configuration.\n```\n\n\n\n\n\n\n\n\n\n",
                "time": "2019-05-23 15:14:34",
                "index": 2,
                "user": "ankursinghdeveloper"
            },
            {
                "id": "5ce6b8fb0ac9852a95299c61",
                "text": "\n**Step 3**\nNow after defining sessionFactory and entityManagerFactory in DBConfig.java\n\n**Error log**\n\n```\nDescription:\n\nParameter 0 of method transactionManager in com.watch.config.DBConfiguration required a single bean, but 2 were found:\n\t- sessionFactory: defined by method 'sessionFactory' in class path resource [com/watch/config/DBConfiguration.class]\n\t- entityManagerFactory: defined by method 'entityManagerFactory' in class path resource [com/watch/config/DBConfiguration.class]\n\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\n\n```",
                "time": "2019-05-23 15:15:07",
                "index": 3,
                "user": "ankursinghdeveloper"
            },
            {
                "id": "5ce6b9ce8f019114aea35ed2",
                "text": "now it's been 1 week i'm struggling with this , i know small thing i'm missing somewhere.\nif any one have any idea , or any one can point out my mistake, will be helpful . Thanks",
                "time": "2019-05-23 15:18:38",
                "index": 4,
                "user": "ankursinghdeveloper"
            },
            {
                "id": "5ce6bef07c363c75a72e36e7",
                "text": "@ankursinghdeveloper you need either of those beans. But not both of them.",
                "time": "2019-05-23 15:40:32",
                "index": 6,
                "user": "vanseverk"
            },
            {
                "id": "5ce6bf01b313d72314169820",
                "text": "\"Compatible with Hibernate 5.0/5.1 as well as 5.2/5.3, as of Spring 5.1. Set up with Hibernate 5.3, LocalSessionFactoryBean is an immediate alternative to LocalContainerEntityManagerFactoryBean for common JPA purposes: In particular with Hibernate 5.3, the Hibernate SessionFactory will natively expose the JPA EntityManagerFactory interface as well, and Hibernate BeanContainer integration will be registered out of the box. In combination with HibernateTransactionManager, this naturally allows for mixing JPA access code with native Hibernate access code within the same transaction.\"",
                "time": "2019-05-23 15:40:49",
                "index": 7,
                "user": "vanseverk"
            },
            {
                "id": "5ce6bf358f019114aea386b4",
                "text": "so get rid of the LocalContainerEntityManagerFactoryBean and rename sessionFactory() to entityManagerFactory() (or get rid of the LocalSessionFactoryBean)",
                "time": "2019-05-23 15:41:41",
                "index": 8,
                "user": "vanseverk"
            },
            {
                "id": "5ce6dd3c75d9a575a6313b0b",
                "text": "Thanks @vanseverk for your inputs, it worked....\n\none more doubt, as of now i've made below changes in UserDaoImpl.java and it is working fine, can you suggest any better approach to do this or any reference ?????\n\nas below code will be repeated for different DB operations so any better approach ?\n\n```\n@Repository\npublic class UserDaoImpl implements UserDao {\n\n\t @Autowired\n\t EntityManagerFactory entityManagerFactory;\n\t \n\t@Override\n\tpublic void addUser(User user) {\n         EntityManager em = entityManagerFactory.createEntityManager();\n\t\tEntityTransaction txn = em.getTransaction();\n\t\ttxn.begin();\n\t\tem.persist(user);\n\t\ttxn.commit();\n\t\tem.close();\n}\n}\n``` ",
                "time": "2019-05-23 17:49:48",
                "index": 9,
                "user": "ankursinghdeveloper"
            },
            {
                "id": "5ce6df660ac9852a952ac5d3",
                "text": "@andrey-bushik look into Spring boot starter JPA and Spring Data JPA repositories",
                "time": "2019-05-23 17:59:02",
                "index": 10,
                "user": "vanseverk"
            },
            {
                "id": "5ce6e6e0879f4478c7cd5ec5",
                "text": "@ankursinghdeveloper that message was for you, not for andrey",
                "time": "2019-05-23 18:30:56",
                "index": 12,
                "user": "vanseverk"
            },
            {
                "id": "5ce771f9ecdf942b4c36b2f2",
                "text": "Thanks  @vanseverk  :)",
                "time": "2019-05-24 04:24:25",
                "index": 13,
                "user": "ankursinghdeveloper"
            }
        ]
    },
    {
        "id": 58,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ba20d92f4bd1056ac855935",
                "text": "iam using spring.config.location property in my bootstrap.yml to load my proeprty file",
                "time": "2018-09-19 08:49:22",
                "index": 0,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20d970cfe7f30f1b796d6",
                "text": "here us my property",
                "time": "2018-09-19 08:49:27",
                "index": 1,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20daafcba1254fada2530",
                "text": "${PROPERTY_CONFIG} is os env variable",
                "time": "2018-09-19 08:49:46",
                "index": 4,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20dd2fcba1254fada260a",
                "text": "i have my yml file in the location, but application startup is failing as it couldnt able to find url for database",
                "time": "2018-09-19 08:50:26",
                "index": 5,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20ddef4bd1056ac855a48",
                "text": "if properties is read from the location, hope it will works",
                "time": "2018-09-19 08:50:38",
                "index": 6,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20de7e5c2cc56adb00c85",
                "text": "Please let me know, what is going wrong",
                "time": "2018-09-19 08:50:47",
                "index": 7,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20df3d655361f76200abd",
                "text": "bootstrap.yml is a Spring Cloud concept. Not sure what you\u2019re trying to do at this point.",
                "time": "2018-09-19 08:50:59",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5ba20e691ee2ca65023ab86d",
                "text": "@snicoll  iam trying to externalize my property file",
                "time": "2018-09-19 08:52:57",
                "index": 13,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20e9bbe4f300626b70e21",
                "text": "to read from a file path, file path will be specified in system env cariable",
                "time": "2018-09-19 08:53:47",
                "index": 14,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20eb5f7e1580625f262f3",
                "text": "i tried using spring.config.location",
                "time": "2018-09-19 08:54:13",
                "index": 15,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20ee5913ba7799b11158f",
                "text": "property, i need to deploy the app as war",
                "time": "2018-09-19 08:55:01",
                "index": 16,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20efde6046343f3840794",
                "text": "`bootstrap.yml` is for the config server so I am not sure why you\u2019re using that",
                "time": "2018-09-19 08:55:25",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5ba20f07b9531f2dfa8b8606",
                "text": "It will be completely ignored if you\u2019re not using the spring cloud bootstrap context",
                "time": "2018-09-19 08:55:35",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5ba20f625df5194734dfa9a6",
                "text": "Iam not usimg config server",
                "time": "2018-09-19 08:57:06",
                "index": 20,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20f92e6046343f3840b5c",
                "text": "in application.yml, can i able to specify the property file location",
                "time": "2018-09-19 08:57:54",
                "index": 21,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba20f9ff7e1580625f269a8",
                "text": "Have you read the doc? https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config-application-property-files",
                "time": "2018-09-19 08:58:07",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5ba20fe3fcba1254fada322a",
                "text": "Again, `bootstrap.yml` is _not_ a Spring Boot concept. We\u2019re not looking up that file at all",
                "time": "2018-09-19 08:59:15",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5ba2124bbe4f300626b725f4",
                "text": "@snicoll  Thanks, i was going on in wrong direction on using bootstarp.yml",
                "time": "2018-09-19 09:09:31",
                "index": 26,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba21279f7e1580625f27bfe",
                "text": "I don\u2019t think that\u2019s surprising. If you add `@ComponentScan` on your spring boot application, it will also override the default",
                "time": "2018-09-19 09:10:17",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5ba2128ee5c2cc56adb02b7b",
                "text": "I went through the doc, mostly its for jar deployement",
                "time": "2018-09-19 09:10:38",
                "index": 28,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba2129dfcba1254fada4548",
                "text": "I don\u2019t think I agree with that",
                "time": "2018-09-19 09:10:53",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5ba212a8be4f300626b72814",
                "text": "can't we use spring.config.location proerty for war files?",
                "time": "2018-09-19 09:11:04",
                "index": 30,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba212bc5df5194734dfbf8a",
                "text": "Till what i explored its for jar, going on further",
                "time": "2018-09-19 09:11:24",
                "index": 31,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba212f2913ba7799b11301f",
                "text": "@MohanJagadheeswaran it\u2019s right here in the doc",
                "time": "2018-09-19 09:12:18",
                "index": 34,
                "user": "snicoll"
            },
            {
                "id": "5ba212f87dca306503222c2f",
                "text": "> spring.config.name and spring.config.location are used very early to determine which files have to be loaded, so they must be defined as an environment property (typically an OS environment variable, a system property, or a command-line argument).",
                "time": "2018-09-19 09:12:24",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5ba2130de6046343f38425f0",
                "text": "You can\u2019t use the latter with a `war` but you can surely use the other two",
                "time": "2018-09-19 09:12:45",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5ba21392b4990c30eed91b7d",
                "text": "@snicoll  i went through this,",
                "time": "2018-09-19 09:14:58",
                "index": 39,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba213931ee2ca65023ad835",
                "text": "spring.config.name and spring.config.location are used very early to determine which files have to be loaded, so they must be defined as an environment property (typically an OS environment variable, a system property, or a command-line argument).",
                "time": "2018-09-19 09:14:59",
                "index": 40,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba2139ef7e1580625f282e2",
                "text": "and tried using an os env variable",
                "time": "2018-09-19 09:15:10",
                "index": 41,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba213b4a56b215c975dd79c",
                "text": "It should work. If it doesn\u2019t, share a minimal sample with instructions to reproduce the problem",
                "time": "2018-09-19 09:15:32",
                "index": 42,
                "user": "snicoll"
            },
            {
                "id": "5ba213c48909f71f75f73d39",
                "text": "Sure, ",
                "time": "2018-09-19 09:15:48",
                "index": 43,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba213d3913ba7799b113545",
                "text": "My application.yml file in spring boot app",
                "time": "2018-09-19 09:16:03",
                "index": 44,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba213eebe4f300626b72f18",
                "text": "Not in text here, a sample we can run (a sample zip with instructions or a github repo)",
                "time": "2018-09-19 09:16:30",
                "index": 45,
                "user": "snicoll"
            },
            {
                "id": "5ba21400e6046343f3842c39",
                "text": "Please give me min, i will make one",
                "time": "2018-09-19 09:16:48",
                "index": 46,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba215aab9531f2dfa8bb237",
                "text": "@snicoll  please find this repo",
                "time": "2018-09-19 09:23:54",
                "index": 51,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba215abf4bd1056ac858757",
                "text": "https://github.com/MohanJagadheeswaran/externalizingConfig.git",
                "time": "2018-09-19 09:23:55",
                "index": 52,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba215cbf4bd1056ac8587c3",
                "text": "Sorry, no. Where are the instructions to reproduce the problem?",
                "time": "2018-09-19 09:24:27",
                "index": 53,
                "user": "snicoll"
            },
            {
                "id": "5ba215ecf7e1580625f2916e",
                "text": "You can\u2019t put `spring.config.location` in application.yml",
                "time": "2018-09-19 09:25:00",
                "index": 54,
                "user": "snicoll"
            },
            {
                "id": "5ba215f0b9531f2dfa8bb3b2",
                "text": "you\u2019ve quoted that yourself\u2026.",
                "time": "2018-09-19 09:25:04",
                "index": 55,
                "user": "snicoll"
            },
            {
                "id": "5ba216eda56b215c975de7f5",
                "text": "Ok, from you i came to know, we cant use bootstrap.yml as it is cloud component",
                "time": "2018-09-19 09:29:17",
                "index": 56,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba217018909f71f75f750a6",
                "text": "but now i came to know we cant use spring.config.location in application.yml",
                "time": "2018-09-19 09:29:37",
                "index": 57,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba2170f1ee2ca65023aed52",
                "text": "Isn\u2019t that what that documentation note you\u2019ve quoted states?",
                "time": "2018-09-19 09:29:51",
                "index": 58,
                "user": "snicoll"
            },
            {
                "id": "5ba2171cf7e1580625f29865",
                "text": "For war files can i specify location somewhere?",
                "time": "2018-09-19 09:30:04",
                "index": 59,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba2172bf4bd1056ac85903c",
                "text": "For jar, am aware we can pass as command line args",
                "time": "2018-09-19 09:30:19",
                "index": 60,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba2173a5df5194734dfdef3",
                "text": "i have used before, spring.config.location for jar",
                "time": "2018-09-19 09:30:34",
                "index": 61,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba21b7bfcba1254fada7e33",
                "text": "@snicoll Finally used @PropertySource in my config class",
                "time": "2018-09-19 09:48:43",
                "index": 63,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba21bb4d655361f76205cf7",
                "text": "And i was trying with yml file, as according to docs, i came to know the limitations and used properties file",
                "time": "2018-09-19 09:49:40",
                "index": 64,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5ba21c171ee2ca65023b0de7",
                "text": "Is there any way we can use yml files for externalizing configs in war applications?",
                "time": "2018-09-19 09:51:19",
                "index": 65,
                "user": "MohanJagadheeswaran"
            }
        ]
    },
    {
        "id": 59,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ddb91fec4fca14de3e6df2b",
                "text": "Hi. We're using loadtime-weaving and our application is failing to start without specifying \"-javaagent:/path/to/spring-instrument.jar\". When deployed to Tomcat the our app works fine without needing to specify spring-instrument, because Spring then picks up Tomcat's `InstrumentableClassLoader`. I see that SpringBoot comes with `TomcatEmbeddedWebappClassLoader` which seems to exist to solve this in SpringBoot-apps. How do I enable it, is there a secret annotation for specifying class-loaders in SpringBoot apps?",
                "time": "2019-11-25 08:34:06",
                "index": 0,
                "user": "andreak"
            },
            {
                "id": "5ddba8de4517d002b2ec99ba",
                "text": "@andreak You should use `javaagent`. `TomcatEmbeddedWebappClassLoader` is specific to the handling of web requests and doesn't get involved at all until Tomcat's being started by which time many of your application's classes may have already been loaded.",
                "time": "2019-11-25 10:11:42",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ddbacc85b3db9548ae9e492",
                "text": "Aha, I see. Thanks.",
                "time": "2019-11-25 10:28:24",
                "index": 2,
                "user": "andreak"
            },
            {
                "id": "5ddbc7fbafacdc4de4708e54",
                "text": "@wilkinsona Is there a specific problem using `TomcatEmbeddedWebappClassLoader` as the default classloader so one doesn't have to use javaagent? Is it possible to specify classloader to use in SpringBoot, if so - how?",
                "time": "2019-11-25 12:24:27",
                "index": 4,
                "user": "andreak"
            },
            {
                "id": "5ddc080eb010e622766ab465",
                "text": "@andreak No, it's not possible. A Spring Boot app can be run from your IDE using just a main method so there isn't a guaranteed opportunity to control which ClassLoader is used. A fat jar does provide that opportunity but as it's not always available we don't make use of it. As I said above, you should use `-javaagent`.",
                "time": "2019-11-25 16:57:50",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5ddc0ad24517d002b2ef856b",
                "text": "@wilkinsona Ok, but it should be possible to load the spring-context in the webapp so that the embedded `TomcatEmbeddedWebappClassLoader` is used?",
                "time": "2019-11-25 17:09:38",
                "index": 10,
                "user": "andreak"
            },
            {
                "id": "5ddc20c0c52bc74c968dc38e",
                "text": "@andreak Not in Spring Boot where the embedded servlet container runs inside the application context. Boot will create the `TomcatEmbeddedWebappClassLoader` and make sure it's used where needed. For example, it'll be the thread context class loader when handling web requests which allows things like embedded Tomcat's JNDI to work.",
                "time": "2019-11-25 18:43:12",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5ddc429dc4fca14de3ec1814",
                "text": "@wilkinsona Ok, thanks for clarification.",
                "time": "2019-11-25 21:07:41",
                "index": 13,
                "user": "andreak"
            }
        ]
    },
    {
        "id": 60,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ba10f00e5c2cc56ada9fa2c",
                "text": "Hello. I'm trying to create a jar, which will be used in a bunch of different spring boot projects. It has a bunch of classes that use spring and probably some spring boot classes. Which spring-boot or spring package do I need to add an implementation for to my build.gradle to get the core spring/spring-boot classes and annotations?",
                "time": "2018-09-18 14:43:12",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5ba10f7b8909f71f75f0e774",
                "text": "It depends on how \u201cfat\u201d you want this jar to be (i.e. how many spring dependencies you want it to have). As a general rule of thumb you want to keep your dependency list as small as possible based on the requirements of the classes that the jar will contain",
                "time": "2018-09-18 14:45:15",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5ba11034d655361f7619f865",
                "text": "So figure out what classes you are going to put in that jar, then figure out which spring dependencies provide any classes necessary to use your classes that are in the jar, and then declare dependencies on those.",
                "time": "2018-09-18 14:48:20",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5ba11074b4990c30eed324da",
                "text": "you\u2019ll probably at a minimum need\n\n```groovy\ncompile \"org.springframework:spring-core\"\ncompile \"org.springframework:spring-context\"\n```",
                "time": "2018-09-18 14:49:24",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5ba1108e8909f71f75f0f2ee",
                "text": "Maybe `compile 'org.springframework.boot:spring-boot-starter\u2019`",
                "time": "2018-09-18 14:49:50",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5ba110c9f7e1580625ec4fc6",
                "text": "@edeandrea Would those also work for implementations for gradle 'java-library'? Here's what I have now:",
                "time": "2018-09-18 14:50:49",
                "index": 5,
                "user": "springroll12"
            },
            {
                "id": "5ba110ebb9531f2dfa8582a6",
                "text": "```\napply plugin: 'java-library'\napply plugin: 'eclipse'\n\nversion = '0.0.1'\n\n// In this section you declare where to find the dependencies of your project\nrepositories {\n    jcenter()\n}\n\njar {\n    manifest {\n        attributes('Implementation-Title': project.name,\n                   'Implementation-Version': project.version)\n    }\n}\n\ndependencies {\n    implementation 'org.slf4j:slf4j-simple:+'\n    // Use JUnit test framework\n    testImplementation 'junit:junit:4.12'\n}\n\n```",
                "time": "2018-09-18 14:51:23",
                "index": 6,
                "user": "springroll12"
            },
            {
                "id": "5ba111e1be4f300626b11af7",
                "text": "hrmm, the one I'm struggling with right now is HttpHeaders: `package org.springframework.http does not exist`",
                "time": "2018-09-18 14:55:29",
                "index": 8,
                "user": "springroll12"
            },
            {
                "id": "5ba112fcfcba1254fad43751",
                "text": "`HttpHeaders` comes from `org.springframework:spring-web`",
                "time": "2018-09-18 15:00:12",
                "index": 14,
                "user": "edeandrea"
            },
            {
                "id": "5ba112fde6046343f37e16c8",
                "text": "aha, that one was spring-web",
                "time": "2018-09-18 15:00:13",
                "index": 15,
                "user": "springroll12"
            }
        ]
    },
    {
        "id": 61,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ddf94e5d64a052fb679b58a",
                "text": "Hi, I\u2019m trying to put an executable spring boot app with war packaging into a docker image. In order to do this, I\u2019d like to split the fat war into multiple image layers as it is explained here: https://spring.io/blog/2018/11/08/spring-boot-in-a-container#a-better-dockerfile However, I\u2019ve wonder if this is only possible with jar files or also with war files?",
                "time": "2019-11-28 09:35:33",
                "index": 0,
                "user": "itelleria"
            },
            {
                "id": "5ddfc00c05eec2433d97eb51",
                "text": "@itelleria It's possible with a war file. You'd just need to tweak the configuration a little to use `WEB-INF` instead of `BOOT-INF`",
                "time": "2019-11-28 12:39:40",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ddfdffd8e906a1c8d32427b",
                "text": "@wilkinsona Ok. Thanks! ",
                "time": "2019-11-28 14:55:57",
                "index": 3,
                "user": "itelleria"
            }
        ]
    },
    {
        "id": 62,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5e15e6ff91129970ca8f7935",
                "text": "Hi. When using (Maven pom.xml) Spring Boot starters from Gradle, e.g. spring-boot-starter-test, we only get one shot at picking the Gradle configuration to use, e.g. testImplementation or testRuntimeOnly. If the starter contains dependencies that would reasonably live in different scopes, e.g. junit-jupiter (testImplementation) vs. junit-vintage-engine (testRuntimeOnly), we may end up dragging in dependencies (junit-vintage-engine) into classpaths that don't need them (compileClasspath) because we need other dependencies in that starter. I understand the tradeoff, the pragmatism of only needing to declare one dependency on the starter beats a slightly polluted classpath. What I'm missing is why the starter doesn't specify the scope as runtime in the first place, e.g. for junit-vintage-engine. Or maybe some starters do and I just haven't seen them. Can you shed any light on this please?",
                "time": "2020-01-08 14:28:15",
                "index": 0,
                "user": "emersonf"
            },
            {
                "id": "5e16e751c3950349026c7570",
                "text": "@emersonf Declaring them as `<scope>runtime</scope>` makes no difference for a consuming project in Maven. Until relatively recently it made no difference in Gradle either. I can't remember exactly when it changed, but have a vague recollection that it may have been in a 5.x release. We've yet to catch up with that change. That may change in Boot 2.3 as, all being well, we'll publish Gradle metadata for all of Boot's modules, including its starters.",
                "time": "2020-01-09 08:41:53",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5e170ad09c13050f1f9de74f",
                "text": "@wilkinsona does publishing gradle metadata mean it'll finally be fully safe to use `implementation(platform(springBootBom))` instead of spring dependencies plugin? That would be huge.",
                "time": "2020-01-09 11:13:20",
                "index": 20,
                "user": "AlexCzar"
            },
            {
                "id": "5e1730eea1e15049012ba258",
                "text": "@AlexCzar What do you mean by \"safe\"? You can do that today if you wish to do so. There are some things that won't work (overriding of version properties, for example) but I don't think Gradle's own metadata will help with that.",
                "time": "2020-01-09 13:55:58",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5e175913821b826f5a91517d",
                "text": "@AlexCzar https://mrhaki.blogspot.com/2019/04/gradle-goodness-use-bill-of-materials.html as an example",
                "time": "2020-01-09 16:47:15",
                "index": 24,
                "user": "emersonf"
            }
        ]
    },
    {
        "id": 63,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d3198be437a3a134819ac88",
                "text": "Hey there: I have a springboot application using jms and I would like to introduce priorities but the get simply ignored:\n\n```\n@Component\n@Scope(value=\"singleton\")\npublic class ProcQueue implements ApplicationContextAware {\n\n\tpublic static final String PROC_QUEUE = \"procq\";\n\n\tprivate ApplicationContext context;\n\n\tpublic void sendMsg( ProcMsg msg ) {\n\t\tJmsTemplate jmsTemplate = context.getBean( JmsTemplate.class );\n\t\tjmsTemplate.setExplicitQosEnabled(true);\n\t\tjmsTemplate.setDeliveryMode(DeliveryMode.NON_PERSISTENT);\n\t\tjmsTemplate.setPriority(Message.DEFAULT_PRIORITY);\n\t\tjmsTemplate.setTimeToLive(Message.DEFAULT_TIME_TO_LIVE);\n\t\tjmsTemplate.convertAndSend( PROC_QUEUE, msg );\n\t}\n\n\tpublic void sendMsgAsPriority( ProcMsg msg ) {\n\t\tJmsTemplate jmsTemplate = context.getBean( JmsTemplate.class );\n\t\tjmsTemplate.setExplicitQosEnabled(true);\n\t\tjmsTemplate.setDeliveryMode(DeliveryMode.NON_PERSISTENT);\n\t\tjmsTemplate.setPriority(Message.DEFAULT_PRIORITY+4);\n\t\tjmsTemplate.setTimeToLive(Message.DEFAULT_TIME_TO_LIVE);\n\t\tjmsTemplate.convertAndSend( PROC_QUEUE, msg );\n\t}\n\t\n\t@Override\n\tpublic void setApplicationContext(ApplicationContext ctx) {\n\t\tthis.context = ctx;\n\t}\n\n}\n```\n\n```\n@Component\npublic class ProcConsumer {\n\n\t//private static Logger LOGGER = LoggerFactory.getLogger( ProcConsumer.class );\n\n\t@Autowired\n\tprivate TesterFlow flow;\n\n\t@JmsListener( destination=ProcQueue.PROC_QUEUE, concurrency=\"1-1\" )\n\tpublic void receiveMessage( ProcMsg msg ) {\n\t\tthis.flow.processMsg( msg );\n\t}\n\n}\n```\n\nEven if I use `sendMsgAsPriority` they are not consumed before the message sent by `sendMsg`. Mayba I have the enable priorities on the Queue but I dont know how - does anyone of you?\n\n\n\n",
                "time": "2019-07-19 10:17:33",
                "index": 0,
                "user": "______dominic_twitter"
            },
            {
                "id": "5d31a9bb35e05c0993638c98",
                "text": "nothing wrong with your code, except you don\u2019t need to do that yourself, there is configuration support for it. You should read the priority in the listener rather than relying on the fact something is received before something else. If you don\u2019t have a lot of traffic you won\u2019t see the difference",
                "time": "2019-07-19 11:30:03",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5d31b7afd44431099257af25",
                "text": "Hm, I don't get any event using selectors as following. And I want all messages to get handled by a single thread independent of the priority but ordered by priority\n\n`@JmsListener( destination=ProcQueue.PROC_QUEUE, containerFactory=\"myFactory\", concurrency=\"1-1\", selector = \"priority = 'high'\" )`\n\n",
                "time": "2019-07-19 12:29:35",
                "index": 2,
                "user": "______dominic_twitter"
            },
            {
                "id": "5d31bb81d44431099257d084",
                "text": "Unfortunately, I don\u2019t think you can expect this to work that way. Priority is usually effective with high concurrency ",
                "time": "2019-07-19 12:45:53",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5d31bba309580b7bbb6c737b",
                "text": "What is that selector btw?",
                "time": "2019-07-19 12:46:27",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5d31bccd808425671cafa36b",
                "text": "I shold be able to filter the messages for one listener method as stated here [spring-jms-message-selector-example](https://codenotfound.com/spring-jms-message-selector-example.html)",
                "time": "2019-07-19 12:51:25",
                "index": 5,
                "user": "______dominic_twitter"
            },
            {
                "id": "5d31be88ec5abe7bbc101b12",
                "text": "That means jms does handle priorities with my code but it does not ensure it. it's kind of best effort? I my case I have one listening thread (`concurrency=\"1-1\"`) and this thread puts some new messages into the queue as stated below. After the the messages ist handler and the thread is free again I would expect that it handles the message with higher priority next. But they get handled in the issued order ignoring priorities. I would be nice if that works but probably I find a different solution it does not.\n\n```\n\t\tthis.procQ.sendMsg( new DummyMsg() );\n\t\tthis.procQ.sendMsg( new DummyMsg() );\n\t\tthis.procQ.sendMsg( new DummyMsg() );\n\t\tthis.procQ.sendMsg( new DummyMsg() );\n\n\t\tthis.procQ.sendMsgAsPriority( new EnterMsg( newTesterState, oldTesterState ) );\n```\n",
                "time": "2019-07-19 12:58:48",
                "index": 6,
                "user": "______dominic_twitter"
            },
            {
                "id": "5d31c165e2d1aa6688d1e3e0",
                "text": "I am confused. That article set a \u201cpriority\u201d property. This has nothing to do with the  `JMS_PRIORITY` header. JMS priorities are defined as numbers anyway, there is no concept of \u201chigh\u201d or \u201clow\u201d. ",
                "time": "2019-07-19 13:11:01",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5d31c178a0351b1a8c5f4118",
                "text": "What broker are you using?",
                "time": "2019-07-19 13:11:20",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5d31c26d8fe53b671d9d89d1",
                "text": "I use activemq I think the priority numbers get mapped to words as stated here [activemq priorities](https://blog.christianposta.com/activemq/activemq-message-priorities-how-it-works/)",
                "time": "2019-07-19 13:15:25",
                "index": 9,
                "user": "______dominic_twitter"
            },
            {
                "id": "5d31c2a9437a3a13481b0622",
                "text": "It is confusing for me too probably there is no simple solution for me and I really have to dive a bit deeper into the concepts",
                "time": "2019-07-19 13:16:25",
                "index": 10,
                "user": "______dominic_twitter"
            },
            {
                "id": "5d31c2b209580b7bbb6cad2f",
                "text": "thank you for your efforts!!",
                "time": "2019-07-19 13:16:34",
                "index": 11,
                "user": "______dominic_twitter"
            }
        ]
    },
    {
        "id": 64,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5e2dcced1a1c2739e30408ba",
                "text": "Hi Team\n\nI am getting error for , this example is from the Spring boot docs. any help appreciated\n\n```\nCaused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'local.server.port' in value \"${local.server.port}\"\n\tat org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~[spring-core-5.2.3.RELEASE.jar:5.2.3.RELEASE]\n\tat org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124) ~[spring-core-5.2.3.RELEASE.jar:5.2.3.RELEASE]\n\tat org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236) ~[spring-core-5.2.3.RELEASE.jar:5.2.3.RELEASE]\n\tat org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210) ~[spring-core-5.2.3.RELEASE.jar:5.2.3.RELEASE]\n\tat org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175) ~[spring-context-5.2.3.RELEASE.jar:5.2.3.RELEASE]\"\n```\n\nTest\n\n```\n@SpringBootTest(classes = { TestApplication.class}, webEnvironment = RANDOM_PORT)\npublic class ELFSpringWebAutoConfigurationTest {\n\n    @LocalServerPort\n    int port;\n\n    @Autowired\n    TestRestTemplate restTemplate;\n\n    @Test\n    void testRestCall() {\n        assertThat(this.restTemplate.getForObject(\"http://localhost:\" + port + \"/\",\n                String.class)).contains(\"Hello, World\");\n    }\n\n}```",
                "time": "2020-01-26 17:31:25",
                "index": 0,
                "user": "hyginous29"
            },
            {
                "id": "5e2dcfc9dc07667042f9130e",
                "text": "@hyginous29 see https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/web/server/LocalServerPort.html\neffectively you have ```\n @Value(value=\"${local.server.port}\")\nint port;\n```",
                "time": "2020-01-26 17:43:37",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5e2dcff2f85dba0aab1c3214",
                "text": "so you have to define it somehow",
                "time": "2020-01-26 17:44:18",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5e2dd03ff85dba0aab1c340b",
                "text": "ah, my bad, missed ```webEnvironment = RANDOM_PORT```. disregard my comment",
                "time": "2020-01-26 17:45:35",
                "index": 3,
                "user": "boda2004"
            },
            {
                "id": "5e2dd090f85dba0aab1c3645",
                "text": "yeah, its RANDOM_PORT",
                "time": "2020-01-26 17:46:56",
                "index": 4,
                "user": "hyginous29"
            },
            {
                "id": "5e2dd393f196225bd6613ae1",
                "text": "Ignore, it works .. i had `TestApplication` class which SpringBootApplication, which was in src/test. once i moved to src/main , it works.",
                "time": "2020-01-26 17:59:47",
                "index": 5,
                "user": "hyginous29"
            }
        ]
    },
    {
        "id": 65,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f0dd3d49c75aa256b3d698d",
                "text": "hi  all, How can we store HttpServletRequest even after the response is delivered.",
                "time": "2020-07-14 15:48:36",
                "index": 0,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0dd3e9fe59352799fa6a61",
                "text": "This is the case when we are performing asynchronours processing. ",
                "time": "2020-07-14 15:48:57",
                "index": 1,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0dd446f253d22569d55aa5",
                "text": "I have  a rest api which delivers response immediately when hit and after that it  performs asynchronous operations using HttpServletRequest. As the response  is delivered already the Dispatcher servlet is clearing all the request  attributes.",
                "time": "2020-07-14 15:50:30",
                "index": 2,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0dd45ee3505d7736fc42b8",
                "text": "So is there any way to restore the original request even in separate thread.",
                "time": "2020-07-14 15:50:54",
                "index": 3,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0dd5a049fe21279494aa3c",
                "text": "@varma059_gitlab It's hard to offer much advice without knowing what attributes you're using and why. Generally speaking, you shouldn't need any of those that are set by the dispatcher servlet. If you do need them, perhaps you can get them before beginning the async dispatch.",
                "time": "2020-07-14 15:56:16",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5f0ddab81cc043695961c1a9",
                "text": "Looking at the code in MVC, I'm also not sure that it will be clearing the attributes.",
                "time": "2020-07-14 16:18:00",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5f0ddb16f253d22569d5725b",
                "text": "If an async request has begun, they should be left as-is: https://github.com/spring-projects/spring-framework/blob/6110925ecc54b5d5e9eda528938672e384c2a152/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java#L946-L951",
                "time": "2020-07-14 16:19:34",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5f0de070fe59352799fa92bd",
                "text": "Thanks Andy. So lets say i have to get the context path from HttpServletRequest in my async method. What is the possible way of doing it?",
                "time": "2020-07-14 16:42:24",
                "index": 7,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0de11e1c84e5557924511e",
                "text": " the below would pop up:",
                "time": "2020-07-14 16:45:18",
                "index": 8,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0de11f343f5d69494cf5d2",
                "text": "java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.",
                "time": "2020-07-14 16:45:19",
                "index": 9,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0de6b79c75aa256b3da568",
                "text": "You can just call `getContextPath()` on the request",
                "time": "2020-07-14 17:09:11",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5f0de6f51cc043695961ea7e",
                "text": "It looks like you're using `RequestContextHolder` which won't work as you've moved things onto a separate thread. You could pass the `HttpServletRequest` to the async processing, or you could get the context path and pass that over.",
                "time": "2020-07-14 17:10:13",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5f0de87b26b22649721dd29b",
                "text": "Now what we are doing is we are just using the HttpServletRequest class which automatically gets injected during the applicaiton startup. But when a request comes we start an async operation on separate thread and meanwhile sending an immediate response. So when coming back to that async execution,  at the piece of code where we are using HttpServletRequest method**getContextPath()**, we are geting IllegaStateException just like I mentioned above.   ",
                "time": "2020-07-14 17:16:43",
                "index": 12,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0de89c49fe21279494e9dd",
                "text": "So if i am not wrong,  basically it is not allowing to use the HttpServletRequest out of the main thread which receives the web request.",
                "time": "2020-07-14 17:17:16",
                "index": 13,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0de9043fb51c4967a1301f",
                "text": "Thinking to create a `RequestVo` and set all the required paramters from coming Request into that VO in the controller layer itself and pass on that RequestVo to the Async methods",
                "time": "2020-07-14 17:19:00",
                "index": 14,
                "user": "varma059_gitlab"
            },
            {
                "id": "5f0dfcf41cc04369596235a1",
                "text": "Yeah, that's what I would do. Generally speaking, I don't like request-scoped beans as it makes it more likely that you'll end up with components that should know nothing about the web layer dealing with things that are web-specific. Capturing the things from the request that you need and passing them into your async methods will help to keep things separated while also fixing the problem you're seeing.",
                "time": "2020-07-14 18:44:04",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5f0e6be654d58c013a427ff5",
                "text": "@wilkinsona  Yes. Thanks Andy",
                "time": "2020-07-15 02:37:26",
                "index": 17,
                "user": "varma059_gitlab"
            }
        ]
    },
    {
        "id": 66,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d2c416b3b41924785c14858",
                "text": "Hi guys i have a webApplication with spring boot and i have this Error in the Log.can any one tells me why it is showing???",
                "time": "2019-07-15 09:03:39",
                "index": 0,
                "user": "pariaSadatHosseiny"
            },
            {
                "id": "5d2c417c7dbfff3242af379a",
                "text": "ERROR o.s.boot.context.web.ErrorPageFilter - Cannot forward to error page for request [/vendor/jQuery/jquery-ui.js] as the response has already been committed. As a result, the response may have the wrong status code. If your application is running on WebSphere Application Server you may be able to resolve this problem by setting com.ibm.ws.webcontainer.invokeFlushAfterService to false\norg.apache.catalina.connector.ClientAbortException: java.io.IOException: Connection reset by peer",
                "time": "2019-07-15 09:03:56",
                "index": 1,
                "user": "pariaSadatHosseiny"
            },
            {
                "id": "5d2c44ac54d33839370dc960",
                "text": "@pariaSadatHosseiny it means that Spring Boot cannot render the error page, since the application already started writing the response. At that point, we can't write the error page because it would lead to garbage content in the response. In this case, it seems that the HTTP client disconnected while the server was writing the response. There's nothing you can do here.",
                "time": "2019-07-15 09:17:32",
                "index": 2,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 67,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ccb7c54990feb4518410a40",
                "text": "@wilkinsona I am setting up management server (actuator) on the `/` which disables the root `/` endpoint which lists all the endpoint. Is this by intention or by an error? \n\nThe issue is around `org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping#initHandlerMethods` which finds `this.endpointMapping.getPath()` equal to `` (i.e. empty string)",
                "time": "2019-05-02 23:25:08",
                "index": 0,
                "user": "JigarJoshi"
            },
            {
                "id": "5ccb7c6db489bb6ed705b416",
                "text": "with `management.endpoints.web.base-path=/`",
                "time": "2019-05-02 23:25:33",
                "index": 1,
                "user": "JigarJoshi"
            },
            {
                "id": "5ccb7dc48790b0307e3fd25e",
                "text": "the translation of `/` is being done here `org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties#cleanBasePath`",
                "time": "2019-05-02 23:31:16",
                "index": 2,
                "user": "JigarJoshi"
            },
            {
                "id": "5ccb7e048446a6023eb71ecb",
                "text": "I am curious what is the reason of not registering linksMapping `org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping#registerLinksMapping` ",
                "time": "2019-05-02 23:32:20",
                "index": 3,
                "user": "JigarJoshi"
            },
            {
                "id": "5ccb7e0fa4ef0974713c1654",
                "text": "in case of the base path is at the root",
                "time": "2019-05-02 23:32:31",
                "index": 4,
                "user": "JigarJoshi"
            },
            {
                "id": "5ccbf9048446a6023eba23a4",
                "text": "@JigarJoshi It's intentional as we don't want the actuator to clash with the rest of your application. For example, you may have a welcome page at `/`.",
                "time": "2019-05-03 08:17:08",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5ccc66953d78aa6c03dba2d3",
                "text": "@wilkinsona That is a good point however if I have management server running on different port than the main (regular) http server. Do you think of any scenario where it can clash? ",
                "time": "2019-05-03 16:04:37",
                "index": 14,
                "user": "JigarJoshi"
            }
        ]
    },
    {
        "id": 68,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce6b85dd22ba766a2e86553",
                "text": "hi guys, how to free memory to avoid the Java Heap Space error ?. I have configured `-Xms1024m -Xmx1024m`, but still sends me the error.\nThis happens when this method is executed several times:\n```\n    @Transactional(readOnly = true)\n    public Page<Distribucion> findAllByEstatusDistribucion(Long estatusdistribucion, Pageable pageable) {\n        log.debug(\"Request to get all Distribucions By Estatus Disribucion\");\n        Page<Distribucion> distribucions = distribucionRepository.findAllByEstatusDistribucionIdLessThan(estatusdistribucion, pageable);\n        for (Distribucion distribucion : distribucions) {\n            for (Viaje viaje : distribucion.getViajes()) {\n                Unidad unidad = unidadService.getUnidad(viaje.getUnidad().getId());\n                for (DocumentoViaje documentoViaje : viaje.getDocumentoViajes()) {\n                }\n                for (RutaViaje rutaViaje : viaje.getRutaViajes()) {\n                    Manifiesto manifiesto = manifiestoService.getManifiesto(rutaViaje.getManifiesto().getId());\n                }\n            }\n        }\n        return distribucions;\n    }\n```",
                "time": "2019-05-23 15:12:29",
                "index": 0,
                "user": "Ederagp"
            },
            {
                "id": "5ce6bedd75d9a575a630390c",
                "text": "@Ederagp Do you have any idea how big the pages are that are requested through the `Pageable` object? Maybe you can limit that to avoid needing so much memory?",
                "time": "2019-05-23 15:40:13",
                "index": 4,
                "user": "wimdeblauwe"
            },
            {
                "id": "5ce6e4537c363c75a72f6197",
                "text": "@wimdeblauwe for now I have the size of the page to 20 records, I'm going to reduce it and try it, in case the problem continues that you might suggest. Thank you",
                "time": "2019-05-23 18:20:03",
                "index": 10,
                "user": "Ederagp"
            },
            {
                "id": "5ce7b8b8879f4478c7d2dce5",
                "text": "@wimdeblauwe What's the connection between `.tmp` files and needing the shutdown hook when you're using the async appender? Looking at your `logback-spring.xml`,  you don't appear to be using the async appender",
                "time": "2019-05-24 09:26:16",
                "index": 43,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 69,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be2d0b792b7d117214f6a1a",
                "text": "Hi all, I asked something in the wrong place, in a GitHub issue, and @snicoll sent me ask here :) I\u2019m part of the Infinispan core developers, and I\u2019m working now on the infinispan-spring-boot starter. I\u2019m working on the integration of the actuator metrics. I\u2019ve realised working on that about the actuator metrics not being tracked for caches that are not present (or configured) in the startup. I\u2019ve been testing the spring-boot cache example. Caffeine seems to work if I modify the configuration and add the ```spring.cache.cache-names=countries``` in the application. propeties. However, hazelcast metrics don\u2019t seem to work (maybe I\u2019m doing something wrong) even if the cache is supposed to be configured in the hazelcast.xml and statistics are enabled. I would expect this to work. Infinispan does not work but I know it\u2019s not explicitly supported right now (something I\u2019m doing at least in our starter)",
                "time": "2018-11-07 11:47:03",
                "index": 0,
                "user": "karesti"
            },
            {
                "id": "5be2d1617326df140ecaa9b8",
                "text": "And If I add the ``` spring.cache.cache-names=countries``` in the example, and use infinispan, I get an error on startup (infinispan saying, hey you already configured this cache)",
                "time": "2018-11-07 11:49:53",
                "index": 1,
                "user": "karesti"
            },
            {
                "id": "5be2d1677a36913a9a054d5b",
                "text": "But that\u2019s another issue haha",
                "time": "2018-11-07 11:49:59",
                "index": 2,
                "user": "karesti"
            },
            {
                "id": "5be2d1949600d10e64712439",
                "text": "I\u2019m wondering about the best way to handle these issues in our starter for spring-boot & infinispan users",
                "time": "2018-11-07 11:50:44",
                "index": 3,
                "user": "karesti"
            },
            {
                "id": "5be2d1bcf1b87534048b143b",
                "text": "our starter here: https://github.com/infinispan/infinispan-spring-boot/pull/64",
                "time": "2018-11-07 11:51:24",
                "index": 4,
                "user": "karesti"
            },
            {
                "id": "5be2d7ba62866f7473600802",
                "text": "I would expect in the example, to ```spring.cache.jcache.config=classpath:infinispan.xml ``` to work too",
                "time": "2018-11-07 12:16:58",
                "index": 5,
                "user": "karesti"
            },
            {
                "id": "5be2dcdc92b7d117214fb94e",
                "text": "It depends what the infinispan `CacheManager` implementation does",
                "time": "2018-11-07 12:38:52",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5be2dd03d001b9172021f1de",
                "text": "Micrometer doesn\u2019t have infinispan support as far as I know. There\u2019s no magic there, you need one",
                "time": "2018-11-07 12:39:31",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5be2dd2fbb06d73a99384957",
                "text": "You need a `CacheMeterBinderProvider` implementation registered in the context for `InfinispanCache`",
                "time": "2018-11-07 12:40:15",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5be2dd40e8add80e63b584f0",
                "text": "And you need a `MeterBinder` implementation for Infinispan",
                "time": "2018-11-07 12:40:32",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5be2dd4347217e07ffe57eb3",
                "text": "@karesti ^^",
                "time": "2018-11-07 12:40:35",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5be2dd684e7ca145206a58d8",
                "text": "The JCache stuff should work yes. We have support for that out of the box as long as statistics are enabled",
                "time": "2018-11-07 12:41:12",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5be2dd7262866f7473602d12",
                "text": "Do you have a sample that demonstrates the opposite I can look at?",
                "time": "2018-11-07 12:41:22",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5be2dd7392b7d117214fbd26",
                "text": "@snicoll yep, I did that in our starter",
                "time": "2018-11-07 12:41:23",
                "index": 13,
                "user": "karesti"
            },
            {
                "id": "5be2dda092b7d117214fbda6",
                "text": "Sorry I didn\u2019t look at the link. Do you have a sample I can clone and run that shows the problem?",
                "time": "2018-11-07 12:42:08",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5be2ddcbc0e6da07feeb3281",
                "text": "the exampe i\u2019ve been playing with is https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples/spring-boot-sample-cache",
                "time": "2018-11-07 12:42:51",
                "index": 15,
                "user": "karesti"
            },
            {
                "id": "5be2ddfa7a36913a9a05a4f3",
                "text": "I can\u2019t clone and run that, can I ?",
                "time": "2018-11-07 12:43:38",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5be2de00e8add80e63b588ed",
                "text": "(to reproduce the infinispan bug)",
                "time": "2018-11-07 12:43:44",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5be2de37bb887874748fc108",
                "text": "That infinspan file doesn\u2019t enable metrics",
                "time": "2018-11-07 12:44:39",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5be2de6f47217e07ffe586fe",
                "text": "I enabled it ",
                "time": "2018-11-07 12:45:35",
                "index": 19,
                "user": "karesti"
            },
            {
                "id": "5be2de80e8add80e63b58c51",
                "text": "Again, can you please provide something I can clone and run? ",
                "time": "2018-11-07 12:45:52",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5be2debd4e7ca145206a60a7",
                "text": "ok",
                "time": "2018-11-07 12:46:53",
                "index": 21,
                "user": "karesti"
            },
            {
                "id": "5be2df12bb887874748fc8ee",
                "text": "No metrics with Hazelcast on that sample, indeed. Investigating",
                "time": "2018-11-07 12:48:18",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5be2df1a7a36913a9a05acea",
                "text": "ok ",
                "time": "2018-11-07 12:48:26",
                "index": 23,
                "user": "karesti"
            },
            {
                "id": "5be2dfcd3102f1452163c756",
                "text": "@karesti that old bug :/ `HazecastCacheManager` does not expose the caches that it creates on startup. You have to ask for it to initialize it lazily. Super annoying but already reported and nothing we can do",
                "time": "2018-11-07 12:51:25",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5be2dfeabb887874748fd054",
                "text": "In other words, `cacheManager.getCache(\u201ccountries\u201d)` will effectively do the right thing and the set will contain at that time the cache name. Not upfront",
                "time": "2018-11-07 12:51:54",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5be2dffbf1b87534048b785e",
                "text": "From that perspective, Hazelcast metrics is kind of broken",
                "time": "2018-11-07 12:52:11",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5be2e018bb887874748fd120",
                "text": "Can you tell what you\u2019ve changed in `infinispan.xml` to enable JCache stats?",
                "time": "2018-11-07 12:52:40",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5be2e035bb887874748fd1b2",
                "text": "(Note that this code doesn\u2019t use the official infinispan starter but the basic integration in Spring Boot. Perhaps we should remove that at some point)",
                "time": "2018-11-07 12:53:09",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5be2e054e8add80e63b599b7",
                "text": "the official starter you mean the one infinispan team has been working on ?",
                "time": "2018-11-07 12:53:40",
                "index": 29,
                "user": "karesti"
            },
            {
                "id": "5be2e05d62866f74736040af",
                "text": "Yup",
                "time": "2018-11-07 12:53:49",
                "index": 30,
                "user": "snicoll"
            },
            {
                "id": "5be2e093e8add80e63b59a82",
                "text": "```statistics-available=true```",
                "time": "2018-11-07 12:54:43",
                "index": 31,
                "user": "karesti"
            },
            {
                "id": "5be2e0a17a36913a9a05b65e",
                "text": "```<local-cache name=\"countries\" statistics-available=\"true\u201d>```",
                "time": "2018-11-07 12:54:57",
                "index": 32,
                "user": "karesti"
            },
            {
                "id": "5be2e0b07a36913a9a05b68f",
                "text": "and the ```spring.cache.jcache.config=classpath:infinispan.xml```",
                "time": "2018-11-07 12:55:12",
                "index": 33,
                "user": "karesti"
            },
            {
                "id": "5be2e0d7bb06d73a99385ecf",
                "text": "if I add ```spring.cache.cache-names=countries``` with infinispan profile, it fails (this doesn\u2019t failt with hazelcast)",
                "time": "2018-11-07 12:55:51",
                "index": 34,
                "user": "karesti"
            },
            {
                "id": "5be2e0f747217e07ffe59915",
                "text": "Infinispan doesn\u2019t not allow you to create a cache that already exists",
                "time": "2018-11-07 12:56:23",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5be2e0fd92b7d117214fd320",
                "text": "Nothing wrong with that. ",
                "time": "2018-11-07 12:56:29",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5be2e12b3102f1452163cf4f",
                "text": "but it could at least fail woth a warning or something. We can getOrCreate caches now ",
                "time": "2018-11-07 12:57:15",
                "index": 37,
                "user": "karesti"
            },
            {
                "id": "5be2e137d001b91720220c04",
                "text": "\u201cit\u201d?",
                "time": "2018-11-07 12:57:27",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5be2e13d62866f74736045e3",
                "text": "OK let\u2019s focus at one problem at a time please",
                "time": "2018-11-07 12:57:33",
                "index": 39,
                "user": "snicoll"
            },
            {
                "id": "5be2e14ae8add80e63b5a0d3",
                "text": "yes, this is another issue, I agree, sorry ",
                "time": "2018-11-07 12:57:46",
                "index": 40,
                "user": "karesti"
            },
            {
                "id": "5be2e18ae8add80e63b5a221",
                "text": "which is not a big issue, I was just trying to declare the name of the cache in the property to see if statistics were linked (this is the case with caffeine) ",
                "time": "2018-11-07 12:58:50",
                "index": 41,
                "user": "karesti"
            },
            {
                "id": "5be2e19e47217e07ffe59da1",
                "text": "Hold on wait",
                "time": "2018-11-07 12:59:10",
                "index": 42,
                "user": "snicoll"
            },
            {
                "id": "5be2e1b192b7d117214fd813",
                "text": "So the thing you\u2019ve changed locally to enable the statistics enable the Infinispan specific statistics. That doesn\u2019t not enable JCache stats",
                "time": "2018-11-07 12:59:29",
                "index": 43,
                "user": "snicoll"
            },
            {
                "id": "5be2e1c43102f1452163d236",
                "text": "oh ok! ",
                "time": "2018-11-07 12:59:48",
                "index": 44,
                "user": "karesti"
            },
            {
                "id": "5be2e1c4bb06d73a993866b8",
                "text": "I have the sample running now, I Can see the infinispan specific MBean but the JCache standard MBeans aren\u2019t deployed so we can\u2019t expose the stats",
                "time": "2018-11-07 12:59:48",
                "index": 45,
                "user": "snicoll"
            },
            {
                "id": "5be2e1df62866f747360494a",
                "text": "So that problem is out of the way. You need to figure out how to configure JCache stats with the infinispan provider. I am afraid I don\u2019t know how to do that",
                "time": "2018-11-07 13:00:15",
                "index": 46,
                "user": "snicoll"
            },
            {
                "id": "5be2e202e8add80e63b5a4ef",
                "text": "What is the stacktrace of the error for the `cache-name` property with Infinispan?",
                "time": "2018-11-07 13:00:50",
                "index": 47,
                "user": "snicoll"
            },
            {
                "id": "5be2e229c0e6da07feeb50b7",
                "text": "org.infinispan.commons.CacheConfigurationException: ISPN000453: Attempt to define configuration for cache countries which already exists",
                "time": "2018-11-07 13:01:29",
                "index": 48,
                "user": "karesti"
            },
            {
                "id": "5be2e23e7326df140ecb1bef",
                "text": "That\u2019s an error from the Infinispan implementation. What do you expect us (Spring Boot) to do exactly?",
                "time": "2018-11-07 13:01:50",
                "index": 49,
                "user": "snicoll"
            },
            {
                "id": "5be2e26c3102f1452163d5ec",
                "text": "I\u2019m not sure, tbh",
                "time": "2018-11-07 13:02:36",
                "index": 50,
                "user": "karesti"
            },
            {
                "id": "5be2e27a7a36913a9a05c192",
                "text": "the cache name property is listing the cache names that you want to create upfront",
                "time": "2018-11-07 13:02:50",
                "index": 51,
                "user": "snicoll"
            },
            {
                "id": "5be2e289f1b87534048b87fc",
                "text": "For any serious use case, I wouldn\u2019t recommend you to do that. The library specific configuration file is what you must use",
                "time": "2018-11-07 13:03:05",
                "index": 52,
                "user": "snicoll"
            },
            {
                "id": "5be2e29bbb887874748fe174",
                "text": "so if you are usng caffeine",
                "time": "2018-11-07 13:03:23",
                "index": 53,
                "user": "karesti"
            },
            {
                "id": "5be2e2a39600d10e6471955b",
                "text": "for example",
                "time": "2018-11-07 13:03:31",
                "index": 54,
                "user": "karesti"
            },
            {
                "id": "5be2e2acf1b87534048b8a61",
                "text": "As for `getOrCreate` there\u2019s no such method at the interface level. We can\u2019t really call an Infinispan specific contract there",
                "time": "2018-11-07 13:03:40",
                "index": 55,
                "user": "snicoll"
            },
            {
                "id": "5be2e2ad7a36913a9a05c208",
                "text": "and you want to track your local cache with stats",
                "time": "2018-11-07 13:03:41",
                "index": 56,
                "user": "karesti"
            },
            {
                "id": "5be2e2b992b7d117214fdfe4",
                "text": "You can create the caches upfront using the builder",
                "time": "2018-11-07 13:03:53",
                "index": 57,
                "user": "snicoll"
            },
            {
                "id": "5be2e2cb3102f1452163d72f",
                "text": "or you can list the cache names + a spec if you don\u2019t need different configuration per caches",
                "time": "2018-11-07 13:04:11",
                "index": 58,
                "user": "snicoll"
            },
            {
                "id": "5be2e2d27326df140ecb1f84",
                "text": "for simple apps it might be enough",
                "time": "2018-11-07 13:04:18",
                "index": 59,
                "user": "snicoll"
            },
            {
                "id": "5be2e2dc4e7ca145206a7bf9",
                "text": "You can also create caches using a `CacheManagerCustomizer`",
                "time": "2018-11-07 13:04:28",
                "index": 60,
                "user": "snicoll"
            },
            {
                "id": "5be2e2eb9600d10e64719876",
                "text": "All that runs before we initializr metrics",
                "time": "2018-11-07 13:04:43",
                "index": 61,
                "user": "snicoll"
            },
            {
                "id": "5be2e31dbb887874748fe69d",
                "text": "Caffeine doesn\u2019t have an external file store for configuration so it\u2019s just different",
                "time": "2018-11-07 13:05:33",
                "index": 62,
                "user": "snicoll"
            },
            {
                "id": "5be2e348f1b87534048b9299",
                "text": "in our case, in the starter, then the recommened way for stats should be 1) add actuator 2) create caches upfront (code, xml whatever) and enable statistics",
                "time": "2018-11-07 13:06:16",
                "index": 63,
                "user": "karesti"
            },
            {
                "id": "5be2e3609600d10e64719be8",
                "text": "That\u2019s the only recommended way I know of",
                "time": "2018-11-07 13:06:40",
                "index": 64,
                "user": "snicoll"
            },
            {
                "id": "5be2e383bb06d73a9938738b",
                "text": "If you really have a use case where you need to create a cache on the fly, then you can bind that to the registry using `CacheMetricsRegistrar` as explained in the doc",
                "time": "2018-11-07 13:07:15",
                "index": 65,
                "user": "snicoll"
            },
            {
                "id": "5be2e3bbf1b87534048b9607",
                "text": "There are some discussion to make that more transparent and I need to get back to it for Spring Framework 5.2. ",
                "time": "2018-11-07 13:08:11",
                "index": 66,
                "user": "snicoll"
            },
            {
                "id": "5be2e3cb2138723405cc6ad7",
                "text": "How is this a problem exactly? Don\u2019t users have an `infinispan.xml` with their config?",
                "time": "2018-11-07 13:08:27",
                "index": 67,
                "user": "snicoll"
            },
            {
                "id": "5be2e3e7bb887874748febae",
                "text": "the xml is not mandatory",
                "time": "2018-11-07 13:08:55",
                "index": 68,
                "user": "karesti"
            },
            {
                "id": "5be2e3fcbb887874748fec42",
                "text": "Yeah whatever the mechanism. I meant having a place somewhere where caches are defined",
                "time": "2018-11-07 13:09:16",
                "index": 69,
                "user": "snicoll"
            },
            {
                "id": "5be2e405bb887874748fecba",
                "text": "I would expect this to be the regular use case.",
                "time": "2018-11-07 13:09:25",
                "index": 70,
                "user": "snicoll"
            },
            {
                "id": "5be2e487bb887874748fefea",
                "text": "So, is there a problem @karesti? Sorry if I am slow but I am not sure I get it",
                "time": "2018-11-07 13:11:35",
                "index": 71,
                "user": "snicoll"
            },
            {
                "id": "5be2e4b7e8add80e63b5b791",
                "text": "No, I was just wondering about the best user experience for a simple example, and how to bind stats easily for a simple cache",
                "time": "2018-11-07 13:12:23",
                "index": 72,
                "user": "karesti"
            },
            {
                "id": "5be2e4d1c0e6da07feeb5fc2",
                "text": "Make sure `InfinispanCacheManager.getCacheNames()` returns the list of caches it knows about on startup",
                "time": "2018-11-07 13:12:49",
                "index": 73,
                "user": "snicoll"
            },
            {
                "id": "5be2e4f37a36913a9a05d6e6",
                "text": "Spring Boot doesn\u2019t care how they were configured but we need the list to bind them to the `MeterRegistry`",
                "time": "2018-11-07 13:13:23",
                "index": 75,
                "user": "snicoll"
            },
            {
                "id": "5be2e501bb06d73a99387b82",
                "text": "But you are right @snicoll about the regular use case ",
                "time": "2018-11-07 13:13:37",
                "index": 76,
                "user": "karesti"
            },
            {
                "id": "5be2e50e7326df140ecb2eab",
                "text": "OK cool. Let me know if you need a review on the Infinispan implementation",
                "time": "2018-11-07 13:13:50",
                "index": 77,
                "user": "snicoll"
            },
            {
                "id": "5be2e51ebb887874748ff525",
                "text": "Just ping me on a PR, happy to help",
                "time": "2018-11-07 13:14:06",
                "index": 78,
                "user": "snicoll"
            },
            {
                "id": "5be2e53247217e07ffe5b450",
                "text": "and I tried calling the ```bindCacheToRegistry``` and works perfectly (for users that would need to create a cache on the fly and bind stats)",
                "time": "2018-11-07 13:14:26",
                "index": 79,
                "user": "karesti"
            },
            {
                "id": "5be2e5722138723405cc77a6",
                "text": "@snicoll I will, my PR is almost meargeable, so I\u2019m pinging back just after, thank you !! :)",
                "time": "2018-11-07 13:15:30",
                "index": 83,
                "user": "karesti"
            },
            {
                "id": "5be2e59c4e7ca145206a9132",
                "text": "@karesti so the backstory for 5.2 is that we want to introduce an event that would be fired whenever a cache is created on the fly. Then Spring Boot could have a listener for that and call `bindCacheToRegistry` for you. If the `InfinispanCacheManager` is updated to honour that new contract, that would remove everything we\u2019ve discussed",
                "time": "2018-11-07 13:16:12",
                "index": 85,
                "user": "snicoll"
            },
            {
                "id": "5be2e5eabb06d73a99388174",
                "text": "@snicoll yep, I\u2019ve been reading the issue and voted for it haha",
                "time": "2018-11-07 13:17:30",
                "index": 88,
                "user": "karesti"
            },
            {
                "id": "5be2e6012138723405cc7b41",
                "text": "This ? https://jira.spring.io/browse/SPR-17350 ",
                "time": "2018-11-07 13:17:53",
                "index": 89,
                "user": "snicoll"
            },
            {
                "id": "5be2e610bb887874748ffd18",
                "text": "yes, is that the issue you are talking about ?",
                "time": "2018-11-07 13:18:08",
                "index": 90,
                "user": "karesti"
            },
            {
                "id": "5be2e614f1b87534048ba5f5",
                "text": "I am",
                "time": "2018-11-07 13:18:12",
                "index": 91,
                "user": "snicoll"
            },
            {
                "id": "5be2e6189600d10e6471b1df",
                "text": "the issue I mean ticket",
                "time": "2018-11-07 13:18:16",
                "index": 92,
                "user": "karesti"
            },
            {
                "id": "5be2e624e8add80e63b5c0b9",
                "text": "If you have an idea for the event name or how we could design this, please leave a comment",
                "time": "2018-11-07 13:18:28",
                "index": 93,
                "user": "snicoll"
            },
            {
                "id": "5be2e62a6b9822140df240a7",
                "text": "or request or whatever wording you use haha ok, cool",
                "time": "2018-11-07 13:18:34",
                "index": 94,
                "user": "karesti"
            },
            {
                "id": "5be2e62fe8add80e63b5c0e1",
                "text": "Issue :)",
                "time": "2018-11-07 13:18:39",
                "index": 95,
                "user": "snicoll"
            },
            {
                "id": "5be2e63792b7d117214ffb66",
                "text": "Ticket is what I\u2019d say in French",
                "time": "2018-11-07 13:18:47",
                "index": 96,
                "user": "snicoll"
            },
            {
                "id": "5be2e6627326df140ecb366f",
                "text": "Well, TBH, I do still merge english and french sometimes when writing or speaking haha",
                "time": "2018-11-07 13:19:30",
                "index": 98,
                "user": "karesti"
            }
        ]
    },
    {
        "id": 70,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bea9da5fee6703aaf62c62d",
                "text": "what is the recommended way of dealing with a post in webflux that may return an not-empty or an empty response? Getting `Only one connection receive subscriber allowed` for empty responses.",
                "time": "2018-11-13 09:47:17",
                "index": 0,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5beaa528fee6703aaf62fa41",
                "text": "@marcguilera-casumo this message means that you're subscribing several times to the same request/response body. Do you have a snippet of what you're trying to achieve?",
                "time": "2018-11-13 10:19:20",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5beaa740bb88787474c0204a",
                "text": "```\n            webClient.post()\n                    .uri(\"$endpoint/{playerId}/$requestPath\", playerId)\n                    .accept(MediaType.APPLICATION_JSON)\n                    .header(HttpHeaders.AUTHORIZATION, authHeader)\n                    .syncBody(request as Any)\n                    .exchange()\n                    .flatMap {\n                        if (!it.statusCode().is2xxSuccessful)\n                            parseError(it)\n                        else if (isEmptyResponse(it))\n                            Mono.empty<BalanceResponse>()\n                        else\n                            it.bodyToMono(BalanceResponse::class.java)\n                    }\n```\nThis worked but it's ugly\n\n```\nwebClient.post()\n                    .uri(\"$walletEndpointUrl/{playerId}/$requestPath\", playerId)\n                    .accept(MediaType.APPLICATION_JSON)\n                    .header(HttpHeaders.AUTHORIZATION, authHeader)\n                    .syncBody(request as Any)\n                    .retrieve()\n                    .bodyToMono(BalanceResponse::class.java)\n```\nThis doesn't work",
                "time": "2018-11-13 10:28:16",
                "index": 10,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5beaa8217326df140efb3959",
                "text": "How is this not working? Which case? What happens?",
                "time": "2018-11-13 10:32:01",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5beaa833d001b91720528088",
                "text": "when the response is empty it will give me that error",
                "time": "2018-11-13 10:32:19",
                "index": 12,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5beaa87dfee6703aaf6312a4",
                "text": "downstream i'm using `subscriberContext` which creates a mono subscriber which could be the second subscriber you are talking about. it wouldn't explain why it works with non-empty responses though",
                "time": "2018-11-13 10:33:33",
                "index": 13,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5beaac33f1b8753404bbdcbd",
                "text": "@marcguilera-casumo what are the HTTP response headers when the response body is empty?",
                "time": "2018-11-13 10:49:23",
                "index": 14,
                "user": "bclozel"
            },
            {
                "id": "5beaacea62866f74739041ea",
                "text": "@marcguilera-casumo what is being logged if you add a `log()` operator right after the bodyToMono in case the response body is empty?",
                "time": "2018-11-13 10:52:26",
                "index": 15,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 71,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c6319ccadf6cb0b2ca96c05",
                "text": "I'm starting to play with Spring Boot (in Kotlin) with MongoDB. I've been able to add auth (with a custom auth system) and pretty impressed by how easy it was to do all of that. But I'm struggling to find a way to output fields from the document that would not be in my model. Is this something possible?",
                "time": "2019-02-12 19:09:00",
                "index": 0,
                "user": "bjonnh"
            },
            {
                "id": "5c631a56ef98455ea4246596",
                "text": "lets say my model handles {\"name\": \"bjonnh\"} but my mongo contains {\"name\": \"bjonnh\", \"location\":\"chicago\"} can I still get it to output the location with a rest query",
                "time": "2019-02-12 19:11:18",
                "index": 1,
                "user": "bjonnh"
            },
            {
                "id": "5c631a5f4bafd97ca3de9d67",
                "text": "(without having my model to know about that)",
                "time": "2019-02-12 19:11:27",
                "index": 2,
                "user": "bjonnh"
            },
            {
                "id": "5c63f9c580df6804a198b453",
                "text": "@bjonnh you can use one of the solutions mentioned here: https://stackoverflow.com/questions/18304516/how-to-return-raw-json-directly-from-a-mongodb-query-in-java to get the JSON and parse it without involving your normal model.",
                "time": "2019-02-13 11:04:37",
                "index": 9,
                "user": "AlexCzar"
            },
            {
                "id": "5c64424eadf6cb0b2cb184de",
                "text": "@AlexCzar  thanks",
                "time": "2019-02-13 16:14:06",
                "index": 23,
                "user": "bjonnh"
            }
        ]
    },
    {
        "id": 72,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5cfa7401702b7e5e7645b7b2",
                "text": "I need to upgrade Spring Boot and Spring framework version. Is there a how-to guide that I can refer to for doing it? (Like in a particular order etc)",
                "time": "2019-06-07 14:26:09",
                "index": 0,
                "user": "void4291"
            },
            {
                "id": "5cfa928eff3f016baabf8a2d",
                "text": "@WajahatRahman Upgrading Spring Boot will automatically upgrade Spring Framework for you (assuming that you haven't manually overridden the version of the latter)",
                "time": "2019-06-07 16:36:30",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cfa92b482c2dc79a5694574",
                "text": "If you're upgrading from 1.x to 2.x, I would recommend reading the [migration guide](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide).",
                "time": "2019-06-07 16:37:08",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cfa9757bf4cbd167c48b415",
                "text": "@wilkinsona Thanks for the reply Andy. Yes you're correct, I'm planning to upgrade from 1.5 to 2.x. I did find links such as [this](https://dzone.com/articles/spring-boot-migration-from-15-to-205-release)  for reference. Seems that I have to update dependencies and some config references and also would have to refer the migration guide you mentioned. My only question is that would both of these docs suffice for the complete upgrade? ",
                "time": "2019-06-07 16:56:55",
                "index": 3,
                "user": "void4291"
            },
            {
                "id": "5cfa98ac9b50f639359b5028",
                "text": "I would hope so. From what I've heard, users have had a good experience upgrading from 1.x to 2.x using the migration guide.",
                "time": "2019-06-07 17:02:36",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5cfa997d9b50f639359b5527",
                "text": "Sounds good. Thank you :)",
                "time": "2019-06-07 17:06:05",
                "index": 5,
                "user": "void4291"
            }
        ]
    },
    {
        "id": 73,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c68667528c89123cbddda62",
                "text": "guys please any one suggest me from where i have to start spring Boot learning...",
                "time": "2019-02-16 19:37:25",
                "index": 0,
                "user": "vrgkwd"
            },
            {
                "id": "5c6a16f54bafd97ca30d324d",
                "text": "@vrgkwd baeldung is a good option",
                "time": "2019-02-18 02:22:45",
                "index": 8,
                "user": "ashutoshanand13"
            }
        ]
    },
    {
        "id": 74,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ef99485fa0c9221fc685a8d",
                "text": "Hi, I am using spring boot version 2.3.1 RELEASE with spring cloud version Finchley.SR1, I also have camel dependencies. I have 2 issues , Spring boot not picking the bootstrap.yml file and though the management.server.port and management.servlet.context-path are set the actuator base path is set to ''",
                "time": "2020-06-29 07:13:09",
                "index": 0,
                "user": "DeviRoopshekar"
            },
            {
                "id": "5efa675d405be935cdce0c94",
                "text": "@DeviRoopshekar I don\u2019t believe that Finchley is compatible with Spring Boot 2.3. You should upgrade to Spring Cloud Hoxton.",
                "time": "2020-06-29 22:12:45",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5efa95a554d7862dc4b862b4",
                "text": "@DeviRoopshekar yeah latest of Hoxton is compatible. I have tried it.",
                "time": "2020-06-30 01:30:13",
                "index": 7,
                "user": "SauriBabu"
            }
        ]
    },
    {
        "id": 75,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c42137c7a0f4d5b19cd882b",
                "text": "Hi all.. does anybody have `querydsl` running in `gradle` based `spring boot` project?",
                "time": "2019-01-18 17:57:16",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5c42efd8dab15872cebac07b",
                "text": "@pmihalcin yes, but had to fork and patch it because it doesn\u2019t work with latest hibernate versions. (Depending on the types of queries you write)\nSee multiple issues on querydsl repo like this one: https://github.com/querydsl/querydsl/issues/2326 \nNothing is moving on this project for ages and that\u2019s a pity.",
                "time": "2019-01-19 09:37:28",
                "index": 4,
                "user": "ask4gilles"
            }
        ]
    },
    {
        "id": 76,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e221b2d5cd79646606a03c4",
                "text": "Hi! how can I force one of my  app's @Configuration @Beans to be loaded before an @AutoConfiguration one?  My local bean instantiation actions a side-effect that is relevant to the @AutConfiguration bean runtime instantiation logic. The thing is both have as a dependency a previosusly autoconfigured bean",
                "time": "2020-01-17 20:38:05",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5e221f3a4c1f9679ec03bd65",
                "text": "Is there such a thing as @IsDependedBy as opposed to @DependsOn? I cannot edit my third-party libs",
                "time": "2020-01-17 20:55:22",
                "index": 1,
                "user": "nightswimmings"
            },
            {
                "id": "5e2222095cd79646606a32ec",
                "text": "Or @InitializeBefore",
                "time": "2020-01-17 21:07:21",
                "index": 2,
                "user": "nightswimmings"
            },
            {
                "id": "5e2225a7c7647778a5df2992",
                "text": "It must be a way with BeanPostProcessor and InitializzingBean",
                "time": "2020-01-17 21:22:47",
                "index": 3,
                "user": "nightswimmings"
            },
            {
                "id": "5e2226a11e9c781403108cef",
                "text": "@nightswimmings you could make your app configuration auto-configuration (e.g. register it in `META-INF/spring.factories` `org.springframework.boot.autoconfigure.EnableAutoConfiguration` and use `@AutoConfigureBefore`",
                "time": "2020-01-17 21:26:57",
                "index": 4,
                "user": "scottfrederick"
            },
            {
                "id": "5e222d3e4c1f9679ec04174f",
                "text": "@scottfrederick  mmmh that is pretty clever. Thanks for the suggestion!",
                "time": "2020-01-17 21:55:10",
                "index": 6,
                "user": "nightswimmings"
            },
            {
                "id": "5e2230990289c83ba2b67404",
                "text": "Looks like it has no effect. At least on test (spring.factories on main)",
                "time": "2020-01-17 22:09:29",
                "index": 7,
                "user": "nightswimmings"
            },
            {
                "id": "5e2256db0dbd9379ed547ca1",
                "text": "@scottfrederick   Got it with \n```\n    @Bean\n    public BeanFactoryPostProcessor dependsOnPostProcessor() {\n        return (beanFactory) -> beanFactory.getBeanDefinition(\"AutConfiguredBean\").setDependsOn(\"locallyConfiguredBean\");\n    }```",
                "time": "2020-01-18 00:52:43",
                "index": 12,
                "user": "nightswimmings"
            }
        ]
    },
    {
        "id": 77,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bbc76695331811c2e732a2c",
                "text": "Hi all.. I'm in the process of upgrading to `2.0.X.RELEASE`\nand the application is failing to bootstrap:\n```\n\norg.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'cacheManager': Requested bean is currently in creation: Is there an unresolvable circular reference?\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nThe dependencies of some of the beans in the application context form a cycle:\n\n\n      \u2193\n   (inner bean)#33673431\n\u250c\u2500\u2500\u2500\u2500\u2500\u2510\n|  cacheManager defined in class path resource [org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class]\n\u2191     \u2193\n|  cacheConfig defined in file [CacheConfig.class]\n\u2191     \u2193\n|  specificationRepository\n\u2191     \u2193\n|  (inner bean)#2dcc6ae4\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n`CacheConfig` is:\n\n```\n@Configuration\n@EnableCaching\n@RequiredArgsConstructor\npublic class CacheConfig {\n\n    private final SpecificationRepository specificationRepository;\n\n    @SuppressWarnings(\"unchecked\")\n    @Bean\n    public Cache activeSpecificationsCache() {\n        LoadingCache<Long, Specification> loadingCache = newBuilder()\n                .recordStats()\n                .build(this::loader);\n\n        return new CaffeineCache(\"cache\", (com.github.benmanes.caffeine.cache.Cache) loadingCache);\n    }\n\n    private Specification loader(Long specificationId) {\n        return specificationRepository.findById(specificationId).get();\n    }\n}\n```\n\nand `SpecificationRepository ` is\n\n```\npublic interface SpecificationRepository extends JpaRepository<Specification, Long>,\n        QuerydslPredicateExecutor<Specification>,\n        QuerydslBinderCustomizer<QSpecification> {}\n```\n\nWas there any change in Boot 2 what would cause this behavior?\nThis code works in 1.5.X",
                "time": "2018-10-09 09:35:37",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc7958600c5f6423796ce5",
                "text": "i think it has something to do with the classes you extended",
                "time": "2018-10-09 09:48:08",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bbc7966435c2a518e7672fc",
                "text": "had that same problem a while back",
                "time": "2018-10-09 09:48:22",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bbc79bc435c2a518e7675f1",
                "text": "i\u2019m sorry but shouldn\u2019t the second parameter for JpaRepository supposed to be the type of the ID?",
                "time": "2018-10-09 09:49:48",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bbc79d7600c5f64237970c7",
                "text": "yes, `Long` is `ID` type",
                "time": "2018-10-09 09:50:15",
                "index": 4,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc7a4ac7bf7c3662dd5a2c",
                "text": "this is how i did the second class: ```QuerydslBinderCustomizer<Specification>```",
                "time": "2018-10-09 09:52:10",
                "index": 5,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bbc7a6f5331811c2e73471d",
                "text": "that's wrong what you did there.. look at `QuerydslBinderCustomizer` what it expects",
                "time": "2018-10-09 09:52:47",
                "index": 6,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc7a7ce65a634336a90698",
                "text": "there is nothing wrong with my `SpecificationRepository `",
                "time": "2018-10-09 09:53:00",
                "index": 7,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc7aa3ae7be9401626690b",
                "text": "Okay. so far i\u2019ve already rolled out my code and there\u2019s no issue with it so far",
                "time": "2018-10-09 09:53:39",
                "index": 8,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bbc7b3538449236610a9d94",
                "text": "getting off topic here.. there is no issue with Spring Data repo \n\ncould anyone please explain why I'm getting cycle when I add `LoadingCache` bean on top of `Repository`?",
                "time": "2018-10-09 09:56:05",
                "index": 9,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc7bce271506518dded4bf",
                "text": "or some advice how to approach this issue?",
                "time": "2018-10-09 09:58:38",
                "index": 10,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc810c271506518ddef891",
                "text": "There\u2019s nothing about loading cache in the code you\u2019ve pasted. Rather than code in text where we have to guess, we very much prefer a sample we can run ourselves",
                "time": "2018-10-09 10:21:00",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bbc8994ae7be9401626df2a",
                "text": "@snicoll \nThere is this bean, see:\n\n```\n    @SuppressWarnings(\"unchecked\")\n    @Bean\n    public Cache activeSpecificationsCache() {\n        LoadingCache<Long, Specification> loadingCache = newBuilder()\n                .recordStats()\n                .build(this::loader);\n\n        return new CaffeineCache(\"cache\", (com.github.benmanes.caffeine.cache.Cache) loadingCache);\n    }\n```",
                "time": "2018-10-09 10:57:24",
                "index": 16,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc8ba8c08b8b3067f2f442",
                "text": "@snicoll I'll try to put together a sample",
                "time": "2018-10-09 11:06:16",
                "index": 20,
                "user": "pmihalcin"
            },
            {
                "id": "5bbc91176e5a401c2d3ee7d6",
                "text": "@snicoll I pushed minimalistic sample here: https://github.com/pmihalcin/spring-data-repository-cache",
                "time": "2018-10-09 11:29:27",
                "index": 21,
                "user": "pmihalcin"
            },
            {
                "id": "5bbcc41bc7bf7c3662dfbb0d",
                "text": "@snicoll Let me know if there is anything I should add or there is something not working with sample",
                "time": "2018-10-09 15:07:07",
                "index": 27,
                "user": "pmihalcin"
            },
            {
                "id": "5bbcc4da38449236610cfe8e",
                "text": "@pmihalcin I haven\u2019t had a time to look at it",
                "time": "2018-10-09 15:10:18",
                "index": 32,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 78,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c5d94afdc3f0523cc7ec441",
                "text": "json response I get from a RestTemplate call has multiple root elements. Does it sound right ? \n\n```\n{  \n   \"preview\":false,\n   \"offset\":0,\n   \"result\":{  \n      \"_time\":\"2019-02-08 09:01:57.280 EST\",\n      \"exited\":\"1549634517.354\",\n      \"sno\":\"123\",\n      \"order\":\"NA\",\n      \"amt\":\"NA\",\n      \"tpc\":\"amzn12\",\n      \"id\":\"12345\",\n      \"id2\":\"12345\",\n      \"bto\":\"NA\",\n      \"sto\":\"NA\",\n      \"maccn\":\"NA\",\n      \"status\":\"START\",\n      \"message\":\"NA\",\n      \"tFormat\":\"NA\",\n      \"hstart\":\"server02.example.com\",\n      \"p_in\":\"ab:224494ds\",\n      \"p_out\":\"NA\",\n      \"p_ePo\":\"NA\"\n   }\n}{  \n   \"preview\":false,\n   \"offset\":1,\n   \"result\":{  \n      \"_time\":\"2019-02-08 09:01:58.174 EST\",\n      \"exited\":\"1549634518.247\",\n      \"sno\":\"49394392\",\n      \"order\":\"NA\",\n      \"amt\":\"16.43\",\n      \"tpc\":\"goog321\",\n      \"id\":\"3393\",\n      \"id2\":\"3393\",\n      \"bto\":\"6\",\n      \"sto\":\"1550\",\n      \"maccn\":\"4934\",\n      \"status\":\"START\",\n      \"message\":\"NA\",\n      \"tFormat\":\"NA\",\n      \"hstart\":\"server01.example.com\",\n      \"p_in\":\"NA\",\n      \"p_out\":\"NA\",\n      \"p_ePo\":\"NA\"\n   }\n}{  \n   \"preview\":false,\n   \"offset\":2,\n   \"lastrow\":true,\n   \"result\":{  \n      \"_time\":\"2019-02-08 09:01:54.530 EST\",\n      \"exited\":\"1549634514.845\",\n      \"sno\":\"NA\",\n      \"order\":\"49380582\",\n      \"amt\":\"134.50\",\n      \"tpc\":\"ntflx432\",\n      \"id\":\"NA\",\n      \"id2\":\"exampleLink\",\n      \"bto\":\"gacgl\",\n      \"sto\":\"487AA\",\n      \"maccn\":\"958473225\",\n      \"status\":\"SUCCESS\",\n      \"message\":\"Sucessfully submitted payload to MQ. :: [Sucessfully written the file to /opt/tmp/ntflx432.49380582.20190208090154745]]\",\n      \"tFormat\":\"NA\",\n      \"hstart\":\"server159.example.com\",\n      \"p_in\":\"dd:49slsld593\",\n      \"p_out\":\"file:/opt/tmp/ntflx432.49380582.20190208090154745?hostname=server02.example.com\",\n      \"p_ePo\":\"dd:sdkd94922\"\n   }\n}\n```\nI want to store the response as an ArrayList. \n",
                "time": "2019-02-08 14:39:43",
                "index": 0,
                "user": "vikpandey"
            },
            {
                "id": "5c5d953f8328315decbd7166",
                "text": "Depends on the content type. If it's supposed to be `application/json`, then it doesn't look right to me. If it's supposed to be `application/stream+json` then it could be OK",
                "time": "2019-02-08 14:42:07",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c5d955d3608b004a08f6027",
                "text": "its application/json ",
                "time": "2019-02-08 14:42:37",
                "index": 2,
                "user": "vikpandey"
            },
            {
                "id": "5c5d95717502282258cc7c72",
                "text": "What's sending it?",
                "time": "2019-02-08 14:42:57",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5c5d958e126af75deb70a521",
                "text": "I wrote a RestTemplate request to get the response from a Splunk server",
                "time": "2019-02-08 14:43:26",
                "index": 4,
                "user": "vikpandey"
            },
            {
                "id": "5c5d95fe126af75deb70a77f",
                "text": "I created a Splunk query in my RestTemplate call and sent it to the server, I am suppose to get multiple results like this in the response. But the question is, does it needs to be wrapped up in one json root element or it can be multiple",
                "time": "2019-02-08 14:45:18",
                "index": 5,
                "user": "vikpandey"
            },
            {
                "id": "5c5d9636ef98455ea4ff374e",
                "text": "The depends on the capabilities of whatever you're using to process the JSON",
                "time": "2019-02-08 14:46:14",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5c5d963b8328315decbd796e",
                "text": "It's most likely to be Jackson",
                "time": "2019-02-08 14:46:19",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5c5d966728c89123cb9507d2",
                "text": "@wilkinsona  can I still process it in a ArrayList<Object> ",
                "time": "2019-02-08 14:47:03",
                "index": 8,
                "user": "vikpandey"
            },
            {
                "id": "5c5d96ccadf6cb0b2c845e35",
                "text": "AFAIK, Jackson doesn't support that out of the box. Why not try it and see?",
                "time": "2019-02-08 14:48:44",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5c5d96fad1e3093ab5e70af8",
                "text": "Here is what I'm trying to do \n\n```\nArrayList<SplunkEntity> splunkEntityList = new ArrayList<>();\nsplunkEntityList =  restTemplate.getForObject(new URI(uriBuilder), ArrayList.class);\n\nreturn splunkEntityList;\n```",
                "time": "2019-02-08 14:49:30",
                "index": 10,
                "user": "vikpandey"
            },
            {
                "id": "5c5d97d628c89123cb951545",
                "text": "@vikpandey  it should work if you have defined SplunkEntity properly",
                "time": "2019-02-08 14:53:10",
                "index": 11,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5d9d6f80df6804a16e721b",
                "text": "@vphanibhushanreddy  I think the entire Json response should be part of one JSON object, because ```getForObject()``` method, expects the  ```Object.class``` . \n",
                "time": "2019-02-08 15:17:03",
                "index": 12,
                "user": "vikpandey"
            },
            {
                "id": "5c5daa09253c2b5ea3dab67d",
                "text": "I think I can put my question in a better words now. I am getting multiple JSON object in response from the RestTemplate and I want to read those multiple JSON object and store it. \n```\n{\n  \"preview\": false,\n  \"offset\": 0,\n  \"result\": {\n    \"_time\": \"2019-02-08 09:01:57.280 EST\",\n    \"exited\": \"1549634517.354\",\n    \"sno\": \"123\",\n    \"order\": \"NA\",\n    \"amt\": \"NA\",\n    \"tpc\": \"amzn12\"\n  }\n}\n{\n  \"preview\": false,\n  \"offset\": 0,\n  \"result\": {\n    \"_time\": \"2019-02-08 09:01:57.280 EST\",\n    \"exited\": \"1549634517.354\",\n    \"sno\": \"321\",\n    \"order\": \"NA\",\n    \"amt\": \"NA\",\n    \"tpc\": \"googl345\"\n  }\n}\n{\n  \"preview\": false,\n  \"offset\": 0,\n  \"result\": {\n    \"_time\": \"2019-02-08 09:01:57.280 EST\",\n    \"exited\": \"1549634517.354\",\n    \"sno\": \"456\",\n    \"order\": \"NA\",\n    \"amt\": \"NA\",\n    \"tpc\": \"netflx954\"\n  }\n}\n```\nSo, these are the multiple JSON object I'm getting as response. How do I read these multiple JSON object from the RestTemplate.  In ```getForObject()``` method in RestTemplate, it expects, URI & Object.class. Since, I'm getting multiple JSON object, I am not able to store it in an ArrayList. ",
                "time": "2019-02-08 16:10:49",
                "index": 13,
                "user": "vikpandey"
            },
            {
                "id": "5c5db4cc604f233ab6d6ea1a",
                "text": "@vikpandey when you are calling one end point, what's the service definition for response? like no proper format? ",
                "time": "2019-02-08 16:56:44",
                "index": 14,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5db90bef98455ea4003a10",
                "text": "@vphanibhushanreddy  so the definition is like this. \n\n```\nSplunkEntityWrapper splunkWrapper = new SplunkEntityWrapper();\nsplunkWrapper.setSplunkEntityList((List<SplunkEntity>) restTemplate.getForObject(new URI(uriBuilder), SplunkEntityWrapper.class));\n```\nThough this gives me a warning, \n`Type safety: Unchecked cast from SplunkEntityWrapper to List<SplunkEntity>\n`",
                "time": "2019-02-08 17:14:51",
                "index": 15,
                "user": "vikpandey"
            },
            {
                "id": "5c5db959adf6cb0b2c856b31",
                "text": "what's the endpoint you are calling",
                "time": "2019-02-08 17:16:09",
                "index": 16,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5db975d1e3093ab5e82078",
                "text": "@vphanibhushanreddy  I am calling a Splunk server\n",
                "time": "2019-02-08 17:16:37",
                "index": 17,
                "user": "vikpandey"
            },
            {
                "id": "5c5db98b5095f6660cbdb235",
                "text": "ok.. can you point the URL because I didn't find that class in Splunk SDK",
                "time": "2019-02-08 17:16:59",
                "index": 18,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5db9b080df6804a16f41c0",
                "text": "Is this the one you are using ? https://github.com/splunk/splunk-sdk-java",
                "time": "2019-02-08 17:17:36",
                "index": 19,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dba1116e4682259892bea",
                "text": "the Splunk URI is created inhouse actually\n",
                "time": "2019-02-08 17:19:13",
                "index": 20,
                "user": "vikpandey"
            },
            {
                "id": "5c5dba53adf6cb0b2c857196",
                "text": "@vikpandey what am trying to understand is if it supposed to return array..it should return an array.. but not spit out random text with no proper JSON format",
                "time": "2019-02-08 17:20:19",
                "index": 21,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dba88d1e3093ab5e82933",
                "text": "unless you don't give me the actual URL it's trying to fetch..its hard to stay from those 2 lines",
                "time": "2019-02-08 17:21:12",
                "index": 22,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dbb2a8328315decbe8ce1",
                "text": "url is like this, https://test.example.com/servicesNS/rest_user/search/search/jobs/exportsearch%20index%3Dgateway%20sourcetype%3Desb_audit%20bp_bp_name%3Dorder%20earliest%3D-5m%40m%20latest",
                "time": "2019-02-08 17:23:54",
                "index": 23,
                "user": "vikpandey"
            },
            {
                "id": "5c5dbc2cef98455ea4005013",
                "text": "ok.. are you using the same SDK I gave the link above? ",
                "time": "2019-02-08 17:28:12",
                "index": 24,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dbcfe5095f6660cbdd193",
                "text": "actually the splunk REST endpoint is created by another team. I don't have access of that information. I am using the splunk REST endpoint in my application.",
                "time": "2019-02-08 17:31:42",
                "index": 25,
                "user": "vikpandey"
            },
            {
                "id": "5c5dbdb4adf6cb0b2c8588a2",
                "text": "@vikpandey something is not right from the REST endpoint response",
                "time": "2019-02-08 17:34:44",
                "index": 26,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dbdd4d1e3093ab5e8403d",
                "text": "is it being actively developed as a custom ? ",
                "time": "2019-02-08 17:35:16",
                "index": 27,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dbe5080df6804a16f624b",
                "text": "ok. So if I get a JSON array as response, then I think I can parse it correctly. Right ?  Something like this ...\n\n```\n[\n  {\n    \"preview\": false,\n    \"offset\": 0,\n    \"result\": {\n      \"_time\": \"2019-02-08 09:01:57.280 EST\",\n      \"exited\": \"1549634517.354\",\n      \"sno\": \"123\",\n      \"order\": \"NA\",\n      \"amt\": \"NA\",\n      \"tpc\": \"amzn12\"\n    }\n  },\n  {\n    \"preview\": false,\n    \"offset\": 0,\n    \"result\": {\n      \"_time\": \"2019-02-08 09:01:57.280 EST\",\n      \"exited\": \"1549634517.354\",\n      \"sno\": \"321\",\n      \"order\": \"NA\",\n      \"amt\": \"NA\",\n      \"tpc\": \"googl345\"\n    }\n  },\n  {\n    \"preview\": false,\n    \"offset\": 0,\n    \"result\": {\n      \"_time\": \"2019-02-08 09:01:57.280 EST\",\n      \"exited\": \"1549634517.354\",\n      \"sno\": \"456\",\n      \"order\": \"NA\",\n      \"amt\": \"NA\",\n      \"tpc\": \"netflx954\"\n    }\n  }\n]\n```",
                "time": "2019-02-08 17:37:20",
                "index": 28,
                "user": "vikpandey"
            },
            {
                "id": "5c5dbf45ecef85660b70b335",
                "text": "yes",
                "time": "2019-02-08 17:41:25",
                "index": 29,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dbfb080df6804a16f6bed",
                "text": "@vphanibhushanreddy  ok. Thanks for your help ",
                "time": "2019-02-08 17:43:12",
                "index": 30,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc140ecef85660b70c514",
                "text": "@vikpandey just verified again.. it's the custom end point response is not valid. ",
                "time": "2019-02-08 17:49:52",
                "index": 31,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc1c28328315decbeb818",
                "text": "yea the response from the end point is not valid. Instead of sending multiple JSON object, it should send single JSON array object",
                "time": "2019-02-08 17:52:02",
                "index": 32,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc1eeecef85660b70c8d5",
                "text": "well.. it depends.. if it finds only 1..then its expected to send as one object not as array",
                "time": "2019-02-08 17:52:46",
                "index": 33,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc1feadf6cb0b2c85ae57",
                "text": "but if it's more than 1 then it will be array.. ",
                "time": "2019-02-08 17:53:02",
                "index": 34,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc20728c89123cb9655f8",
                "text": "some bad implementations return like that.. depending on context",
                "time": "2019-02-08 17:53:11",
                "index": 35,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc212d1e3093ab5e85efb",
                "text": "but otherwise.. it should return in proper array format",
                "time": "2019-02-08 17:53:22",
                "index": 36,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc268253c2b5ea3db7496",
                "text": "@vphanibhushanreddy  it returns the transaction list so, everytime it will be multiple JSON object. So, the ideal data structure to send the response from Splunk should have been a JSON array object, instead of sending multiple JSON object",
                "time": "2019-02-08 17:54:48",
                "index": 37,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc2c33608b004a090b6eb",
                "text": "@vikpandey you are missing the context.. the API you were accessing is supposed to be exportable.. so am not sure what implementer was thinking.. to just export and not use or decrypt",
                "time": "2019-02-08 17:56:19",
                "index": 38,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc2d280df6804a16f83be",
                "text": "*deserialize or serialize",
                "time": "2019-02-08 17:56:34",
                "index": 39,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc2f24003460b2d192a86",
                "text": "if you were trying to do something that's not the end point expecting.. you get such results.. ",
                "time": "2019-02-08 17:57:06",
                "index": 40,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc2ffadf6cb0b2c85b5e1",
                "text": "why are you calling a export endpoint if you need list if you can search them",
                "time": "2019-02-08 17:57:19",
                "index": 41,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc313d1e3093ab5e86678",
                "text": "I need a list of JSON object",
                "time": "2019-02-08 17:57:39",
                "index": 42,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc31b3608b004a090ba52",
                "text": "yes..",
                "time": "2019-02-08 17:57:47",
                "index": 43,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc31b8328315decbec24d",
                "text": "https://docs.splunk.com/Documentation/Splunk/7.2.4/RESTREF/RESTsearch#search.2Fjobs.2Fexport",
                "time": "2019-02-08 17:57:47",
                "index": 44,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc320604f233ab6d75265",
                "text": "look at that endpoint",
                "time": "2019-02-08 17:57:52",
                "index": 45,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc326604f233ab6d75269",
                "text": "ok",
                "time": "2019-02-08 17:57:58",
                "index": 46,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc32f604f233ab6d7526f",
                "text": "that's exactly same as search/jobs",
                "time": "2019-02-08 17:58:07",
                "index": 47,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc34d3608b004a090bbd2",
                "text": "if you use the regular endpoint not the exportable one..it may work",
                "time": "2019-02-08 17:58:37",
                "index": 48,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc39dd1e3093ab5e86af4",
                "text": "but like you said.. as you are accessing a custom endpoint.. then am not sure what the implementer mindset was",
                "time": "2019-02-08 17:59:57",
                "index": 49,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc3a5604f233ab6d75598",
                "text": "which you can only verify with the guy internally",
                "time": "2019-02-08 18:00:05",
                "index": 50,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc4828328315decbece51",
                "text": "https://<host>:<mPort>/services/search/jobs/export ... yea this is the one I'm using ",
                "time": "2019-02-08 18:03:46",
                "index": 51,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc4bf5095f6660cbe124c",
                "text": "but you mentioned.. as custom one. Isn't it? ",
                "time": "2019-02-08 18:04:47",
                "index": 52,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc4ccecef85660b70dcf2",
                "text": "actually the splunk REST endpoint is created by another team. I don't have access of that information. I am using the splunk REST endpoint in my application.",
                "time": "2019-02-08 18:05:00",
                "index": 53,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc4e45095f6660cbe12cd",
                "text": "use the standard /search/jobs",
                "time": "2019-02-08 18:05:24",
                "index": 54,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc4eaadf6cb0b2c85c423",
                "text": "and see if you can get the results as expected",
                "time": "2019-02-08 18:05:30",
                "index": 55,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc4f2253c2b5ea3db8a05",
                "text": "yea, I mean they created it. I was not sure, if they just used the standard one or they customized it",
                "time": "2019-02-08 18:05:38",
                "index": 56,
                "user": "vikpandey"
            },
            {
                "id": "5c5dc50b253c2b5ea3db8a82",
                "text": "https://docs.splunk.com/Documentation/Splunk/7.2.4/RESTREF/RESTsearch#search.2Fjobs",
                "time": "2019-02-08 18:06:03",
                "index": 57,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc51780df6804a16f954d",
                "text": "ok.. try the standard without export and same search options",
                "time": "2019-02-08 18:06:15",
                "index": 58,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc51e604f233ab6d75f34",
                "text": "and see if it works..then you can isolate that one to just export",
                "time": "2019-02-08 18:06:22",
                "index": 59,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc52980df6804a16f969b",
                "text": "endpoint being not properly configured or implemented",
                "time": "2019-02-08 18:06:33",
                "index": 60,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5c5dc5a380df6804a16f9a5c",
                "text": "ok. ",
                "time": "2019-02-08 18:08:35",
                "index": 61,
                "user": "vikpandey"
            }
        ]
    },
    {
        "id": 79,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f1a99b6d50f2b289a908c7e",
                "text": "Hi I\u2019m using `@ConstructorBinding` along with `@ConfigurationProperties` and accessing all fields directly without any getters and setters(as they are already immutable)",
                "time": "2020-07-24 08:20:06",
                "index": 0,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a99db49bae20601171691",
                "text": "It was working fine until I added `@Validated` annotation for simple validation checks",
                "time": "2020-07-24 08:20:43",
                "index": 1,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a99e8bc41f368171f8c4a",
                "text": "Now the property access is leading to all null values\u2026.",
                "time": "2020-07-24 08:20:56",
                "index": 2,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a99f5cd7bed0e378984fa",
                "text": "Is there any other way to solve this other than adding getters\u2026?",
                "time": "2020-07-24 08:21:09",
                "index": 3,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a9a1549bae206011716d8",
                "text": "`@Validated` creates a proxy. Are those fields public or something?",
                "time": "2020-07-24 08:21:41",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5f1a9a75a050df43001164cc",
                "text": "It doesn\u2019t have to be this way (the creation of the proxy part I mean). We have an issue for that: https://github.com/spring-projects/spring-boot/issues/21454",
                "time": "2020-07-24 08:23:17",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5f1a9a82d50f2b289a908e75",
                "text": "If you are asking those fields via reflection that might be it",
                "time": "2020-07-24 08:23:30",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5f1a9b7377eccd0e146ffba7",
                "text": "Yeah I see CGlibProxy is added over that bean",
                "time": "2020-07-24 08:27:31",
                "index": 7,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a9b84bc41f368171f8fbe",
                "text": "and Yes, I\u2019m using with public accessor on fields",
                "time": "2020-07-24 08:27:48",
                "index": 8,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a9c40cd7bed0e37898b0c",
                "text": "Yep, if the fields are final, they\u2019re going to be null on the proxy",
                "time": "2020-07-24 08:30:56",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5f1a9cddf8dfed4382b7becc",
                "text": "You could try `AopProxyUtils#getSingletonTarget` to get the real instance but that feels a bit too much. I would use getter until the issue I\u2019ve referenced is fixed",
                "time": "2020-07-24 08:33:33",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5f1a9d0abc41f368171f9356",
                "text": "Sure, thanks @snicoll ",
                "time": "2020-07-24 08:34:18",
                "index": 11,
                "user": "saisuryakat"
            },
            {
                "id": "5f1a9dceb1409c060f7e11c8",
                "text": "you\u2019re welcome",
                "time": "2020-07-24 08:37:34",
                "index": 12,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 80,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be3bdc6e8add80e63bb3105",
                "text": "Is there any way to refresh properties values on fly without config server and without server startup ?  Properties files and log4j file are externalized.",
                "time": "2018-11-08 04:38:30",
                "index": 0,
                "user": "vajpai"
            },
            {
                "id": "5be3be3fe8add80e63bb34ed",
                "text": "@vajpai the spring cloud config should do the trick. ",
                "time": "2018-11-08 04:40:31",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be3be4d7326df140ed0ae26",
                "text": "but do visit the spring-cloud channel for details on those",
                "time": "2018-11-08 04:40:45",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be3be614e7ca14520700bc2",
                "text": "Not yet. ",
                "time": "2018-11-08 04:41:05",
                "index": 4,
                "user": "vajpai"
            },
            {
                "id": "5be3be81d001b91720278bd7",
                "text": "also if you don\u2019t need the config server look into ```@RefreshScope``` and the /refresh actuator",
                "time": "2018-11-08 04:41:37",
                "index": 5,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be3bf05bb88787474956d76",
                "text": "@chad_d_stud_twitter sorry wrong reply",
                "time": "2018-11-08 04:43:49",
                "index": 6,
                "user": "vajpai"
            }
        ]
    },
    {
        "id": 81,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5eb8565822f9c45c2a80fce0",
                "text": "Hi,\nI'm new in `java` **world**. I want to use the latest stable version of `jetty`. How can I specify this in `pom.xml` ?\nActually, I have\n~~~xml\n<dependency>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>jetty-runner</artifactId>\n            <version>9.4.12.RC2</version>\n        </dependency>\n~~~\nbut if I specify\n~~~xml\n<dependency>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>jetty-runner</artifactId>\n            <version>[9.4,10.0)</version>\n        </dependency>\n~~~\n`maven` download an **alpha** `version`",
                "time": "2020-05-10 19:30:32",
                "index": 0,
                "user": "waghanza"
            },
            {
                "id": "5eb929f110d5ec031afd27e5",
                "text": "@waghanza that's not the sort of thing you can do. Maven is designed for repeatable builds, so you have to specify exact versions.",
                "time": "2020-05-11 10:33:21",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5eb92a07a6cb695cb2f89612",
                "text": "There is a plugin that assists with updating to the latest available version of everything though",
                "time": "2020-05-11 10:33:43",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5eb92a2340e3122a880ef90d",
                "text": "But if a project is publishing alpha and RC versions to maven central then that's their fault",
                "time": "2020-05-11 10:34:11",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5eb92e2d2cf0da0ad9f62256",
                "text": "For Spring Boot all you have to do is override the property ",
                "time": "2020-05-11 10:51:25",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5eb94c4bf25ee478068d3202",
                "text": "@OrangeDog thanks for clarification about version range, strange then that `jetty-runner` is published in **alpha** stage (even some version are published without manifest)",
                "time": "2020-05-11 12:59:55",
                "index": 7,
                "user": "waghanza"
            },
            {
                "id": "5eb94c61496be6031df5f0b4",
                "text": "> There is a plugin that assists with updating to the latest available version of everything though\n\nWhich plugin are you refering to ?",
                "time": "2020-05-11 13:00:17",
                "index": 8,
                "user": "waghanza"
            },
            {
                "id": "5eb94f233c51a11913f20247",
                "text": "https://www.mojohaus.org/versions-maven-plugin/",
                "time": "2020-05-11 13:12:03",
                "index": 9,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 82,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5eab4c073d58de7a38e8b107",
                "text": "Hi everyone. I'm really hoping someone can help me here - I've been banging my head against the desk for days trying to solve my problem - I cannot get tests requiring a Spring application context to work in a library project after upgrading Spring Boot from 1.5.x -> 2.2.6. Everything compiles fine, but during test execution, every test requiring an application context fails to start with the following (very truncated stacktrace):\n\n```\njava.lang.IllegalStateException: Failed to load ApplicationContext\n... //truncation\nCaused by: java.lang.IllegalArgumentException: Cannot instantiate interface org.springframework.context.ApplicationListener : org.springframework.boot.system.ApplicationPidFileWriter\n\tat org.springframework.boot.SpringApplication.createSpringFactoriesInstances(SpringApplication.java:445)\n\tat org.springframework.boot.SpringApplication.getSpringFactoriesInstances(SpringApplication.java:427)\n\tat org.springframework.boot.SpringApplication.getSpringFactoriesInstances(SpringApplication.java:420)\n\tat org.springframework.boot.SpringApplication.<init>(SpringApplication.java:273)\n\tat org.springframework.boot.SpringApplication.<init>(SpringApplication.java:253)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.getSpringApplication(SpringBootContextLoader.java:135)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:95)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\n\t... 50 more\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.system.ApplicationPidFileWriter\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:602)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:427)\n\tat org.springframework.util.ClassUtils.forName(ClassUtils.java:285)\n\tat org.springframework.boot.SpringApplication.createSpringFactoriesInstances(SpringApplication.java:438)\n\t... 58 more\n```\n\nDuring the upgrade, I followed this guide [Creating a multi-module project](https://spring.io/guides/gs/multi-module/#scratch) to make sure I was doing things correctly for 2.x. I'm at a total loss here. The `bootJar` task is disabled. The `jar` task is enabled.",
                "time": "2020-04-30 22:07:03",
                "index": 0,
                "user": "dptsolutions"
            },
            {
                "id": "5eab4d017975db7ebfd8328d",
                "text": "For reference, here's the test \"application\"\n```\n@SpringBootConfiguration\npublic class StocksApplication {\n\n}\n```\n\nHere's the tests that fail\n```\n@RunWith(SpringRunner.class)\n@WebMvcTest(value = StocksController.class)\n@ContextConfiguration(classes = PlatformWebMvcTestConfiguration.class)\npublic class StocksControllerTest {\n\n    @Autowired\n    private MockMvc mockMvc;\n    @Autowired\n    private ObjectMapper objectMapper;\n\n    @Test\n    public void makeSureWeCanGetStocks() throws Exception {\n        MvcResult result = mockMvc.perform(get(\"/stocks\")).andExpect(status().is2xxSuccessful()).andReturn();\n        List<StockDto> stocks = objectMapper.readValue(result.getResponse().getContentAsString(), new TypeReference<List<StockDto>>(){});\n        assertThat(stocks.isEmpty()).isFalse();\n    }\n\n    @Test\n    public void makeSureWeCanSpecificStock() throws Exception {\n        MvcResult result = mockMvc.perform(get(\"/stocks/MSFT\")).andExpect(status().is2xxSuccessful()).andReturn();\n        StockDto msftStock = objectMapper.readValue(result.getResponse().getContentAsString(), StockDto.class);\n        assertThat(msftStock.getSymbol()).isEqualToIgnoringCase(\"MSFT\");\n    }\n\n    @Test\n    public void makeSureWeGet404ForMissingStock() throws Exception {\n        // We expect a 404\n        mockMvc.perform(get(\"/stocks/I_DO_NOT_EXIST\")).andExpect(status().isNotFound()).andReturn();\n    }\n\n    @Test\n    public void makeSureWeGet404ForMissingAPI() throws Exception {\n        mockMvc.perform(get(\"/this-is-not-an-api-resource\")).andExpect(status().isNotFound()).andReturn();\n    }\n}\n```",
                "time": "2020-04-30 22:11:13",
                "index": 1,
                "user": "dptsolutions"
            },
            {
                "id": "5eab4db9a9de3d01b1de6fc7",
                "text": "Here's the root Gradle project's build.gradle:\n```\nplugins {\n    id 'java'\n    id 'java-library'\n    id 'maven-publish'\n    id 'org.springframework.boot' version '2.2.6.RELEASE' apply false\n    id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false\n}\n\nallprojects {\n    repositories {\n        mavenLocal()\n        mavenCentral()\n    }\n}\n\nsubprojects {\n    apply plugin: 'java'\n    apply plugin: 'java-library'\n    apply plugin: 'maven-publish'\n    apply plugin: 'org.springframework.boot'\n    apply plugin: 'io.spring.dependency-management'\n\n    java {\n        sourceCompatibility = JavaVersion.VERSION_14\n        targetCompatibility = JavaVersion.VERSION_14\n    }\n\n    configurations {\n        sources\n    }\n\n    bootJar {\n        enabled = false\n    }\n\n    jar {\n        enabled = true\n    }\n    \n    task sourcesJar(type: Jar, dependsOn: classes) {\n        archiveClassifier.set('sources')\n        from sourceSets.main.allSource\n    }\n\n    artifacts {\n        sources sourcesJar\n    }\n\n    test {\n        beforeTest { descriptor ->\n            logger.lifecycle(\"Running test: ${descriptor}\")\n        }\n\n        afterTest { descriptor, result ->\n            logger.lifecycle(\"Executed test ${descriptor} with result: ${result.resultType}\")\n        }\n\n        testLogging {\n            showStackTraces = true\n            exceptionFormat = \"full\"\n        }\n    }\n}\n```",
                "time": "2020-04-30 22:14:17",
                "index": 2,
                "user": "dptsolutions"
            },
            {
                "id": "5eab4dfbf0377f16315ce321",
                "text": "And finally, the library module's build.gradle\n```\ndependencies {\n    implementation project(':spring-boot-base') //This is another library module in the project\n    implementation('junit:junit:4.12')\n    api('org.springframework.boot:spring-boot-starter-test')\n    api('org.springframework:spring-web')\n    api('org.springframework:spring-test')\n    api('org.apache.httpcomponents:httpclient:4.5.2')\n    implementation \"org.apache.commons:commons-lang3\"\n    api \"com.fasterxml.jackson.core:jackson-databind\"\n\n}\n```",
                "time": "2020-04-30 22:15:23",
                "index": 3,
                "user": "dptsolutions"
            },
            {
                "id": "5eab59305df41f1d42742494",
                "text": "@dptsolutions You might have some mismatched versions on the classpath. make sure there aren\u2019t any older Boot modules getting pulled in. \n\ndo you really need `implementation('junit:junit:4.12\u2019)`? that should be a `testImplementation` instead of `implementation`, and you should be getting JUnit via `spring-boot-starter-test` anyway.",
                "time": "2020-04-30 23:03:12",
                "index": 4,
                "user": "scottfrederick"
            },
            {
                "id": "5eab5a087a24ff01b0f432cf",
                "text": "Hmm, I'll make another pass through all the libraries dependencies (this project has lots of library modules in it, I just have been trying to cut it down for brevity).\n\nAs for why certain testing deps like jUnit are `implementation` rather than `testImplementation` - This is actually our testing library, which other libraries in the project use in their `testImplementation`s.\n\nLemme try getting rid of that jUnit dep.",
                "time": "2020-04-30 23:06:48",
                "index": 5,
                "user": "dptsolutions"
            },
            {
                "id": "5eab5a2d9ac8ce14a5943f53",
                "text": "w.r.t. `ClassNotFoundException: org.springframework.boot.system.ApplicationPidFileWriter`, that `ApplicationPidFileWriter` class moved from `org.springframework.boot.system` in 1.5 to `org.springframework.boot.context` in 2.0. so it definitely looks like something\u2019s not matching up version-wise.",
                "time": "2020-04-30 23:07:25",
                "index": 6,
                "user": "scottfrederick"
            },
            {
                "id": "5eab5a4222f9c45c2a60e03a",
                "text": "hmm",
                "time": "2020-04-30 23:07:46",
                "index": 7,
                "user": "dptsolutions"
            },
            {
                "id": "5eab5a7c70a7fb75e62322a2",
                "text": "dependency management is hard",
                "time": "2020-04-30 23:08:44",
                "index": 8,
                "user": "scottfrederick"
            },
            {
                "id": "5eab5aca14b48f0698a097be",
                "text": "As part of this exercise I went through every build.gradle and tried to get rid of every version number on dependencies that was defined, to let the dep management plugin take care of it to try and avoid collisions.\n\n> dependency management is hard\n\nYes, it's driving me nuts. Any tips on figuring out what's on the classpath? I'm kind of out of my league here. `gradlew dependencies` has been what I've been using",
                "time": "2020-04-30 23:10:02",
                "index": 9,
                "user": "dptsolutions"
            },
            {
                "id": "5eab5af2f6cb8c2f9c01b62c",
                "text": "that\u2019s the best way I know to view the dependency graph",
                "time": "2020-04-30 23:10:42",
                "index": 10,
                "user": "scottfrederick"
            },
            {
                "id": "5eab5b03a9de3d01b1de8c83",
                "text": "Was afraid you'd say that :(",
                "time": "2020-04-30 23:10:59",
                "index": 11,
                "user": "dptsolutions"
            },
            {
                "id": "5eab5b5631a6d25d7c9fb149",
                "text": "Well, I guess I need to figure out where that 1.5.x dependency is coming from on my classpath...",
                "time": "2020-04-30 23:12:22",
                "index": 12,
                "user": "dptsolutions"
            },
            {
                "id": "5eab5bae347bd6163049bb6f",
                "text": "Just to throw it out there - in another library module in this project, we still have this deprecated dependency in there - `api ('org.springframework.security.oauth:spring-security-oauth2:2.0.18.RELEASE')`. We know it's deprecated, we just haven't dealt with it yet. Any idea if that could be pulling in the old boot 1.5.x deps?",
                "time": "2020-04-30 23:13:50",
                "index": 13,
                "user": "dptsolutions"
            },
            {
                "id": "5eab5c229ac8ce14a5943f57",
                "text": "spring-security-oauth2 shouldn\u2019t have a dependency on Boot",
                "time": "2020-04-30 23:15:46",
                "index": 14,
                "user": "scottfrederick"
            },
            {
                "id": "5eab5c5f347bd6163049bd0b",
                "text": "ok, that's what I thought, but at this point I don't want to discount anything",
                "time": "2020-04-30 23:16:47",
                "index": 15,
                "user": "dptsolutions"
            },
            {
                "id": "5eabad04d898fe7a375b5e25",
                "text": "I am curious about something. What is the CI/CD tool that Spring Framework/Spring Boot uses?\n\nIs it completely free?\nIs it on-premises or cloud-base?",
                "time": "2020-05-01 05:00:52",
                "index": 16,
                "user": "cortizqgithub"
            },
            {
                "id": "5eabe3c5a9de3d01b1dfa317",
                "text": "@dptsolutions Did you have still the old ApplicationPidFileWriter in your spring.factory file ?",
                "time": "2020-05-01 08:54:29",
                "index": 25,
                "user": "srempfer"
            },
            {
                "id": "5eac64b87975db7ebfdb1acf",
                "text": "@dptsolutions I mean of course the src\\main\\resources\\META-INF\\spring.factories file",
                "time": "2020-05-01 18:04:40",
                "index": 29,
                "user": "srempfer"
            },
            {
                "id": "5eac7522adb0ec5c2bdc1070",
                "text": "@srempfer That seems to be the problem!! THANK YOU!\n\nSo now that I'm looking at this `spring.factories` file, I've got one more class that can't be found anymore - `org.springframework.boot.system.EmbeddedServerPortFileWriter`. Any idea where that one ended up? I'm Googling, but all my hits are for that class having a package change from 1.4 -> 1.5",
                "time": "2020-05-01 19:14:42",
                "index": 30,
                "user": "dptsolutions"
            },
            {
                "id": "5eac754ed898fe7a375da220",
                "text": "It didn't move to the `context` package with ApplicationPidFileWriter apparently",
                "time": "2020-05-01 19:15:26",
                "index": 31,
                "user": "dptsolutions"
            },
            {
                "id": "5eac75f79f0c955d7d9b5c62",
                "text": "@dptsolutions  `org.springframework.boot.system.EmbeddedServerPortFileWriter` is now `org.springframework.boot.web.context.WebServerPortFileWriter`",
                "time": "2020-05-01 19:18:15",
                "index": 32,
                "user": "srempfer"
            },
            {
                "id": "5eac76250b23797ec057d79b",
                "text": "Ahh, renamed too",
                "time": "2020-05-01 19:19:01",
                "index": 33,
                "user": "dptsolutions"
            },
            {
                "id": "5eac76c4d898fe7a375da641",
                "text": "@srempfer THANK YOU SO MUCH! I'm onto regular test failures now, but I'm past the context problems!",
                "time": "2020-05-01 19:21:40",
                "index": 34,
                "user": "dptsolutions"
            }
        ]
    },
    {
        "id": 83,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d28336e096dec3f019ad469",
                "text": "Hey everyone,\nI am trying to map the below object to corresponding yaml (notice Type of value is Object). The value results in null. I want to be able to use it as object and cast it based on the type passed in the object. Can someone point out, how this can be done? Thanks\n```java\npublic class PipelineOperationSchema {\n    private String name;\n    private String operationName;\n    @Builder.Default\n    private Type type = Type.MAP;\n    private Object value;\n    private List<PipelineOperationSchema> params;\n}\n```\n\nCorresponding yaml:\n\n```yml\n pipelineOperations:\n          - name: field_mapping\n            operationName: field_mapping\n            params:\n              - type: MAP\n                name: fieldMap\n                value :\n                  src_ip: source::ip\n                  dst_ip: destination::ip\n                  dst_port: destination::port\n                  qname: event::dns::qname\n                  qtype: event::dns::qtype\n          - name: do_if\n            operationName: do_if\n            params:\n              - type: OPERATION\n                name: predicate\n                operationName: exists\n                params:\n                  - type: STRING\n                    name: field\n                    value: dst_ip\n              - type: OPERATION\n                name: success\n                operationName: field_mapping\n                params:\n                  - type: STRING\n                    name: from\n                    value: dst_ip\n                  - type: STRING\n                    name: to\n                    value: destination::ip\n```",
                "time": "2019-07-12 07:14:54",
                "index": 0,
                "user": "hemant19"
            },
            {
                "id": "5d2837f2c3740260bb09bacc",
                "text": "@hemant19 That isn't supported by Boot's configuration properties. It may be possible if you call SnakeYAML yourself and give it some hints about what the values of `value` can be mapped to.",
                "time": "2019-07-12 07:34:10",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5d28383c3596f56f8cc3f921",
                "text": "https://stackoverflow.com/questions/28176025/polymorphic-collections-in-snakeyaml might help",
                "time": "2019-07-12 07:35:24",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d283ba14d750532412fa404",
                "text": "@wilkinsona  Thank you Andy, Will try to directly call snakeYAML",
                "time": "2019-07-12 07:49:53",
                "index": 3,
                "user": "hemant19"
            }
        ]
    },
    {
        "id": 84,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0c25b01e35ef14b689de52",
                "text": "Hi, I have two  springboot tests SampleAIT annotated with @SpringBootTest and SampleBIT annotated with @SpringBootTest. When I run them they both run like App-context for SampleAIT comes up and test finishes and  App-context for SampleBIT comes up and test finishes.I want to keep this way of running test and  I also  want to run as them as test suite as well-like only one time App-context should come up and all tests(SampleAIT, SampleBIT) should run and close the App-context. Is that possible or should I look for any other alternative ? Thanks.",
                "time": "2019-06-21 00:32:48",
                "index": 0,
                "user": "BhargavModepalli"
            },
            {
                "id": "5d0c86e3007cff7a82ec8753",
                "text": "@BhargavModepalli That's possible. You need to ensure that each test class uses identical configuration. The test framework will then share the application context between the two test classes.",
                "time": "2019-06-21 07:27:31",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d0cc0f34b0b7b477b32b7b2",
                "text": "@wilkinsona I do have two test classes with identical configuration....",
                "time": "2019-06-21 11:35:15",
                "index": 14,
                "user": "BhargavModepalli"
            },
            {
                "id": "5d0cd2347456db0bb829900a",
                "text": "They can't be identical, otherwise they would share a context",
                "time": "2019-06-21 12:48:52",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5d0cd255e7267a62a91613b2",
                "text": "Any change to the beans in the context, properties in the environment, etc will cause a separate context to be used",
                "time": "2019-06-21 12:49:25",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5d0cd3e55bc3210bb76f74f3",
                "text": "Where can I find some example project  sort of, the way you are saying. ",
                "time": "2019-06-21 12:56:05",
                "index": 17,
                "user": "BhargavModepalli"
            },
            {
                "id": "5d0cdc557456db0bb829e4fd",
                "text": "@BhargavModepalli You could just generate a project on start.spring.io and then duplicate the test class",
                "time": "2019-06-21 13:32:05",
                "index": 18,
                "user": "wilkinsona"
            },
            {
                "id": "5d0ce21b1e35ef14b68ff9be",
                "text": "Ok thanks ",
                "time": "2019-06-21 13:56:43",
                "index": 19,
                "user": "BhargavModepalli"
            }
        ]
    },
    {
        "id": 85,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c5310b7ceb5a2264f6fef11",
                "text": "Asking you guys here. I'm porting an application from CDI 1.1 to Spring 5.\nI'm having difficulties with this case https://stackoverflow.com/questions/54447224/cdi-to-spring-autowire-based-on-annotation-value-qualifier\n\nMaybe someone has an idea. Been thinking about it since yesterday.",
                "time": "2019-01-31 15:13:59",
                "index": 0,
                "user": "lppedd"
            },
            {
                "id": "5c531790975714406b713348",
                "text": "@lppedd Hm perhaps something along these lines: https://gist.github.com/TomRauchenwald/f828b3984b5ec4084389f6a519721c4f",
                "time": "2019-01-31 15:43:12",
                "index": 2,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c5317f1ca428b064531a21c",
                "text": "@TomRauchenwald that's an Idea, but I prefer relying on class metadata instead of adding a new method to the interface",
                "time": "2019-01-31 15:44:49",
                "index": 3,
                "user": "lppedd"
            },
            {
                "id": "5c53182813a2814df6f98edd",
                "text": "Profiles are an option I considered, but I cannot use them, because the \"dbms type\" is extracted from another Bean, `Configuration`",
                "time": "2019-01-31 15:45:44",
                "index": 4,
                "user": "lppedd"
            },
            {
                "id": "5c53184241775971a0b49bfb",
                "text": "I'd actually extend the interface to encapsulate the db-choosing logic, but I get what you're saying",
                "time": "2019-01-31 15:46:10",
                "index": 5,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c5318bc9221b9382df18c87",
                "text": "@TomRauchenwald what do you mean with \"extending\" the interface?\n",
                "time": "2019-01-31 15:48:12",
                "index": 6,
                "user": "lppedd"
            },
            {
                "id": "5c531939454aad4df7d1dbe0",
                "text": "Ahhh okay, got it",
                "time": "2019-01-31 15:50:17",
                "index": 7,
                "user": "lppedd"
            },
            {
                "id": "5c53195e454aad4df7d1dcb2",
                "text": "What amazes me is that using CDI 1.1 (!) this is easy, and *elegant*",
                "time": "2019-01-31 15:50:54",
                "index": 8,
                "user": "lppedd"
            },
            {
                "id": "5c531a55c2dba5382ebb1a71",
                "text": "Hm I guess because native spring users would perhaps use profiles from the beginning (and thus the unneeded beans would never get instantiated). But it is quite elegant, sure. Maybe there's a way I'm not aware of, I'm not a spring expert in any way",
                "time": "2019-01-31 15:55:01",
                "index": 9,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c531adf454aad4df7d1e6bf",
                "text": "@TomRauchenwald my usecase would never be doable with Profile(s). The `Configuration` Bean is a \"reloadable\" class, so its internal changes during execution. Profiles need a context restart to reload Beans",
                "time": "2019-01-31 15:57:19",
                "index": 10,
                "user": "lppedd"
            },
            {
                "id": "5c531c391b62f126507db4d1",
                "text": "Maybe @snicoll has an answer or an opinion on this",
                "time": "2019-01-31 16:03:05",
                "index": 11,
                "user": "lppedd"
            }
        ]
    },
    {
        "id": 86,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bab74efcdc501317256ceae",
                "text": "could someone please tell me how to configure embedded tomcat to use ports 8080 + 8443 but only 8443 with ssl? Is it possible to use standard properties e.g. `server.ssl` for this?",
                "time": "2018-09-26 12:00:47",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5bab750e8196693171b96180",
                "text": "I was trying to customize it with setup like this but it doesn't work for me",
                "time": "2018-09-26 12:01:18",
                "index": 1,
                "user": "bilak"
            },
            {
                "id": "5bab75114d320a463bf78a25",
                "text": "```\n@Bean\n    @ConditionalOnClass(org.apache.catalina.Container.class)\n    public EmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory() {\n        final TomcatEmbeddedServletContainerFactory tomcat = new TomcatEmbeddedServletContainerFactory() {\n\n            /**\n             * Configures ssl only if keystore (specified by property {@code server.ssl.key-store}) exists on classpath or on file system.\n             *\n             * @param protocol protocol\n             * @param ssl ssl configuration\n             */\n            @Override\n            protected void configureSsl(final AbstractHttp11JsseProtocol<?> protocol, final Ssl ssl) {\n                final String keyStorePath = serverProperties.getSsl() != null ? serverProperties.getSsl().getKeyStore() : null;\n                if (!StringUtils.isEmpty(keyStorePath)) {\n                    Resource keyStore = resourceLoader.getResource(keyStorePath.startsWith(\"/\") ?\n                            ResourceUtils.FILE_URL_PREFIX.concat(keyStorePath) :\n                            keyStorePath);\n                    if (keyStore.exists()) {\n                        super.configureSsl(protocol, ssl);\n                    } else {\n                        logger.warn(String.format(\"KeyStore [%s] does not exists\", keyStorePath));\n                    }\n                }\n            }\n\n            @Override\n            protected void customizeConnector(final Connector connector) {\n                super.customizeConnector(connector);\n                final int defaultPort = serverProperties.getPort() != null ? serverProperties.getPort() : 8080;\n                if (connector.getPort() == defaultPort) {\n                    connector.setScheme(\"http\");\n                    connector.setSecure(false);\n                }\n            }\n        };\n\n        return tomcat;\n    }\n```",
                "time": "2018-09-26 12:01:21",
                "index": 2,
                "user": "bilak"
            },
            {
                "id": "5bab761dfe37781110fdb773",
                "text": "I\u2019m thinking maybe registering an `ApplicationListener` for either an  `ApplicationEnvironmentPreparedEvent` or `ApplicationPreparedEvent` (under the `org.springframework.context.ApplicationListener` key in `spring.factories`. Or registering an `ApplicationContextInitializer` (under the key `org.springframework.context.ApplicationContextInitializer` in `spring.factories`)",
                "time": "2018-09-26 12:05:49",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5babb2df01fb5f4ae1276b05",
                "text": "@bilak https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-enable-multiple-connectors-in-tomcat",
                "time": "2018-09-26 16:25:03",
                "index": 58,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 87,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b98210145318b2dfe95124b",
                "text": "hey quick question. i have a `@RestController` annotated class with a `@GetMapping` which is supposed to return the list and a `@GetMapping(\"/{id}\")` but for some reason doing a GET '/' gets directed to the /id function. Why can it be?",
                "time": "2018-09-11 20:09:37",
                "index": 0,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9822eacddb292dff5be522",
                "text": "@marcguilera-casumo are you capturing that path variable as an argument? In the param list for that controller method, you\u2019ll want `@PathVariable(\"id\") String id`",
                "time": "2018-09-11 20:17:46",
                "index": 2,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b98239633ebb72e37028d92",
                "text": "```@GetMapping(\"/{filmId}\")\n    fun findOne(@PathVariable filmId: String): FilmDTO {\n        return queryModel.getOne(filmId)\n    }```",
                "time": "2018-09-11 20:20:38",
                "index": 6,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982433a04db554a70fcb26",
                "text": "yeah; so in that case, your uri template should be `@GetMapping(\"/{filmId}\")`",
                "time": "2018-09-11 20:23:15",
                "index": 7,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b98245d0fb4232e38acdeff",
                "text": "yeah that's what i have, i said {id} for simplicity",
                "time": "2018-09-11 20:23:57",
                "index": 8,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b98246745318b2dfe952c97",
                "text": "this is the entire thing",
                "time": "2018-09-11 20:24:07",
                "index": 9,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982495f59e0c1555e37397",
                "text": "```\n@RestController(\"/films\")\nclass FilmController {\n    @PostMapping\n    fun createFilm(request: CreateFilmRequest): FilmDTO {\n        //Stuff\n    }\n\n    @GetMapping\n    fun findAll(): List<FilmDTO> {\n        //stuff\n    }\n\n    @GetMapping(\"/{filmId}\")\n    fun findOne(@PathVariable filmId: String): FilmDTO {\n        //stuff\n    }\n}\n```",
                "time": "2018-09-11 20:24:53",
                "index": 10,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9825621e2b442a25f9b4f3",
                "text": "my issue is that GET on localhost:8080/films goes to the second get mapping and should go to the first (the findall)",
                "time": "2018-09-11 20:28:18",
                "index": 13,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9825d3e481f854a6a3fb20",
                "text": "@marcguilera-casumo Ah, i see. Yeah, that looks correct. I can\u2019t reproduce in java (fresh project from initializr)",
                "time": "2018-09-11 20:30:11",
                "index": 16,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b9826e41e2b442a25f9bece",
                "text": "mm",
                "time": "2018-09-11 20:34:44",
                "index": 17,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9826e751a02e2a26171e54",
                "text": "nice :P",
                "time": "2018-09-11 20:34:47",
                "index": 18,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b98271633ebb72e3702a363",
                "text": "right :/ only other thing would be to look in the startup logs for the `RequestMappingHandlerMapping` lines to make sure that route is getting initialized",
                "time": "2018-09-11 20:35:34",
                "index": 19,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b982728f3c26b08f662165f",
                "text": "where is that",
                "time": "2018-09-11 20:35:52",
                "index": 20,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b98273a0fb4232e38acf1ee",
                "text": "in std out when you start the application",
                "time": "2018-09-11 20:36:10",
                "index": 21,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b98273aa2343433d13497c3",
                "text": "got it",
                "time": "2018-09-11 20:36:10",
                "index": 22,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b98279c1e2b442a25f9c434",
                "text": "you should see something to the extent of `Mapped \"{[],methods=[GET]}\" onto public \u2026\u2026.. findAll()`",
                "time": "2018-09-11 20:37:48",
                "index": 23,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b9827a4cddb292dff5c0573",
                "text": "```\n2018-09-11 22:28:57.156  INFO 1636 --- [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/{filmId}],methods=[GET]}\" onto public com...FilmDTO com...findOne(java.lang.String)\n2018-09-11 22:28:57.157  INFO 1636 --- [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[],methods=[GET]}\" onto public java.util.List<com...FilmDTO> com...FilmController.findAll()\n20\n```",
                "time": "2018-09-11 20:37:56",
                "index": 24,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9827c933ebb72e3702a8fa",
                "text": "i removed some namespace part of the wall of text",
                "time": "2018-09-11 20:38:33",
                "index": 25,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982833550f8808f5961a4d",
                "text": "ah, yeah",
                "time": "2018-09-11 20:40:19",
                "index": 26,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b98284345318b2dfe9542ae",
                "text": "so it mapped it to `/` and `/{filmId` (no `/films`)",
                "time": "2018-09-11 20:40:35",
                "index": 27,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b982858e6e309365e3ae9e4",
                "text": "does this work?\n\n```\n@RestController\n@RequestMapping(\"/films\u201d)\n```",
                "time": "2018-09-11 20:40:56",
                "index": 28,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b98285bf3c26b08f6621f08",
                "text": "weird no?",
                "time": "2018-09-11 20:40:59",
                "index": 29,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9828770fb4232e38acf727",
                "text": "i thought in spring 5 you do @RestController(\"/films\") ?",
                "time": "2018-09-11 20:41:27",
                "index": 30,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b9828ba1e2b442a25f9ca83",
                "text": "that does it though",
                "time": "2018-09-11 20:42:34",
                "index": 31,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982906e6e309365e3aecd6",
                "text": "yeah, i don\u2019t know. The docs are here if you can glean anything from that: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestController.html",
                "time": "2018-09-11 20:43:50",
                "index": 32,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b98291745318b2dfe95491a",
                "text": "yep i saw now",
                "time": "2018-09-11 20:44:07",
                "index": 33,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982921e6e309365e3aed5a",
                "text": "the value is for \"a logical name\"",
                "time": "2018-09-11 20:44:17",
                "index": 34,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982927728ddf028293f816",
                "text": "ok cool :) thanks!",
                "time": "2018-09-11 20:44:23",
                "index": 35,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b982940a2343433d134a45c",
                "text": "makes perfect sense now",
                "time": "2018-09-11 20:44:48",
                "index": 36,
                "user": "marcguilera-casumo"
            },
            {
                "id": "5b98295e7189ae6fddae73e0",
                "text": "cool; yep! glad you\u2019re back to working",
                "time": "2018-09-11 20:45:18",
                "index": 37,
                "user": "FA-tvonmoll"
            }
        ]
    },
    {
        "id": 88,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0f79ec007cff7a820505b4",
                "text": "hello everybody",
                "time": "2019-06-23 13:09:00",
                "index": 0,
                "user": "zak905"
            },
            {
                "id": "5d0f7a09fd4aa914b52e4c45",
                "text": "I have a question about `SpringLiquibase`",
                "time": "2019-06-23 13:09:29",
                "index": 1,
                "user": "zak905"
            },
            {
                "id": "5d0f7a6cd16b28559f748bde",
                "text": "is it possible to find a changelog file from a jar in the classpath",
                "time": "2019-06-23 13:11:08",
                "index": 2,
                "user": "zak905"
            },
            {
                "id": "5d0f7a8e007cff7a82050909",
                "text": "`springLiquibase.setChangeLog(\"classpath:/META-INF/jpa-changelog-master.xml\");` does not seem to work ",
                "time": "2019-06-23 13:11:42",
                "index": 3,
                "user": "zak905"
            },
            {
                "id": "5d0f7a9a4b0b7b477b49b02e",
                "text": "only the file under src/main/resources are found ",
                "time": "2019-06-23 13:11:54",
                "index": 4,
                "user": "zak905"
            },
            {
                "id": "5d0f7b80d16b28559f749647",
                "text": "@zak905 try to use ClassPathResource(\".....\") or just inject it in your bisiness logic\n@value(your path) Resource es;\nalso u can use ResourceUtil ",
                "time": "2019-06-23 13:15:44",
                "index": 5,
                "user": "halimpuckjava"
            },
            {
                "id": "5d0f7ba7007cff7a8205122f",
                "text": "Ok will try thanks",
                "time": "2019-06-23 13:16:23",
                "index": 6,
                "user": "zak905"
            },
            {
                "id": "5d1320a64e13324f8b8e0bb5",
                "text": "@zak905 the default path is in src/main/resources \uff0cso move you \"xxxx.xml\" file to that path(src/main/resources)",
                "time": "2019-06-26 07:37:10",
                "index": 56,
                "user": "wsm1990"
            },
            {
                "id": "5d1329526fb02f5f69328281",
                "text": "@wsm1990 thanks. I am aware of that, but there are two resources paths, one for tests and src/test/resources and src/main/resources, I was not sure if both are available at testing time. Anyways I ended up doing without liquibase, hibernate ddl was enough in my case. ",
                "time": "2019-06-26 08:14:10",
                "index": 57,
                "user": "zak905"
            }
        ]
    },
    {
        "id": 89,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5de690e0c3d6795b9f1820e9",
                "text": "Hi,\n\nI am trying to use a value from application.properties in a static method. However, it is giving a null value, which is pretty obvious as static will be used before the object is created. So, I am wondering if that is possible in any way.\nI want to use this value inside a static method.",
                "time": "2019-12-03 16:44:16",
                "index": 0,
                "user": "deepakmehra10"
            },
            {
                "id": "5de6919446397c721c7d9b90",
                "text": "@deepakmehra10 Hi you have to put the @Value annotation above a non static setter that will initialise the static variable",
                "time": "2019-12-03 16:47:16",
                "index": 1,
                "user": "kaizokun"
            },
            {
                "id": "5de6920346397c721c7d9f09",
                "text": "private static String var;\n\n    @Value(\"${config.value}\")\n    public void setVar(String value) {\n        MyClass.var= value;\n    }\n",
                "time": "2019-12-03 16:49:07",
                "index": 2,
                "user": "kaizokun"
            },
            {
                "id": "5de692bb05eec2433dc93e4a",
                "text": "It did not help @kaizokun \nI tried like below\npublic static String var;\n@Value(\"${config.value}\")\npublic void setVar(String value) {\n    MyClass.var= value;\n}\n\npublic static String  someMethod(){\nSystem.out.println(\"Value\" + var);\n}",
                "time": "2019-12-03 16:52:11",
                "index": 3,
                "user": "deepakmehra10"
            },
            {
                "id": "5de6932126eeb8518f60a18b",
                "text": "@deepakmehra10 the values are still null ?\n",
                "time": "2019-12-03 16:53:53",
                "index": 4,
                "user": "kaizokun"
            },
            {
                "id": "5de69340c3d6795b9f18329b",
                "text": "Yes",
                "time": "2019-12-03 16:54:24",
                "index": 5,
                "user": "deepakmehra10"
            },
            {
                "id": "5de6939e6a85195b9eefd2c6",
                "text": "@deepakmehra10 I use that to  initialize static variables that I use into the main method of my main application class that is static and it works fine\n",
                "time": "2019-12-03 16:55:58",
                "index": 6,
                "user": "kaizokun"
            },
            {
                "id": "5de693bbf65fec1c8eb6af75",
                "text": "I want to use it in the same class's methof",
                "time": "2019-12-03 16:56:27",
                "index": 7,
                "user": "deepakmehra10"
            },
            {
                "id": "5de6940af65fec1c8eb6b0cb",
                "text": "Here the code I use to initialise my ssl trustore \n\n    private static String keyStorePath;\n\n    private static String keyStorePassword;\n\n    public static void main(String[] args) {\n\n        SpringApplication.run(ClientUiApplication.class, args);\n        System.setProperty(\"javax.net.ssl.trustStore\", keyStorePath);\n        System.setProperty(\"javax.net.ssl.trustStorePassword\", keyStorePassword);\n    }\n\n    @Value(\"${server.ssl.keyStorePath}\")\n    public void setKeyStorePath(String keyStorePath) {\n        ClientUiApplication.keyStorePath = keyStorePath;\n    }\n\n    @Value(\"${server.ssl.key-store-password}\")\n    public void setKeyStorePassword(String keyStorePassword) {\n        ClientUiApplication.keyStorePassword = keyStorePassword;\n    }\n",
                "time": "2019-12-03 16:57:46",
                "index": 8,
                "user": "kaizokun"
            },
            {
                "id": "5de69da526eeb8518f60dae0",
                "text": "shouldn't the value annotation be on the parameter itself?",
                "time": "2019-12-03 17:38:45",
                "index": 9,
                "user": "tonisostrat"
            },
            {
                "id": "5de69db205eec2433dc98c29",
                "text": "```\npublic void setKeyStorePath(@Value(\"${server.ssl.keyStorePath}\") String keyStorePath) {\n    ClientUiApplication.keyStorePath = keyStorePath;\n}\n```",
                "time": "2019-12-03 17:38:58",
                "index": 10,
                "user": "tonisostrat"
            },
            {
                "id": "5de69f306a85195b9ef02c3f",
                "text": "@tonisostrat for me it works but maybe if you have more than one parameter it's necessary",
                "time": "2019-12-03 17:45:20",
                "index": 11,
                "user": "kaizokun"
            }
        ]
    },
    {
        "id": 90,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d258f83f867ec1687e0cdc4",
                "text": "I know that `WebClient` is bundled with `org.springframework.boot:spring-boot-starter-webflux`. Is is also available in any smaller packages? We\u2019re using it with our client libaries and would prefer to avoid bringing in everything that `org.springframework.boot:spring-boot-starter-webflux` includes.",
                "time": "2019-07-10 07:10:59",
                "index": 0,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d258f93f5dd1457425ae1f9",
                "text": "No",
                "time": "2019-07-10 07:11:15",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5d258faaf867ec1687e0cec3",
                "text": "Ok. Many thanks for the quick response.",
                "time": "2019-07-10 07:11:38",
                "index": 2,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d258fc8d0e06b66757af6e1",
                "text": "You\u2019re welcome, I think I remember an issue where we disscussed having a web client starter of some sort. You may find more context there",
                "time": "2019-07-10 07:12:08",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 91,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5bf80a4a6621313894073e28",
                "text": "how much work did it take you guys to change an existing spring app to use webflux or reactive stuff?",
                "time": "2018-11-23 14:10:18",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80a80cfa682348d709574",
                "text": "i'm looking at my code and trying out to change one method to use Mono and it affected all calling and called methods :-/",
                "time": "2018-11-23 14:11:12",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80ae0fa7bbb3fe0f09ba6",
                "text": "It's a totally different paradigm, so it might be hard to change it completely",
                "time": "2018-11-23 14:12:48",
                "index": 2,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bf80af597a8982b9a510933",
                "text": "i can see that. it's really a different way of seeing things here",
                "time": "2018-11-23 14:13:09",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80b5ecfa682348d709c11",
                "text": "It *might* be an option to start top-down (from the REST-API if it's a typical backend application) and first just apply reactive wrappers around existing code, trying to swap the old parts one after another (+ implement all completely new features using reactive from start)",
                "time": "2018-11-23 14:14:54",
                "index": 4,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bf80b70baf43f2b9b60473d",
                "text": "but many things come into play. If you're on a relational store, things are even harder",
                "time": "2018-11-23 14:15:12",
                "index": 5,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bf80b8c66213138940747ff",
                "text": "Make sure at first you really need it :)",
                "time": "2018-11-23 14:15:40",
                "index": 6,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bf80b97662131389407482c",
                "text": "yeah, we're still using rdbms which i understand is blocking by design",
                "time": "2018-11-23 14:15:51",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80bbf958fc53895d93c1f",
                "text": "we have plans for nosql db down the line but no definite decision on that yet",
                "time": "2018-11-23 14:16:31",
                "index": 8,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80bf86621313894074b67",
                "text": "would an rdbms call be pushed behind an async stack in webflux or would it still block the entire method call? (not sure if i'm phrasing that correctly)",
                "time": "2018-11-23 14:17:28",
                "index": 9,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80c05fa7bbb3fe0f0a4ea",
                "text": "nosql is also a totally different paradigm, be aware of that fact :)",
                "time": "2018-11-23 14:17:41",
                "index": 10,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bf80c4ce25cc274052fa0bf",
                "text": "nosql is the last of our problems here. all of the guys here already have nosql experience, particularly mongo. lambdas are relatively new here though so it has to be taught. i was the first one who dove into it and just passed it on",
                "time": "2018-11-23 14:18:52",
                "index": 11,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80c4ebaf43f2b9b604db9",
                "text": "if you're using an rdbms in reactor (we do so) the best you can do is to schedule the database calls on separate threads. they're still blocking then, though.",
                "time": "2018-11-23 14:18:54",
                "index": 12,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bf80cdde25cc274052fa4ca",
                "text": "i just told them that webflux is like that combo move in Street Fighter/Tekken. Once you start it you have to keep going to finish it. XD",
                "time": "2018-11-23 14:21:17",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf80cf5c6cf4524d1654580",
                "text": "That's one way of seeing the builder pattern",
                "time": "2018-11-23 14:21:41",
                "index": 14,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 92,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df14b0842784416abce0278",
                "text": "Spring  boot with feign client first request takes time.  Spring boot needs warming up. Can we initialize the feign client Annotaion  at startup time  ?",
                "time": "2019-12-11 20:01:12",
                "index": 0,
                "user": "vinayak12"
            },
            {
                "id": "5df14b9f55d9392300f3b7bb",
                "text": "How to warm up the Springboot application for first request",
                "time": "2019-12-11 20:03:43",
                "index": 1,
                "user": "vinayak12"
            },
            {
                "id": "5df153cac6ce6027eba4777f",
                "text": "@vinayak12 That sounds like a question for https://gitter.im/spring-cloud/spring-cloud",
                "time": "2019-12-11 20:38:34",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5df1563f2bca3016aa62c111",
                "text": "thanks",
                "time": "2019-12-11 20:49:03",
                "index": 5,
                "user": "vinayak12"
            }
        ]
    },
    {
        "id": 93,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e2edec3f196225bd6683bfc",
                "text": "Hi team ! any idea how to implementa \"store and forward\" pattern in spring boot to store request and retry?",
                "time": "2020-01-27 12:59:47",
                "index": 0,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2edf791a883c61961a2a5a",
                "text": "@bclozel  Hi Brian, do u have any idea how to implement \"store and forward\" pattern in Spring boot to store request and retry?",
                "time": "2020-01-27 13:02:49",
                "index": 1,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ee667a9b30639e2f637ca",
                "text": "@sofocleous2_twitter like a proxy?",
                "time": "2020-01-27 13:32:23",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5e2eea24a420263e03aab434",
                "text": "This is a reusable component(lib) which will be included in various microservices to take care of rest requests (webclient) that fail either in upstream or downstream service by storing the request and forwarding once services are available.Initially I was thinking about using resilient operator in webclient(retry) but we are missing the case that upstream fails , so we need to store the request and use callbacks but not sure how to implement this efficiently",
                "time": "2020-01-27 13:48:20",
                "index": 3,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eea76da04a624f490fbae",
                "text": "@bclozel  This is a reusable component(lib) which will be included in various microservices to take care of rest requests (webclient) that fail either in upstream or downstream service by storing the request and forwarding once services are available.Initially I was thinking about using resilient operator in webclient(retry) but we are missing the case that upstream fails , so we need to store the request and use callbacks but not sure how to implement this efficiently",
                "time": "2020-01-27 13:49:42",
                "index": 4,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eeab3dc07667042006c31",
                "text": "if upstream fails, retry should still work; it's up to the client to define what failure means",
                "time": "2020-01-27 13:50:43",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5e2eeada44c076313cf59943",
                "text": "if it's a shared concern amongst services, maybe spring cloud gateway is a better fit here",
                "time": "2020-01-27 13:51:22",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5e2eeb2ea9b30639e2f6562f",
                "text": "But how come the retry works if the upstream fails ? could u please elaborate on that?",
                "time": "2020-01-27 13:52:46",
                "index": 7,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eeb5fa420263e03aaba59",
                "text": "we already an API gateway so I dont think spring cloud gateway would be an option.",
                "time": "2020-01-27 13:53:35",
                "index": 8,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eeb65183449313be844a9",
                "text": "*got",
                "time": "2020-01-27 13:53:41",
                "index": 9,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eeba4da04a624f4910447",
                "text": "If retry still works on failure (upstream) that would be nice but I dont understand how it works..",
                "time": "2020-01-27 13:54:44",
                "index": 10,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eece5da04a624f4910c1a",
                "text": "what's a failure in your case? the server is missing? or responds with a HTTP 500 status?",
                "time": "2020-01-27 14:00:05",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5e2eed171a1c2739e30bb1a4",
                "text": "if this is a common use case, maybe your API gateway can handle retries?",
                "time": "2020-01-27 14:00:55",
                "index": 12,
                "user": "bclozel"
            },
            {
                "id": "5e2eee0344c076313cf5b3dd",
                "text": "a failure would be either a response with HTTP 500 status of a failure of upstream(caller) server itself. The requirement to create a shared lib that will be included in   different microservices to take  care the above. So I dont understand how retry would be possible if caller fails without persisting the request somehow..",
                "time": "2020-01-27 14:04:51",
                "index": 13,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eee161a883c61961a95cc",
                "text": "*or",
                "time": "2020-01-27 14:05:10",
                "index": 14,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2eee3844c076313cf5b5af",
                "text": "a response with HTTP 500 status OR a failure of upstream(caller) server itself.",
                "time": "2020-01-27 14:05:44",
                "index": 15,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef0fb183449313be87042",
                "text": "`retry` resubscribes to the publisher, which means the request is re-created and sent again, it's not stored",
                "time": "2020-01-27 14:17:31",
                "index": 16,
                "user": "bclozel"
            },
            {
                "id": "5e2ef198a9b30639e2f68109",
                "text": "But what happens if the caller (upstream) is down due to failure ? the is lost right?",
                "time": "2020-01-27 14:20:08",
                "index": 17,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef2bef196225bd668d0d1",
                "text": "what do you mean by caller? the client sending a request to your app (and your app is itself sending a request to another service?)",
                "time": "2020-01-27 14:25:02",
                "index": 18,
                "user": "bclozel"
            },
            {
                "id": "5e2ef321da04a624f4913e29",
                "text": "By caller i mean another microservice. This is a communication between microservices",
                "time": "2020-01-27 14:26:41",
                "index": 19,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef37fcd53a80aac351524",
                "text": "so a service calling your app?",
                "time": "2020-01-27 14:28:15",
                "index": 20,
                "user": "bclozel"
            },
            {
                "id": "5e2ef41c183449313be8894f",
                "text": "Let's say a client \"A\" sends a request to your application \"B\", and your app sends a request to \"C\". If \"A\" is gone, you might get an exception in your app but for sure you won't be able to write to the response. This should not prevent you from sending that request to \"C\".",
                "time": "2020-01-27 14:30:52",
                "index": 21,
                "user": "bclozel"
            },
            {
                "id": "5e2ef48ee177666195da1ac7",
                "text": "Basically the core banking syste",
                "time": "2020-01-27 14:32:46",
                "index": 22,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef4dedc0766704200b42a",
                "text": "Is implementing the store and forward integration pattern and they need to replicate this in microservices",
                "time": "2020-01-27 14:34:06",
                "index": 23,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef52fdc0766704200b6f9",
                "text": "If the goal is to implement that pattern, then I'm not aware of a way to implement it with webclient. I'm not familiar with that pattern, so I might be wrong.",
                "time": "2020-01-27 14:35:27",
                "index": 24,
                "user": "bclozel"
            },
            {
                "id": "5e2ef57701914e3e04598b42",
                "text": "So based in your example above we could have a comm between A and B and when either one fails we should be able to send the request again",
                "time": "2020-01-27 14:36:39",
                "index": 25,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef5fe4c3dae24f5fabd51",
                "text": "So based on the mentioned pattern the request is saved along with its callback but its quite complicate to replicate this in micro",
                "time": "2020-01-27 14:38:54",
                "index": 26,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef6a19ad22d5bd5ec35bf",
                "text": "Basically they are not aware of any othe solution thats why they believe is the only solution thats why am asking if that behavior is feasible using webclient",
                "time": "2020-01-27 14:41:37",
                "index": 27,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2ef70d44c076313cf5f297",
                "text": "If we achieve this with webclient then should be fine",
                "time": "2020-01-27 14:43:25",
                "index": 28,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5e2efa17f85dba0aab23ddda",
                "text": "So by using webclient if service A fails and is down then request is lost right?",
                "time": "2020-01-27 14:56:23",
                "index": 29,
                "user": "sofocleous2_twitter"
            }
        ]
    },
    {
        "id": 94,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5eb00fa90b23797ec05f6a01",
                "text": "Hi all, i'm facing issues with spring boot externalized configuration",
                "time": "2020-05-04 12:50:49",
                "index": 0,
                "user": "wtsiamruk"
            },
            {
                "id": "5eb01035347bd61630543c4f",
                "text": "during running of the jar i'm adding --spring.config.location=file:/absolute/path/to/file.properties --spring.config.name=file --spring.profiles.active=profile3\n\nAnd properties  from file does not populated",
                "time": "2020-05-04 12:53:09",
                "index": 1,
                "user": "wtsiamruk"
            },
            {
                "id": "5eb010cb7975db7ebfe2ca65",
                "text": "i'm using 2.2.0.RELEASE version",
                "time": "2020-05-04 12:55:39",
                "index": 2,
                "user": "wtsiamruk"
            },
            {
                "id": "5eb037fd14b48f0698ab9301",
                "text": "@wtsiamruk That's to be expected as you've provided a file for `spring.config.location` rather than a directory. The [documentation](https://docs.spring.io/spring-boot/docs/2.2.6.RELEASE/reference/htmlsingle/#boot-features-external-config-application-property-files) says the following:\n\n> If spring.config.location contains directories (as opposed to files), they should end in / (and, at runtime, be appended with the names generated from spring.config.name before being loaded, including profile-specific file names). Files specified in spring.config.location are used as-is, with no support for profile-specific variants, and are overridden by any profile-specific properties.\n\nYou should use `--spring.config.location=file:/absolute/path/to/` instead",
                "time": "2020-05-04 15:42:53",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 95,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d1f602777c54c13e604a88d",
                "text": "\nI am trying to integrate my plugin to spring cli but when executing any command from my plugin I get the following error:\n```java \nCaused by: java.lang.NoSuchMethodError: br.com.netodevel.command.template.TemplateHandler.option (Ljava / util / Collection; Ljava / lang / String;) Ljoptsimple / OptionSpecBuilder;\n```\nMore details in this gist:\nhttps://gist.github.com/NetoDevel/c76cc21ddef201640e6f32117446a914",
                "time": "2019-07-05 14:35:19",
                "index": 0,
                "user": "NetoDevel"
            },
            {
                "id": "5d1f60545821f065d449652e",
                "text": "could anyone help me on this issue?",
                "time": "2019-07-05 14:36:04",
                "index": 1,
                "user": "NetoDevel"
            },
            {
                "id": "5d1f62c307d71829adb9521d",
                "text": "where is the `option()` method in `TemplateHandler` that you're claling?",
                "time": "2019-07-05 14:46:27",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5d1fc10f11bfea0b67ae30c5",
                "text": "@tonisostrat ```java  @Override\n    protected void options() {\n        this.template = option(Arrays.asList(\"template\", \"t\"), \"name of template\").withRequiredArg();\n        this.listTemplates = option(Arrays.asList(\"list\"), \"list of available templates\");\n    } ```,  for more details access this gist: https://gist.github.com/NetoDevel/c76cc21ddef201640e6f32117446a914",
                "time": "2019-07-05 21:28:47",
                "index": 24,
                "user": "NetoDevel"
            },
            {
                "id": "5d1fc15b3a1e451bfda8938c",
                "text": "I based my commands on the official spring cli commands, it should work ..",
                "time": "2019-07-05 21:30:03",
                "index": 25,
                "user": "NetoDevel"
            },
            {
                "id": "5d1fd3a1dd0b530e40a57a16",
                "text": "@NetoDevel, no, not `options()` but `option()` that you're calling @ `this.template = option([args])`",
                "time": "2019-07-05 22:48:01",
                "index": 26,
                "user": "tonisostrat"
            },
            {
                "id": "5d1fd4e907d71829adbcc5c7",
                "text": "@tonisostrat happens to any argument I call",
                "time": "2019-07-05 22:53:29",
                "index": 27,
                "user": "NetoDevel"
            },
            {
                "id": "5d1fecc8ce3d0458f2b9352f",
                "text": "@tonisostrat, into class org.springframework.boot.cli.command.options.OptionHandler;\n",
                "time": "2019-07-06 00:35:20",
                "index": 29,
                "user": "NetoDevel"
            },
            {
                "id": "5d20f8c751d87058bef36484",
                "text": "@tonisostrat, I solved the cli problem using the latest version, it was 1.4.1.",
                "time": "2019-07-06 19:38:47",
                "index": 35,
                "user": "NetoDevel"
            }
        ]
    },
    {
        "id": 96,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5dc2cffe3d669b28a04670e3",
                "text": "Hey room! Has there been any discussion what the next version of Spring Boot might be? and if `2.3.0`, any notes, hints on what it might include aside from tagged issues for that milestone? to soon to ask?  ",
                "time": "2019-11-06 13:51:58",
                "index": 0,
                "user": "mmoayyed"
            },
            {
                "id": "5dc2d0a0a3f0b17849f97a63",
                "text": "everything should be in the milestones",
                "time": "2019-11-06 13:54:40",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5dc2d39cfb4dab784a74cfb1",
                "text": "@mmoayyed if you don't know where the milestones are (that James referred to), here you go: https://github.com/spring-projects/spring-boot/milestones",
                "time": "2019-11-06 14:07:24",
                "index": 6,
                "user": "mickeelm"
            },
            {
                "id": "5dc2d45c10bd4128a1ce3f28",
                "text": "Ah sorry, read your message again now, seems you already knew that ;)",
                "time": "2019-11-06 14:10:36",
                "index": 7,
                "user": "mickeelm"
            },
            {
                "id": "5dc2e2a1e469ef4358d3a2d7",
                "text": "@mmoayyed As you can see from the lack of 2.3 milestones, it's a bit too early for us to say at the moment. 2.2.1 has been our main focus and we haven't done much planning for 2.3 yet. What we do know is that we're planning to speed up our release cadence a little and we're currently aiming for April 2020 for 2.3.0.",
                "time": "2019-11-06 15:11:29",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5dc2ec62e469ef4358d3f007",
                "text": "Does spring provide a way for me to control when the web server starts? I want to do some setup before allowing requests to be accepted",
                "time": "2019-11-06 15:53:06",
                "index": 9,
                "user": "magnusp"
            },
            {
                "id": "5dc2eff514d55a3785e6674f",
                "text": "@magnusp I believe almost all configuration is processed before the web server starts (if you're using an embedded web server)",
                "time": "2019-11-06 16:08:21",
                "index": 10,
                "user": "OrangeDog"
            },
            {
                "id": "5dc2f01110bd4128a1cf0e2d",
                "text": "if not, then the web server is already running",
                "time": "2019-11-06 16:08:49",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5dc2f28914d55a3785e6790a",
                "text": "@wilkinsona thank you Andy. Look forward to additional updates on 2.3 whenever ready. ",
                "time": "2019-11-06 16:19:21",
                "index": 12,
                "user": "mmoayyed"
            },
            {
                "id": "5dc2f2b2a3f0b17849fa864a",
                "text": "@mmoayyed As it happens, we just had a chat about it on one of our weekly calls. There are now some milestones scheduled, although no content yet.",
                "time": "2019-11-06 16:20:02",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5dc2f3b02f8a03435748b0eb",
                "text": "that's excellent. I'll double check. I'd be super eager to start testing milestone releases early and help out in that area; that strategy worked quite well for 2.2 and so speeding up the release cadence would be great as well. ",
                "time": "2019-11-06 16:24:16",
                "index": 14,
                "user": "mmoayyed"
            }
        ]
    },
    {
        "id": 97,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cd5472b79d700509947dbf2",
                "text": "What particular considerations has an inner static  Autconfigure class on an Autconfigure class? Do conditionals or configurationafters/befores apply to inner classes as well?",
                "time": "2019-05-10 09:40:59",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5cd547d60f381d0a768fb2ef",
                "text": "``` \n@Configuration\n@AutoConfigureAfter(A.class)\n@ConditionalOnClass(B.class)\npublic class AutoConfiguration {\n    @Bean\n    @ConditionalOnBean(X.class)\n    public X myBeanX() {\n\t\t(...)\n    }\n\n    @Configuration\n    @ConditionalOnClass(C.class)\n    static class ParticularConfiguration {\n\n        @Bean\n        public Y myBeanY(){\n\t\t\t(...)\n\t\t}\n    }\n}\n```",
                "time": "2019-05-10 09:43:50",
                "index": 1,
                "user": "nightswimmings"
            },
            {
                "id": "5cd556a10824230a770e8b08",
                "text": "@nightswimmings The inner class will only be considered if the conditions on the outer class match",
                "time": "2019-05-10 10:46:57",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5cd55f100824230a770ec465",
                "text": "Thanks! Just a couple of brief questions. 1. Is @ConditionalOnBean as safe as @ConitionalOnClass at CLASS level due to the ASM (i.e, does it evaluate properly unregardless of presence of the class at runtime classpath)? 2.I am noticing @ConditionalOnBean works as expected at @Bean level in a regular autconfiguration class, but I am finding it always returns false when placed on class or bean level on an static inner configuration class. Is that expected?. My Outer class has a ConfigureAfter(X) where  X exposes the expected bean unconditionally,  and I am certain it-s matched and evaluated",
                "time": "2019-05-10 11:22:56",
                "index": 6,
                "user": "nightswimmings"
            },
            {
                "id": "5cd5710b0824230a770f50b4",
                "text": "@nightswimmings \n\n1. You should have a `@ConditionalOnClass` that \"protects\" the bean-based condition. \n\n2. `@ConditonalOnBean` should work on an inner-class. We use it there in tens of places in Boot.",
                "time": "2019-05-10 12:39:39",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5cd5745df251e60ffa5a2abe",
                "text": "Thanks Andy! So If I need the @ConditionalOnBean at class level, I must set both right? @ConditionalOnClass(x.class) and @ConditionalOnBean(x.class) . Does the order affect? Or as long as the one ended with Class is there its ok? For the second question, im using an old version of Boot so probably its a bug of outdated version beause i did not remember this behavior. Thanks a lot!!",
                "time": "2019-05-10 12:53:49",
                "index": 9,
                "user": "nightswimmings"
            },
            {
                "id": "5cd5756556271260f93a45f7",
                "text": "The ordering of the annotations don't matter. `@ConditionalOnClass` will always be evaluated before `@ConditionalOnBean`",
                "time": "2019-05-10 12:58:13",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5cd575d45d48a24fd0a425b8",
                "text": "And, yes, you should set both. Here's an example in Boot's own code: https://github.com/spring-projects/spring-boot/blob/552345fcd1e30d5f8c2f40aaf4f634aee67ec28c/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java#L44-L45",
                "time": "2019-05-10 13:00:04",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5cd57cf956271260f93a862f",
                "text": "Thanks Andy!",
                "time": "2019-05-10 13:30:33",
                "index": 13,
                "user": "nightswimmings"
            }
        ]
    },
    {
        "id": 98,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e20890b7148837898866cf8",
                "text": "can I make spring log the final configuration values (multiple sources, profiles merged) ?",
                "time": "2020-01-16 16:02:19",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5e20895c8e073f465f011a34",
                "text": "@konstantinblaesi probably one of the actuators will report what you want (configprops, env)",
                "time": "2020-01-16 16:03:40",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e209106dd1429262d374f5a",
                "text": "@OrangeDog I checked configprops, very cool thanks :)",
                "time": "2020-01-16 16:36:22",
                "index": 4,
                "user": "konstantinblaesi"
            }
        ]
    },
    {
        "id": 99,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5c6ab9fa126af75debc7ea81",
                "text": "Hi all, an infinispan and spring-boot user has raised an issue related to java 11. Packaging and running with java 11 using java -jar fails to start.",
                "time": "2019-02-18 13:58:18",
                "index": 0,
                "user": "karesti"
            },
            {
                "id": "5c6aba0e5095f6660c14a77d",
                "text": "We are suspecting a problem related to https://github.com/spring-projects/spring-boot/issues/12523",
                "time": "2019-02-18 13:58:38",
                "index": 1,
                "user": "karesti"
            },
            {
                "id": "5c6aba1e16e4682259c28574",
                "text": "Here is the issue for details: https://issues.jboss.org/browse/ISPN-9977",
                "time": "2019-02-18 13:58:54",
                "index": 2,
                "user": "karesti"
            },
            {
                "id": "5c6aba63604f233ab62e23e7",
                "text": "In the spring-boot starter there are (and soon to be merged) some pom.xml minor issues that we suspected to be causing the problem (related to maven shade plugin). After correcting them, the problem persists. ",
                "time": "2019-02-18 14:00:03",
                "index": 3,
                "user": "karesti"
            },
            {
                "id": "5c6abac2dc3f0523ccd6e452",
                "text": "The user could make the application run explicily using infinispan-commons in version 9.4.3.Final. But this is only possible because this jar, by mistake, it's not a multi-release jar.",
                "time": "2019-02-18 14:01:38",
                "index": 4,
                "user": "karesti"
            },
            {
                "id": "5c6abadd750228225806a750",
                "text": "May I add a message in the issue already closed in github?",
                "time": "2019-02-18 14:02:05",
                "index": 5,
                "user": "karesti"
            },
            {
                "id": "5c6abf114bafd97ca31167e4",
                "text": "Hi @karesti - this part of the codebase is not my forte, but spring-projects/spring-boot#12523 is fixed in Spring Boot 2.1.1 and the reporter in your case is using Spring Boot 2.1.2. So IMO it's a different instance of that issue or something specific to this sample (in the way it's using the classloader or something else?).\nUnless @snicoll or @wilkinsona have a hunch, I think a new issue containing a link to that sample is the best course of action.",
                "time": "2019-02-18 14:20:01",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5c6abfa94bafd97ca3116cea",
                "text": "Hey, looking at it",
                "time": "2019-02-18 14:22:33",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5c6abfecef98455ea457396a",
                "text": "Thank you @bclozel ! I wait for @snicoll and/or @wilkinsona to tell me how to proceed the best! BTW I've been testing this with 2.1.3.RELEASE",
                "time": "2019-02-18 14:23:40",
                "index": 8,
                "user": "karesti"
            },
            {
                "id": "5c6ac024ef98455ea4573acd",
                "text": "Confused why the shade plugin is mentionned on that issue",
                "time": "2019-02-18 14:24:36",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5c6ac049adf6cb0b2cdc476d",
                "text": "Looks odd enough, @karesti can you please create a new issue with the link to the sample?",
                "time": "2019-02-18 14:25:13",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5c6ac0eaef98455ea4573f68",
                "text": "@snicoll Tristan told me he had a similar (if not the same exact) error in the past, when shade plugin was not up to date in infinispan",
                "time": "2019-02-18 14:27:54",
                "index": 11,
                "user": "karesti"
            },
            {
                "id": "5c6ac0fed1e3093ab53fcaa3",
                "text": "We don\u2019t use that at all ourselves",
                "time": "2019-02-18 14:28:14",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5c6ac10f16e4682259c2b6b6",
                "text": "Shade is an alternative to our `repackage` capability",
                "time": "2019-02-18 14:28:31",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5c6ac113604f233ab62e5129",
                "text": "I was using a parent pom that brought an old version when I checked in the plugin dependencies with maven. but is unrelated",
                "time": "2019-02-18 14:28:35",
                "index": 14,
                "user": "karesti"
            },
            {
                "id": "5c6ac11e750228225806cf60",
                "text": "Got it",
                "time": "2019-02-18 14:28:46",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5c6ac19badf6cb0b2cdc509e",
                "text": "I have this PR (https://github.com/infinispan/infinispan-spring-boot/issues/101) that corrects this and does some upgrades. Yesterday I was unable to understand why this was working with 9.4.3.Final til I realised this jar it's not a multi-release jar by mistake 0_0",
                "time": "2019-02-18 14:30:51",
                "index": 16,
                "user": "karesti"
            },
            {
                "id": "5c6ac1c1adf6cb0b2cdc5157",
                "text": "(I said mistake, but I don't really remember the details of what happened on this particular minor release)",
                "time": "2019-02-18 14:31:29",
                "index": 17,
                "user": "karesti"
            },
            {
                "id": "5c6ac828adf6cb0b2cdc7ed9",
                "text": "> Looks odd enough, @karesti can you please create a new issue with the link to the sample?",
                "time": "2019-02-18 14:58:48",
                "index": 18,
                "user": "karesti"
            },
            {
                "id": "5c6ac82928c89123cbec9681",
                "text": "https://github.com/spring-projects/spring-boot/issues/15981",
                "time": "2019-02-18 14:58:49",
                "index": 19,
                "user": "karesti"
            },
            {
                "id": "5c6ac8325095f6660c150e89",
                "text": "Done, thanks!",
                "time": "2019-02-18 14:58:58",
                "index": 20,
                "user": "karesti"
            },
            {
                "id": "5c6ac911126af75debc85527",
                "text": ":bow: ",
                "time": "2019-02-18 15:02:41",
                "index": 21,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 100,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5bd854e582893a2f3b62e853",
                "text": "Hi @wilkinsona seems some of the links from https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes are broken - specifically in the [Profile Expression](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#profile-expression) section (the link to [an expression format](an expression format) seems to be broken",
                "time": "2018-10-30 12:56:05",
                "index": 0,
                "user": "edeandrea"
            },
            {
                "id": "5bd855fe069fca52a5b9983c",
                "text": "@edeandrea Thank you. Fixed now, I think.",
                "time": "2018-10-30 13:00:46",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bd85668ab17df263113ba5c",
                "text": "yes seems fixed, although you are pointing directly to the 5.1.2.RELEASE docs. If you want to go generically to 5.1.x, you can use https://docs.spring.io/spring-framework/docs/5.1.x/spring-framework-reference/core.html#beans-definition-profiles",
                "time": "2018-10-30 13:02:32",
                "index": 3,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 101,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5efdb2cbe0e5673398ea3c4e",
                "text": "May someone can point me to the right direction regarding springboot and logging. I can define a lot of stuff in application.yaml : logging.*** including log-rotation etc. _but_ I have also my own logback-spring.xml and if I defined only loglevel in my logback-spring.xml (no appender etc.) then simply nothing happens in the console or in a logfile etc.\nCurrently I have to define a console-appender _and_ a file-append (incl. rolling) so that I see something ... \nWhat are the best practises here?\n```<include resource=\"/org/springframework/boot/logging/logback/base.xml\"/>``` doesn't help either.",
                "time": "2020-07-02 10:11:23",
                "index": 0,
                "user": "ahoehma"
            },
            {
                "id": "5efdb5457ba3965373e0fa5e",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/Kvax/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/Kvax/image.png)",
                "time": "2020-07-02 10:21:57",
                "index": 1,
                "user": "ahoehma"
            },
            {
                "id": "5efdb63cfa0c9221fc73453f",
                "text": "As u r using logback... Can u ensure there is no log4j jar getting imported ",
                "time": "2020-07-02 10:26:04",
                "index": 2,
                "user": "SauriBabu"
            },
            {
                "id": "5efdb6a97ba3965373e0fda4",
                "text": "thats for sure ... but I think this is not the cause of my problem ... I would like to know what is the preferred way to have a \"out of the box\" springboot logback-logging (defined via application.yaml logging.*) _and_ my own logback-spring.xml where I can define _only_ my loglevels. Is this possible?",
                "time": "2020-07-02 10:27:53",
                "index": 3,
                "user": "ahoehma"
            },
            {
                "id": "5efdb99bb8152d348478adf2",
                "text": "https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot/src/main/resources/org/springframework/boot/logging/logback looks exactly what I'm searching for ... seems that these basic-logback-settings are configured via \"properties\" ... but how to include this ... ```<include .... ``` doesn't work .... logback says ... \"cant find base.xml\"",
                "time": "2020-07-02 10:40:27",
                "index": 4,
                "user": "ahoehma"
            },
            {
                "id": "5efdd752ec4a341bee019db8",
                "text": "@ahoehma base was renamed to defaults.xml - including defaults.xml works for me (same path as the old base file) (Edit: Renamed is wrong; see https://github.com/spring-projects/spring-boot/pull/16901 for more details)",
                "time": "2020-07-02 12:47:14",
                "index": 5,
                "user": "knoobie"
            },
            {
                "id": "5efdf07ed65a3b0292c35a79",
                "text": "@knoobie Aha ... thanks for the hint! :D",
                "time": "2020-07-02 14:34:38",
                "index": 14,
                "user": "ahoehma"
            }
        ]
    },
    {
        "id": 102,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5f1ef4e6e9066820051edccd",
                "text": "Hi all,\n\nIn the Javadoc comments for `org.springframework.web.bind.annotation.RequestMapping#params` it is noted that:\n\n> The primary path mapping (i.e. the specified URI value) still has to uniquely identify the target handler, with parameter mappings simply expressing preconditions for invoking the handler.\n\nDoes that mean as far as Spring is concerned, these handler methods are _invalid_ then, as the URI does not _\"uniquely identify the target handler\"_?\n\n```java\n@RestController\n@RequestMapping(path = \"/demo1\")\npublic class DemoController1 {\n\n    @GetMapping(params = \"p=1\")\n    public String endpoint1(@RequestParam(\"p\") final String p) {\n        return p;\n    }\n\n    @GetMapping(params = \"p=2\")\n    public String endpoint2(@RequestParam(\"p\") final String p) {\n        return p;\n    }\n\n}\n```\n\nPS: can Spring devs create a Gitter room for https://github.com/spring-projects/spring-framework?",
                "time": "2020-07-27 15:38:14",
                "index": 0,
                "user": "behrangsa"
            },
            {
                "id": "5f1ef52f77eccd0e147af1b9",
                "text": "If that's the case, Spring should throw an error during startup or print a warning, but it doesn't.",
                "time": "2020-07-27 15:39:27",
                "index": 1,
                "user": "behrangsa"
            },
            {
                "id": "5f1ef565cd7bed0e379494bf",
                "text": "And FWIW, requests can be routed to endpoint1/endpoint2 based on value of `p` so maybe the Javadoc comment is out of date?",
                "time": "2020-07-27 15:40:21",
                "index": 2,
                "user": "behrangsa"
            },
            {
                "id": "5f1f15e1a050df43001caae1",
                "text": "@behrangsa That sounds like it warrants a Framework issue to me, at least to clarify the javadoc. Could you please open one?",
                "time": "2020-07-27 17:58:57",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5f1f968449bae2060123d847",
                "text": "Is there a reason why here we have an inteceptors array and an inceptorList?\n\n```java\npublic class HandlerExecutionChain {\n\n\tprivate static final Log logger = LogFactory.getLog(HandlerExecutionChain.class);\n\n\tprivate final Object handler;\n\n\t@Nullable\n\tprivate HandlerInterceptor[] interceptors;\n\n\t@Nullable\n\tprivate List<HandlerInterceptor> interceptorList;\n```",
                "time": "2020-07-28 03:07:48",
                "index": 4,
                "user": "behrangsa"
            }
        ]
    },
    {
        "id": 103,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5ba36df9e6046343f38c8f95",
                "text": "Hi all.. when I try to run https://spring.io/guides/gs/serving-web-content/ in Intellij using typical run configuration.. \nI am getting:\n```\njava.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:718) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]\nCaused by: java.lang.NoClassDefFoundError: org/thymeleaf/spring5/view/ThymeleafViewResolver\n\tat java.lang.Class.getDeclaredMethods0(Native Method) ~[na:1.8.0_152]\n\tat java.lang.Class.privateGetDeclaredMethods(Class.java:2701) ~[na:1.8.0_152]\n\tat java.lang.Class.getDeclaredMethods(Class.java:1975) ~[na:1.8.0_152]\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]\n\t... 25 common frames omitted\nCaused by: java.lang.ClassNotFoundException: org.thymeleaf.spring5.view.ThymeleafViewResolver\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_152]\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_152]\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338) ~[na:1.8.0_152]\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_152]\n\t... 29 common frames omitted\n```\nIs it some issue in Intellij or Spring Boot issue?\n",
                "time": "2018-09-20 09:52:57",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5ba36e3cbe4f300626bf6cf0",
                "text": ":shrug:",
                "time": "2018-09-20 09:54:04",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ba36e87fcba1254fae2bdb0",
                "text": "Corrupted jar? What does the IDE has anything to do with that?",
                "time": "2018-09-20 09:55:19",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5ba36ef7fcba1254fae2c1c2",
                "text": "I had similar problem before and it was IDE bug",
                "time": "2018-09-20 09:57:11",
                "index": 3,
                "user": "pmihalcin"
            },
            {
                "id": "5ba36f751ee2ca6502430677",
                "text": "I tried with 2.0.0.RELEASE -> ... -> 2.0.5.RELEASE and I'm getting the same problem",
                "time": "2018-09-20 09:59:17",
                "index": 4,
                "user": "pmihalcin"
            },
            {
                "id": "5ba36f905df5194734e81427",
                "text": "If that\u2019s happening only in your IDE, I\u2019d ask in the IDE support channel",
                "time": "2018-09-20 09:59:44",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ba36fe65df5194734e81636",
                "text": "I can run the app using `spring-boot:run`",
                "time": "2018-09-20 10:01:10",
                "index": 6,
                "user": "pmihalcin"
            }
        ]
    },
    {
        "id": 104,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c971a9ca21ce51a20b026f4",
                "text": "hello.\nAny idea what this the difference between `AsyncConfigurer ` and `SchedulingConfigurer` and what should I use in order to define many customed `Thread Pool` ?",
                "time": "2019-03-24 05:50:20",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5c9886788aa66959b6690d9e",
                "text": "@amirensit one is for async task execution and one is for scheduled execution.",
                "time": "2019-03-25 07:42:48",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5c98868d52c7a91455f0627a",
                "text": "@snicoll :thumbsup: ",
                "time": "2019-03-25 07:43:09",
                "index": 5,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 105,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bca2ed7c7bf7c36623a22d5",
                "text": "after migrating our projects to spring 2, something seems not right with serialization/deserialization (feign + jackson + lombok). Before it was only required the `@Data` annotation, now I need to put `@Data`, `@NoArgsConstructor` and `@AllArgsConstructor`. Does anyone know anything about this issue?",
                "time": "2018-10-19 19:21:59",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5bcae86bae7be9401687df88",
                "text": "> after migrating our projects to spring 2, something seems not right with serialization/deserialization (feign + jackson + lombok). Before it was only required the `@Data` annotation, now I need to put `@Data`, `@NoArgsConstructor` and `@AllArgsConstructor`. Does anyone know anything about this issue?\nCould you paste the exception message?",
                "time": "2018-10-20 08:33:47",
                "index": 4,
                "user": "BenEfrati"
            },
            {
                "id": "5bcae87482893a2f3b0e64d3",
                "text": "@ofabricio ",
                "time": "2018-10-20 08:33:56",
                "index": 5,
                "user": "BenEfrati"
            },
            {
                "id": "5bcae9a2600c5f6423daf96a",
                "text": "@ofabricio Try this:\ncreate file named lombok.config on your root project dir, then paste this line to the file:\n`lombok.anyConstructor.addConstructorProperties=true`\n",
                "time": "2018-10-20 08:38:58",
                "index": 7,
                "user": "BenEfrati"
            },
            {
                "id": "5bcafb1238449236616b9e53",
                "text": "@BenEfrati by root you mean where the `pom.xml` is located?",
                "time": "2018-10-20 09:53:22",
                "index": 8,
                "user": "ofabricio"
            },
            {
                "id": "5bcafece38449236616bb1ea",
                "text": "yes",
                "time": "2018-10-20 10:09:18",
                "index": 9,
                "user": "BenEfrati"
            }
        ]
    },
    {
        "id": 106,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc2f5f7e1c5e91508449a66",
                "text": "https://stackoverflow.com/questions/44109953/spring-ws-remove-flexible-url-restricting-wsdl-url-and-service-url",
                "time": "2019-11-06 16:33:59",
                "index": 0,
                "user": "joaopedroleiteslisboa"
            },
            {
                "id": "5dc2f6179825bd6bac39e341",
                "text": "Is there a way on spring to make paths for soap request unique?",
                "time": "2019-11-06 16:34:31",
                "index": 1,
                "user": "joaopedroleiteslisboa"
            },
            {
                "id": "5dc2f728f26ea4729d6645c7",
                "text": "@IronJhon that question already has answers",
                "time": "2019-11-06 16:39:04",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5dc2fdb1f26ea4729d6679f1",
                "text": "@OrangeDog  But in my environment it didn't work ...",
                "time": "2019-11-06 17:06:57",
                "index": 9,
                "user": "joaopedroleiteslisboa"
            }
        ]
    },
    {
        "id": 107,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be19dc37c6c9e5df2173cc3",
                "text": "For google: This was caused by this bug: https://jira.spring.io/browse/SPR-17052 > I am trying to fix an app to not fail if the redis cache is down. I have a @Configuration extending CachingConfigurerSupport overriding CacheErrorHandler errorHandler() with an CacheErrorHandler that just logs the errors. However, if I shut down redis the RedisConnectionFailureException exceptions are still thrown. It does not look like the error handler is called at all. Spring Boot 2.1.0... Any ideas? ",
                "time": "2018-11-06 13:57:23",
                "index": 0,
                "user": "legart"
            },
            {
                "id": "5be19df16200995df145daa1",
                "text": "What\u2019s the stacktrace? Not sure that the error handler is a sane route",
                "time": "2018-11-06 13:58:09",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5be19e16da57ff676c9d18c3",
                "text": "Are you using `sync=true`?",
                "time": "2018-11-06 13:58:46",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5be19e1a6c24a807cb65b764",
                "text": "It works if i disable sync=true yes",
                "time": "2018-11-06 13:58:50",
                "index": 3,
                "user": "legart"
            },
            {
                "id": "5be19e217660cf07ca79ccae",
                "text": "There you go then ",
                "time": "2018-11-06 13:58:57",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5be19e367660cf07ca79cd33",
                "text": "Just found that bug in jira after a few hours trying to understand the calltraces :D",
                "time": "2018-11-06 13:59:18",
                "index": 5,
                "user": "legart"
            },
            {
                "id": "5be19e446200995df145ddaa",
                "text": "Starting with \u201cit works if I remove sync=true\u201d would have been enough :)",
                "time": "2018-11-06 13:59:32",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5be19e746200995df145e038",
                "text": "Yea, sorry - it was a question from yesterday and I was trying to quote the question and answer it myself for future searches.. however my gitter foo did not get me that far ;)",
                "time": "2018-11-06 14:00:20",
                "index": 8,
                "user": "legart"
            },
            {
                "id": "5be19e817660cf07ca79cfac",
                "text": "Ah ok :) Thanks for the feedback",
                "time": "2018-11-06 14:00:33",
                "index": 9,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 108,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e0d51c4052986049824960f",
                "text": "Hi All, I have this two methods annotated with @Cacheable and with different cacheNames on my class:\n```\n    @Override\n    @Cacheable(cacheNames = \"templateTypeCache\")\n    public TemplateType getTemplateType(Integer sponsorId) {\n        return TempleteType.CNAB;\n    }\n\n    @Override\n    @Cacheable(cacheNames = \"CNABTemplateCache\")\n    public TemplateCNAB getCNABTemplate(Integer sponsorId) {\n        return new TemplateCNAB(); \n    }\n```\n\nBut when I call getCNABTemplate I got the class cast error because the return is a TemplateType, my question is: I need two differents keys even using differents cacheNames?",
                "time": "2020-01-02 02:13:24",
                "index": 0,
                "user": "FelipeAdorno"
            },
            {
                "id": "5e0de0b5eac8d1511e9c743a",
                "text": "@FelipeAdorno no. Something else is wrong and not doing what you expect. ",
                "time": "2020-01-02 12:23:17",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 109,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e2f027d183449313be900ac",
                "text": "Hi everyone, \nI currently search for the possibility to feature toggle RestController. Is there already a standard way to disable/enable RestController accordingly to \"@ConditionalOnBean(MyBean.class)\" which can be used when auto configuring?\nThanks a lot !",
                "time": "2020-01-27 15:32:13",
                "index": 0,
                "user": "Lacritz"
            },
            {
                "id": "5e2f0f814c3dae24f5fb74bc",
                "text": "hi everyone.. quick question.. can someone point me to how to extend a controller annotation such as @PostMapping ? is that possible in webflux as well?",
                "time": "2020-01-27 16:27:45",
                "index": 1,
                "user": "salaboy"
            },
            {
                "id": "5e2f0f974c3dae24f5fb7553",
                "text": "@Lacritz you probably need to define a Configuration for that ",
                "time": "2020-01-27 16:28:07",
                "index": 2,
                "user": "salaboy"
            },
            {
                "id": "5e2f0f9ff85dba0aab247d12",
                "text": "and then use the Conditional on the configuration itself",
                "time": "2020-01-27 16:28:15",
                "index": 3,
                "user": "salaboy"
            },
            {
                "id": "5e2f103dda04a624f4920f8a",
                "text": "@salaboy am I allowed to introduce the restcontroller on a method level (like a bean definition) or do I have to introduce the RestController as static inner class of the configuration?",
                "time": "2020-01-27 16:30:53",
                "index": 4,
                "user": "Lacritz"
            },
            {
                "id": "5e2f1078a9b30639e2f7691a",
                "text": "@salaboy you won\u2019t be able to extend the annotation since you need to pass an argument to the @PostMapping, which is not able due to the annotation limitations of java",
                "time": "2020-01-27 16:31:52",
                "index": 5,
                "user": "Lacritz"
            },
            {
                "id": "5e2f111501914e3e045a508f",
                "text": "@Lacritz thanks for the clarification on the @PostMapping .. ",
                "time": "2020-01-27 16:34:29",
                "index": 6,
                "user": "salaboy"
            },
            {
                "id": "5e2f1147cd53a80aac35f079",
                "text": "regarding your question.. I've done that before.. but I cannot remember how I did it.. ",
                "time": "2020-01-27 16:35:19",
                "index": 7,
                "user": "salaboy"
            }
        ]
    },
    {
        "id": 110,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd653b289fce12f259d10a2",
                "text": "Hello all, I've just stumbled upon a Spring Boot project which has left me a little confused. The application is deployed using k8s/Docker. I would have expected a Docker image to be built from an exploded version of the Spring Boot `JAR` on a JVM base image.  However, a `WAR` is being built then copied to the webapps directory on a Tomcat base image. Why would this approach be adopted? What are the advantages? ",
                "time": "2019-11-21 09:06:58",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5dd66d55afacdc4de44b4a3d",
                "text": "@mplanchant I can't think of any, particularly if it's just a single webapp being added to the Tomcat base image. Does the app use anything that standalone Tomcat provides, like JNDI for example?",
                "time": "2019-11-21 10:56:21",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5dd6721f98606054895218fa",
                "text": "thanks @wilkinsona I'll investigate further. Just seem like an illogical way of building the image.",
                "time": "2019-11-21 11:16:47",
                "index": 6,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 111,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cd50b3de7f42160fa6321f9",
                "text": "Initialization of bean failed; nested exception is org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java.util.concurrent.ThreadPoolExecutor': Invalid byte tag in constant pool: 15",
                "time": "2019-05-10 05:25:17",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd50f2ebdc3b64fcf1eb426",
                "text": "Why am I getting this",
                "time": "2019-05-10 05:42:06",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd54285f251e60ffa589e91",
                "text": "@DoraRajappan a bytecode version mismatch. Make sure you're not running in a JVM that's too old. You may need to recompile some classes.",
                "time": "2019-05-10 09:21:09",
                "index": 2,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 112,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbfeb8f600c5f64239387f6",
                "text": "Hi everybody, I'm playing around with spring boot + webflux right now and trying to understand how some things work behind the scenes. So I have this simple controller endpoint that's basically just a sysout of numbers 0 to 4 every seconds using an interval Flux, and at the end, returning a simple string. It works, but I noticed that when my client disconnects in the middle of it, the \"operation\" doesn't fully complete (as in I don't get a sysout of numbers 0 to 4, it stops in the middle where my client quits). What if I want this operation to fully complete if my client disconnects though?  ",
                "time": "2018-10-12 00:32:15",
                "index": 0,
                "user": "kev-cs"
            },
            {
                "id": "5bc04a471e23486b93b29f2a",
                "text": "@kev-cs The use case you're describing is quite artificial, so it's hard to give a proper advice here. The behavior you're describing is 100% compliant with the reactive streams spec; when a subscriber cancels, the cancellation message bubbles up and upstream publisher aren't allowed to produce values anymore. That's quite useful in fact.\nIf you want to completely disconnect a task from the request processing, then you have several solutions. You could fire an application event and get that task done in a separate task executor, for example.",
                "time": "2018-10-12 07:16:23",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5bc2558fae7be940165116d7",
                "text": "@bclozel Thank you for your answer, and sorry for the quite late reply. I understand that the behaviour is compliant and expected from a reactive component and I do agree that it is useful (I understand how it works behind the scenes, related to the reactive streams spec). However, to me, the behaviour I'm looking to achieve is not an uncommon one, and I haven't been able to find documentation or suggestions about this sort of thing (well, not easily). \n\nBut solution you're proposing does make a lot of sense though, and is idiomatic to this execution model. I will try that, thank you for your suggestion.",
                "time": "2018-10-13 20:29:03",
                "index": 44,
                "user": "kev-cs"
            }
        ]
    },
    {
        "id": 113,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc1301efb4dab784a68ddea",
                "text": "Hello! I\u2019m using the `ApplicationEventPublisher` with annotations `@EventListener` to manage events in my app. This works on a single-node application, but I need to deploy the app on a WildFly cluster and I\u2019ve noticed that the `ApplicationEventPublisher` only notifies listeners in the same node where the event is published. Any idea how can I make it work in a multi-node environment?",
                "time": "2019-11-05 08:17:34",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5dc131c9ef84ab3786fc15f0",
                "text": "@heruan One thing to consider first: Why is this necessary? Sounds like a design smell if all instances need to consume the event.",
                "time": "2019-11-05 08:24:41",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5dc1322aef84ab3786fc18d6",
                "text": "Interesting observation. Well, for example an event is generated when an entity is modified and users should be notified: users connected to the node where the event is generated are notified, users on other nodes aren\u2019t.",
                "time": "2019-11-05 08:26:18",
                "index": 2,
                "user": "heruan"
            },
            {
                "id": "5dc133319825bd6bac2d1937",
                "text": "@heruan Hm \u2026 connected in terms of websocket or something like that? One solution is to use an external messaging tool like kafka",
                "time": "2019-11-05 08:30:41",
                "index": 3,
                "user": "kschlesselmann"
            },
            {
                "id": "5dc1336d3d669b28a03aa8a3",
                "text": "Yeah, the notication is then pushed to the UI via a web socket. I\u2019m looking into JMS right now, I\u2019ll hava a look at Kafka too!",
                "time": "2019-11-05 08:31:41",
                "index": 4,
                "user": "heruan"
            }
        ]
    },
    {
        "id": 114,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bc77611600c5f6423c50eb4",
                "text": "Hi I run into the same problem as this ticket shows: https://jira.spring.io/browse/SPR-15785. The webflux server wants to return ResponseEntity Object, but it ends up the whole ResponseEntity got serialized in the response.content. Any idea how is this resolved?",
                "time": "2018-10-17 17:49:05",
                "index": 0,
                "user": "duke-cliff"
            },
            {
                "id": "5bc7766a1c100a4f299fe475",
                "text": "Hi Andy, I see you are the reporter of this ticket",
                "time": "2018-10-17 17:50:34",
                "index": 2,
                "user": "duke-cliff"
            },
            {
                "id": "5bc776c682893a2f3bf8ae4e",
                "text": "@duke-cliff This issue is fixed. Are you using a Spring Framework version containing the fix?",
                "time": "2018-10-17 17:52:06",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5bc776e8600c5f6423c514cf",
                "text": "I just updated to 2.0.6",
                "time": "2018-10-17 17:52:40",
                "index": 4,
                "user": "duke-cliff"
            },
            {
                "id": "5bc77717ef4afc4f288c6910",
                "text": "I am working on a legacy project with a weird gradle setup. Is there some particular dependency I need to worry about?",
                "time": "2018-10-17 17:53:27",
                "index": 5,
                "user": "duke-cliff"
            },
            {
                "id": "5bc7788f64cfc273f9e116ad",
                "text": "Just checked the dependencies, all springframework should be on 5.0.10/5.0.8",
                "time": "2018-10-17 17:59:43",
                "index": 6,
                "user": "duke-cliff"
            },
            {
                "id": "5bc77aa1ae7be9401672455f",
                "text": "Then it might not be the same issue - do you have a project we can take a look at?",
                "time": "2018-10-17 18:08:33",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5bc77af7c7bf7c366228cdff",
                "text": "Only thing is the project is using DeferredResult<ResponseEntity<...>> as the endpoint response and I am using webflux not webmvc. Could that be the reason?",
                "time": "2018-10-17 18:09:59",
                "index": 8,
                "user": "duke-cliff"
            },
            {
                "id": "5bc77b32271506518d29ab1d",
                "text": "@duke-cliff `DeferredResult` is a Spring MVC concept, so that's the problem",
                "time": "2018-10-17 18:10:58",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5bc77b5c1e23486b93d59f9e",
                "text": "the supported return values are listed here: https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web-reactive.html#webflux-ann-return-types",
                "time": "2018-10-17 18:11:40",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5bc77b8dc08b8b30672d666a",
                "text": "In Spring WebFlux, `Mono` and `Flux` reactive types are designed (and are much better than `DeferredResult`) for those use cases",
                "time": "2018-10-17 18:12:29",
                "index": 12,
                "user": "bclozel"
            },
            {
                "id": "5bc77bd782893a2f3bf8d49a",
                "text": "@bclozel Get it! Thanks.  I am just in the middle of converting our server common library from rxjava+webmvc implementation into webflux.  Thanks",
                "time": "2018-10-17 18:13:43",
                "index": 13,
                "user": "duke-cliff"
            },
            {
                "id": "5bc77c1ac08b8b30672d6984",
                "text": "@duke-cliff If you run into issues/questions with code snippets, don't hesitate to ask on StackOverflow I'm monitoring closely the spring-webflux tag",
                "time": "2018-10-17 18:14:50",
                "index": 14,
                "user": "bclozel"
            },
            {
                "id": "5bc77c2dae7be94016724d9f",
                "text": "Thanks~",
                "time": "2018-10-17 18:15:09",
                "index": 15,
                "user": "duke-cliff"
            }
        ]
    },
    {
        "id": 115,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c531c3fceb5a2264f704478",
                "text": "Hello, is it somehow possible to set dataSource primary? I have some core functionality where exists datasource (datasourceA) and I need to add another datasources (datasourceB). As datasourceA is not marked as `@Primary` I was trying to inject it to some method which will return the same instance but add primary annotation on top of that method.  Something like this.\n```\n    @Bean(\"applicationDataSource\")\n    @Primary\n    public DataSource applicationDataSourceAsPrimary(@Qualifier(\"applicationDataSource\") DataSource dataSource) {\n        return dataSource;\n    }\n```\n\nunfortunately I get exception: `Unsatisfied dependency expressed through method 'appicationDataSourceAsPrimary' parameter 0; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'applicationDataSource': Requested bean is currently in creation: Is there an unresolvable circular reference?`\n\nNOTE: I can't modify code of datasourceA \n\n",
                "time": "2019-01-31 16:03:11",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5c531d3e93fe7d5ac01f7b5e",
                "text": "@bilak there is no need to do that. Just register a `BeanFactoryPostProcessor`.\nThen get the Bean defintion `beanFactory.getBeanDefinition(\"beanName\")`\nand set it as Primary `beanDefinition.setPrimary(true)`",
                "time": "2019-01-31 16:07:26",
                "index": 1,
                "user": "lppedd"
            },
            {
                "id": "5c5321cdf46373406a2ed8de",
                "text": "@lppedd thank's that did the trick",
                "time": "2019-01-31 16:26:53",
                "index": 2,
                "user": "bilak"
            },
            {
                "id": "5c532204ceb5a2264f706d08",
                "text": "@bilak awesome ;) No need to use nasty tricks most of the time",
                "time": "2019-01-31 16:27:48",
                "index": 3,
                "user": "lppedd"
            }
        ]
    },
    {
        "id": 116,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c51e49354f21a71a1cfabc3",
                "text": "Hello, I'm newbie,  I need the same web service for angular client and another client. In the 1st case I will return a full JSON of data, instead in the later case I'll need to return only a subset of the JSON data. Could this be done with the same web service, if yes, what is the correct way in which I should distinguish the two clients? Thanks in advance for any suggestion.",
                "time": "2019-01-30 17:53:23",
                "index": 0,
                "user": "Anisorf"
            },
            {
                "id": "5c520b4ff206e32ef917e8a1",
                "text": "@Anisorf use different path\u2019s in your controller(s) to differentiate",
                "time": "2019-01-30 20:38:39",
                "index": 1,
                "user": "mateothegreat"
            },
            {
                "id": "5c520bc59221b9382dea84d3",
                "text": "@mateothegreat , so simple :D, thanks",
                "time": "2019-01-30 20:40:37",
                "index": 2,
                "user": "Anisorf"
            },
            {
                "id": "5c5223bb8aa5ca5abf5ab3dd",
                "text": "How can my rest controler returns a partial JSON response?",
                "time": "2019-01-30 22:22:51",
                "index": 7,
                "user": "Anisorf"
            }
        ]
    },
    {
        "id": 117,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dfd21ed260751301ce105d9",
                "text": "Hey. Spring data is treating an interface differently if that interface is in a different module. \nI have a failing test case based off https://github.com/spring-guides/gs-multi-module and can \nshare if that would help. Essentially.  \n\n- lib.data.InterfaceA : have a default method and @Primary impl in lib module\n- app.data.InterfaceB : exactly like InterfaceA, except that it is in the app module. InterfaceB have a default method and impl in app module. \n\n- app.service.TestService autowires both InterfaceA and InterfaceB and it works as expected. \n\n\n- app.data.repo.TestRepository: defined as \n\n@Repository\npublic interface TestEntityRepository\n    extends PagingAndSortingRepository<TestEntity, Long>, InterfaceB {\n\nworks as expected. I can call InterfaceB default method and primary implementation on an instance of TestEntityRepository. \n\n\n- @Repository\npublic interface TestEntityRepository\n    extends PagingAndSortingRepository<TestEntity, Long>, InterfaceA {\n\ndoesn't work. Spring Data is looking for InterfaceA methods as a property on entity. Naturally, Spring data throws\n`Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.lang.String com.example.multimodule.service.InterfaceA.sayA(java.lang.String)! No property sayA found for type TestEntity!\n`.\n\nWhat should I change in InterfaceA to make it behave like InterfaceB while being in lib module? Thanks\n",
                "time": "2019-12-20 19:33:01",
                "index": 0,
                "user": "rizhabib"
            },
            {
                "id": "5dfd223b0cb24d1d44f367c0",
                "text": "sorry for the wall of text. ",
                "time": "2019-12-20 19:34:19",
                "index": 1,
                "user": "rizhabib"
            },
            {
                "id": "5dffbdb6e0131f50c98b35f4",
                "text": "@rizhabib you\u2019d have more luck asking that in #spring-data",
                "time": "2019-12-22 19:02:14",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5e0006f1260751301cf3c9d2",
                "text": "Thanks @snicoll I'll try #spring-data",
                "time": "2019-12-23 00:14:41",
                "index": 14,
                "user": "rizhabib"
            }
        ]
    },
    {
        "id": 118,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c794d0d65ffa019ea6dc120",
                "text": "```java\n@WebEndpoint(id = \u201cmy\")\nclass VipServerHealthCheckEndpoint {\n\n    @ReadOperation(produces = [\"application/json\"])\n    fun health(@Selector functionId: String): Mono<WebEndpointResponse<Status>> {\n        if (functionId.startsWith(\"a\")) {\n            return Mono.just(WebEndpointResponse(Status(\"ok\"), 200))\n        } else {\n            return Mono.just(WebEndpointResponse(Status(\"bad\"), 500))\n        }\n    }\n}\n\ndata class Status(val msg: String)\n```\n",
                "time": "2019-03-01 15:17:33",
                "index": 0,
                "user": "juven"
            },
            {
                "id": "5c794d288a7def0752f7e466",
                "text": "the `@Selector` does not work with WebFlux endpoint?",
                "time": "2019-03-01 15:18:00",
                "index": 1,
                "user": "juven"
            },
            {
                "id": "5c794d4c5015f21e197cddf7",
                "text": "when I curl I got:\n{\"timestamp\":\"2019-03-01T15:11:45.165+0000\",\"path\":\u201d/my/xx\",\"status\":500,\"error\":\"Internal Server Error\",\"message\":\"Failed to invoke operation because the following required parameters were missing: functionId of type java.lang.String\"}",
                "time": "2019-03-01 15:18:36",
                "index": 2,
                "user": "juven"
            },
            {
                "id": "5c7957fec1cab53d6f5b8609",
                "text": "Ok, i found the root cause, it\u2019s because kotlin by default does not java parameter names for java reflection, and I need to configure the kotlin compiler with: <arg>-java-parameters</arg>",
                "time": "2019-03-01 16:04:14",
                "index": 3,
                "user": "juven"
            },
            {
                "id": "5c79580f212d0c1e1ab7313a",
                "text": "https://stackoverflow.com/questions/36093019/does-kotlin-compiler-always-retain-parameter-names-in-bytecode",
                "time": "2019-03-01 16:04:31",
                "index": 4,
                "user": "juven"
            },
            {
                "id": "5c7cd879cbebcf784a384767",
                "text": "@juven thanks for the feedback, I\u2019ve created https://github.com/spring-projects/spring-boot/issues/16081",
                "time": "2019-03-04 07:49:13",
                "index": 17,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 119,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d115a125e67ff0bcbe19f47",
                "text": "How do I configure keepAliveTimeout in spring boot 2.1.1 with tomcat",
                "time": "2019-06-24 23:17:38",
                "index": 0,
                "user": "venkatasreekanth"
            },
            {
                "id": "5d115a13260d3b498157c33f",
                "text": "?",
                "time": "2019-06-24 23:17:39",
                "index": 1,
                "user": "venkatasreekanth"
            },
            {
                "id": "5d115a20154d273638d67fdf",
                "text": "I have gone through the documentation but didn't find anything there",
                "time": "2019-06-24 23:17:52",
                "index": 2,
                "user": "venkatasreekanth"
            },
            {
                "id": "5d115a37d010383639c9e9fe",
                "text": "also how do I increase the acceptor thread count?",
                "time": "2019-06-24 23:18:15",
                "index": 3,
                "user": "venkatasreekanth"
            },
            {
                "id": "5d115a3c5e67ff0bcbe1a1b9",
                "text": "for tomcat",
                "time": "2019-06-24 23:18:20",
                "index": 4,
                "user": "venkatasreekanth"
            },
            {
                "id": "5d11b7daf5b00456dfda3340",
                "text": "@venkatasreekanth As of Tomcat 9, there's no acceptor thread count. Tomcat uses the connection timeout as the default for its keep alive timeout so you can use `server.connection-timeout` to set it. If you want the keep alive timeout and connection timeout to have different values, you'll have to use a `TomcatConnectorCustomizer`.",
                "time": "2019-06-25 05:57:46",
                "index": 8,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 120,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf583b1f59704348ee028be",
                "text": "Hi everyone, \n\nI would like to know, when you are testing WebFlux handler (in unit-test mode, not integration), what is your configuration to see the errors ? \n\nIn my case, I have that and my responseBody is always null: \n\n```kotlin\n@WebFluxTest(controllers = [(XXXHandler::class)])\n@AutoConfigureWebTestClient\n@AutoConfigureJson\n@ExtendWith(SpringExtension::class)\n@Import(XXXRoutingConfig::class)\nclass XXXHandlerTest {\n\n\n        @Test\n        fun `and fail due to lack of XXX with this uid`() {\n            /* Given */\n            val uid = UUID.randomUUID().toString()\n            whenever(repository.findFirstByUid(uid)).then { Mono.empty<XXX>() }\n\n            /* When */\n            rest\n                    .get()\n                    .uri(\"/api/v1/xxx/$uid\")\n                    .accept(MediaType.APPLICATION_JSON)\n                    .header(\"host\", \"localhost\")\n                    .exchange()\n                    .expectStatus()\n            /* Then */\n                    .isNotFound\n                    .expectBody()\n                    .consumeWith { \n                        assertThat(it.responseBody).isNotNull()\n                    }\n        }\n\n\n}\n```\n\nThank for your help !",
                "time": "2018-11-21 16:11:29",
                "index": 0,
                "user": "davinkevin"
            },
            {
                "id": "5bf588dffa7bbb3fe0e0c345",
                "text": "@davinkevin wouldn\u2019t you just pass a string on the assertion?",
                "time": "2018-11-21 16:33:35",
                "index": 1,
                "user": "kibbled"
            },
            {
                "id": "5bf64864cfa682348d6563e3",
                "text": "@kibbled the `it `is the serverResponse and its respponseBody is always null... so I can\u2019t check the message send back from the handler...",
                "time": "2018-11-22 06:10:44",
                "index": 15,
                "user": "davinkevin"
            },
            {
                "id": "5bf67c6fe25cc2740525bdbc",
                "text": "For my problem, I've reproduced it in a repo of @sdeleuze dedicated to webflux test, and the result is the same. Some of you have idea about this ? \n\n>  https://github.com/davinkevin/webflux-kotlin-web-tests/blob/master/src/test/kotlin/com/example/FooRouterTests.kt \n\nThanks",
                "time": "2018-11-22 09:52:47",
                "index": 31,
                "user": "davinkevin"
            },
            {
                "id": "5bf67e0787c4b86bccfba13e",
                "text": "BTW, do you think I should open an issue about that ?",
                "time": "2018-11-22 09:59:35",
                "index": 32,
                "user": "davinkevin"
            },
            {
                "id": "5bf68e2eed6bcf1ef84122d6",
                "text": "@davinkevin What do you expect to be providing a body for the response? Spring Boot's error handling?",
                "time": "2018-11-22 11:08:30",
                "index": 35,
                "user": "wilkinsona"
            },
            {
                "id": "5bf75bf1958fc53895d510a5",
                "text": "@wilkinsona Yes, I expect to be able to parse error (and especially error message) handle by the spring boot defaut error handler. But it seems to be disable in this kind of test so there is the message \u00ab\u00a0no content yet\u00a0\u00bb (If I remember correctly....)",
                "time": "2018-11-23 01:46:25",
                "index": 81,
                "user": "davinkevin"
            },
            {
                "id": "5bf7e710e25cc274052ea3d1",
                "text": "@davinkevin Does it work if you add `@ImportAutoConfiguration(ErrorWebFluxAutoConfiguration.class)` to your test?",
                "time": "2018-11-23 11:40:00",
                "index": 92,
                "user": "wilkinsona"
            },
            {
                "id": "5bf813f3cfa682348d70d34e",
                "text": "@wilkinsona  Thanks ! This is working very well ! Thanks for the help \u2764\ufe0f",
                "time": "2018-11-23 14:51:31",
                "index": 113,
                "user": "davinkevin"
            }
        ]
    },
    {
        "id": 121,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cb8556f5b3f941aa54f6447",
                "text": "Hello all, playing with the new `@ConfigurationProperties` management in `2.2.0-M2`, how do I disable automatic scanning of configuration properties bean?",
                "time": "2019-04-18 10:46:07",
                "index": 0,
                "user": "AlexFalappa"
            },
            {
                "id": "5cb85585b4700e023d90a820",
                "text": "There seems something missing in the docs (chapter 2.8.3)",
                "time": "2019-04-18 10:46:29",
                "index": 1,
                "user": "AlexFalappa"
            },
            {
                "id": "5cb855d73d78aa6c0352d304",
                "text": "Do I need to use an `@ConfigurationPropertiesScan` annotation with an empty list of classnames?",
                "time": "2019-04-18 10:47:51",
                "index": 2,
                "user": "AlexFalappa"
            },
            {
                "id": "5cb859d81cd0b8307d30f5d2",
                "text": "@AlexFalappa You'll need to use individual annotations rather than `@SpringBootApplication`",
                "time": "2019-04-18 11:04:56",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5cb859eab489bb6ed783b46d",
                "text": "Out of interest, why do you want to disable it?",
                "time": "2019-04-18 11:05:14",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5cb85a2a3d78aa6c0352ef7d",
                "text": "@wilkinsona  an existing codebase will likely use `@EnableConfigurationProperties`so one ends-up with double beans",
                "time": "2019-04-18 11:06:18",
                "index": 5,
                "user": "AlexFalappa"
            },
            {
                "id": "5cb85a3a8790b0307ebf3821",
                "text": "As warned in the docs",
                "time": "2019-04-18 11:06:34",
                "index": 6,
                "user": "AlexFalappa"
            },
            {
                "id": "5cb85aa23d78aa6c0352f2dc",
                "text": "Wait, no, that only happens  if using `@Component` on the same `@ConfigurationProperties` bean right?",
                "time": "2019-04-18 11:08:18",
                "index": 7,
                "user": "AlexFalappa"
            },
            {
                "id": "5cb85ad96a84d76ed8b3504b",
                "text": "Right",
                "time": "2019-04-18 11:09:13",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5cb85af92e2caa1aa67ab3df",
                "text": "OK thanks for clarifying",
                "time": "2019-04-18 11:09:45",
                "index": 9,
                "user": "AlexFalappa"
            }
        ]
    },
    {
        "id": 122,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bdae939d2b0f12575464df2",
                "text": "hi together i have an application that uses the `getId` from the application context to register the application to an server. how can i overwrite this ?",
                "time": "2018-11-01 11:53:29",
                "index": 0,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaedf6538a1c197157b461",
                "text": "@gigo1980_gitlab There's a `setId` method on `ConfigurableApplicationContext`",
                "time": "2018-11-01 12:13:42",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaee0ad2b0f12575466995",
                "text": "The default id is derived from the value of `spring.application.name` so you could also use that property",
                "time": "2018-11-01 12:14:02",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaee3e4775f53eb323abdb",
                "text": "@wilkinson. i found this part",
                "time": "2018-11-01 12:14:54",
                "index": 5,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaee4b076992347a9b659b",
                "text": "i also debugged it",
                "time": "2018-11-01 12:15:07",
                "index": 6,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaee57d2b0f12575466a84",
                "text": "String name = environment.getProperty(\"spring.application.name\u201c); <\u2014 this is the part inside",
                "time": "2018-11-01 12:15:19",
                "index": 7,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaee655760a73eb41f6dc7",
                "text": "name is in my case \u201enull\u201c i do not know why",
                "time": "2018-11-01 12:15:33",
                "index": 8,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaee760445e15fad0787b5",
                "text": "i have not set an profile, the server port is working",
                "time": "2018-11-01 12:15:50",
                "index": 9,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaef3ad3442e1972708008",
                "text": "if i access in an controller the value from the property file it works",
                "time": "2018-11-01 12:19:06",
                "index": 10,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaef3b6ab3f85bdde8b048",
                "text": "    @Value(\"${spring.application.name}\")\n    String applicationName;\n",
                "time": "2018-11-01 12:19:07",
                "index": 11,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaef3ed2b0f1257546706e",
                "text": "The name will be null by default in which case `application` is used when setting the context's id.",
                "time": "2018-11-01 12:19:10",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaef7126be6b59794fbb9b",
                "text": "i try to use it with the axon framework, but it always use \u201eapplication-1\u201c for the identifier",
                "time": "2018-11-01 12:20:01",
                "index": 13,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaefb025b9875faeb7b3c8",
                "text": "That sounds right. It's using `application` in the ID.",
                "time": "2018-11-01 12:21:04",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaefbe6ab3f85bdde8b239",
                "text": "See https://github.com/spring-projects/spring-boot/blob/16d4a826a36b684250ac790a17bac4968ff7a091/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/ContextIdApplicationContextInitializer.java",
                "time": "2018-11-01 12:21:18",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaefd5995818347b86ec13",
                "text": "i set a breakpoint inside the conterxtid application",
                "time": "2018-11-01 12:21:41",
                "index": 16,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf001a9c55b25748d8e37",
                "text": "and there i do not get the application name, so the else behavior returns \u201eapplication\u201c `return StringUtils.hasText(name) ? name : \"application\u201c;`",
                "time": "2018-11-01 12:22:25",
                "index": 17,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf0146ab3f85bdde8b3ee",
                "text": "L69 in `ContextIdApplicationContextInitializer.java`",
                "time": "2018-11-01 12:22:44",
                "index": 18,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf01c995818347b86ed1d",
                "text": "I see. So you're saying that you've set the property but it has had no effect?",
                "time": "2018-11-01 12:22:52",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaf0aeb9c9191954842735",
                "text": "i set only the server.application.name, but it is not used",
                "time": "2018-11-01 12:25:18",
                "index": 20,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf148b9c9191954842aec",
                "text": "it should be `spring.application.name`",
                "time": "2018-11-01 12:27:52",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaf1c5a9c55b25748d9794",
                "text": "sorry. i mean spring.application.name, my fault",
                "time": "2018-11-01 12:29:57",
                "index": 22,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf1d8076992347a9b7a45",
                "text": "spring.application.name=\"connector-ory\u201c <\u2014 is set there",
                "time": "2018-11-01 12:30:16",
                "index": 23,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf2024775f53eb323c207",
                "text": "Set where? In `application.properties`?",
                "time": "2018-11-01 12:30:58",
                "index": 24,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaf2bd0445e15fad07a43a",
                "text": "Also the `-1` in the name implies that you're dealing with a child context so there's more going on in your application than you've described.",
                "time": "2018-11-01 12:34:05",
                "index": 25,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaf4d726be6b59794fdaf4",
                "text": "yes it is inside the application.properties",
                "time": "2018-11-01 12:43:03",
                "index": 26,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf62a538a1c197157ebfd",
                "text": "ok it dependes on the OpenFeign implemention",
                "time": "2018-11-01 12:48:42",
                "index": 27,
                "user": "gigo1980_gitlab"
            },
            {
                "id": "5bdaf63a6eb1e3597a92e5e1",
                "text": "i removed step by step my dependencies",
                "time": "2018-11-01 12:48:58",
                "index": 28,
                "user": "gigo1980_gitlab"
            }
        ]
    },
    {
        "id": 123,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df72b14e726562301515018",
                "text": "what is the best practice use the database in micro services.  single database per multiple instances or each instance with its own database?  ",
                "time": "2019-12-16 06:58:28",
                "index": 0,
                "user": "angeljohny87"
            },
            {
                "id": "5df72b4e2cc1b31e342844ae",
                "text": "Single Database Cluster: -- This is not a preferred approach, as diff. services generally require diff. type of database need one may require cassandra, one may elastic search and one may be postgres. If in your case if all services are ok with same database type, still make sure that data tables of each service are completely separate and you do not take joins , only way to access other service data is through service call",
                "time": "2019-12-16 06:59:26",
                "index": 1,
                "user": "two10"
            },
            {
                "id": "5df72bf9e72656230151556b",
                "text": "@two10  ",
                "time": "2019-12-16 07:02:17",
                "index": 2,
                "user": "angeljohny87"
            },
            {
                "id": "5df72c647ce7ea1e359125d4",
                "text": "@two10  I am asking about microservice A have 3 instance so each instance of microservice A have its own database or it can use a common database?",
                "time": "2019-12-16 07:04:04",
                "index": 3,
                "user": "angeljohny87"
            },
            {
                "id": "5df72c8d2bca3016aa8a001a",
                "text": "@angeljohny87 they  should use the same database ",
                "time": "2019-12-16 07:04:45",
                "index": 4,
                "user": "two10"
            },
            {
                "id": "5df72cf7578ecf4b1fb03747",
                "text": "@two10 thank you",
                "time": "2019-12-16 07:06:31",
                "index": 5,
                "user": "angeljohny87"
            }
        ]
    },
    {
        "id": 124,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b97e8a045318b2dfe93a8fb",
                "text": "Hello guys, I have a question: How can I add or modify data sources, in addition to the default data source, after the project has started? I want to make new datasources after login with credentials given by the user manually. Thanks in advance for any guidance :)",
                "time": "2018-09-11 16:09:04",
                "index": 0,
                "user": "diegopintog"
            },
            {
                "id": "5b97ff22f59e0c1555e28213",
                "text": "  @diegopintog \nYou need to implement `MultiTenantConnectionProvider`, `CurrentTenantIdentifierResolver` and create `HibernatePropertiesCustomizer` `@Bean` to customize hibernate to work with a selected datasource  ",
                "time": "2018-09-11 17:45:06",
                "index": 1,
                "user": "BenEfrati"
            },
            {
                "id": "5b97fff7cddb292dff5b083a",
                "text": "For the `MultiTenantConnectionProvider` I would extents `AbstractDataSourceBasedMultiTenantConnectionProviderImpl`  ",
                "time": "2018-09-11 17:48:39",
                "index": 2,
                "user": "BenEfrati"
            },
            {
                "id": "5b98f8c5a2343433d1394d4e",
                "text": "@BenEfrati  Thanks you for the help :). I will look into it right away!",
                "time": "2018-09-12 11:30:13",
                "index": 62,
                "user": "diegopintog"
            }
        ]
    },
    {
        "id": 125,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5de5876c9319bb5190cfc137",
                "text": "With Kotlin, Spring Boot 2.2.1 ...\nIn a @SpringBootTest which only autowires in the below properties class ...\nTrying to use this `ConfigurationProperties` class:\n```\n@ConstructorBinding\n@ConfigurationProperties(\"push1\")\ndata class PushServicesProperties1(val snsClient: SnsClient) {\n\n    @ConstructorBinding\n    data class SnsClient(\n        val maxConnections: Int,\n        val connectionTimeout: Int,\n        val socketTimeout: Int,\n        val proxyHost: String,\n        val proxyPort: Int\n    )\n}\n```\nBut I get:\n```Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.blizzard.bnet.push.endpoint.services.PushServicesProperties1$SnsClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}```\n\nWhat am I missing?",
                "time": "2019-12-02 21:51:39",
                "index": 0,
                "user": "ericjturley"
            },
            {
                "id": "5de58795d75ad3721d40decc",
                "text": "It works with standard Java classes.",
                "time": "2019-12-02 21:52:21",
                "index": 1,
                "user": "ericjturley"
            },
            {
                "id": "5de629ac55066245985cab63",
                "text": "@ericjturley Are you using something like gradle to compile? I'd imagine the compilation process may be compiling kotlin separately (in a first stage) to the java classes. ",
                "time": "2019-12-03 09:23:56",
                "index": 5,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de629f405eec2433dc5dbc8",
                "text": "I had a similar problem in the past when attempting to compile groovy/java separately",
                "time": "2019-12-03 09:25:08",
                "index": 6,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de62a7f5ac7f22fb5514d99",
                "text": "not a kotlin developer but the solution that I was thinking of was posted here with a possible work around for the problem https://github.com/gradle/kotlin-dsl-samples/issues/515",
                "time": "2019-12-03 09:27:27",
                "index": 7,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6369b32df1245cbd5a6b3",
                "text": "@ericjturley What are you hoping will happen there? I'm guessing you want an instance of `SnsClient` to be created using some properties and then injected into `PushServiceProperties1`? What keys are you using for those properties?\n\nAnd just to avoid confusion, when you say it works with standard Java classes, do you mean that constructor binding works if you write Java code that's equivalent to your Kotlin code above?",
                "time": "2019-12-03 10:19:07",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5de6a30032df1245cbd8d92e",
                "text": "@RobEvansUK_twitter @wilkinsona \nI've made an MVCE: https://github.com/ericjturley/mcve-configurationproperties regarding my earlier question https://gitter.im/spring-projects/spring-boot?at=5de5876c9319bb5190cfc137\nRob - the project is maven-based - but I'm using Idea when I compile and run the test which is failing. Still - I'll have a look at that link.\nAndy - You had enough questions that I clearly needed to make an MVCE to illustrate. I think all your questions are answered therein.\nThanks for looking, guys :)",
                "time": "2019-12-03 18:01:36",
                "index": 48,
                "user": "ericjturley"
            },
            {
                "id": "5de6c7fac3d6795b9f19b292",
                "text": "not really looked at Kotlin beyond a 1 day pair programming session. I'll clone the repo and see if this works which is essentially what I'm thinking of https://www.baeldung.com/kotlin-maven-java-project",
                "time": "2019-12-03 20:39:22",
                "index": 49,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d633d75ad3721d4b0b23",
                "text": "so short answer @ericjturley is that you don't need to do what I suggest",
                "time": "2019-12-03 21:40:03",
                "index": 50,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d640c3d6795b9f1a1be5",
                "text": "I have a solution that works",
                "time": "2019-12-03 21:40:16",
                "index": 51,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d6c9b065c6433c3177b3",
                "text": "oh hang on ...",
                "time": "2019-12-03 21:42:33",
                "index": 52,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d6d78e906a1c8d64496b",
                "text": "didn't check the Kotlin injection works yet",
                "time": "2019-12-03 21:42:47",
                "index": 53,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d6e2f65fec1c8eb88e37",
                "text": "just enabling a new test for that",
                "time": "2019-12-03 21:42:58",
                "index": 54,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d863d75ad3721d4b195e",
                "text": "have you used spring before @ericjturley ?? This example seems a little inverted",
                "time": "2019-12-03 21:49:23",
                "index": 55,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de6d90505eec2433dcb3f3c",
                "text": "@RobEvansUK_twitter Yes",
                "time": "2019-12-03 21:52:05",
                "index": 56,
                "user": "ericjturley"
            },
            {
                "id": "5de6d91408d0c961b7e6422c",
                "text": "Thanks again for looking at it :)",
                "time": "2019-12-03 21:52:20",
                "index": 57,
                "user": "ericjturley"
            },
            {
                "id": "5de6eece9319bb5190d9bfcb",
                "text": "@ericjturley https://github.com/ericjturley/mcve-configurationproperties/pull/1 Pull request that runs the tests with Kotlin alongside Java. Its messy, as I didn't want to stray too far from the original code... but it works",
                "time": "2019-12-03 23:25:02",
                "index": 58,
                "user": "RobEvansUK_twitter"
            },
            {
                "id": "5de92e8a9319bb5190e78282",
                "text": "@wilkinsona Have you any thoughts regarding https://github.com/ericjturley/mcve-configurationproperties ?",
                "time": "2019-12-05 16:21:30",
                "index": 98,
                "user": "ericjturley"
            },
            {
                "id": "5de9345a550662459872bb35",
                "text": "No, not yet. Sorry. Let me have a proper look now.",
                "time": "2019-12-05 16:46:18",
                "index": 99,
                "user": "wilkinsona"
            },
            {
                "id": "5de9385a08d0c961b7f7758a",
                "text": "@ericjturley You're missing a dependency on `kotlin-reflect` which prevents the `@ConstructorBinding`-annotated constructor from being found",
                "time": "2019-12-05 17:03:22",
                "index": 100,
                "user": "wilkinsona"
            },
            {
                "id": "5de9387d9319bb5190e7bc2f",
                "text": "Your test passes if I add that dependency and all the necessary properties to configure `SnsClient`",
                "time": "2019-12-05 17:03:57",
                "index": 101,
                "user": "wilkinsona"
            },
            {
                "id": "5de93a2b08d0c961b7f782be",
                "text": "The need for `kotlin-reflect` is documented [here](https://docs.spring.io/spring-boot/docs/2.2.1.RELEASE/reference/htmlsingle/#boot-features-kotlin-requirements). The way it fails without it isn't very nice though. I've opened https://github.com/spring-projects/spring-boot/issues/19312 to see if we can improve things.",
                "time": "2019-12-05 17:11:07",
                "index": 102,
                "user": "wilkinsona"
            },
            {
                "id": "5de93dbff65fec1c8ec9cdb8",
                "text": "@wilkinsona Nice! Thank you SO much :)",
                "time": "2019-12-05 17:26:23",
                "index": 104,
                "user": "ericjturley"
            }
        ]
    },
    {
        "id": 126,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c4821b6dab15872cedb63bc",
                "text": "Hm why is it not recommended? I used it with a class like this and it caused no problems up to now \n \t```\n \t```",
                "time": "2019-01-23 08:11:34",
                "index": 0,
                "user": "ghost~5b1fc43ed73408ce4f9d0fbf"
            },
            {
                "id": "5c4821c70721b912a5c4a8b3",
                "text": " \t```\n@PropertySource(\"classpath:/aws.properties\")\n@Configuration\npublic class AwsDateService {\n   \n\t@Autowired\n\tEnvironment env;\n\n\tpublic String getProperty(String property) {\n\t\treturn env.getProperty(property);\n\t}\n   \n}\n \t```",
                "time": "2019-01-23 08:11:51",
                "index": 1,
                "user": "ghost~5b1fc43ed73408ce4f9d0fbf"
            },
            {
                "id": "5c4821cb0a491251e33f3ff1",
                "text": "recommended and supported are two different things",
                "time": "2019-01-23 08:11:55",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c4821e735350772cf769d3e",
                "text": "Any suggestion what i should change it to? ",
                "time": "2019-01-23 08:12:23",
                "index": 3,
                "user": "ghost~5b1fc43ed73408ce4f9d0fbf"
            }
        ]
    },
    {
        "id": 127,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bd86ee1ae7be94016dd7b07",
                "text": "hi, i updated a boot ```2.0.6``` project to ```2.1.0``` and now its complaining about two ```metaDataSourceAdvisor``` beans.\n```\norg.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'metaDataSourceAdvisor' defined in null: Cannot register bean definition [Root bean: class [org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'metaDataSourceAdvisor': There is already [Root bean: class [org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.\n```\nIt seems to be security related, i am using ```@EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)``` but i don't see what could be the cause to register two beans of this type. Here is an excerpt of the positive matches related to security:\n```\n   ManagementWebSecurityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' (OnClassCondition)\n      - found ConfigurableWebEnvironment (OnWebApplicationCondition)\n\n   SecurityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)\n\n   SecurityFilterAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)\n      - found ConfigurableWebEnvironment (OnWebApplicationCondition)\n\n   SecurityRequestMatcherProviderAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.security.web.util.matcher.RequestMatcher', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found ConfigurableWebEnvironment (OnWebApplicationCondition)\n\n   SpringBootWebSecurityConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' (OnClassCondition)\n      - found ConfigurableWebEnvironment (OnWebApplicationCondition)\n\n   UserDetailsServiceAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)\n\n   WebSecurityEnablerConfiguration matched:\n      - found ConfigurableWebEnvironment (OnWebApplicationCondition)\n```",
                "time": "2018-10-30 14:46:57",
                "index": 0,
                "user": "thackel"
            },
            {
                "id": "5bd8704b435c2a518e2b8344",
                "text": "@thackel Do you, perhaps, have `@EnableGlobalMethodSecurity` in more than one place?",
                "time": "2018-10-30 14:52:59",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bd8712382893a2f3b63bfca",
                "text": "You can set `spring.main.allow-bean-definition-overriding=true` to restore 2.0's behaviour, but I'd recommend finding and eliminating the cause of the override.",
                "time": "2018-10-30 14:56:35",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bd8712eae7be94016dd8deb",
                "text": "@wilkinsona you were right, found the annotation in a dependency. just wondering why this application started with 2.0.6",
                "time": "2018-10-30 14:56:46",
                "index": 3,
                "user": "thackel"
            },
            {
                "id": "5bd8722b069fca52a5ba6ba5",
                "text": "Disabling overriding by default is a change in Boot 2.1",
                "time": "2018-10-30 15:00:59",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bd8724264cfc273f94c7b92",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#bean-overriding",
                "time": "2018-10-30 15:01:22",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bd8725ec08b8b30679815c9",
                "text": "good! thanks",
                "time": "2018-10-30 15:01:50",
                "index": 6,
                "user": "thackel"
            }
        ]
    },
    {
        "id": 128,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5cc450edb489bb6ed7d3edb4",
                "text": "Going to develop an web application. Before that i need to choose the best driven development and also should explain to the customer why we choosed it.\n\nOut of DDD or TDD or BDD or ATDD , which one is the best???\n\nWhich one is more popular and successful.",
                "time": "2019-04-27 12:54:05",
                "index": 0,
                "user": "prog20901"
            },
            {
                "id": "5cc468e28790b0307e0f1b87",
                "text": "TDD/BDD/ATDD are for development, choose whichever suits your team the most - one is not better than the other.\n\nDDD is more geared towards architecture",
                "time": "2019-04-27 14:36:18",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cc46f3a375bac7470151797",
                "text": "I\u2019m not sure it\u2019s the good place to ask as we talk about spring-boot and not agility/oragnisation/methodlology. But I agree with @tonisostrat. There are not the same and you should choose depending on the team and the maturity of it in the methodology you choose.",
                "time": "2019-04-27 15:03:22",
                "index": 2,
                "user": "herveDarritchon"
            },
            {
                "id": "5cc487634b4cb471d969397b",
                "text": "@tonisostrat thanks for the answers",
                "time": "2019-04-27 16:46:27",
                "index": 3,
                "user": "prog20901"
            },
            {
                "id": "5cc487968446a6023e8768fc",
                "text": "@herveDarritchon i am not sure where i can find the specific groups. can you please help me as  i am trying to find the exact group here or somewhere where i can put my questions and get other's thoughts or answers",
                "time": "2019-04-27 16:47:18",
                "index": 4,
                "user": "prog20901"
            },
            {
                "id": "5cc4b1253b6cb0686a637c1f",
                "text": "@prog20901 i would say the software craftsmanship community slack. http://slack.softwarecraftsmanship.org/ someone also has may be an idea",
                "time": "2019-04-27 19:44:37",
                "index": 5,
                "user": "herveDarritchon"
            },
            {
                "id": "5cc506a06a84d76ed8084ec7",
                "text": "@herveDarritchon thanks a ton...",
                "time": "2019-04-28 01:49:20",
                "index": 8,
                "user": "prog20901"
            }
        ]
    },
    {
        "id": 129,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c349d7073360b4d55d89bc9",
                "text": "@Nasibulloh\nHi everyone. I have a question that can I use Mono, Flux,Publisher as controller method argument?\nI read spring official documentation but there said about \"@ResponseBody\"  can cover Them",
                "time": "2019-01-08 12:54:08",
                "index": 0,
                "user": "Nasibulloh"
            },
            {
                "id": "5c349da5aac7082e6ff1fa6c",
                "text": "Can I cover with Mono, Flux, Publisher with any argument or will this be useless",
                "time": "2019-01-08 12:55:01",
                "index": 1,
                "user": "Nasibulloh"
            },
            {
                "id": "5c349df46370df0b91ab8db0",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/BFhe/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/BFhe/image.png)",
                "time": "2019-01-08 12:56:20",
                "index": 2,
                "user": "Nasibulloh"
            },
            {
                "id": "5c349e741491b27876dd1bad",
                "text": "@Nasibulloh If you are building a reactive application then your controller action method return types should be `Mono` / `Flux` while wrapping whatever types that will be converted to the response format",
                "time": "2019-01-08 12:58:28",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c349f0812db9607e755f64b",
                "text": "Ok I know but what about  method arguments ?",
                "time": "2019-01-08 13:00:56",
                "index": 4,
                "user": "Nasibulloh"
            },
            {
                "id": "5c349f2cbd592b2e6e6f80f5",
                "text": "They should be wrappered with Mono/Flux or not",
                "time": "2019-01-08 13:01:32",
                "index": 5,
                "user": "Nasibulloh"
            },
            {
                "id": "5c34a3561948ad07e8095467",
                "text": "@Nasibulloh The method parameters can be if you want them to. If you don\u2019t declare them as `Mono` / `Flux` then the unmarshalling from JSON/XML to the object will be a blocking operation, whereas if they are `Mono` / `Flux` then that process can happen in a non-blocking manner",
                "time": "2019-01-08 13:19:18",
                "index": 7,
                "user": "edeandrea"
            },
            {
                "id": "5c34a35d82a6c30b90a3b733",
                "text": "but either way it will work",
                "time": "2019-01-08 13:19:25",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5c34a6084ed18278777a5b75",
                "text": "Aha understood thanks a lot",
                "time": "2019-01-08 13:30:48",
                "index": 9,
                "user": "Nasibulloh"
            },
            {
                "id": "5c34a7801d1c2c3f9cdeeec8",
                "text": "Anytime!",
                "time": "2019-01-08 13:37:04",
                "index": 10,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 130,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c4ecc8b1b62f12650604dad",
                "text": "Hi guys\nCan someone tell me what does the ID in Repository<T, ID> represent. I'm confused as to what data type to provide here",
                "time": "2019-01-28 09:34:03",
                "index": 0,
                "user": "ayushprashar"
            },
            {
                "id": "5c4ecc9a93fe7d5ac0021f16",
                "text": "https://docs.spring.io/spring-data/commons/docs/current/api/org/springframework/data/repository/Repository.html",
                "time": "2019-01-28 09:34:18",
                "index": 1,
                "user": "ayushprashar"
            },
            {
                "id": "5c4ed01354f21a71a1bb0673",
                "text": "@ayushprashar It's in the doc itself \"ID - the type of the id of the entity the repository manages\" e.g. Long.class, use #springdata channel btw",
                "time": "2019-01-28 09:49:07",
                "index": 2,
                "user": "ask4gilles"
            }
        ]
    },
    {
        "id": 131,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ba9be33fe37781110f2d261",
                "text": "Covert BigDecimal type to String type ,I use as below ,but I find that value of 2500.00  be coverted to \"2,500.00\",which include \",\"\nSo How to sovle it?\n\n```\n\n@Slf4j\npublic class BigDecimalJacksonJsonSerializer extends JsonSerializer<BigDecimal> {\n\n    @Override\n    public void serialize(BigDecimal value, JsonGenerator gen, SerializerProvider serializers) throws IOException {\n        gen.writeString(value == null ? \"0\" : value.toString());\n    }\n}\n\n```\n\n\n```\n\n    @Bean\n    public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() {\n        return new MappingJackson2HttpMessageConverter(Jackson2ObjectMapperBuilder.json().serializerByType(BigDecimal.class, new BigDecimalJacksonJsonSerializer()).build());\n    }\n\n```\n",
                "time": "2018-09-25 04:48:51",
                "index": 0,
                "user": "fanlushuai"
            },
            {
                "id": "5ba9f21caedb375b9c427a86",
                "text": "???",
                "time": "2018-09-25 08:30:20",
                "index": 4,
                "user": "fanlushuai"
            },
            {
                "id": "5baa747c8196693171b2f8dd",
                "text": "@fanlushuai you could use `DecimalFormat` ",
                "time": "2018-09-25 17:46:36",
                "index": 19,
                "user": "enzobonggio"
            },
            {
                "id": "5baae976eba8e60bc64653a2",
                "text": "@enzobonggio  I tried DevimalFormat ,it does not work",
                "time": "2018-09-26 02:05:42",
                "index": 99,
                "user": "fanlushuai"
            },
            {
                "id": "5baaebf0aedb375b9c48ccf3",
                "text": "@enzobonggio  are there any example code show me?",
                "time": "2018-09-26 02:16:16",
                "index": 100,
                "user": "fanlushuai"
            }
        ]
    },
    {
        "id": 132,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d03ec932313502d38421192",
                "text": "I am writing an open source library that will help with testing MongoDB apps, specially with Spring Data Mongo. One of the features I want is to dynamically override whatever the developer specified for the database name in the configuration, so if it was `mydb`, I'd dynamically change it to `mydb-test `or something like that.  I was able to find out how to intercept the `spring.data.mongodb.uri` property and override it with my custom URI. The way I am doing it is by defining `resources/META-INF/spring.factories`, specifying `org.springframework.context.ApplicationListener=my.custom.ClassName` where I am implementing `ApplicationListener<ApplicationEnvironmentPreparedEvent>` interface. That intercepts the property and re-injects it with the value I want back into the `ConfigurableEnvironment`. That's all well and good, however, I am obviously not guaranteed that the developer is using the standard spring property. What if they are defining their own `MongoClient` or `MongoTemplate` which is what they are using to execute DB interactions. Is there a similar interface I can specify in `spring.factories` and implement it such that I am defining the `MongoClient` (or whatever) myself and overriding whatever the developer did by default?",
                "time": "2019-06-14 18:50:59",
                "index": 0,
                "user": "ychaikin"
            },
            {
                "id": "5d03ed254e8f972d371cbed2",
                "text": "(Just as an aside, this would be a default which can be overridden by the developer, that prevents a mistake where some development or production database is wiped out because someone mindlessly copied over the same props from that environment.",
                "time": "2019-06-14 18:53:25",
                "index": 1,
                "user": "ychaikin"
            },
            {
                "id": "5d04bf24f5cf1f10bc76def0",
                "text": "@ychaikin That sounds like a job for a bean factory post-processor that replaces the user's bean definition with one of your own. That's how Boot's `@AutoConfigureTestDatabase` is implemented. Take a look at `TestDatabaseAutoConfiguration` and its inner-class `EmbeddedDataSourceBeanFactoryPostProcessor`.",
                "time": "2019-06-15 09:49:24",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5d061243f5cf1f10bc7fbd92",
                "text": "@wilkinsona  Thanks! How do I register a `BeanDefinitionRegistryPostProcessor` in the context of a JUnit 5 extension? I can get a hold of the `ApplicationContext` through `SpringExtension`, but then what? ",
                "time": "2019-06-16 09:56:19",
                "index": 15,
                "user": "ychaikin"
            },
            {
                "id": "5d06139decc6a91b31f4797b",
                "text": "@wilkinsona  Let me rephrase that... How do I **correctly** do that. What I have right now is a class that implements `BeanDefinitionRegistryPostProcessor `.  That class is annotated with `@Configuration`. Then, inside of my class that implements `TestInstancePostProcessor` (in the `postProcessTestInstance` method), I get a hold of the `ApplicationContext` and then do  \n```\nAutowireCapableBeanFactory autoBeanFactory = applicationContext.getAutowireCapableBeanFactory();\nautoBeanFactory.createBean(GuardPostProcessor.class); // GuardPostProcessor implements BeanDefinitionRegistryPostProcessor\n```\n\nI do see that Spring picks it up, but is that the correct way of doing that?\n",
                "time": "2019-06-16 10:02:05",
                "index": 16,
                "user": "ychaikin"
            },
            {
                "id": "5d0614168e050f62aa29302d",
                "text": "Also, I assume that by this time in the lifecycle, `MongoTemplate` and whatever other Spring class have already gotten their connection to Mongo. Which bean do I remove and replace so that `MongoRepository` interfaces and anything that simply uses `MongoTemplate` would use the connection that I substitute?",
                "time": "2019-06-16 10:04:06",
                "index": 17,
                "user": "ychaikin"
            },
            {
                "id": "5d061f8c4e8f972d372bc0d5",
                "text": "In other words, is it good enough to simply create a `com.mongodb.MongoClient` and place it as a bean into the application context?\n",
                "time": "2019-06-16 10:53:00",
                "index": 18,
                "user": "ychaikin"
            },
            {
                "id": "5d0621c28e050f62aa298d6d",
                "text": "or do I have to replace `MongoDbFactory`?",
                "time": "2019-06-16 11:02:26",
                "index": 19,
                "user": "ychaikin"
            },
            {
                "id": "5d078f4e6f0ec85ade23170e",
                "text": "@ychaikin You don't need to tie yourself to JUnit 5, and I'd avoid doing so if you can. Instead I'd use `@ImportAutoConfiguration` to point to an auto-configuration class that has a `static` `@Bean` method that returns your bean factory post-processor.",
                "time": "2019-06-17 13:02:06",
                "index": 33,
                "user": "wilkinsona"
            },
            {
                "id": "5d078f71950f1062a9870578",
                "text": "You can use `@ImportAutoConfiguration` as a meta-annotation to hide the details from your users. Boot does this a lot itself in its various `@\u2026Test` annotations.",
                "time": "2019-06-17 13:02:41",
                "index": 34,
                "user": "wilkinsona"
            },
            {
                "id": "5d0838a4bc56c731f8daba5d",
                "text": "@wilkinsona Thanks! Certainly sounds like a cleaner approach. However, what is an \"auto-configuration\" class exactly? Is that a regular class I make and annotate with `@Configuration`? If you can explain it a bit more, that would help or/and may be point me to one of those `...Test` Spring Boot classes you are referring to.",
                "time": "2019-06-18 01:04:36",
                "index": 68,
                "user": "ychaikin"
            },
            {
                "id": "5d083b002313502d3860cade",
                "text": "Also, when you say hide from my users, you mean I would put `@ImportAutoConfiguration(classes = MyConfigWithBean.class)` into some `@MongoUnitTest` annotation **together** with `@ExtendsWith(MyJUnit5Extension.class)`?",
                "time": "2019-06-18 01:14:40",
                "index": 69,
                "user": "ychaikin"
            },
            {
                "id": "5d083b2f2313502d3860ccd4",
                "text": "That way, the user doesn't directly have to specify neither `@ImportAutoConfiguration` nor the JUnit 5 extension?",
                "time": "2019-06-18 01:15:27",
                "index": 70,
                "user": "ychaikin"
            },
            {
                "id": "5d085ef7e527d95addf493dd",
                "text": "@wilkinsona Ok, I read up on auto-configuration classes. Didn't realize there were docs about it. Can you please answer my second question about how to approach it (i.e., the \"also\" part of my question).",
                "time": "2019-06-18 03:48:07",
                "index": 72,
                "user": "ychaikin"
            },
            {
                "id": "5d090bf3a8d9871b32b8cda4",
                "text": "@ychaikin Yes, having both those annotations on your `@MongoUnitTest` annotation sounds like a good idea to me.",
                "time": "2019-06-18 16:06:11",
                "index": 81,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 133,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dbc61dd2a6494729c7cdbe8",
                "text": "Is @PostConstruct supposed to work with boot 2.x / spring-webflux? For the life of me I cannot get the code within my @PostConstruct method to run.",
                "time": "2019-11-01 16:48:29",
                "index": 0,
                "user": "olanb7"
            },
            {
                "id": "5dbc627dfb4dab784a465fc8",
                "text": "i've also changed to implement `InitializingBean` and `afterPropertiesSet` but still nothing happens. very strange.",
                "time": "2019-11-01 16:51:09",
                "index": 1,
                "user": "olanb7"
            },
            {
                "id": "5dbc62fd0725f61e9c80c768",
                "text": "@olanb7 it does work. Currently we are using it with Spring Boot 2.2 WebFlux (and it has been working since Spring Boot 2.0.x) and our code is running in production.",
                "time": "2019-11-01 16:53:17",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5dbc631d0725f61e9c80c76b",
                "text": "i think it has to do something with your code structure\u2026.that said, we try to avoid it as much as possible...",
                "time": "2019-11-01 16:53:49",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5dbc6577a03ae1584f4c3d96",
                "text": "yeah i think you are right @nnanda2016 - i think my log level config wasn't getting picked up at that point. it doesn't seem particularly neat, but i'm trying to create 'cold' flux source and need to initialize it somehow. something like: https://developer.okta.com/blog/2018/09/24/reactive-apis-with-spring-webflux, except without using a WebSocketHandler. ",
                "time": "2019-11-01 17:03:51",
                "index": 4,
                "user": "olanb7"
            }
        ]
    },
    {
        "id": 134,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c53b6f5ca428b064535dab7",
                "text": "hey guys ,Who can tell me how to make a multiply categories user to login with shiro",
                "time": "2019-02-01 03:03:17",
                "index": 0,
                "user": "moocstudent"
            },
            {
                "id": "5c53b732ceb5a2264f745fdb",
                "text": "For example, a web site /admin/login to login a user admin,  /member/login to login a",
                "time": "2019-02-01 03:04:18",
                "index": 1,
                "user": "moocstudent"
            },
            {
                "id": "5c53b73454f21a71a1dbad2f",
                "text": "member user",
                "time": "2019-02-01 03:04:20",
                "index": 2,
                "user": "moocstudent"
            },
            {
                "id": "5c53c19541775971a0b90d1b",
                "text": "@deadzq Hmmm.  Check out roles or access control lists.  You'll want admin to just be a user with the admin role and a user a user without",
                "time": "2019-02-01 03:48:37",
                "index": 3,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53d02313a2814df6fe495d",
                "text": "@josiahhaswell  emm,,,that's maybe use one database table, i want use two shiro Realm  and two table ,one of Admin, one of Member",
                "time": "2019-02-01 04:50:43",
                "index": 10,
                "user": "moocstudent"
            },
            {
                "id": "5c53d25a78e1ed4103c1ee72",
                "text": "```\npackage com.tansuo365.test1.shiro.realm;\n\nimport com.tansuo365.test1.bean.Member;\nimport com.tansuo365.test1.bean.User;\nimport com.tansuo365.test1.entity.MyLoginInstance;\nimport com.tansuo365.test1.service.*;\nimport org.apache.shiro.SecurityUtils;\nimport org.apache.shiro.authc.*;\nimport org.apache.shiro.authz.AuthorizationInfo;\nimport org.apache.shiro.authz.SimpleAuthorizationInfo;\nimport org.apache.shiro.realm.AuthorizingRealm;\nimport org.apache.shiro.subject.PrincipalCollection;\nimport org.apache.shiro.util.ByteSource;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Set;\n\n@Component\npublic class MyRealm extends AuthorizingRealm {\n\n    @Autowired\n    private MemberService memberService;//member\n    @Autowired\n    private UserService userService;//user\n\n    @Autowired\n    private MroleService mroleService;//member\n    @Autowired\n    private RoleService roleService; //user\n\n    @Autowired\n    private MemberPermissionService memberPermissionService;//member\n    @Autowired\n    private PermissionService permissionService;//user\n\n\n    /*\u83b7\u53d6\u6388\u6743\u6743\u9650\u4fe1\u606f*/\n    @Override\n    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n        SimpleAuthorizationInfo info = null;\n        //\u83b7\u53d6\u5f53\u524d\u767b\u5f55\u7c7b\u578b\n        String loginType = (String)SecurityUtils.getSubject().getSession().getAttribute(\"loginType\");\n        Set<String> permissions = null;\n        Set<String> roles = null;\n\n        // \u80fd\u8fdb\u5165\u5230\u8fd9\u91cc\uff0c\u8868\u793a\u8d26\u53f7\u5df2\u7ecf\u901a\u8fc7\u9a8c\u8bc1\u4e86\n        String username = (String)principals.getPrimaryPrincipal();\n\n        if(LoginEnum.ADMIN.toString().equals(loginType)){\n\n            permissions = permissionService.listPermissions(username);\n            roles = roleService.listRoleNames(username);\n        }\n        if(LoginEnum.MEMBER.toString().equals(loginType)){\n//            Member member = memberService.getByName(username);\n            // \u901a\u8fc7service\u83b7\u53d6\u89d2\u8272\u548c\u6743\u9650\n            permissions = memberPermissionService.listMemberPermissions(username);\n            roles = mroleService.listMroleNames(username);\n        }\n        // \u6388\u6743\u5bf9\u8c61\n        info = new SimpleAuthorizationInfo();\n        // \u628a\u901a\u8fc7service\u83b7\u53d6\u5230\u7684\u89d2\u8272\u548c\u6743\u9650\u653e\u8fdb\u53bb\n        info.setStringPermissions(permissions);\n        info.setRoles(roles);\n        return info;\n    }\n\n    /*\u83b7\u53d6\u8eab\u4efd\u9a8c\u8bc1\u4fe1\u606f*/\n    @Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n        User user = null;//\u540e\u53f0\u7528\u6237\n        Member member = null;//\u524d\u7aef\u4f1a\u5458\n        MyLoginInstance instance = null;//\u5c01\u88c5\u4e86\u51e0\u79cd\u7528\u6237\u7684\u901a\u7528\u65b9\u6cd5\n\n        //1.\u628aAuthenticationToken\u8f6c\u6362\u4e3aCustomizedToken\n        MyAuthenticationToken myAuthenticationToken = (MyAuthenticationToken)token;\n        //2.\u4eceCustomizedToken\u4e2d\u83b7\u53d6memberName\n        String nameInInput = myAuthenticationToken.getUsername();\n        System.err.println(\"nameInInput:\"+nameInInput);\n        //3.\u82e5\u7528\u6237\u4e0d\u5b58\u5728,\u629b\u51faUnknownAccountException\u5f02\u5e38\n        String loginType = myAuthenticationToken.getLoginType();\n\n        System.out.println(\"myAuthenticationToken.getLoginType():\"+ myAuthenticationToken.getLoginType());\n        if(LoginEnum.ADMIN.toString().equals(loginType)){\n            user = userService.getByName(nameInInput);\n            if(null == user){\n                throw new UnknownAccountException(\"\u7ba1\u7406\u5458\u4e0d\u5b58\u5728!\");\n            }\n            instance = user;\n        }\n        if(LoginEnum.MEMBER.toString().equals(loginType)){\n            member = memberService.getByName(nameInInput);\n            if(null == member){\n                throw new UnknownAccountException(\"\u4f1a\u5458\u4e0d\u5b58\u5728!\");\n            }\n            instance = member;\n        }\n\n        //4.\u6839\u636e\u7528\u6237\u7684\u60c5\u51b5,\u6765\u6784\u5efaAuthenticationInfo\u5bf9\u8c61\u5e76\u8fd4\u56de\n        //\u901a\u5e38\u4f7f\u7528\u7684\u5b9e\u73b0\u7c7b\u4e3aSimpleAuthenticationInfo\n        Object principal = instance.getInstanceName();\n        System.out.println(\"principal in Realm : \" + (String) principal);\n        Object credentials = instance.getInstancePassword();\n        String salt = instance.getInstanceSalt();\n        System.out.println(\"salt:\"+salt);\n        String realmName = getName();\n        ByteSource credentialsSalt = ByteSource.Util.bytes(salt);\n\n   \n```",
                "time": "2019-02-01 05:00:10",
                "index": 12,
                "user": "moocstudent"
            },
            {
                "id": "5c53d2ec454aad4df7d6aa40",
                "text": "I use this realm and  the realm is execution, But the ShiroFilterFactoryBean is fixed, I want override the ShiroFilterFactoryBean to dispatcher the user loginUrl, successUrl",
                "time": "2019-02-01 05:02:36",
                "index": 13,
                "user": "moocstudent"
            }
        ]
    },
    {
        "id": 135,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e1f1e6b25256256b7f7b982",
                "text": "Hi! I have a few SpringBootTest's, but I'm not sure that it good approach create applicationcontext for each class annotated @SpringBootTest. Could anyone explain why we should create each time context/ use only one? ",
                "time": "2020-01-15 14:15:07",
                "index": 0,
                "user": "danzik"
            },
            {
                "id": "5e1f1ef3c86a6f1fb3800f98",
                "text": "to eliminate influence of previous tests",
                "time": "2020-01-15 14:17:23",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5e1f1f01df9e137d58ea7b7b",
                "text": "so you get clean environment for each test",
                "time": "2020-01-15 14:17:37",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5e1f274c35e7a119095aa4ca",
                "text": "within a test class it reuses the environment unless `@DirtiesContext`",
                "time": "2020-01-15 14:53:00",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5e1f277425256256b7f7fe15",
                "text": "it's assumed that separate `@SpringBootTest` classes will want different configurations",
                "time": "2020-01-15 14:53:40",
                "index": 4,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 136,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bf843a0662131389408cf8d",
                "text": "What's the way to go if you want to run assertions on the response body and document it using REST docs? I'd like to do something like\n```\nresult\n                .expectBodyList(Rule::class.java)\n                .hasSize(1)\n                .contains(rule)\n                .doesNotContain(otherRule)\n\n        result.expectBody()\n                .consumeWith(document(\"rules/GET/findByConclusion\"))\n```\nBut the result of `WebTestClient` is not to be shared and I end up with `java.lang.IllegalStateException: Only one write subscriber supported`",
                "time": "2018-11-23 18:14:56",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5bf857bfe25cc27405318d65",
                "text": "I don't think you can call `expectBody\u2026()` more than once. Does it work if you chain the `consumeWith` call onto `doesNotContain`?",
                "time": "2018-11-23 19:40:47",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bf85b6af048fa105110cf4e",
                "text": "@wilkinsona I'd have to look up to feed the \"casted\" body to `consumeWith(document())` \u2026 there's some typing problem then. But that's sometinhg for monday then ;-)",
                "time": "2018-11-23 19:56:26",
                "index": 4,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 137,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5e971142e920022432a63536",
                "text": "Hello there.\n\nI'm facing some issues with my component tests on spring. My application test starts a docker image and an elastic search image, I use @Bean to start these images. Some tests dirties the application context, so each time a test context is dirty, it creates a new docker image. I would like to have a single docker image for all the tests, even if the context is reloaded. \n\nIs it possible to reload a context and avoid some specified beans to be reloaded?\n\nThank you in advance",
                "time": "2020-04-15 13:50:58",
                "index": 0,
                "user": "evandrolmass_gitlab"
            },
            {
                "id": "5e97134b2ff88975b41ea529",
                "text": "contexts can have parent contexts. you could initialize two separate contexts, one for the beans you only want initialized once and another which dirties the contexts and needs to be re-created for different tests. then parent them to the same top-level context and use that.",
                "time": "2020-04-15 13:59:39",
                "index": 1,
                "user": "mefesto"
            },
            {
                "id": "5e97143ca412254f2186cd58",
                "text": "Thank you Allen, I will try that",
                "time": "2020-04-15 14:03:40",
                "index": 2,
                "user": "evandrolmass_gitlab"
            },
            {
                "id": "5e9715522ff88975b41eaf3e",
                "text": "Also, there is the context events which might give you more control. Like if you have a application event listener looking for the `ContextStartedEvent` and does whatever work instead of having this happen in the `@Bean` method. Just another possibility",
                "time": "2020-04-15 14:08:18",
                "index": 3,
                "user": "mefesto"
            },
            {
                "id": "5e9715882ff88975b41eb026",
                "text": "https://docs.spring.io/spring/docs/5.2.5.RELEASE/spring-framework-reference/core.html#context-functionality-events",
                "time": "2020-04-15 14:09:12",
                "index": 4,
                "user": "mefesto"
            }
        ]
    },
    {
        "id": 138,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e8cb61ff450c25cc8c514ef",
                "text": "Hello.\nUnable to run integration tests after adding `spring-boot-starter-security` dependency ",
                "time": "2020-04-07 17:19:27",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5e8cb629e7ca460b064593ef",
                "text": "I use version spring boot 2.1",
                "time": "2020-04-07 17:19:37",
                "index": 1,
                "user": "amirensit"
            },
            {
                "id": "5e8cb636d021c45cc7ce78de",
                "text": "secure = false attribute is deprecated and does not work anymore",
                "time": "2020-04-07 17:19:50",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5e8cb65d38198d56a188f384",
                "text": "I tried with `@WithMockUser` and it does not work",
                "time": "2020-04-07 17:20:29",
                "index": 3,
                "user": "amirensit"
            },
            {
                "id": "5e8cb68b38198d56a188f3fd",
                "text": "I tried with: \n```\n@SpringBootTest(classes =  MainApplication.class)\n@EnableAutoConfiguration(exclude = { SecurityAutoConfiguration.class })\n@AutoConfigureMockMvc\n```",
                "time": "2020-04-07 17:21:15",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5e8cb692fea5216d69639934",
                "text": "and it does not work also.\nI tried this with `@WithMockUser`: \n```\n @Before\n    public void setup() {\n        mvc = MockMvcBuilders\n                .webAppContextSetup(context)\n                .apply(springSecurity())\n                .build();\n    }\n```\nand it does not work",
                "time": "2020-04-07 17:21:22",
                "index": 5,
                "user": "amirensit"
            },
            {
                "id": "5e8cb6a8d021c45cc7ce7a2b",
                "text": "any idea please how to deactivate security feature from tests ?",
                "time": "2020-04-07 17:21:44",
                "index": 6,
                "user": "amirensit"
            },
            {
                "id": "5e8cb9fe9316f34b8d87d4c4",
                "text": "I always get 403 status",
                "time": "2020-04-07 17:35:58",
                "index": 7,
                "user": "amirensit"
            },
            {
                "id": "5e8cc9dff87c5956a242a611",
                "text": "@amirensit I think you still need to add configuration for security regardless of the mock, however I'm not 100% sure but I think that user gets verified with default security which is  - generate password and it gets compared with that",
                "time": "2020-04-07 18:43:43",
                "index": 8,
                "user": "haris-zynka"
            },
            {
                "id": "5e8cca01fea5216d6963ce72",
                "text": "```\n@Bean\n    @Profile(\"test\")\n    fun springSecurityFilterChain(http: ServerHttpSecurity): SecurityWebFilterChain? {\n        return http\n            .csrf().disable()\n            .authorizeExchange().anyExchange().permitAll()\n            .and()\n            .build()\n    }\n```",
                "time": "2020-04-07 18:44:17",
                "index": 9,
                "user": "haris-zynka"
            },
            {
                "id": "5e8cca0e1aaf8e4b8e694d53",
                "text": "that's kotlin but just translate it to java and it should work",
                "time": "2020-04-07 18:44:30",
                "index": 10,
                "user": "haris-zynka"
            },
            {
                "id": "5e8cca13c52b6a38abce8cd4",
                "text": "or sorry",
                "time": "2020-04-07 18:44:35",
                "index": 11,
                "user": "haris-zynka"
            },
            {
                "id": "5e8cca345b98016d6a1e4bf9",
                "text": "it's also reactive but you use MVC so anyways just allow all requests in test profile and you should be fine unless you need user",
                "time": "2020-04-07 18:45:08",
                "index": 12,
                "user": "haris-zynka"
            },
            {
                "id": "5e8ccbfc5d148a0460ef34a0",
                "text": "@haris-zynka Thanks for your reply but I run it using this unique syntax:\n```\n@SpringBootTest(classes = { MainApplication.class }, properties=\"spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration\")\n```",
                "time": "2020-04-07 18:52:44",
                "index": 13,
                "user": "amirensit"
            },
            {
                "id": "5e8ccc15cc370f0b07cc1ec3",
                "text": "I find it [there](https://github.com/spring-projects/spring-boot/issues/8579#issuecomment-286309438)",
                "time": "2020-04-07 18:53:09",
                "index": 14,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 139,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be19a771f2bb1676b61b208",
                "text": "\"error\":\"Unsupported Media Type\",\"exception\":\"org.springframework.web.HttpMediaTypeNotSupportedException\",\"message\":\"Content type 'application/octet-stream' not supported\",\"path\":\"/generalSettingPhoto\"}",
                "time": "2018-11-06 13:43:19",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5be19a9d1f2bb1676b61b25a",
                "text": "@RequestMapping(value = \"/generalSettingPhoto\", method = RequestMethod.POST)\n\t@ResponseBody\n\tpublic User addGeneralSettingPhoto(@RequestParam(\"file\") MultipartFile file,@RequestPart(\"user\") User user ) {\n\t",
                "time": "2018-11-06 13:43:57",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5be19ac1f25a725338fd756f",
                "text": "Why is this not support",
                "time": "2018-11-06 13:44:33",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5be19ad5de33dd0c96da86db",
                "text": "https://stackoverflow.com/questions/50462894/upload-a-json-object-user-information-and-multiple-image-with-single-request",
                "time": "2018-11-06 13:44:53",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5be19bd16494cd16731f7690",
                "text": "Accept: application/json, text/plain, */*\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-US,en;q=0.9\nConnection: keep-alive\nContent-Length: 39895\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryBeZmv1N9UtQWF4pK\nHost: localhost:8080\nOrigin: http://localhost:8080\nReferer: http://localhost:8080/profile/1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\nfile: (binary)\nuser: {\"id\":1,\"userId\":\"dorarajappan\",\"password\":\"godbless\",\"firstName\":\"dora\",\"surname\":\"rajappan\",\"dob\":null,\"gender\":null,\"countryCode\":\"IN\",\"zipCode\":\"12345\",\"photoUrl\":null,\"profilePic\":null}",
                "time": "2018-11-06 13:49:05",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a1269c65e607e70acce8",
                "text": "@DoraRajappan do this:\n```\n@RequestMapping(value=\u201c/generalSettingPhoto\",  consumes=MediaType.APPLICATION_OCTET_STREAM_VALUE)\n```",
                "time": "2018-11-06 14:11:50",
                "index": 16,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a15b73127453373112f8",
                "text": "Ok",
                "time": "2018-11-06 14:12:43",
                "index": 17,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a1be6494cd16731fa1a2",
                "text": "You can toy with this as I haven\u2019t tried a json + file combination before:\nconsumes= {MediaType.APPLICATION_JSON_UTF8_VALUE, MediaType.APPLICATION_OCTET_STREAM_VALUE}",
                "time": "2018-11-06 14:14:22",
                "index": 18,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a1dc7660cf07ca79e65e",
                "text": "Ok.. import org.springframework.http.MediaType;?",
                "time": "2018-11-06 14:14:52",
                "index": 19,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a1eede33dd0c96dabc07",
                "text": "yes",
                "time": "2018-11-06 14:15:10",
                "index": 20,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a2899088fe25bc6caf4f",
                "text": "I perhaps need a maven dependency for jackson to the project pom  ?",
                "time": "2018-11-06 14:17:45",
                "index": 21,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a29e1f2bb1676b61eae2",
                "text": "if that doesn\u2019 work maybe this might:\n```\n@RequestMapping(value = \"/generalSettingPhoto\", method = RequestMethod.POST, consumes= {MediaType.APPLICATION_JSON_UTF8_VALUE, MediaType.APPLICATION_OCTET_STREAM_VALUE})\n\t@ResponseBody\n\tpublic User addGeneralSettingPhoto(@RequestBody User user ) {\n\t}\n```\nDeclare your json entity as a DTO:\n\n``` \npublic class User {\n\u2026 your existing User ...\n MultipartFile file; \n}\n```\nYou might need to add an inline encoded version of the file as a property in your json object",
                "time": "2018-11-06 14:18:06",
                "index": 22,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a2a06c24a807cb65d544",
                "text": "thank you very much",
                "time": "2018-11-06 14:18:08",
                "index": 23,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a2ac6200995df145fdb3",
                "text": "i think that\u2019s included in the spring libs :)",
                "time": "2018-11-06 14:18:20",
                "index": 24,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a2bafbb6f507e640b96c",
                "text": "ok...",
                "time": "2018-11-06 14:18:34",
                "index": 25,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a2be7660cf07ca79edf7",
                "text": "i thouhgt so too",
                "time": "2018-11-06 14:18:38",
                "index": 26,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a2d11f2bb1676b61ec84",
                "text": "Your json: { \u2026 your user properties\u2026, \u201cfile\u201d: \u201cyour encoded file\u201d }",
                "time": "2018-11-06 14:18:57",
                "index": 27,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a2fcaa58bd16744d2766",
                "text": "I append file to formData separetely",
                "time": "2018-11-06 14:19:40",
                "index": 28,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a308aa56280c97153a0b",
                "text": "outside of the json/pojo",
                "time": "2018-11-06 14:19:52",
                "index": 29,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a3146494cd16731fa7b6",
                "text": "ohh",
                "time": "2018-11-06 14:20:04",
                "index": 30,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a31f6200995df1460052",
                "text": "Im checking this consume works",
                "time": "2018-11-06 14:20:15",
                "index": 31,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a3409088fe25bc6cb442",
                "text": "@RequestPart is new to me. Haven\u2019t tried that before",
                "time": "2018-11-06 14:20:48",
                "index": 32,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a4f76c24a807cb65e688",
                "text": "Getting a different exception this time \"error\":\"Unsupported Media Type\",\"exception\":\"org.springframework.web.HttpMediaTypeNotSupportedException\",\"message\":\"Content type 'multipart/form-data;boundary=----WebKitFormBoundaryUsbmUsTJLJQAqiR9' not supported\"",
                "time": "2018-11-06 14:28:07",
                "index": 33,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a5d0f25a725338fdc195",
                "text": "SO I added consumes={MediaType.MULTIPART_FORM_DATA_VALUE",
                "time": "2018-11-06 14:31:44",
                "index": 34,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a5d57c6c9e5df217731f",
                "text": "ANd checking",
                "time": "2018-11-06 14:31:49",
                "index": 35,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a5dada57ff676c9d4dad",
                "text": "Should work",
                "time": "2018-11-06 14:31:54",
                "index": 36,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a7226200995df1461f9d",
                "text": "Sorry I missed the multipart type. That should get you past that error",
                "time": "2018-11-06 14:37:22",
                "index": 37,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be1a8d46200995df1462b19",
                "text": "Yes",
                "time": "2018-11-06 14:44:36",
                "index": 38,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a8ecf25a725338fdd9f4",
                "text": "But it seems to take only the firstin the list?  that error is replace by this imestamp: 1541515250193, status: 415, error: \"Unsupported Media Type\",\u2026}\nerror: \"Unsupported Media Type\"\nexception: \"org.springframework.web.HttpMediaTypeNotSupportedException\"\nmessage: \"Content type 'application/octet-stream' not supported\"\npath: \"/generalSettingPhoto\"\nstatus: 415",
                "time": "2018-11-06 14:45:00",
                "index": 39,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1a90ff25a725338fdda7b",
                "text": "Something wrong with the request mapping parser or how its psecified?",
                "time": "2018-11-06 14:45:35",
                "index": 40,
                "user": "DoraRajappan"
            },
            {
                "id": "5be1abed7660cf07ca7a2efa",
                "text": "I better make two rest apis one for file uploead and another for pojo user update",
                "time": "2018-11-06 14:57:49",
                "index": 41,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 140,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dd3ebddfd6fe41fc0b15a63",
                "text": "Any ideas on how i can resolve this in Spring boot 2.2.1 . ?  \n```\nCaused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n\tat sun.security.validator.PKIXValidator.doBuild(Unknown Source)\n\tat sun.security.validator.PKIXValidator.engineValidate(Unknown Source)\n\tat sun.security.validator.Validator.validate(Unknown Source)\n\tat sun.security.ssl.X509TrustManagerImpl.validate(Unknown Source)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(Unknown Source)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(Unknown Source)\n\t... 76 more\nCaused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n\tat sun.security.provider.certpath.SunCertPathBuilder.build(Unknown Source)\n\tat sun.security.provider.certpath.SunCertPathBuilder.engineBuild(Unknown Source)\n\tat java.security.cert.CertPathBuilder.build(Unknown Source)\n```",
                "time": "2019-11-19 13:19:25",
                "index": 0,
                "user": "gwasky"
            },
            {
                "id": "5dd3ec37e75b2d5a19fedee2",
                "text": "fix your cert stores",
                "time": "2019-11-19 13:20:55",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3ec426ba2347d2dc0a390",
                "text": "I am connecting to an HTTPS resource, i have added its certificate to the truststore ",
                "time": "2019-11-19 13:21:06",
                "index": 2,
                "user": "gwasky"
            },
            {
                "id": "5dd3ec5668ad1c4a0ff4c211",
                "text": "either not the correct certificate(s) or not the correct truststore",
                "time": "2019-11-19 13:21:26",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3ec9d4adf071a8459c499",
                "text": "other java projects are working fine except for the springboot application",
                "time": "2019-11-19 13:22:37",
                "index": 4,
                "user": "gwasky"
            },
            {
                "id": "5dd3ecb8c26e8923c4529c8b",
                "text": "i figure its something to do with how to point the embedded tomcat to the cert store",
                "time": "2019-11-19 13:23:04",
                "index": 5,
                "user": "gwasky"
            },
            {
                "id": "5dd3edf692a84f79fe962896",
                "text": "@OrangeDog Thanks \nThis was only under the jdk, added to the jre, works fine. ",
                "time": "2019-11-19 13:28:22",
                "index": 6,
                "user": "gwasky"
            }
        ]
    },
    {
        "id": 141,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f35376d3b680170180ef972",
                "text": "Beans defined in a nested static @Component class in test class A are auto-discovered by test class B which is in the same package. What's the correct way to keep beans to their containing test class only please?",
                "time": "2020-08-13 12:51:57",
                "index": 0,
                "user": "molexx"
            },
            {
                "id": "5f35424379659c5fbfef3e92",
                "text": "I would not annotate the components at all, but use a nested `@Configuration` or `@TestConfiguration` to declare them.",
                "time": "2020-08-13 13:38:11",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5f3567b65b08104532f56bab",
                "text": "@OrangeDog ah ok, that worked, thanks! :-)",
                "time": "2020-08-13 16:17:58",
                "index": 10,
                "user": "molexx"
            }
        ]
    },
    {
        "id": 142,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e0db4deb4ed68096e199ade",
                "text": "can I have entity to VO conversion as a method in Entity? like in person class a method will be \n```\npublic PersonVO getPersonVO() {\n  //CREATE A PERSON VO AND return it;\n}\n```",
                "time": "2020-01-02 09:16:14",
                "index": 0,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e0db675833c373f4d974ebc",
                "text": "@a-c-sreedhar-reddy : I can\u2019t see why you couldn\u2019t do that. Also, I would recommend using [MapStruct](https://mapstruct.org/) if you need to do a lot of mappings. It will generate the appropriate mapping methods for you instead of writing them manually which is quite prone to errors. ",
                "time": "2020-01-02 09:23:01",
                "index": 1,
                "user": "aberkecz"
            },
            {
                "id": "5e0db6dad31dba03fde4453e",
                "text": "But someone told me that entities should not know about VOs. @aberkecz",
                "time": "2020-01-02 09:24:42",
                "index": 2,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e0db75d04a1900497ee4625",
                "text": "But recently when I heard alan Kays talk on OOPS I noticed one thing. We should not mutate/read the data  directly. So I thought these conversions should be in respective entities rathar than in an util.\nhttps://img.youtube.com/vi/I7IdS-PbEgI/0.jpg",
                "time": "2020-01-02 09:26:53",
                "index": 3,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e0db7af8ba16b107c0bd6fa",
                "text": "That is right from an architectural perspective. If you follow the clean architecture for example, than the persistence layer should not be aware of the presentation. Although, from a technical standpoint, you could do what you asked.\n\n(Note: I\u2019m not part of the Spring team, I\u2019m just a user of the framework as well. :smile: )",
                "time": "2020-01-02 09:28:15",
                "index": 4,
                "user": "aberkecz"
            },
            {
                "id": "5e0db97beac8d1511e9b5ec5",
                "text": "https://stackoverflow.com/questions/59561048/why-cant-conversion-from-entity-to-vo-be-in-an-entity-class",
                "time": "2020-01-02 09:35:55",
                "index": 5,
                "user": "a-c-sreedhar-reddy"
            }
        ]
    },
    {
        "id": 143,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e318e5dfe0e6f74e9deb3cb",
                "text": "If anyone can help with a question about testing a reactive spring boot app with webTestClient here https://stackoverflow.com/questions/59967254/testing-reactive-spring-webflux-using-webtestclient-application-context it would be appreciated...",
                "time": "2020-01-29 13:53:33",
                "index": 0,
                "user": "stefan-cross"
            },
            {
                "id": "5e318ededc52c34ace24f798",
                "text": "give me 5 min",
                "time": "2020-01-29 13:55:42",
                "index": 1,
                "user": "MOES-Media"
            },
            {
                "id": "5e318ee9433e1d403973e6fc",
                "text": "will look into it, just finishing up some code",
                "time": "2020-01-29 13:55:53",
                "index": 2,
                "user": "MOES-Media"
            },
            {
                "id": "5e318f7940da694c5ee849cb",
                "text": "remove your applicationContext and add classes = { ReactiveKataApplication.class } to your @SpringBootTest",
                "time": "2020-01-29 13:58:17",
                "index": 3,
                "user": "MOES-Media"
            },
            {
                "id": "5e318fca58f02e34974063d3",
                "text": "like so ``` @SpringBootTest(classes = ReactiveKataApplication.class) ```",
                "time": "2020-01-29 13:59:38",
                "index": 4,
                "user": "MOES-Media"
            },
            {
                "id": "5e319028e8a8383559f4cbbc",
                "text": "I'm not completely sure, but I think removing your applicationContext as an Autowired bean will do the trick, @SpringBootTest will look in the current package and then goes upward to find your main class",
                "time": "2020-01-29 14:01:12",
                "index": 5,
                "user": "MOES-Media"
            },
            {
                "id": "5e319142bfe65274eabb23e7",
                "text": "I have tried adding `@SpringBootTest(classes = [ ReactiveKataApplication::class ])` without any joy",
                "time": "2020-01-29 14:05:54",
                "index": 6,
                "user": "stefan-cross"
            },
            {
                "id": "5e31915d3aca1e4c5f41aabc",
                "text": "and if I remove the autowiring on the application context I am not then able to the webTestClient :-(",
                "time": "2020-01-29 14:06:21",
                "index": 7,
                "user": "stefan-cross"
            },
            {
                "id": "5e31924dfe0e6f74e9decfcc",
                "text": "junit4 or junit5?",
                "time": "2020-01-29 14:10:21",
                "index": 8,
                "user": "MOES-Media"
            },
            {
                "id": "5e319259fe0e6f74e9ded04d",
                "text": "junit 5",
                "time": "2020-01-29 14:10:33",
                "index": 9,
                "user": "stefan-cross"
            },
            {
                "id": "5e319285bfe65274eabb2d2f",
                "text": "add ``` @ExtendWith(SpringExtension.class) ``` to your test class",
                "time": "2020-01-29 14:11:17",
                "index": 10,
                "user": "MOES-Media"
            },
            {
                "id": "5e3192a6433e1d40397402a6",
                "text": "it's the junit5 replacement for ```@RunWith(SpringJUnit4ClassRunner.class)```",
                "time": "2020-01-29 14:11:50",
                "index": 11,
                "user": "MOES-Media"
            },
            {
                "id": "5e319308d9895b17c3ad853c",
                "text": "yes thanks, had tried that also without success, interestingly in the test logs i see `main] c.o.r.ReactiveKataApplicationContextTest : Started ReactiveKataApplicationContextTest in 2.686 seconds (JVM running for 4.492)` which to me suggests this is running the ...ApplicationContextTest rather than the ApplicationContext? ",
                "time": "2020-01-29 14:13:28",
                "index": 12,
                "user": "stefan-cross"
            },
            {
                "id": "5e319333fe0e6f74e9ded772",
                "text": "and the full test output as \n\n`java.lang.AssertionError: Status expected:<200 OK> but was:<404 NOT_FOUND>\n\n> GET /frp/hello-world?name=foo\n> WebTestClient-Request-Id: [1]\n\nNo content\n\n< 404 NOT_FOUND Not Found\n< Content-Type: [application/json]\n< Content-Length: [139]\n\n{\"timestamp\":\"2020-01-29T14:12:00.781+0000\",\"path\":\"/frp/hello-world\",\"status\":404,\"error\":\"Not Found\",\"message\":null,\"requestId\":\"a303ba\"}`\n\nthanks for your time with this, its appreciated :-)",
                "time": "2020-01-29 14:14:11",
                "index": 13,
                "user": "stefan-cross"
            },
            {
                "id": "5e31933df6945f41ef396817",
                "text": "np :) ",
                "time": "2020-01-29 14:14:21",
                "index": 14,
                "user": "MOES-Media"
            },
            {
                "id": "5e319351e8a8383559f4e12e",
                "text": "and I noticed that's why my first instinct was to remove the applicationContext and make it a spring-boot test",
                "time": "2020-01-29 14:14:41",
                "index": 15,
                "user": "MOES-Media"
            },
            {
                "id": "5e3193db594a0517c24678f8",
                "text": "nothing left to do than to clone your repo and try it out myself ;) ",
                "time": "2020-01-29 14:16:59",
                "index": 16,
                "user": "MOES-Media"
            },
            {
                "id": "5e319424433e1d4039741134",
                "text": "cheers! I was trying to demonstrate the webTestClient using the bind with application context",
                "time": "2020-01-29 14:18:12",
                "index": 17,
                "user": "stefan-cross"
            },
            {
                "id": "5e319449433e1d4039741261",
                "text": "in that repo theres an example showing that the test is possible with the router function, but i am curious as to testing with the app context ",
                "time": "2020-01-29 14:18:49",
                "index": 18,
                "user": "stefan-cross"
            },
            {
                "id": "5e31944973ddad4acd6fc740",
                "text": "yeah for your routers, right? ",
                "time": "2020-01-29 14:18:49",
                "index": 19,
                "user": "MOES-Media"
            },
            {
                "id": "5e319871594a0517c2469e0e",
                "text": "got it",
                "time": "2020-01-29 14:36:33",
                "index": 20,
                "user": "MOES-Media"
            },
            {
                "id": "5e319877594a0517c2469e8b",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/BNhh/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/BNhh/image.png)",
                "time": "2020-01-29 14:36:39",
                "index": 21,
                "user": "MOES-Media"
            },
            {
                "id": "5e319880433e1d403974343f",
                "text": "preparing a fork for you",
                "time": "2020-01-29 14:36:48",
                "index": 22,
                "user": "MOES-Media"
            },
            {
                "id": "5e3198951594133558357641",
                "text": "\ud83d\ude4c mega!",
                "time": "2020-01-29 14:37:09",
                "index": 23,
                "user": "stefan-cross"
            },
            {
                "id": "5e319a1f433e1d4039743ff8",
                "text": "heh for some reason i couldn't push to github... ",
                "time": "2020-01-29 14:43:43",
                "index": 24,
                "user": "MOES-Media"
            },
            {
                "id": "5e319a20f301780b8345553c",
                "text": "https://github.com/MOES-Media/reactive-spring-kata/",
                "time": "2020-01-29 14:43:44",
                "index": 25,
                "user": "MOES-Media"
            },
            {
                "id": "5e319a273aca1e4c5f41efe3",
                "text": "so had to edit the files, can you access this?",
                "time": "2020-01-29 14:43:51",
                "index": 26,
                "user": "MOES-Media"
            },
            {
                "id": "5e319a89fe0e6f74e9df0f48",
                "text": "yep, good stuff",
                "time": "2020-01-29 14:45:29",
                "index": 27,
                "user": "stefan-cross"
            },
            {
                "id": "5e319a9140da694c5ee8a0f5",
                "text": "does it make sense?",
                "time": "2020-01-29 14:45:37",
                "index": 28,
                "user": "MOES-Media"
            },
            {
                "id": "5e319aabf6945f41ef39a2be",
                "text": "it does, its interesting ",
                "time": "2020-01-29 14:46:03",
                "index": 29,
                "user": "stefan-cross"
            },
            {
                "id": "5e319ae1fe0e6f74e9df1277",
                "text": "that is indeed a way to get it working, its interesting that trying to do it inline doesnt work, or at least I dont understand how to test it with the that inline initialiser",
                "time": "2020-01-29 14:46:57",
                "index": 30,
                "user": "stefan-cross"
            },
            {
                "id": "5e319b27e8a8383559f52995",
                "text": "yeah I didn't have enough time rn to look into that, about to leave here ",
                "time": "2020-01-29 14:48:07",
                "index": 31,
                "user": "MOES-Media"
            },
            {
                "id": "5e319b70f6945f41ef39aa42",
                "text": "I guess in practice a service is unlikely to be that small that you have all the routes inline like that, so I should let it go and embrace the configuration and bean annotations :-) ",
                "time": "2020-01-29 14:49:20",
                "index": 32,
                "user": "stefan-cross"
            },
            {
                "id": "5e319b866f9d3d3498fd6b6b",
                "text": "thanks @MOES-Media \ud83d\udc4d",
                "time": "2020-01-29 14:49:42",
                "index": 33,
                "user": "stefan-cross"
            },
            {
                "id": "5e319e8f433e1d403974605b",
                "text": "you're welcome, and yes embrace all the annotations :) ",
                "time": "2020-01-29 15:02:39",
                "index": 34,
                "user": "MOES-Media"
            }
        ]
    },
    {
        "id": 144,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dfb8f9ccf771f7708f5fe64",
                "text": "hi  how can i test the RestControllers i have registered onto multi connectors using TomcatServletWebServerFactory. I have also used a OncePerRequestFilter to map correctly request and specific connector. If I use a mockmvc to perform test it is reachable only the rest controller registered on main connector and not the others. Any ideas?",
                "time": "2019-12-19 14:56:28",
                "index": 0,
                "user": "marcozanghi"
            },
            {
                "id": "5dfb9238d2dadb389343d2bb",
                "text": "@marcozanghi A MockMvc test doesn't use any connectors at all as the HTTP layer is mocked out. I'd recommend using `@SpringBootTest` with a random or defined port web environment instead.",
                "time": "2019-12-19 15:07:36",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 145,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5de284aac3d6795b9ffae46e",
                "text": "Hey there, new to Spring Boot. Trying to make a Rest API. So I'm using JPA (Hibernate) with Postgres. Anyway everything is working fine, entities and the things, but  (there's always a but) it goes in a infinite recursion with the JSON. So I have the API like this : `/events` and it will return all the events saved in the database and each user who created that event. Also have `/user/{userId}` that returns all the users info and all the events that the user ceated. And here is the recursion. The entities are bidirectional . Already used `@JsonIgnore` `@JsonBackReference` `@JsonManagedReference` but I don't have the Events list",
                "time": "2019-11-30 15:03:06",
                "index": 0,
                "user": "joel.sina_gitlab"
            },
            {
                "id": "5de2853d05eec2433dab5af6",
                "text": "Any clue on how to fix this? I've read that maybe could be fixed with the DTO not passing for example the Events list and for each Event the User will have only the DTO fields, but not quite sure and wanted to ask here first on the best practice, because need to understand what the DTO are too. Anyway thanks for the help in advance",
                "time": "2019-11-30 15:05:33",
                "index": 1,
                "user": "joel.sina_gitlab"
            },
            {
                "id": "5de3aa1ec3d6795b9f02f994",
                "text": "@joel.sina_gitlab Hi, above your getEvents collections inside the User class add a  @JsonIgnoreProperties({\"user\"}) so when the user is serialized with its events the event.user will be ignored and the loop avoided",
                "time": "2019-12-01 11:55:10",
                "index": 2,
                "user": "kaizokun"
            },
            {
                "id": "5de3ca301659720ca8dce248",
                "text": "@kaizokun  Wasn't aware about `@JsonIgnoreProperties` annotation. This works like a charm, managed to found a fix with `@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = \"uid\")` even tho it wasn't perfect it stopped the recursion. Thank you very much. Just another question since we're here, now inside my User json there's `hibernateLazyInitializer` what is that? And since there's lazy how can I tell if the Lazy fetch is working on this? Because what I understood about Eager and Lazy is that Lazy is returned when I call it, but in the JSON the data is already returned with all the queries executed. Is this intended with Rest API or I misunderstood the thing. Thanks anyway for the `@JsonIgnoreProperties`",
                "time": "2019-12-01 14:12:00",
                "index": 3,
                "user": "joel.sina_gitlab"
            },
            {
                "id": "5de3cf291659720ca8dd0461",
                "text": "@joel.sina_gitlab I couldn't tell you about hibernateLazyInitializer  I never used it. But If a collection of your class is configured with FetchType Lazy and that collection is not ignored at the serialization step, when Jackson will call the getter, a select query will be executed if the collection is not already loaded",
                "time": "2019-12-01 14:33:13",
                "index": 4,
                "user": "kaizokun"
            }
        ]
    },
    {
        "id": 146,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba11a7c913ba7799b0b6df4",
                "text": "hi all",
                "time": "2018-09-18 15:32:12",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5ba11a900cfe7f30f1b1f0ad",
                "text": "I need any explanation of `server.servlet.session.timeout=60s`",
                "time": "2018-09-18 15:32:32",
                "index": 1,
                "user": "amirensit"
            },
            {
                "id": "5ba11a9bbe4f300626b154e3",
                "text": "for setting session timeout",
                "time": "2018-09-18 15:32:43",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5ba11ac07dca3065031c53e4",
                "text": "does it mean after 60 s without receiving any request, the session is expired",
                "time": "2018-09-18 15:33:20",
                "index": 3,
                "user": "amirensit"
            },
            {
                "id": "5ba11ae2b9531f2dfa85c698",
                "text": "or whatever the server is receiving requests or not, the session will be expired after 60s ?",
                "time": "2018-09-18 15:33:54",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5ba12025b4990c30eed389e7",
                "text": "Session destroyed after 60s",
                "time": "2018-09-18 15:56:21",
                "index": 5,
                "user": "chsi13"
            },
            {
                "id": "5ba120321ee2ca6502352f7d",
                "text": "60s of inactivit\u00e9",
                "time": "2018-09-18 15:56:34",
                "index": 6,
                "user": "chsi13"
            },
            {
                "id": "5ba1203a913ba7799b0b92ae",
                "text": "Inactivity ",
                "time": "2018-09-18 15:56:42",
                "index": 7,
                "user": "chsi13"
            },
            {
                "id": "5ba12043b4990c30eed38a70",
                "text": "@chsi13 ok thanks",
                "time": "2018-09-18 15:56:51",
                "index": 8,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 147,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5c343ea51491b27876daa5c4",
                "text": "Can someone please let me know where the class/controller (or black magic is) that receives the data sent from the front end to the back end in this github example : https://github.com/Baeldung/spring-security-registration/tree/master/src/main/java/org/baeldung",
                "time": "2019-01-08 06:09:41",
                "index": 0,
                "user": "bigalnz"
            },
            {
                "id": "5c343ec312db9607e753994a",
                "text": "the commentary on the Baeldung website doesnt follow the github which has since been updated",
                "time": "2019-01-08 06:10:11",
                "index": 1,
                "user": "bigalnz"
            },
            {
                "id": "5c344712bd592b2e6e6d3527",
                "text": "@bigalnz what do you mean by \"receives\" ? I would say it's somewhere around here : https://github.com/Baeldung/spring-security-registration/blob/master/src/main/java/org/baeldung/web/controller/RegistrationController.java",
                "time": "2019-01-08 06:45:38",
                "index": 2,
                "user": "62mkv"
            },
            {
                "id": "5c34475257c6883f9b7e2be5",
                "text": "@62mkv I would have thought thats all to do with registration?",
                "time": "2019-01-08 06:46:42",
                "index": 3,
                "user": "bigalnz"
            },
            {
                "id": "5c3447623cf6c35a84ab21c1",
                "text": "@bigalnz the whole point of spring-webmvc is that you don't have to process http requests directly, instead by using annotations you map your methods of a specified class to specific endpoints and process the parameters as you wish",
                "time": "2019-01-08 06:46:58",
                "index": 4,
                "user": "62mkv"
            },
            {
                "id": "5c34477daac7082e6fefc982",
                "text": "@bigalnz there's also UserController, so.. what are you missing?",
                "time": "2019-01-08 06:47:25",
                "index": 5,
                "user": "62mkv"
            },
            {
                "id": "5c3447bd73360b4d55d66f83",
                "text": "/login sends data via post -where is the associated code that receives the data sent to /login on the submission, and the methods that are called subsequently (to validate and redirect if successful)",
                "time": "2019-01-08 06:48:29",
                "index": 6,
                "user": "bigalnz"
            },
            {
                "id": "5c34480112db9607e753d67b",
                "text": "Is it here :     https://github.com/Baeldung/spring-security-registration/blob/813d3816b28e177108d46a84bfb74f4380adcc84/src/main/java/org/baeldung/spring/MvcConfig.java#L41",
                "time": "2019-01-08 06:49:37",
                "index": 7,
                "user": "bigalnz"
            },
            {
                "id": "5c34484826d86e4d56428162",
                "text": "its in `spring-security` code to handle `POST /login` request",
                "time": "2019-01-08 06:50:48",
                "index": 8,
                "user": "unlimitedsola"
            },
            {
                "id": "5c3448f61948ad07e8070f12",
                "text": "you mean its using some default code included with spring ? there must be some customisation somewhere?",
                "time": "2019-01-08 06:53:42",
                "index": 9,
                "user": "bigalnz"
            },
            {
                "id": "5c3449371948ad07e8070fbc",
                "text": "or more specifically:  `org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter`",
                "time": "2019-01-08 06:54:47",
                "index": 10,
                "user": "unlimitedsola"
            },
            {
                "id": "5c344a4557c6883f9b7e40c6",
                "text": "@bigalnz \"using some default code included with Spring\" is pretty much the \"Spring way\" to develop applications",
                "time": "2019-01-08 06:59:17",
                "index": 11,
                "user": "62mkv"
            },
            {
                "id": "5c344cc61d1c2c3f9cdc90e8",
                "text": "@bigalnz if you want to understand what URLs are provided by your application, you might refer to such trick as http://www.java-allandsundry.com/2012/03/endpoint-documentation-controller-for.html (or http://www.java-allandsundry.com/2014/08/spring-mvc-endpoint-documentation-with.html for Spring Boot)",
                "time": "2019-01-08 07:09:58",
                "index": 12,
                "user": "62mkv"
            },
            {
                "id": "5c344e2d12db9607e753f80a",
                "text": "@62mkv that is a awsome bit of information thanks for that.",
                "time": "2019-01-08 07:15:57",
                "index": 13,
                "user": "bigalnz"
            },
            {
                "id": "5c344e7d1491b27876db0094",
                "text": "it looks like in that github project it adds a viewController for /login and a default successUrl. It also has a login success event to do certain other things on a successful login",
                "time": "2019-01-08 07:17:17",
                "index": 14,
                "user": "bigalnz"
            },
            {
                "id": "5c344e876370df0b91a97ca0",
                "text": "I think i see how it all bolts together now",
                "time": "2019-01-08 07:17:27",
                "index": 15,
                "user": "bigalnz"
            },
            {
                "id": "5c344e921d1c2c3f9cdc9ac4",
                "text": "but will keep experimenting and reading.",
                "time": "2019-01-08 07:17:38",
                "index": 16,
                "user": "bigalnz"
            },
            {
                "id": "5c345c1773360b4d55d6f1c7",
                "text": "actually I am still a bit stuck. I have registered a user, and I can see the user in the database. I can load the login page and see the formdata going to the backend, but when I try to login I keep getting sent to the failure URL and the breakpoint in my success handler is never hit",
                "time": "2019-01-08 08:15:19",
                "index": 17,
                "user": "bigalnz"
            },
            {
                "id": "5c345c2d1948ad07e80787c5",
                "text": "                .formLogin()\n                    .loginPage(\"/login\")\n                    .defaultSuccessUrl(\"/newneedsassessment\")\n                    .successHandler(authenticationSuccessHandler)\n                    .usernameParameter(\"username\")\n                    .passwordParameter(\"password\")\n                    .loginProcessingUrl(\"/login\")\n                    .failureUrl(\"/loginfailure\")\n                    .permitAll()\n                    .and()",
                "time": "2019-01-08 08:15:41",
                "index": 18,
                "user": "bigalnz"
            }
        ]
    },
    {
        "id": 148,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ecf07aa225dc25f54addc6c",
                "text": "Hi.\n\nQuestion: Is it recommended to use BlockHound in Production?",
                "time": "2020-05-28 00:36:58",
                "index": 0,
                "user": "cortizqgithub"
            },
            {
                "id": "5ecf6a7589941d051a2a13a5",
                "text": "@cortizqgithub blockhound is not managed in Spring Boot. Please ask on #reactor ",
                "time": "2020-05-28 07:38:29",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5ecf6f72549761730b61e37a",
                "text": "@cortizqgithub there is even a BlockHound-channel",
                "time": "2020-05-28 07:59:46",
                "index": 11,
                "user": "mickeelm"
            },
            {
                "id": "5ecfa96e27513a72fbbaf509",
                "text": "@snicoll  Thansk for pointing me to the right Project Reactor channel #reactor/reactor",
                "time": "2020-05-28 12:07:10",
                "index": 28,
                "user": "cortizqgithub"
            }
        ]
    },
    {
        "id": 149,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dee26aab065c6433c65b720",
                "text": "How would the WebFlux metrics create an outcome of `UNKNOWN`? If I understand the code correctly \n```\npublic static Tag outcome(ServerWebExchange exchange) {\n        Integer statusCode = extractStatusCode(exchange);\n        Outcome outcome = statusCode != null ? Outcome.forStatus(statusCode) : Outcome.UNKNOWN;\n        return outcome.asTag();\n    }\n```\nthis happens if there is no status code \u2026 but I get status 200 as well in my tags \u2026",
                "time": "2019-12-09 10:49:14",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee3a5e05eec2433dffc61f",
                "text": "@kschlesselmann it depends on the server, and if/when an error happened. The response status can be null.",
                "time": "2019-12-09 12:13:18",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5dee41eb32df1245cb0ebae2",
                "text": "@bclozel So what I make of NONE, UNKNOWN and 200? Was is successful or not?\n",
                "time": "2019-12-09 12:45:31",
                "index": 2,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee5d7346397c721cb5236e",
                "text": "@kschlesselmann If you're getting NONE (for the exception Tag), UNKNOWN (for the Outcome), and 200 for the status code, I can only assume that the request did not raise an exception and might have not set the status explicitly and it's using the default value.\nIf you did get UNKNOWN for the uri tag, maybe the request was handled by a Filter?",
                "time": "2019-12-09 14:42:59",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5dee5d97d75ad3721d81296a",
                "text": "@bclozel No, the URI tag is fine",
                "time": "2019-12-09 14:43:35",
                "index": 14,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee5da7d75ad3721d8129b9",
                "text": "@kschlesselmann it's mapped to a controller method?",
                "time": "2019-12-09 14:43:51",
                "index": 15,
                "user": "bclozel"
            },
            {
                "id": "5dee5db2d75ad3721d812a31",
                "text": "yep",
                "time": "2019-12-09 14:44:02",
                "index": 16,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee5dd46a85195b9e275fd0",
                "text": "I assume that the handler should set the status there (maybe I'm not remembering correctly)",
                "time": "2019-12-09 14:44:36",
                "index": 18,
                "user": "bclozel"
            },
            {
                "id": "5dee5df99319bb519008a6e3",
                "text": "@kschlesselmann if you've got a sample that would be interesting",
                "time": "2019-12-09 14:45:13",
                "index": 19,
                "user": "bclozel"
            },
            {
                "id": "5dee5e26d75ad3721d812f09",
                "text": "@bclozel The weird change happened this morning after an update to Hoxton/SB 2.2.2 if this rings any bells \u2026",
                "time": "2019-12-09 14:45:58",
                "index": 21,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee5e8d32df1245cb0fba0d",
                "text": "@kschlesselmann not really. If you get a chance to rollback Spring Boot to 2.2.1 and test, that would rule out part of the picture",
                "time": "2019-12-09 14:47:41",
                "index": 24,
                "user": "bclozel"
            },
            {
                "id": "5dee5e9e46397c721cb530c5",
                "text": "Will do",
                "time": "2019-12-09 14:47:58",
                "index": 25,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee5ea25ac7f22fb58c3220",
                "text": "I'm not seeing changes in Spring Boot since 2.2.0 around status handling",
                "time": "2019-12-09 14:48:02",
                "index": 27,
                "user": "bclozel"
            },
            {
                "id": "5dee61a18e906a1c8d9a5c87",
                "text": "@bclozel Nope \u2026 still UNKNOWN with SB 2.2.1",
                "time": "2019-12-09 15:00:49",
                "index": 33,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee61e2550662459897c4e2",
                "text": "So the only remaining change is Spring Cloud then? What are you using from the cloud stack? Are you using zipkin?",
                "time": "2019-12-09 15:01:54",
                "index": 35,
                "user": "bclozel"
            },
            {
                "id": "5dee6278b065c6433c67a43b",
                "text": "@bclozel This service is kinde slim on Spring Cloud\n```\n    implementation(\"org.springframework.cloud:spring-cloud-starter-aws\")\n    implementation(\"org.springframework.cloud:spring-cloud-aws-actuator\")\n    implementation(\"org.springframework.cloud:spring-cloud-starter-sleuth\")\n```\n",
                "time": "2019-12-09 15:04:24",
                "index": 36,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee629f550662459897cbdd",
                "text": "Can you try without Sleuth and with Spring Boot 2.2.2?",
                "time": "2019-12-09 15:05:03",
                "index": 37,
                "user": "bclozel"
            },
            {
                "id": "5dee62ae5ac7f22fb58c528a",
                "text": "Maybe something changed in the Sleuth instrumentation",
                "time": "2019-12-09 15:05:18",
                "index": 38,
                "user": "bclozel"
            },
            {
                "id": "5dee67c08e906a1c8d9a94d1",
                "text": "@bclozel Nope \u2026 without sleuth it looks the same",
                "time": "2019-12-09 15:26:56",
                "index": 39,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee68238e906a1c8d9a98aa",
                "text": "@kschlesselmann just to be clear, you upgraded from what to what? Spring Boot 2.2.1 to 2.2.2? What about Spring Cloud?",
                "time": "2019-12-09 15:28:35",
                "index": 40,
                "user": "bclozel"
            },
            {
                "id": "5dee68621659720ca829647e",
                "text": "@bclozel 2.1.10/Greenwich.SR4 to 2.2.2/Hoxton.RELEASE",
                "time": "2019-12-09 15:29:38",
                "index": 41,
                "user": "kschlesselmann"
            },
            {
                "id": "5dee6895b065c6433c67dd34",
                "text": "I see, it's a different story then. This might be a change in Spring Boot/Framework about handling non-standard HTTP status code",
                "time": "2019-12-09 15:30:29",
                "index": 42,
                "user": "bclozel"
            },
            {
                "id": "5dee68f1d64a052fb6e4168c",
                "text": "The goal from here would be to reproduce that with a minimal sample (without Spring Cloud), with an in-memory repository for tags",
                "time": "2019-12-09 15:32:01",
                "index": 43,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 150,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bce5858c7bf7c366253e3ac",
                "text": "Hi. I'm new to Spring. I followed Spring official site and create one basic project. But when I run the project I'm getting the following error",
                "time": "2018-10-22 23:08:08",
                "index": 0,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce58621e23486b93008ac3",
                "text": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c417213: startup date [Mon Oct 22 19:07:43 EDT 2018]; root of context hierarchy\n2018-10-22 19:07:45.045  INFO 379360 --- [       Thread-2] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown\n",
                "time": "2018-10-22 23:08:18",
                "index": 1,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce58786e5a401c2db49149",
                "text": "I added only Spring Web in the dependency ",
                "time": "2018-10-22 23:08:40",
                "index": 2,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce5895435c2a518eec4e8d",
                "text": "And within my Pom.xml I've this",
                "time": "2018-10-22 23:09:09",
                "index": 3,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce5896ae7be940169d7a0b",
                "text": "<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.0.6.RELEASE</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>",
                "time": "2018-10-22 23:09:10",
                "index": 4,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce58bfef4afc4f28b724e8",
                "text": "But if I change the version to 1.3.2 It is working fine. But not able to add any Sql connection dependencies or other. ",
                "time": "2018-10-22 23:09:51",
                "index": 5,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce58c71c100a4f29ca9f31",
                "text": "Please some one help me out",
                "time": "2018-10-22 23:09:59",
                "index": 6,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce5900435c2a518eec50ec",
                "text": "I've Maven 3.5.4 and Jdk 1.8 in my local",
                "time": "2018-10-22 23:10:56",
                "index": 7,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce60ee3844923661811b3c",
                "text": "@CHANDRAKANTHREDDY93 I don't see any error here. What does your pom look like?",
                "time": "2018-10-22 23:44:46",
                "index": 8,
                "user": "mbhave"
            },
            {
                "id": "5bce83bb384492366181d9d5",
                "text": "@mbhave  Unregistering JMX-exposed beans on shutdown --> This is what I see in console. ",
                "time": "2018-10-23 02:13:15",
                "index": 10,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce83c56e5a401c2db58b2b",
                "text": "My POM.xml looks like this",
                "time": "2018-10-23 02:13:25",
                "index": 11,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce83c76e5a401c2db58b7f",
                "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.chand</groupId>\n\t<artifactId>demo</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>jar</packaging>\n\n\t<name>demo</name>\n\t<description>Demo project for Spring Boot</description>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.0.6.RELEASE</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>1.8</java.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n\n</project>\n",
                "time": "2018-10-23 02:13:27",
                "index": 12,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce992bab17df2631d65e4c",
                "text": "I'm seeing this after build is success",
                "time": "2018-10-23 03:44:43",
                "index": 13,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bce992c271506518d561edb",
                "text": "[WARNING] The requested profile \"pom.xml\" could not be activated because it does not exist.",
                "time": "2018-10-23 03:44:44",
                "index": 14,
                "user": "CHANDRAKANTHREDDY93"
            },
            {
                "id": "5bcea228435c2a518eedead7",
                "text": "I think there are some problems with your local tools",
                "time": "2018-10-23 04:23:04",
                "index": 15,
                "user": "geercode"
            },
            {
                "id": "5bcea2371c100a4f29cc48d3",
                "text": "try script command",
                "time": "2018-10-23 04:23:19",
                "index": 16,
                "user": "geercode"
            },
            {
                "id": "5bcea7e1c08b8b30675a3037",
                "text": "@CHANDRAKANTHREDDY93 Maven most likely has a corrupted dependency which makes it appear as if it is not on the classpath. Try clearing out Maven's cache and building your application again. ",
                "time": "2018-10-23 04:47:29",
                "index": 17,
                "user": "mbhave"
            }
        ]
    },
    {
        "id": 151,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e9a594047110862053d521f",
                "text": "Hello! How to inject a dependency inside a Web Socket handler?\n\n```\n    public class WebsocketHandler extends AbstractWebSocketHandler {\n        @Autowired\n        GreetingMap greetingMap;\n    \n        @Override\n        protected void handleTextMessage(WebSocketSession session, TextMessage message) throws IOException {\n            // NullPointerException here\n            String greeting = greetingMap.getSampleGreetings().get(\"hello\") + \" \" + message.getPayload();\n            session.sendMessage(new TextMessage(greeting));\n        }\n    }\n```\nThe code above throws `NullPointerException` \n\nWhat could be missing here? ",
                "time": "2020-04-18 01:34:56",
                "index": 0,
                "user": "incube8r"
            },
            {
                "id": "5e9a764f8e987f3a5e25b98a",
                "text": "@incube8r I haven't worked with spring/websockets but I suppose it is all about the scope of the GreetingMap. I think you have to use `websocket` scope for the injected bean.\nhttps://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#websocket-stomp-websocket-scope",
                "time": "2020-04-18 03:38:55",
                "index": 1,
                "user": "jtonic"
            },
            {
                "id": "5e9a7e42d65bcf75b5ce4a23",
                "text": "@incubator  concept of autowiring is no different for websockets. Please check GreetingMap is annotated with either @component or any such kind so that it comes in radar of spring context scan .\nAlso very the package scan  mentioned in SpringBoot runner class . Scan package name also covers the package where this greetings map is defined .",
                "time": "2020-04-18 04:12:50",
                "index": 2,
                "user": "code-maker-rishi"
            },
            {
                "id": "5e9a7e49c7dcfc14e2ca0d6c",
                "text": "Hope this helps ",
                "time": "2020-04-18 04:12:57",
                "index": 3,
                "user": "code-maker-rishi"
            }
        ]
    },
    {
        "id": 152,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df38cc70995661eb8db60a9",
                "text": "I've got\n```\n@TestConfiguration\nclass OAuth2TestConfiguration {\n\n    @MockBean\n    lateinit var jwtDecoder: ReactiveJwtDecoder\n\n}\n```\nwhich I use via `@Import` on my `@SpringBootTest`s. Now I try to set up an integration test for my Spring Cloud Stream application via `SpringApplicationBuilder` but the started context complains that it is missing a `ReactiveJwtDecoder`. How would I add this `@TestConfiguration` to my setup?",
                "time": "2019-12-13 13:06:15",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5df38cf9e72656230138fd7d",
                "text": "This is what the SCSt guys say a test should look like https://cloud.spring.io/spring-cloud-static/spring-cloud-stream/3.0.0.RELEASE/reference/html/spring-cloud-stream.html#_test_binder_usage",
                "time": "2019-12-13 13:07:05",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5df38d337d382b523f6e1612",
                "text": "I tried something along\n```\n        val sources = TestChannelBinderConfiguration.getCompleteConfiguration(Application::class.java)\n\n        val context = SpringApplicationBuilder()\n                .sources(*sources, OAuth2TestConfiguration::class.java)\n                .profiles(\"test\")\n                .run(\"--spring.cloud.function.definition=productsOfSource\")\n```\nbut this does not work :-(",
                "time": "2019-12-13 13:08:03",
                "index": 2,
                "user": "kschlesselmann"
            },
            {
                "id": "5df3a7e8c6ce6027ebb4d9df",
                "text": "@kschlesselmann Have you tried with `@Configuration` rather than `@TestConfiguration`?",
                "time": "2019-12-13 15:02:00",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5df3c0d6f1cc6c27ea42c8bb",
                "text": "@wilkinsona Yep \u2026 that seems to work. :-)",
                "time": "2019-12-13 16:48:22",
                "index": 12,
                "user": "kschlesselmann"
            },
            {
                "id": "5df3c0f87ce7ea1e357a49ed",
                "text": "Now I end up with `class org.springframework.messaging.support.GenericMessage cannot be cast to class reactor.core.publisher.Flux` though \u2026 this is no SB issue any more ;-)",
                "time": "2019-12-13 16:48:56",
                "index": 13,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 153,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d4156e920f75e7ba559f26a",
                "text": "How to prevent the springboot application shutdown when datasource gets down temporary. and When database comes back, application should work as expected.",
                "time": "2019-07-31 08:52:57",
                "index": 0,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d415719395d5d4671fa7c35",
                "text": "Currently, Temporary failure in database causes my springboot application to go down",
                "time": "2019-07-31 08:53:45",
                "index": 1,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d4157c9395d5d4671fa8066",
                "text": "It doesn\u2019t do that unless your infrastructure is configured to do so. That\u2019s a question for whatever infra you\u2019re using",
                "time": "2019-07-31 08:56:41",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5d41586302abe16c6489d475",
                "text": "**spring.datasource.continue-on-error=true** this property ignores database error while starting the application. Does it work when database goes down at run time ? Will application be keep running even if database is not available.",
                "time": "2019-07-31 08:59:15",
                "index": 3,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d415886771bca3ea4ddce3a",
                "text": "@shivanshugoyal0111 You\u2019re looking in the wrong direction. Spring Boot does not shutdown the application when the DB is down at runtime",
                "time": "2019-07-31 08:59:50",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5d41595751d80b6c6507c3d2",
                "text": "@snicoll what will happen if application is not able to find host where database is running. I m getting UNKNOWN hostException.\n\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n ",
                "time": "2019-07-31 09:03:19",
                "index": 5,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d420c3ce2802b6790a5d102",
                "text": "@shivanshugoyal0111 spring boot will autoconfigure a health indicator (DataSourceHealthIndicator) for the DB you are using. If your DB goes down then the health check endpoint will start failing and return a http status code of 503. You may have something in your infra that kills the app if the health check starts failing. ",
                "time": "2019-07-31 21:46:36",
                "index": 21,
                "user": "michaelmcfadyen"
            }
        ]
    },
    {
        "id": 154,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c5b4592975714406ba6daa9",
                "text": "hi all. I have a local `@Configuration` detected by component scanning, and it has `@Bean` methods to deliver an implementation of an interface. One impl is `@ConditionalOnBean` some dependencies and the other is `@ConditionalOnMissingBean` to provide a default implementation. The conditional dependencies are created by an autoconfiguration class. The local `@Configuration` is loaded before the autoconfiguration, however, which is normally to the good as it would permit things like a local override of a bean that the autoconfiguration can provide via `@ConditionalOnMissingBean`. I have found that I can `@Import` the autoconfiguration in my local `@Configuration` and it looks like that will work, but is there a better way to do this?",
                "time": "2019-02-06 20:37:38",
                "index": 0,
                "user": "mbenson"
            },
            {
                "id": "5c5b45aa1b62f12650b38acc",
                "text": "I realize I could put the conditional stuff inside a single `@Bean` method (using `@Autowired(required=false)` dependencies) but that doesn't feel so great either.",
                "time": "2019-02-06 20:38:02",
                "index": 1,
                "user": "mbenson"
            },
            {
                "id": "5c5b465141775971a0ea58b6",
                "text": "To complicate matters, I only added the `@Import` for the autoconfiguration that creates one of my two dependencies; the other didn't require that. :/",
                "time": "2019-02-06 20:40:49",
                "index": 2,
                "user": "mbenson"
            },
            {
                "id": "5c5be1be1b62f12650b74409",
                "text": "That\u2019s quite a dense description and I am afraid I didn\u2019t get all of it but",
                "time": "2019-02-07 07:43:58",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5c5be1d2975714406baabf54",
                "text": "You can\u2019t import auto-configurations. Auto-configurations have to run in a dedicated phase of the context to make sure conditions are applied properly",
                "time": "2019-02-07 07:44:18",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5c5be1ef13a2814df6330cac",
                "text": "You can\u2019t use `@ConditionalOnMissingBean` in a user configuration as a configuration down the chain (auto-configurations or otherwise) can provide that bean when the condition evaluates (see the Javadoc).",
                "time": "2019-02-07 07:44:47",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 155,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bfd48558dffd748dbeea9ad",
                "text": "How can I inject a list of all beans annotated with e.g. `@Service`?",
                "time": "2018-11-27 13:36:21",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5bfd48b1662131389427f9d3",
                "text": "Why would you want to do that?",
                "time": "2018-11-27 13:37:53",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bfd49c7cfa682348d917cb4",
                "text": "Can anyone suggest elegant way to work with java localdatetime between spring boot api and angular 6",
                "time": "2018-11-27 13:42:31",
                "index": 2,
                "user": "ankeshKapil"
            },
            {
                "id": "5bfd4c2bcfa682348d918c81",
                "text": "@snicoll To show a list of beans annotated with that (or other) annotation in a development/debug console.",
                "time": "2018-11-27 13:52:43",
                "index": 3,
                "user": "heruan"
            },
            {
                "id": "5bfd4ccab6c070105296e781",
                "text": "`ApplicationContext#getBeansWithAnnotation(Service.class)`",
                "time": "2018-11-27 13:55:22",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bfd4da2f849b222e0b0b12d",
                "text": "Thank you! :+1: ",
                "time": "2018-11-27 13:58:58",
                "index": 5,
                "user": "heruan"
            },
            {
                "id": "5bfd4edda115c91ef79f3c52",
                "text": "It works, great. In case the provided bean is a proxy, is there any way to get the actual `Class` that was annotated?",
                "time": "2018-11-27 14:04:13",
                "index": 6,
                "user": "heruan"
            },
            {
                "id": "5bfd4fcef048fa10512f7eaf",
                "text": "`ClassUtils.getUserClass` seems to be the answer, hope this works for all kind of proxies.",
                "time": "2018-11-27 14:08:14",
                "index": 7,
                "user": "heruan"
            }
        ]
    },
    {
        "id": 156,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bb72740bbdc0b2505ec66a3",
                "text": "Good morning! I have a strange \"problem\". The application runs way faster when i include the ```spring-boot-devtools``` and start via ```mvn spring-boot:run```. Whenever the devtools are included the application is faster during its workload. This sounds odd to me, i could expect the opposite, but not this way. So i just need a pointer where to dig, what could be the difference? I am using boot 2.0.5.",
                "time": "2018-10-05 08:56:32",
                "index": 0,
                "user": "thackel"
            },
            {
                "id": "5bb72af73844923661e990f4",
                "text": "@thackel Way faster compared to what? Are you comparing the difference between launching with spring-boot:run with and without devtools enabled or the difference between launching with spring-boot:run + devtools and java -jar?",
                "time": "2018-10-05 09:12:23",
                "index": 1,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bb738e63844923661e9f834",
                "text": "sb:run with vs sb:run without devtools, in a run of normally 30min there are about 13min difference between the both runs. of course the results are the same. just inserting the devtools brings a speedup of 13 minutes. i can reproduce it every time.",
                "time": "2018-10-05 10:11:50",
                "index": 2,
                "user": "thackel"
            },
            {
                "id": "5bb739361e23486b9390299b",
                "text": "but i found at least some difference. adding devtools changes some initialization order because with devtools quartz is being constructed as in memory service (the default) and without my quartz config kicks in.",
                "time": "2018-10-05 10:13:10",
                "index": 3,
                "user": "thackel"
            },
            {
                "id": "5bb74052ef4afc4f28210d4e",
                "text": "another difference with devtools enabled. ```mvn clean spring-boot:run -Ddebug=true``` shows the ```CONDITIONS EVALUATION REPORT``` only without devtools. is that the intended behaviour?",
                "time": "2018-10-05 10:43:30",
                "index": 4,
                "user": "thackel"
            },
            {
                "id": "5bb741d9e65a6343368887c3",
                "text": "Yes, disable with `spring.devtools.restart.log-condition-evaluation-delta=false`",
                "time": "2018-10-05 10:50:01",
                "index": 5,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bb743fcbbdc0b2505ed2022",
                "text": "try it without devtools and ```debug=true```. there is the ```CONDITIONS EVALUATION REPORT``` without any restart. when devtools are in the classpath, these initial report is not shown, no matter which ```spring.devtools.restart.log-condition-evaluation-delta``` is used.",
                "time": "2018-10-05 10:59:08",
                "index": 6,
                "user": "thackel"
            },
            {
                "id": "5bb74a0a1e23486b9390952d",
                "text": "30 min? What\u2019s the scenario? Some automated tests?",
                "time": "2018-10-05 11:24:58",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5bb74e11e65a63433688d754",
                "text": "a user controlled integration test, with lots of DB load. B-) currently i am comparing the logfiles of the startup phase. found already one difference. when starting with devtools a cmdline provided parameter is not used, the value of the application.properties is there instead of the cmd line value. without the devtools, the cmdline version is used",
                "time": "2018-10-05 11:42:09",
                "index": 8,
                "user": "thackel"
            },
            {
                "id": "5bb74e3d600c5f6423594fdc",
                "text": "Very odd",
                "time": "2018-10-05 11:42:53",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5bb74e71ef4afc4f28216d46",
                "text": "I have a feeling devtools is not related to the difference. I\u2019d be curious to understand why though. What parameter is that? ",
                "time": "2018-10-05 11:43:45",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5bb74eba5331811c2e52fd4a",
                "text": "the parameter which is used is ```-Dspring.datasource.hikari.jdbc-url=fooo```",
                "time": "2018-10-05 11:44:58",
                "index": 11,
                "user": "thackel"
            },
            {
                "id": "5bb74edf600c5f642359541a",
                "text": "I am confused",
                "time": "2018-10-05 11:45:35",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bb74fcc1c100a4f2934e3cd",
                "text": "that\u2019s an unusual value for jdbc-url",
                "time": "2018-10-05 11:49:32",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb7564882893a2f3ba30842",
                "text": "the value is of course a real jdbc url. but its different then the value provided in application.properties. he asked for the parameter (key) and not the value :-)",
                "time": "2018-10-05 12:17:12",
                "index": 14,
                "user": "thackel"
            },
            {
                "id": "5bb75665600c5f6423598568",
                "text": "I don\u2019t see how adding devtools would ignore system properties",
                "time": "2018-10-05 12:17:41",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5bb7566c5331811c2e533004",
                "text": "Can you share a sample that does that?",
                "time": "2018-10-05 12:17:48",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5bb7578bc7bf7c3662bd3124",
                "text": "i was sure you would ask for that... as usual its not that easy to strip down all the project to a simple reproducable sample. but i will try.",
                "time": "2018-10-05 12:22:35",
                "index": 17,
                "user": "thackel"
            },
            {
                "id": "5bb757a16e5a401c2d1e8dfb",
                "text": "but why there is no spring-boot evaluation report when using devtools and debug=true?",
                "time": "2018-10-05 12:22:57",
                "index": 18,
                "user": "thackel"
            },
            {
                "id": "5bb757ac1e23486b9390f473",
                "text": "You can start with an empty project and set the property the way it is set now and see if it\u2019s  taken into account",
                "time": "2018-10-05 12:23:08",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5bb757b46e5a401c2d1e8e47",
                "text": "It\u2019s a spring boot feature so I need zero feature from your app",
                "time": "2018-10-05 12:23:16",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5bb757bf82893a2f3ba31110",
                "text": "(unless your app does something, in which case we\u2019ve already made progress)",
                "time": "2018-10-05 12:23:27",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5bb757ecbbdc0b2505eda400",
                "text": "I don\u2019t know either. Those two reports is the first time I hear about them. I can\u2019t be sure of what you mean unless I can reproduce myself",
                "time": "2018-10-05 12:24:12",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5bb75c495331811c2e535903",
                "text": "@snicoll for the simple problem i've build a test: https://github.com/thackel/spring-boot-devtools-problem1",
                "time": "2018-10-05 12:42:49",
                "index": 24,
                "user": "thackel"
            },
            {
                "id": "5bb75ca61e23486b93911623",
                "text": "You can't pass parametes like that",
                "time": "2018-10-05 12:44:22",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5bb75caf64cfc273f99cca4e",
                "text": "`-Ddebug` is setting a property in the maven process, not the app process",
                "time": "2018-10-05 12:44:31",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5bb75cce1c100a4f29354154",
                "text": "If the app forks then the property is simply not transmitted. I guess this is exactly the same thing for the property issue",
                "time": "2018-10-05 12:45:02",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5bb75d0c271506518dbee797",
                "text": "@thackel https://docs.spring.io/spring-boot/docs/current/maven-plugin/run-mojo.html#arguments",
                "time": "2018-10-05 12:46:04",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5bb75daac08b8b3067d7e024",
                "text": "@snicoll thats not the solution for the testcase. ```-Ddebug=true``` works as expected without devtools, but not with.",
                "time": "2018-10-05 12:48:42",
                "index": 30,
                "user": "thackel"
            },
            {
                "id": "5bb75db4e65a634336894921",
                "text": "It is",
                "time": "2018-10-05 12:48:52",
                "index": 31,
                "user": "snicoll"
            },
            {
                "id": "5bb75dba5331811c2e53642b",
                "text": "when you add devtools the process is forked",
                "time": "2018-10-05 12:48:58",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5bb75dd06e5a401c2d1ebe1b",
                "text": "in any case, you can\u2019t pass properties to the app like that",
                "time": "2018-10-05 12:49:20",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5bb75ed882893a2f3ba341ff",
                "text": "@snicoll i am doing this since ages. passing parameter overrides during the maven run. doing this all the time, logging, switch db urls on demand etc. the difference is that i never used devtools before except for hello world stuff. now i integrated it into real world projects and try to act like i've always did.",
                "time": "2018-10-05 12:53:44",
                "index": 35,
                "user": "thackel"
            },
            {
                "id": "5bb75ef63844923661eaf872",
                "text": "the fact you\u2019re doing it for ages doesn\u2019t change anything to the fact that it worked so far by accident",
                "time": "2018-10-05 12:54:14",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5bb75fee6e5a401c2d1ecb36",
                "text": "(btw, it also means that your long-running test ran so far in the VM used by Maven. Not sure it\u2019s a good idea if you want to control a bit more the memory that the application can use)",
                "time": "2018-10-05 12:58:22",
                "index": 37,
                "user": "snicoll"
            },
            {
                "id": "5bb760cdbbdc0b2505eddec4",
                "text": "i am pretty sure years or months ago i attended a demo of josh long and he also overrode properties on the cmdline like that. but nevertheless baeldung provide a proper sample and also the difference between b1/b2: https://www.baeldung.com/spring-boot-command-line-arguments",
                "time": "2018-10-05 13:02:05",
                "index": 38,
                "user": "thackel"
            },
            {
                "id": "5bb761e7c7bf7c3662bd78b9",
                "text": "with ```mvn spring-boot:run -Pdevtools -Dspring-boot.run.arguments=--debug=true``` the report shows up as expected",
                "time": "2018-10-05 13:06:47",
                "index": 39,
                "user": "thackel"
            }
        ]
    },
    {
        "id": 157,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e846cf3c6ac331cf3eba968",
                "text": "hello, is it somehow possible to resolve placeholders in 3 like this? `${${PROP1:PROP2}:DEFAULT}` so if PROP1 is set thent it is used, if PROP1 is not set and PROP2 is set then PROP2 is used, if non of PROP1 PROP2 is set then DEFAULT is used",
                "time": "2020-04-01 10:29:07",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5e84a2548bb4966bc49bf620",
                "text": "@bilak in what context? I believe that Framework's PropertyPlaceholderHelper will recursively resolved placeholders in default values.",
                "time": "2020-04-01 14:16:52",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5e84c301e26a9452ed3c5715",
                "text": "@wilkinsona in application.properties|yaml . It has slightly different syntax, it works like `${PROP1:${PROP2:DEFAULT}}`. I found it hard way. Is this somewhere documented? I couldn't find that in spring docs.",
                "time": "2020-04-01 16:36:17",
                "index": 13,
                "user": "bilak"
            },
            {
                "id": "5e84df37302cd3685be03bf9",
                "text": "@bilak Spring Framework's [documentation](https://docs.spring.io/spring-framework/docs/5.2.5.RELEASE/spring-framework-reference/core.html#spring-core) mentions the `${key:default}` syntax in a few places. It doesn't seem to go into details about resolving nested placeholders, though. FWIW, it makes sense to me that if you want the default to use a property then the syntax should be `${key1:${key2:default}}`",
                "time": "2020-04-01 18:36:39",
                "index": 20,
                "user": "wilkinsona"
            },
            {
                "id": "5e8506f0d1e1b562c0081d54",
                "text": "@wilkinsona yes it makes sense now to me also, but at first I didn't get how could I do it. Maybe just mention about nested property would be good somewhere in docs.",
                "time": "2020-04-01 21:26:08",
                "index": 24,
                "user": "bilak"
            }
        ]
    },
    {
        "id": 158,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc0454af26ea4729d52bd2e",
                "text": "How would I return server sent events from my API with a custom content type? I'd like to have two endoints that return `Flux<A>` and `Flux<OtherRepresentationOfA>` and both endoints should stream their data. The first one can be called with `Accept: application/stream+json` and everything is alright. What about the other one? AFAIK if I return `Flux<ServerSentEvent<OtherRepresentationOfA>>` the `Content-Type` has to be `text/event-stream` which is rather generic, too :-/",
                "time": "2019-11-04 15:35:38",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5dc04d029c39821509e0dc26",
                "text": "@kschlesselmann, @bclozel would know better than I do, but have you tried returning a `ResponseEntity<Flux<ServerSentEvent<OtherRepresentationOfA>>>` so that you can control the `Content-Type` header of the response?",
                "time": "2019-11-04 16:08:34",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dc10e8f2a6494729c9dff13",
                "text": "@wilkinsona Nope, still `text/event-stream`. @bclozel Do you have any input on this?",
                "time": "2019-11-05 05:54:23",
                "index": 5,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 159,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba20f48d655361f762014db",
                "text": "@snicoll this one (took me a while to find )\n> @snicoll / @philwebb I expected `@EntityScan` to behave like `@ComponentScan` when used on an `@SpringBootApplication` class. When using `@ComponentScan` it is complementary to the component scanning in `@SpringBootApplication`. `@EntityScan` isn't complementary but replaces the base packages. Was it wrong of me to expect that? What would happen if (for some reason) there would be multiple `@Configuration` classes defining an `@EntityScan` would they all be used or would which ever is last remain?",
                "time": "2018-09-19 08:56:40",
                "index": 0,
                "user": "mdeinum"
            },
            {
                "id": "5ba21030f7e1580625f26e55",
                "text": "I am not sure I understand the question @mdeinum. Besides \u201cscan\u201d, I don\u2019t think you have a call for expecting this to behave exactly like component scan (the scope of the feature is quite different IMO)",
                "time": "2018-09-19 09:00:32",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ba211d3f7e1580625f279bf",
                "text": "@snicoll The main surprise was that when we have an `@SpringBootApplication` annotated class in `org.foo` and some entities in `org.foo.entities` those are automatically detected. Now when adding an `@EntityScan(\"org.bar.entities\")` on that class the entities in `org.foo.entities`aren't detected anymore. This was a bit of a surprise. So when using `@EntityScan` one should add `@EntityScan({\"org.bar.entities\", \"org.foo.entities\"})` to have everything detected. ",
                "time": "2018-09-19 09:07:31",
                "index": 6,
                "user": "mdeinum"
            },
            {
                "id": "5ba212bed655361f7620297b",
                "text": "@snicoll As far as I see when adding `@ComponentScan` it is complementary to the `@ComponentScan` on `@SpringBootApplication` it won't replace it. ",
                "time": "2018-09-19 09:11:26",
                "index": 13,
                "user": "mdeinum"
            },
            {
                "id": "5ba21355f4bd1056ac8578be",
                "text": "@snicoll If I add `@ComponentScan(\"org.bar\")` to an `@SpringBootApplication` annotated class in `org.foo` it will scan both packages and not only `org.bar`. ",
                "time": "2018-09-19 09:13:57",
                "index": 18,
                "user": "mdeinum"
            },
            {
                "id": "5ba213660cfe7f30f1b7b721",
                "text": "Weird",
                "time": "2018-09-19 09:14:14",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5ba2145f8909f71f75f74092",
                "text": "@mdeinum I\u2019ve just spent 5 min to write a sample for nothing :/ ",
                "time": "2018-09-19 09:18:23",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5ba214f7f4bd1056ac858333",
                "text": "@snicoll ? As in it doesn't work as I observed or it does? This was against Spring Boot 2.1 snapshots BTW, but I expect the same for 1.5 and 2.0 as well. ",
                "time": "2018-09-19 09:20:55",
                "index": 29,
                "user": "mdeinum"
            },
            {
                "id": "5ba21507b9531f2dfa8badbc",
                "text": "It works as I\u2019ve described",
                "time": "2018-09-19 09:21:11",
                "index": 30,
                "user": "snicoll"
            },
            {
                "id": "5ba2154bd655361f762038c1",
                "text": "Ok. Then I must have a result of something else... :s ",
                "time": "2018-09-19 09:22:19",
                "index": 31,
                "user": "mdeinum"
            },
            {
                "id": "5ba217e71ee2ca65023af362",
                "text": "@snicoll was thrown to the wrong track by an `@Bean` in the `@SpringBootApplication` class. \ud83e\udd26\u200d\u2642\ufe0f I must have been staring at the same code too long... ",
                "time": "2018-09-19 09:33:27",
                "index": 43,
                "user": "mdeinum"
            }
        ]
    },
    {
        "id": 160,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5e1356cc1c3a592052df897f",
                "text": "Is there any current plan for major Undertow upgrades (e.g. 3.x in a milestone and 4.x in Boot 2.4)?",
                "time": "2020-01-06 15:48:28",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5e1356d9c23234403cdb93db",
                "text": "Although looking now it seems \"A 3.0 final version should be released in the next few months\" didn't manage to happen.",
                "time": "2020-01-06 15:48:41",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e136d5155975518902fb598",
                "text": "@OrangeDog Nothing planned at the moment. Not only has 3.0 final not happened, there aren't any milestones or RCs yet either. 3.x is also a bit unusual in terms of backwards compatibility. In addition to 3.x containing breaking changes when compared to 2.x, there may also be breaking changes from one 3.x release to the next. For that reason, it's quite likely that we'll avoid it and wait for things to settle down. At that point, 4.0 will be released. It will provide API stability and will be more suited to use in Boot.",
                "time": "2020-01-06 17:24:33",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 161,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d077f9a6f0ec85ade22a415",
                "text": "How can I disable auto-configured `ElasticsearchRestHealthIndicator` in `spring-boot-actuator`?",
                "time": "2019-06-17 11:55:06",
                "index": 0,
                "user": "vy"
            },
            {
                "id": "5d078318a8d9871b32a242db",
                "text": "@vy you can exclude the `ElasticSearchRestHealthIndicatorAutoConfiguration` class, but there might be a better solution, or something we can improve in Spring Boot. Can you share why you don't want it to be enabled?",
                "time": "2019-06-17 12:10:00",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5d0783338e050f62aa334890",
                "text": "Excluding an auto-configuration: https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-auto-configuration.html#using-boot-disabling-specific-auto-configuration",
                "time": "2019-06-17 12:10:27",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5d078439325b465cc343e758",
                "text": "@bclozel I continuously poll database to read the most recent ES cluster configuration. There I receive a snapshot of the active ES clusters and update my ES client registry. I do have a custom `HealthIndicator` which works against this ES client registry. I don't want/need Spring to do magic for me while I am already doing a pretty complicated ES cluster config snapshot migration. ",
                "time": "2019-06-17 12:14:49",
                "index": 3,
                "user": "vy"
            },
            {
                "id": "5d078453950f1062a986a85f",
                "text": "@bclozel Spring's default config makes sense, it just doesn't play along with my custom setup.",
                "time": "2019-06-17 12:15:15",
                "index": 4,
                "user": "vy"
            },
            {
                "id": "5d0784c0950f1062a986ac41",
                "text": "@vy so you define a custom `RestClient` bean and you don't want it to be used for health checks?",
                "time": "2019-06-17 12:17:04",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5d07855b950f1062a986b0e8",
                "text": "if you're not defining any `RestClient` bean, nor using the one configured by Spring Boot, you should then disable `RestClientAutoConfiguration` (this will disable the health check as well)",
                "time": "2019-06-17 12:19:39",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5d078846d100e447fc2e09d4",
                "text": "@bclozel Thanks so much!",
                "time": "2019-06-17 12:32:06",
                "index": 7,
                "user": "vy"
            }
        ]
    },
    {
        "id": 162,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d1b6b362e3f4317635b290f",
                "text": "which is the best ide for  spring boot application devolopment?",
                "time": "2019-07-02 14:33:26",
                "index": 0,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5d1b6b5c5ce02535b00ae768",
                "text": "***Free******",
                "time": "2019-07-02 14:34:04",
                "index": 1,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5d1b70e7f0f22f6645fe992e",
                "text": "I'd still suggest Intellij Idea even if the community edition does not have the extra spring support",
                "time": "2019-07-02 14:57:43",
                "index": 2,
                "user": "leonard84"
            },
            {
                "id": "5d1b7130b8926b674fcac554",
                "text": "otherwise check out STS https://spring.io/tools",
                "time": "2019-07-02 14:58:56",
                "index": 3,
                "user": "leonard84"
            },
            {
                "id": "5d1b7163dd5b167204dcf452",
                "text": "The Apache Netbeans is worth looking at.",
                "time": "2019-07-02 14:59:47",
                "index": 4,
                "user": "cjeight"
            }
        ]
    },
    {
        "id": 163,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5beef9af534b2745c486181b",
                "text": "Hi all -- ist this the place to ask questions when I have problems migrating to spring-boot 2.1.0?  Sorry  for asking. First-time gitter user here :p",
                "time": "2018-11-16 17:09:03",
                "index": 0,
                "user": "seletz"
            },
            {
                "id": "5beef9bb6183a977eec8d036",
                "text": "@seletz Yep, you're in the right place",
                "time": "2018-11-16 17:09:15",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5beefb0cde42d46bba750546",
                "text": "Cool.  Ok then.  I have a 1.5.3 project which works there -- now I try to migrate to 2.1.0.  I get  errors while spring boot is trying to start my application.  It complains about  not finding \n `org/springframework/boot/autoconfigure/web/AbstractErrorController.class` with a `BeanDefinitionStoreException`.  I seem unable to pinpoint this -- I even stripped down everything to a bare minimum. ",
                "time": "2018-11-16 17:14:52",
                "index": 3,
                "user": "seletz"
            },
            {
                "id": "5beefb5ab86c70503f3f3d39",
                "text": "The stack trace is here https://pastebin.com/LfEeJBaR",
                "time": "2018-11-16 17:16:10",
                "index": 4,
                "user": "seletz"
            },
            {
                "id": "5beefb9d4720c11e0e782db5",
                "text": "@seletz Does `Mail2ConfluenceApplication` compiles with Spring Boot 2.1?",
                "time": "2018-11-16 17:17:17",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5beefbaaddad8777ef743da2",
                "text": "@snicoll yes",
                "time": "2018-11-16 17:17:30",
                "index": 7,
                "user": "seletz"
            },
            {
                "id": "5beefbb980e46b4266c00b0e",
                "text": "If you have stripped down everything to a bare minimum, please share the project. It will be way faster for us to figure things out than guessing based on the stacktrace",
                "time": "2018-11-16 17:17:45",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5beefbc26183a977eec8dedc",
                "text": "Looks like you have something from Boot 1.5 still on the classpath. `AbstractErrorController` changed packages in 2.0.",
                "time": "2018-11-16 17:17:54",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5beefbcbde42d46bba750ad7",
                "text": "That\u2019s what I was trying to get at",
                "time": "2018-11-16 17:18:03",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5beefbe2ddad8777ef743f89",
                "text": "Try `mvn dependency:list -Dsort` to see if you don\u2019t have mixed versions on the classpath",
                "time": "2018-11-16 17:18:26",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5beefc496183a977eec8e3a7",
                "text": "Ok, let me check.",
                "time": "2018-11-16 17:20:09",
                "index": 12,
                "user": "seletz"
            },
            {
                "id": "5beefd4b1ad4155d3ad50c18",
                "text": "I only see spring boot 2.1.0.RELEASE and spring 5.1.1.RELEASE, some newer.  spring security oauth is 2.0.13.RELEASE",
                "time": "2018-11-16 17:24:27",
                "index": 13,
                "user": "seletz"
            },
            {
                "id": "5beefd859f5a9e6e41f6094e",
                "text": "I'll try to come up with an example on github",
                "time": "2018-11-16 17:25:25",
                "index": 14,
                "user": "seletz"
            },
            {
                "id": "5beefd915f5c92504069f29d",
                "text": "Thanks that should be more effective",
                "time": "2018-11-16 17:25:37",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5beefdd6a47c6c5d3bf6dcfa",
                "text": "Sure -- I try to use atlassian connect with spring boot 2.1.0 -- most likely that's the culprit.",
                "time": "2018-11-16 17:26:46",
                "index": 16,
                "user": "seletz"
            },
            {
                "id": "5beefe1880652945c37144a3",
                "text": "Funny enough, I had it running on 2.1.0 -- copied stuff, made new project etc -- but after a mvn clean it stopped working again.  ",
                "time": "2018-11-16 17:27:52",
                "index": 17,
                "user": "seletz"
            },
            {
                "id": "5beefe326183a977eec8f1d0",
                "text": "I'll strip down and post code.",
                "time": "2018-11-16 17:28:18",
                "index": 18,
                "user": "seletz"
            },
            {
                "id": "5beefe6c061f2e6bbb79fabb",
                "text": "@seletz It looks like Atlassian Connect may well be the problem. It doesn't even support 2.0 yet, let alone 2.1: https://ecosystem.atlassian.net/browse/ACSPRING-70",
                "time": "2018-11-16 17:29:16",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5beefec6b86c70503f3f572e",
                "text": "*bonk* Ok -- should have looked more closely.  *blush*",
                "time": "2018-11-16 17:30:46",
                "index": 20,
                "user": "seletz"
            },
            {
                "id": "5beeffa31ad4155d3ad51c40",
                "text": "Hmm, that fork for 2.0.0.M6 looks not too bad.  Maybe I can get it running.  @wilkinsona @snicoll  Thanks and sorry for the noise :)",
                "time": "2018-11-16 17:34:27",
                "index": 21,
                "user": "seletz"
            }
        ]
    },
    {
        "id": 164,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bffeb21f59704348e21eb58",
                "text": "Hello,\nis there a way to reuse `RouterFunction`?\nI find it very convenient way for endpoint generation use case. \n\nas an alternative I could build my own API similar to `RouterFunction`\nand just register endpoints manually\n\nbut as for now I am looking if I could reuse existing",
                "time": "2018-11-29 13:35:29",
                "index": 0,
                "user": "Yneth"
            },
            {
                "id": "5bffec21f048fa10514077e3",
                "text": "@Yneth what do you mean bu \"reuse\"?",
                "time": "2018-11-29 13:39:45",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5bffed59ced7003fe1a466d6",
                "text": "@bclozel \nby word \"reuse\" I mean use it for non reactive application without bothering of  any flux or mono stuff",
                "time": "2018-11-29 13:44:56",
                "index": 5,
                "user": "Yneth"
            },
            {
                "id": "5bffee46a115c91ef7aff2cf",
                "text": "you mean in a Spring MVC application?",
                "time": "2018-11-29 13:48:54",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5bffee89b6c0701052a7d328",
                "text": "@bclozel yes",
                "time": "2018-11-29 13:50:01",
                "index": 7,
                "user": "Yneth"
            },
            {
                "id": "5bffeeb6f849b222e0c1a182",
                "text": "not currently possible, as it's not based on the Servlet contract and fully non-blocking",
                "time": "2018-11-29 13:50:46",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5bffeeebcfa682348da2cce5",
                "text": "I think someone from the Spring Framework team experimented with a similar functional API for Spring MVC; nothing concrete yet",
                "time": "2018-11-29 13:51:39",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5bfff06bed6bcf1ef87c17a5",
                "text": "@bclozel thanks for the answer",
                "time": "2018-11-29 13:58:03",
                "index": 10,
                "user": "Yneth"
            }
        ]
    },
    {
        "id": 165,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ca1d13725686a7dc3b77502",
                "text": "Hey all. Recently we migrated an app from Zuul to Cloud Gateway and whilst that is working just fine, we noticed that our app started to have problems starting. After some research we found out that binding a large yaml structure (>7500 lines) takes a very long time, upwards of 60s on a local machine. This is below 10s with Spring Boot 1.5.19. Since SB 2.0 this takes more than 60s and still does in SB 2.1. Parsing the yaml with Jackson's ObjectMapper only takes 1/4s. Any thoughts about this?",
                "time": "2019-04-01 08:52:07",
                "index": 0,
                "user": "martinvisser"
            },
            {
                "id": "5ca1d1a1bd70a40d5fd7b7b0",
                "text": "Thanks for the feedback @martinvisser, we\u2019ve improved that significantely with `2.2`. Can you please give `2.2.0.BUILD-SNAPSHOT` a try and report here?",
                "time": "2019-04-01 08:53:53",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ca1d1d23ebbdc55b340dd1c",
                "text": "Ok, I'll try and come back to you @snicoll ",
                "time": "2019-04-01 08:54:42",
                "index": 2,
                "user": "martinvisser"
            },
            {
                "id": "5ca1dcc3016a930a454371f2",
                "text": "@snicoll on my stripped down version that only loads that yaml file it's indeed a lot faster (all cold starts), but still not as fast as with `1.5.19.RELEASE`. SB `1.5.19.RELEASE`: 10s, SB `2.0.8.RELEASE`: 65s, SB `2.1.3.RELEASE`: 68s, SB `2.2.0-BUILD-SNAPSHOT`: 23s",
                "time": "2019-04-01 09:41:23",
                "index": 3,
                "user": "martinvisser"
            },
            {
                "id": "5ca1dce5016a930a454373b0",
                "text": "I'm unable to test in the full app with the snapshot, because there are incompatibilities with Spring Cloud Greenwich",
                "time": "2019-04-01 09:41:57",
                "index": 4,
                "user": "martinvisser"
            },
            {
                "id": "5ca1e9c2a0790b29c941d87c",
                "text": "@martinvisser If you can share the YAML and the `@ConfigurationProperties` classes to which it binds, we can take another look. FWIW, if I were you, I'd be looking to dramatically reduce that 7500 lines of YAML, irrespective of the effect on startup time.",
                "time": "2019-04-01 10:36:50",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5ca1f015016a930a4543f727",
                "text": "@wilkinsona The configuration is generated out of a lot of small files, which will only grow in the future. We've already changed it so the configuration isn't actually loaded through `@ConfigurationProperties` anymore to speed things up. What's the easiest way to share the files?",
                "time": "2019-04-01 11:03:49",
                "index": 6,
                "user": "martinvisser"
            },
            {
                "id": "5ca1f43b8148e555b22d88a8",
                "text": "I put them on Github: https://github.com/martinvisser/config-properties-example",
                "time": "2019-04-01 11:21:31",
                "index": 7,
                "user": "martinvisser"
            },
            {
                "id": "5ca209fef851ee043d42d35e",
                "text": "@martinvisser Thanks",
                "time": "2019-04-01 12:54:22",
                "index": 15,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 166,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bc608af435c2a518eb7f336",
                "text": "One question: Is it possible to use a `BeanPostProcessor` on top of the `AsyncConfigurer` in order to proxy it?\n\nWith ...\n\n```\n@Configuration\n@ConditionalOnBean(AsyncConfigurer.class)\npublic class CustomAsyncConfigurerAutoConfiguration implements BeanPostProcessor {\n\n...\n\n@Override\npublic Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\n  if (bean instanceof AsyncConfigurer) {\n    ...\n    return ...\n```\n\n... the Bean ...\n\n```\n@Bean\npublic AsyncConfigurerSupport asyncConfigurerSupport() {\n  return new AsyncConfigurerSupport() {\n    ...\n```\n\n... does not get procssed before `setConfigurer` gets called within ...\n\n```\n@Configuration\npublic abstract class AbstractAsyncConfiguration implements ImportAware {\n\n  ...\n\n  @Autowired(required = false)\n  void setConfigurers(Collection<AsyncConfigurer> configurers) {\n```\n\n=> Therefore I was not able to proxy the bean. What am I doing wrong?\n",
                "time": "2018-10-16 15:50:07",
                "index": 0,
                "user": "judomu"
            },
            {
                "id": "5bc60c89ae7be9401668b88a",
                "text": "Proxy the configurer? That\u2019s not going to happen I am afraid, this is an infrastructure bean that \u2019s processed very early on. What are you trying to do?",
                "time": "2018-10-16 16:06:33",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bc6102b435c2a518eb82dae",
                "text": "I wanted to integrate OpenTracing by using the instrumentation starters: https://github.com/opentracing-contrib/java-spring-cloud/blob/master/instrument-starters/opentracing-spring-cloud-core/src/main/java/io/opentracing/contrib/spring/cloud/async/CustomAsyncConfigurerAutoConfiguration.java",
                "time": "2018-10-16 16:22:03",
                "index": 2,
                "user": "judomu"
            },
            {
                "id": "5bc61092435c2a518eb82fed",
                "text": "So that won't work in general :) ?",
                "time": "2018-10-16 16:23:46",
                "index": 3,
                "user": "judomu"
            },
            {
                "id": "5bc610afc7bf7c36621f914e",
                "text": "The idea is to proxy the taskexecutor",
                "time": "2018-10-16 16:24:15",
                "index": 4,
                "user": "judomu"
            }
        ]
    },
    {
        "id": 167,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c4efaf7454aad4df7b64917",
                "text": "Hi! Is there a way to specify a base path for a spring boot application? I need to make spring cloud config server listening requests on /config/{rest of the request}. Thanks in advance",
                "time": "2019-01-28 12:52:07",
                "index": 0,
                "user": "iferca"
            },
            {
                "id": "5c4f0d351b62f1265062096d",
                "text": "@iferca `server.servlet.context-path=/config` ?",
                "time": "2019-01-28 14:09:57",
                "index": 1,
                "user": "ask4gilles"
            },
            {
                "id": "5c4f12caf46373406a141fce",
                "text": "Oh! thank @ask4gilles forgot that one! :ok: ",
                "time": "2019-01-28 14:33:46",
                "index": 2,
                "user": "iferca"
            }
        ]
    },
    {
        "id": 168,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c960a303dd81711493a2b49",
                "text": "When using Spring Boot caching together with Caffeine, how should I set an max entries per cache?",
                "time": "2019-03-23 10:28:00",
                "index": 0,
                "user": "marceloverdijk"
            },
            {
                "id": "5c960a4b81b15c5e4b72071a",
                "text": "I looked at `CacheManagerCustomizer` but with the `CaffeineCacheManager` I cannot add a cache manually, right?",
                "time": "2019-03-23 10:28:27",
                "index": 1,
                "user": "marceloverdijk"
            },
            {
                "id": "5c960a6852c7a91455e0c8f7",
                "text": "with couchbase this seems possible like: https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-caching-provider-couchbase",
                "time": "2019-03-23 10:28:56",
                "index": 2,
                "user": "marceloverdijk"
            },
            {
                "id": "5c98865a8126720abc3caf49",
                "text": "@marceloverdijk answered many times on SO. You can create individual caches as beans and we\u2019ll pick that up. ",
                "time": "2019-03-25 07:42:18",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5c98894fd0133e21e50fa44b",
                "text": "@snicoll does Boot provide something to easily create multiple beans from a \"list\" in a configuration file, e.g.:",
                "time": "2019-03-25 07:54:55",
                "index": 11,
                "user": "marceloverdijk"
            },
            {
                "id": "5c9889758126720abc3cc432",
                "text": "```\ncaches:\n  cache1:\n    prop1: foo\n    prop2: bar\n  cache2:\n    ..\n```\nthis would than automatically create 2 caches which are than picked up by Boot automatically as you mentioned\n",
                "time": "2019-03-25 07:55:33",
                "index": 12,
                "user": "marceloverdijk"
            },
            {
                "id": "5c98897f0d719050575ffa20",
                "text": "functional bean registration does that but you don\u2019t need to do that really",
                "time": "2019-03-25 07:55:43",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5c98899bdfc69a1454efacee",
                "text": "I really don\u2019t understand what the problem is. Just loop over your data structure create cache instances and return a `SimpleCacheManager` that wraps them",
                "time": "2019-03-25 07:56:11",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5c9889e22fb6800d8078fea4",
                "text": "I would e.g. create a `ConfigrationProperties` class containing `prop1` and `prop2`",
                "time": "2019-03-25 07:57:22",
                "index": 15,
                "user": "marceloverdijk"
            },
            {
                "id": "5c9889ec5547f774486019e9",
                "text": "You don\u2019t need to do that",
                "time": "2019-03-25 07:57:32",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c9889f30d7190505760009a",
                "text": "ok :-)",
                "time": "2019-03-25 07:57:39",
                "index": 17,
                "user": "marceloverdijk"
            },
            {
                "id": "5c9889fd0d719050576000ba",
                "text": "I mean you know that stuff right?",
                "time": "2019-03-25 07:57:49",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5c988a13d0133e21e50fa8d9",
                "text": "You have a configpros that has a `Map<String, CacheConfig> caches` field",
                "time": "2019-03-25 07:58:11",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5c988a1849fdaa0d8110a13f",
                "text": "you just inject that and process it",
                "time": "2019-03-25 07:58:16",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5c988a2f5547f77448601b45",
                "text": "ah yes, I can use a map off course...",
                "time": "2019-03-25 07:58:39",
                "index": 21,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988a330d719050576002ed",
                "text": "Why would you want one config props object per cache, you\u2019ll end up with multiple beans of the same type in the context",
                "time": "2019-03-25 07:58:43",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5c988a3c2fb6800d8079010a",
                "text": "There\u2019s no point of creating such beans",
                "time": "2019-03-25 07:58:52",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5c988a75f3dbbd230cb2b0f2",
                "text": "but if I Inject such a map, containing the all configs, how can I create a bean per cache?",
                "time": "2019-03-25 07:59:49",
                "index": 24,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988a7c5547f77448601dcf",
                "text": "You don\u2019t !",
                "time": "2019-03-25 07:59:56",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5c988a8cfcaf7b5f730ef158",
                "text": "> I really don\u2019t understand what the problem is. Just loop over your data structure create cache instances and return a `SimpleCacheManager` that wraps them",
                "time": "2019-03-25 08:00:12",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5c988a9281b15c5e4b81dcb4",
                "text": "I some place I need to get such a cache instance",
                "time": "2019-03-25 08:00:18",
                "index": 27,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988aa23dd817114949c943",
                "text": "as I need to pass it to a 3th party lib",
                "time": "2019-03-25 08:00:34",
                "index": 28,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988aa381b15c5e4b81dcd6",
                "text": "Seriously? Ask the cache manager, that\u2019s its job",
                "time": "2019-03-25 08:00:35",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5c988ae98126720abc3cccb0",
                "text": "ok, but I don't think I will get a typed cache that way, or do I? ",
                "time": "2019-03-25 08:01:45",
                "index": 30,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988b022fb6800d8079076d",
                "text": "I mean I need to end up getting a Caffeine Cache<String, SomeType> to pass to the 3th party lib",
                "time": "2019-03-25 08:02:10",
                "index": 31,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988b0349fdaa0d8110a7e4",
                "text": "You\u2019ll get whatever you\u2019ve passed to to the cache manager",
                "time": "2019-03-25 08:02:11",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5c988b0d8126720abc3ccd77",
                "text": "You can\u2019t pass that to the `CaffeineCacheManager` either",
                "time": "2019-03-25 08:02:21",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5c988b51d0133e21e50fb1e1",
                "text": "that's why I was thinking of creating bean instances.... create the typed caffeine cache, wrap in a spring cache (which is not typed)",
                "time": "2019-03-25 08:03:29",
                "index": 34,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988b6049fdaa0d8110aa73",
                "text": "ok",
                "time": "2019-03-25 08:03:44",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5c988b64f3dbbd230cb2b88f",
                "text": "which is then picked up by the `SimpleCacheManager`",
                "time": "2019-03-25 08:03:48",
                "index": 36,
                "user": "marceloverdijk"
            },
            {
                "id": "5c988ce149fdaa0d8110b4ed",
                "text": "so that's what I'm trying to solve...",
                "time": "2019-03-25 08:10:09",
                "index": 37,
                "user": "marceloverdijk"
            }
        ]
    },
    {
        "id": 169,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be53a0f2138723405db5bd7",
                "text": "hi,\nwe're using spring boot with embedded artemis mq / jms and are relying on few things:\n- spring managing lifecycle of artemis server\n- persistent support\n- transactional support (in terms of that we have a clean retry and dead letter mechanisms)\nSince JMS doesn't fit into springs reactive story I was wondering is there some other kind of Spring / Spring Boot support related to this? Using artemis mq outside JMS? \nI've also seen that rabbit mq is quite supported but haven't been able to find in documentation whether there's Spring Boot support for the 3 key things mentioned above?",
                "time": "2018-11-09 07:41:03",
                "index": 0,
                "user": "lpandzic"
            },
            {
                "id": "5be53a44bb06d73a994731e9",
                "text": "What is the link between that and reactive exactly?",
                "time": "2018-11-09 07:41:55",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5be53b2bd001b9172030e732",
                "text": "AFAIK there's no reactive version of JMSTemplate and @JmsListeners don't support reactive return types",
                "time": "2018-11-09 07:45:47",
                "index": 2,
                "user": "lpandzic"
            },
            {
                "id": "5be53b3e6b9822140d010f6c",
                "text": "is this correct?",
                "time": "2018-11-09 07:46:06",
                "index": 3,
                "user": "lpandzic"
            },
            {
                "id": "5be53b4792b7d117215f0925",
                "text": "JMS is a blocking API. I still don\u2019t get how it\u2019s related to ther rest",
                "time": "2018-11-09 07:46:15",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5be53b534e7ca14520797fd7",
                "text": "Are you asking for a messaging solution that supports reactive?",
                "time": "2018-11-09 07:46:27",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5be53b67c0e6da07fefa2f64",
                "text": "basically we need a persistent queue, that's all we need, current legacy setup is with artemis mq / jms and I'm looking for a way to replace it if it'll scale better",
                "time": "2018-11-09 07:46:47",
                "index": 6,
                "user": "lpandzic"
            },
            {
                "id": "5be53b71f1b87534049a528b",
                "text": "yes",
                "time": "2018-11-09 07:46:57",
                "index": 7,
                "user": "lpandzic"
            },
            {
                "id": "5be53b8b3102f1452172e922",
                "text": "Not sure how that\u2019s related to Spring Boot. But JMS isn\u2019t  a good candidate atm for sure",
                "time": "2018-11-09 07:47:23",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5be53bd9f1b87534049a555b",
                "text": "Ok, so embedded artemis / JMS story with features I've mentioned before is well supported by Spring Boot, you don't have to much outside of adding a few dependencies and adding configuration",
                "time": "2018-11-09 07:48:41",
                "index": 9,
                "user": "lpandzic"
            },
            {
                "id": "5be53bee7a36913a9a14b711",
                "text": "I'd like something similar that also supports reactive approach",
                "time": "2018-11-09 07:49:02",
                "index": 10,
                "user": "lpandzic"
            },
            {
                "id": "5be53bf062866f74736f0c42",
                "text": "Why wouldn\u2019t you want to embed the broker in your application? That\u2019s really not recommended at all for production",
                "time": "2018-11-09 07:49:04",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5be53c2192b7d117215f0ee6",
                "text": "I'm not sure I understand, you mean embedding a broker isn't recommended for production?",
                "time": "2018-11-09 07:49:53",
                "index": 12,
                "user": "lpandzic"
            },
            {
                "id": "5be53c2c6b9822140d0113b9",
                "text": "Yes",
                "time": "2018-11-09 07:50:04",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5be53c35e8add80e63c4b9ce",
                "text": "is that stated somewhere in the documentation?",
                "time": "2018-11-09 07:50:13",
                "index": 14,
                "user": "lpandzic"
            },
            {
                "id": "5be53c427a36913a9a14b937",
                "text": "I guess Artemis should state that in their doc",
                "time": "2018-11-09 07:50:26",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5be53c5c9600d10e6480644c",
                "text": "I mean it\u2019s like embedding a database in your app. If you have serious traffic you wouldn\u2019t do that.",
                "time": "2018-11-09 07:50:52",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5be53c7a7a36913a9a14bb40",
                "text": "the basic idea is scalability, many microservice instances, each with it's own local queue",
                "time": "2018-11-09 07:51:22",
                "index": 17,
                "user": "lpandzic"
            },
            {
                "id": "5be53cbf9600d10e648067c3",
                "text": "data sharing isn't as important as scalability for our use case",
                "time": "2018-11-09 07:52:31",
                "index": 18,
                "user": "lpandzic"
            },
            {
                "id": "5be53ceebb06d73a99473fdb",
                "text": "Still, you would rather have a c,lustered artemis running and the multiple clients than having artemis servers cluttered around everywhere",
                "time": "2018-11-09 07:53:18",
                "index": 19,
                "user": "pcornelissen"
            },
            {
                "id": "5be53cf77326df140eda14b8",
                "text": "I'd say it depends on the use case and architecture but I understand your concern",
                "time": "2018-11-09 07:53:27",
                "index": 20,
                "user": "lpandzic"
            },
            {
                "id": "5be53d1cd001b9172030f198",
                "text": "getting back to the question, is there anything similar available?",
                "time": "2018-11-09 07:54:04",
                "index": 21,
                "user": "lpandzic"
            },
            {
                "id": "5be53d2c3102f1452172f3df",
                "text": "What Patrick says. And the fact you mentioned transaction and embeding is puzzeling me a bit as the lifecycle of the broker matches the one of the application",
                "time": "2018-11-09 07:54:20",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5be53d567326df140eda17a0",
                "text": "I am not aware of anything you could embed with a reactive API.",
                "time": "2018-11-09 07:55:02",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5be53d759600d10e64806bb0",
                "text": "transactions aren't important in our use case in traditional sense, only in a local message retry mechanisms sense, if some other API is available we'd adapt to that, no problem",
                "time": "2018-11-09 07:55:33",
                "index": 24,
                "user": "lpandzic"
            },
            {
                "id": "5be53d9592b7d117215f1888",
                "text": "and by retry I mean local retry, not global one, we have that story covered",
                "time": "2018-11-09 07:56:05",
                "index": 25,
                "user": "lpandzic"
            },
            {
                "id": "5be53da6e8add80e63c4c2a0",
                "text": "> I am not aware of anything you could embed with a reactive API.\n\nok, thanks",
                "time": "2018-11-09 07:56:22",
                "index": 26,
                "user": "lpandzic"
            },
            {
                "id": "5be53e017326df140eda1c38",
                "text": "I have a strong suspicion, that you might use messaging in a sub-optimal way, are you sure that the way you're doing it is better than the traditional way with dedicated messaging server (clustered) and clients just handle the appropriate messages?",
                "time": "2018-11-09 07:57:53",
                "index": 27,
                "user": "pcornelissen"
            },
            {
                "id": "5be53e84c0e6da07fefa4237",
                "text": "it's easier to have one instance brought down and bringing it back up than managing a cluster in a multi datacenter environment, and since we don't need distributed transactions or having data available everywhere this proved to be a more maintainable and scalable approach\nfor example:\nyou need to upgrade broker version, you just do it on one instance and see how it behaves and can easily revert\nyou don't need devops dedicated to maintaining the cluster\netc",
                "time": "2018-11-09 08:00:04",
                "index": 28,
                "user": "lpandzic"
            }
        ]
    },
    {
        "id": 170,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ecd30902c49c45f5aa271e3",
                "text": "Hi, I am new to Spring boot,\nI got below exception \n>org.postgresql.util.PSQLException: The column name equipment_id was not found in this ResultSet.\n\nBut I have equipment_id column in database",
                "time": "2020-05-26 15:06:56",
                "index": 0,
                "user": "anilkumble"
            },
            {
                "id": "5ecd30f62c49c45f5aa274f8",
                "text": "I am getting exception while executing native query,\n>@Query(value = \"Select e from user_equipments e\", nativeQuery = true)\n    public List<Equipment> getEquipments();\n\nfindAll() method works fine",
                "time": "2020-05-26 15:08:38",
                "index": 1,
                "user": "anilkumble"
            },
            {
                "id": "5ecdcce94c9b0f060d27207c",
                "text": "@anilkumble , it's a spring-data-jpa issue, not a spring-boot issue. In my opinion, your query is a many-to-many relation between user and equipment, you can resolve this issue by two steps below: first, check the table 'user_equipments' to make sure it has right foreign-key; second, try to check the exact sql which is used by spring-data-jpa,  check if it has the column 'equipment_id', if the sql does't contain column 'equipment_id', maybe you should change your query in annotation.",
                "time": "2020-05-27 02:14:01",
                "index": 5,
                "user": "nkjackzhang"
            }
        ]
    },
    {
        "id": 171,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5edf48ddef5c1c28f00ff8ea",
                "text": "hi all! I had some issues with a test that used `TestRestTemplate` where I used a `RestTemplateBuilder` to customize it (applying basic auth for the test). I noticed however that this somehow resulted in other default settings not being applied (in my case a `LocalDate` was no longer serialized as a String but as an array of three components). Is this the result of something I did wrong or is this expected? If the latter,  then the docs are a bit confusing because I understood them as if the builder customizations are on-top.",
                "time": "2020-06-09 08:31:25",
                "index": 0,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5edf494229d8bc28f9e5475f",
                "text": "Once I applied the basic auth per-call within the test and used just the default `@Autowired` `TestRestTemplate` everything ran as expected again.",
                "time": "2020-06-09 08:33:06",
                "index": 1,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5edf49aa1e099b0388b55782",
                "text": "When using the RestTemplateBuilder did you instantiate a new one or inject the bean?",
                "time": "2020-06-09 08:34:50",
                "index": 2,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5edf4a60a85de3039400d8d5",
                "text": "create a new one, like shown here: https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-testing.html#boot-features-rest-templates-test-utility",
                "time": "2020-06-09 08:37:52",
                "index": 3,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5edf4a8f29d8bc28f9e54a56",
                "text": "or rather https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-test-utilities",
                "time": "2020-06-09 08:38:39",
                "index": 4,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5edf4a94ee693d6eb3b22919",
                "text": "same example, though",
                "time": "2020-06-09 08:38:44",
                "index": 5,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5edf68c4035dfa12610c61e5",
                "text": "Can you use the injected one instead as that will be auto configured by spring boot and as a result will contain some defaults that went be there if you instantiate a new one?",
                "time": "2020-06-09 10:47:32",
                "index": 6,
                "user": "michaelmcfadyen"
            }
        ]
    },
    {
        "id": 172,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d2f6612eab6cd77638760c8",
                "text": "Hello. I recently tried to upgrade spring boot from 1.5 to 2.0.9RELEASE and the webservice is choking with this error while trying to create the bean `annotationActionEndpointMapping`",
                "time": "2019-07-17 18:16:50",
                "index": 0,
                "user": "drs3114"
            },
            {
                "id": "5d2f661ed14e297762ec4ab1",
                "text": "",
                "time": "2019-07-17 18:17:02",
                "index": 1,
                "user": "drs3114"
            },
            {
                "id": "5d2f6685f4fe943971268ec2",
                "text": "This is the error stack I am seeing\n```\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping]: Factory method 'annotationActionEndpointMapping' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class org.springframework.ws.soap.addressing.version.Addressing200408\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)\n\t... 49 more\nCaused by: java.lang.NoClassDefFoundError: Could not initialize class org.springframework.ws.soap.addressing.version.Addressing200408\n\tat org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping.initDefaultStrategies(AbstractAddressingEndpointMapping.java:107)\n\tat org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping.<init>(AbstractAddressingEndpointMapping.java:98)\n\tat org.springframework.ws.soap.addressing.server.AbstractActionEndpointMapping.<init>(AbstractActionEndpointMapping.java:38)\n\tat org.springframework.ws.soap.addressing.server.AbstractActionMethodEndpointMapping.<init>(AbstractActionMethodEndpointMapping.java:34)\n\tat org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping.<init>(AnnotationActionEndpointMapping.java:60)\n\tat org.springframework.ws.config.annotation.WsConfigurationSupport.annotationActionEndpointMapping(WsConfigurationSupport.java:120)\n\tat org.springframework.ws.config.annotation\n```\n",
                "time": "2019-07-17 18:18:45",
                "index": 2,
                "user": "drs3114"
            },
            {
                "id": "5d2f669f7dbfff3242c6a3cf",
                "text": "Any help with this is appreciated ",
                "time": "2019-07-17 18:19:11",
                "index": 3,
                "user": "drs3114"
            },
            {
                "id": "5d3008ec5fa7895c431fee0a",
                "text": "@drs3114 What does your pom.xml or build.gradle look like? I'm interested in the versions of your dependencies.",
                "time": "2019-07-18 05:51:40",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5d30aa62f4fe9439712f783a",
                "text": "@wilkinsona I have the projects split up as different modules and they have their own gradle files. ANd modules depend on each other.",
                "time": "2019-07-18 17:20:34",
                "index": 20,
                "user": "drs3114"
            },
            {
                "id": "5d30aad0b74a8716e27818bf",
                "text": "The main app gradle file looks like:\n```\napply plugin: 'jacoco'\napply plugin: 'java'\napply plugin: 'maven-publish'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\napply from: \"${rootDir}/gradle/docker.gradle\"\napply from: \"${rootDir}/gradle/docker-utils.gradle\"\napply from: \"${rootDir}/gradle/findbugs.gradle\"\napply from: \"${rootDir}/gradle/integration-test.gradle\"\napply from: \"${rootDir}/gradle/openshift.gradle\"\napply from: \"${rootDir}/gradle/pmd.gradle\"\napply from: \"${rootDir}/gradle/swagger.gradle\"\napply from: \"${rootDir}/gradle/xldeploy.gradle\"\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\nrepositories {\n\tmaven { url 'http://{REPO_BASE_URL}:8081/artifactory/internal-artifacts' }\n}\n\ndependencies {\n    //TODO: Remove before final commit\n\truntime(\"org.springframework.boot:spring-boot-properties-migrator\")\n\n    compile project(':model')\n\tcompile project(':svc-util')\n\tcompile(\"com.google.code.findbugs:annotations:${findbugsVersion}\")\n    compile(\"com.hynnet:oracle-driver-ojdbc:${oracleJdbcVersion}\")\n    compile('org.springframework.boot:spring-boot-starter-actuator')\n\tcompile('org.springframework.boot:spring-boot-starter-data-jpa')\n\tcompile('org.springframework.boot:spring-boot-starter-web')\n\tcompile(\"org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}\")\n\tcompile(\"org.apache.logging.log4j:log4j-web:${log4jVersion}\")\n\tcompile(\"org.apache.logging.log4j:log4j-1.2-api\")\n\n\tcompile(\"org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}\")\n\tcompile(\"org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard:${hystrixVersion}\")\n\n\tcompile(\"com.fasterxml.jackson.core:jackson-core\")\n\tcompile(\"com.fasterxml.jackson.dataformat:jackson-dataformat-xml\")\n\n\tcompile(\"com.sun.jersey:jersey-client:${jerseyClientVersion}\")\n\tcompile(\"javax.ws.rs:jsr311-api:${jsr311Version}\")\n\n\tcompile(\"org.freemarker:freemarker:${freeMarkerVersion}\")\n\n\tcompile(\"com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:${owaspVersion}\")\n\n\n    //DTO Mapping\n    compile(\"org.modelmapper:modelmapper:1.1.0\")\n\n\ttestCompile project(path: \":svc-util\", configuration: 'testArtifacts')\n\ttestCompile('org.springframework.boot:spring-boot-starter-test')\n\ttestCompile(\"uk.org.lidalia:slf4j-test:${slf4jTestVersion}\")\n\t//TODO comment changes for upgrade\n\ttestCompile(\"org.apache.logging.log4j:log4j-1.2-api\")\n\tintegrationTestCompile(\"org.mock-server:mockserver-netty:${mockserverVersion}\")\n\tintegrationTestCompile project(':sdk')\n}\n// Exclude the actual logging backend at test time so our test backend will take priority\nconfigurations.getByName('compile').exclude(group: 'ch.qos.logback', module: 'logback-classic')\nconfigurations.getByName('compile').exclude(group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j')\nconfigurations.getByName('testCompile').exclude(group: 'ch.qos.logback', module: 'logback-classic')\nconfigurations.getByName('testCompile').exclude(group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl')\n//configurations.getByName('testCompile').exclude(group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j')\n\nprocessResources {\n\tdef branch, commit, dirty\n\tdoFirst {\n\t\tbranch = ['git', 'rev-parse', '--abbrev-ref', 'HEAD'].execute().text.trim()\n\t\tcommit = ['git', 'rev-parse', 'HEAD'].execute().text.take(6)\n\t\tdirty = ['git', 'status', '--porcelain'].execute().text.trim().isEmpty() ? '' : ' dirty'\n\t}\n\tfilesMatching('**/*') {\n\t\tfilter {\n\t\t\tit.replace('%APP_VERSION_TOKEN%', version)\n\t\t\t\t.replace('%GIT_BRANCH_TOKEN%', branch)\n\t\t\t\t.replace('%GIT_COMMIT_TOKEN%', commit)\n\t\t\t\t.replace('%GIT_DIRTY_TOKEN%', dirty)\n\t\t}\n\t}\n}\n\nbootRun {\n\tdoFirst {\n\t\tclasspath = files(\"$buildDir/classes/java/main\", \"$buildDir/resources/main\", classpathJar.archivePath)\n\t}\n\n\tsystemProperties = [ 'spring.config.location' : \"file:src/main/config/runtime/local/app/\",\n\t\t\t\t\t\t 'logging.config' : \"file:src/main/config/runtime/local/app/log4j2.json\",\n\t\t\t\t\t\t 'LOG_PATH' : 'C:/logs' ]\n}\n```",
                "time": "2019-07-18 17:22:24",
                "index": 21,
                "user": "drs3114"
            },
            {
                "id": "5d30ab0b5fa7895c4324a51d",
                "text": "the the spring-ws-core dependency is defined in the `svc-util` module. And the gradle file looks like\n```\napply plugin: 'jacoco'\napply plugin: 'java'\napply plugin: 'maven-publish'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\napply from: \"${rootDir}/gradle/acqe.gradle\"\napply from: \"${rootDir}/gradle/findbugs.gradle\"\napply from: \"${rootDir}/gradle/pmd.gradle\"\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\nrepositories {\n    maven { url 'http://{REPO_BASE_URL}:8081/artifactory/internal-artifacts' }\n}\n\ndependencies {\n   \n    runtime(\"org.springframework.boot:spring-boot-properties-migrator\")\n\n    compile project(':model')\n    compile project(':util')\n    compile(\"com.fasterxml.jackson.core:jackson-core\")\n    compile(\"com.fasterxml.jackson.dataformat:jackson-dataformat-xml\")\n    compile(\"com.fasterxml.jackson.core:jackson-databind\")\n    compile(\"com.fasterxml.jackson.core:jackson-annotations\")\n    compile(\"org.apache.commons:commons-lang3:${commonsLangVersion}\")\n    compile('org.springframework.hateoas:spring-hateoas')\n    compile(\"org.springframework.boot:spring-boot-starter-log4j2\")\n    compile(\"org.springframework.security:spring-security-web\")\n\tcompile('org.springframework.ws:spring-ws-core')\n    compile(\"org.apache.logging.log4j:log4j-web\")\n\n    compile(\"com.sun.jersey:jersey-client:${jerseyClientVersion}\")\n    compile(\"javax.ws.rs:jsr311-api:${jsr311Version}\")\n\n    compile(\"org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}\")\n    compile(\"org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard:${hystrixVersion}\")\n    \n\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n    testCompile(\"uk.org.lidalia:slf4j-test:${slf4jTestVersion}\")\n    testCompile(\"org.apache.logging.log4j:log4j-1.2-api\")\n    //TODO comment changes for upgrade\n}\nconfigurations.getByName('compile').exclude(group: 'ch.qos.logback', module: 'logback-classic')\nconfigurations.getByName('testCompile').exclude(group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl')\nconfigurations.getByName('testCompile').exclude(group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j')\n\npublishing {\n    publications {\n        maven(MavenPublication) {\n            from components.java\n        }\n    }\n}\npublishing {\n    repositories {\n        maven {\n            url \"http://{REPO_BASE_URL}:8081/artifactory/libs-prerelease-local\"\n        }\n    }\n}\n\njavadoc {\n    failOnError false\n}\n\nbootJar { enabled = false }\njar { enabled = true }\nbootRun { enabled = false }\n\nconfigurations {\n    testArtifacts.extendsFrom testCompile\n}\ntask testJar(type: Jar) {\n    classifier \"test\"\n    from sourceSets.test.output\n}\nartifacts {\n    testArtifacts testJar\n}\n```",
                "time": "2019-07-18 17:23:23",
                "index": 22,
                "user": "drs3114"
            },
            {
                "id": "5d30c0513b41924785e25da1",
                "text": "@drs3114 That all looks reasonable from what I can see, but it's hard to offer much more than that when there's so much that I can't see. Perhaps you could strip things down into something minimal? That process would either help you find the problem along the way or give you and end result that I can look at in its entirety.",
                "time": "2019-07-18 18:54:09",
                "index": 23,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 173,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c4a245df780a1521f62c32e",
                "text": "I've done simple implementation of SpringBoot+Redis cache  and in postman cache is accessing data at 2x faster than fetching data from DB. Is it what we expect from redis or my implementation is poor? ",
                "time": "2019-01-24 20:47:25",
                "index": 0,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4a246f831899452441cb69",
                "text": "``` @PostMapping(\"/createceleb\")\n    //@CachePut(value = \"celebcache\", key=\"#celeb.id\",condition=\"#celeb.followers > 3000\")\n    public HttpStatus createUser(@RequestBody Celeb celeb) {\n        celebRepository.save(celeb);\n        if(celeb.getFollowers()>3000)\n            hashOps.put(key, ((int) celeb.getId()),celeb);\n\n        return HttpStatus.CREATED;\n\n    }\n\n    //@Cacheable(value = \"celebcache\",key=\"#celeb.id\")\n    @GetMapping(\"/getceleb\")\n    public Celeb getCeleb(@RequestParam(value=\"celebid\") int id) {\n\n\n        System.out.println(hashOps);\n        if (hashOps.entries(key).containsKey(id)) {\n            System.out.println(\"Getting from DB\");\n            return hashOps.entries(key).get(id);\n\n        }\n        return celebRepository.findById(id);\n    } ```",
                "time": "2019-01-24 20:47:43",
                "index": 1,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4a345c83189945244236f7",
                "text": "@RaviShekhawat Eh, the real test is what happens under high load.  The point of caching isn't necessarily to \"be faster\" than the database, it's to ensure that performance remains acceptable as usage increases",
                "time": "2019-01-24 21:55:40",
                "index": 2,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4ad7f27a0f4d5b190551f4",
                "text": "@josiahhaswell How many users do I insert in my DB to see the real impact of redis?1M maybe? I'm not using  any indexing. Following is my table schema in json form:-",
                "time": "2019-01-25 09:33:38",
                "index": 11,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4ad7f7746d4a677a0ada7e",
                "text": "``` [\n\t{\n\t\t\"Field\" : \"id\",\n\t\t\"Type\" : \"bigint(20)\",\n\t\t\"Null\" : \"NO\",\n\t\t\"Key\" : \"PRI\",\n\t\t\"Default\" : null,\n\t\t\"Extra\" : \"auto_increment\"\n\t},\n\t{\n\t\t\"Field\" : \"no_of_followers\",\n\t\t\"Type\" : \"bigint(20)\",\n\t\t\"Null\" : \"YES\",\n\t\t\"Key\" : \"\",\n\t\t\"Default\" : null,\n\t\t\"Extra\" : \"\"\n\t},\n\t{\n\t\t\"Field\" : \"celeb_name\",\n\t\t\"Type\" : \"varchar(255)\",\n\t\t\"Null\" : \"YES\",\n\t\t\"Key\" : \"\",\n\t\t\"Default\" : null,\n\t\t\"Extra\" : \"\"\n\t}\n] ```",
                "time": "2019-01-25 09:33:43",
                "index": 12,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4ad87420b78635b67cfc6a",
                "text": "@RaviShekhawat it\u2019s not very clear what you\u2019re trying to do really",
                "time": "2019-01-25 09:35:48",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5c4ad90a95e17b4525a906ca",
                "text": "@snicoll I'm just comparing the time APIs take to fetch data from cache vs fetching it from DB. My REST controllers are mentioned above. Shall I share them again?",
                "time": "2019-01-25 09:38:18",
                "index": 14,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4ad95b0a491251e3515b42",
                "text": "It depends entierely of the cache store you\u2019re using and the kind of db you\u2019re using. Benchmarks are hard so unless you share the benchmark itself so that others can run it, I am not sure we can help you effectively ",
                "time": "2019-01-25 09:39:39",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5c4ad974ba355012a4954a53",
                "text": "The cache abstraction uses a by key lookup, you may want to switch to a different cache provider for a start",
                "time": "2019-01-25 09:40:04",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c4ad9b99bfa375aab58f0e7",
                "text": "DB is MySql. Different cache provider means? Memcache ? For now, I want to indulge into redis actually.",
                "time": "2019-01-25 09:41:13",
                "index": 17,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4ad9fc95e17b4525a90e55",
                "text": "Your DB has already a cache in the driver. if your HTTP endpoint does lookup by id, the DB should already be pretty fast to resolve those",
                "time": "2019-01-25 09:42:20",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5c4ada0acb47ec30009c7c8a",
                "text": "I am still not sure what you\u2019re trying to bench with a lookup by id",
                "time": "2019-01-25 09:42:34",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5c4ada76ba355012a4955030",
                "text": "Redis access is performing almost double as fast as Mysql but currently no. of records are just 10-20. I 'm asking is it a nice criterion to compare redis vs mysql if my table has got 1M users in it?",
                "time": "2019-01-25 09:44:22",
                "index": 20,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4adb277a0f4d5b190564ce",
                "text": "Was aware of the B tree maintained by sql tables if you use indexing on a set of columns but didn't know about db caching. Thanks for the info.",
                "time": "2019-01-25 09:47:19",
                "index": 21,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4adc41c45b986d11b832e2",
                "text": "@snicoll Please suggest some standard way for benchmarking of my redis vs mysql implementation.",
                "time": "2019-01-25 09:52:01",
                "index": 22,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4adcc31cb70a372a34cfa5",
                "text": "@RaviShekhawat this channel is for best effort spring boot support; we'd rather spend time working on spring projects than providing general advice on benchmarking.",
                "time": "2019-01-25 09:54:11",
                "index": 23,
                "user": "bclozel"
            },
            {
                "id": "5c4b615495e17b4525acb56e",
                "text": "@RaviShekhawat So, for a properly-configured database with carefully considered indexes, the performance bottleneck will usually be the # of concurrent users, not the size of the database",
                "time": "2019-01-25 19:19:48",
                "index": 24,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b617af780a1521f6ac025",
                "text": "@RaviShekhawat Caches can help with that when users are accessing the same data repeatedly ",
                "time": "2019-01-25 19:20:26",
                "index": 25,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b61a320b78635b6809f1b",
                "text": "@RaviShekhawat The situation is a lot more complicated when accesses are random",
                "time": "2019-01-25 19:21:07",
                "index": 26,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b61c5dab15872cef09bef",
                "text": "@RaviShekhawat My advice?  Look at data access patterns in your application",
                "time": "2019-01-25 19:21:41",
                "index": 27,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b61e27a0f4d5b19090519",
                "text": "@RaviShekhawat Don't add a cache just to \"make things faster.\"--you'll end up with a lot more overhead and maintenance complexity in your application for little or no benefit",
                "time": "2019-01-25 19:22:10",
                "index": 28,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b622f831899452449f584",
                "text": "@RaviShekhawat Add a cache when:\n1.  You have a set of data that is repeatedly accessed by many users\n2.  Your database cache ends up being inadequate for (1)\n3.   Adding an index to a set of data to improve retrieval performance would intolerably impact write performance ",
                "time": "2019-01-25 19:23:27",
                "index": 29,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b62a420b78635b680a628",
                "text": "There are other reasons to add a cache, but you typically add a cache in response to a performance issue that can't be addressed through other optimizations",
                "time": "2019-01-25 19:25:24",
                "index": 30,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4b638b83189945244a01ae",
                "text": "Think about it this way:  take any method/function that's performing slowly.  Now, put a hashmap in its scope and use that to cache the results.  Does the resulting code make sense?  Is it elegant/testable/maintainable/correct?  If not, don't use a cache",
                "time": "2019-01-25 19:29:15",
                "index": 31,
                "user": "josiahhaswell"
            },
            {
                "id": "5c4eb0eb9221b9382dd3ad23",
                "text": "@josiahhaswell Thanks for the detailed response.Can you please clarify if the number of concurrent users is very high, which one out of redis and db is more useful?",
                "time": "2019-01-28 07:36:11",
                "index": 69,
                "user": "RaviShekhawat"
            }
        ]
    },
    {
        "id": 174,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5f156db4724012319bba221d",
                "text": "i have a spring application using local dependency util",
                "time": "2020-07-20 10:11:00",
                "index": 0,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f156dcafd3832489b1e55fb",
                "text": "how shall i build the dependency and run the application",
                "time": "2020-07-20 10:11:22",
                "index": 1,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f158a238e9a3a6ef0a35ea1",
                "text": "@Sidharth-Bansal  I guess you're looking for Maven.",
                "time": "2020-07-20 12:12:19",
                "index": 2,
                "user": "Tore93"
            },
            {
                "id": "5f15b7b664b6213da14d49d7",
                "text": "the problem is in my java install @Tore93 ",
                "time": "2020-07-20 15:26:46",
                "index": 4,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f15b7de00ae3b3d990112a3",
                "text": "`java -version` says 14 but java icon in application says 8",
                "time": "2020-07-20 15:27:26",
                "index": 5,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f15b7e9775d59377c051130",
                "text": "i have to use java 8",
                "time": "2020-07-20 15:27:37",
                "index": 6,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f15b7ff724012319bbafe81",
                "text": "i don't know what mess i have created while doing an install",
                "time": "2020-07-20 15:27:59",
                "index": 7,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f15b80c00ae3b3d9901135a",
                "text": "also jvm is only installed for java 8",
                "time": "2020-07-20 15:28:12",
                "index": 8,
                "user": "Sidharth-Bansal"
            }
        ]
    },
    {
        "id": 175,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5bd4d41b271506518d7e0a84",
                "text": "Hi guys\njust wondering what is current modern approach of hosting the web?\nis it Back-End still hosting Angular app as static content? \nor now in modern world it is separate servers where BE  hosted on its own  for REST API and Angular FE hosted by nodejs as separate server?\nwhat is right approach today?  ",
                "time": "2018-10-27 21:09:47",
                "index": 0,
                "user": "Bryksin"
            },
            {
                "id": "5bd536613844923661ac8c75",
                "text": "@Bryksin last one",
                "time": "2018-10-28 04:09:05",
                "index": 1,
                "user": "geercode"
            },
            {
                "id": "5bd536876e5a401c2de022be",
                "text": "nodejs server handles io more efficient",
                "time": "2018-10-28 04:09:43",
                "index": 2,
                "user": "geercode"
            }
        ]
    },
    {
        "id": 176,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bec535c62866f74739acdc1",
                "text": "@gregturn or anyone else from spring-hateoas, does spring-hateoas no longer use x-forwarded-prefix and so on when creating links in ControllerLinkBuilder?  I'm using version 0.25.0.RELEASE and I can see the headers coming in but the generated links don't contain the prefix, and I can't see any code that uses it.  I see some comment that Spring 5.1 no longer uses them or something like that, is it a configuration setting I need to set to use them?  Thanks!",
                "time": "2018-11-14 16:54:52",
                "index": 0,
                "user": "hughwphamill"
            },
            {
                "id": "5bec5527bb06d73a99737e76",
                "text": "This is the note in ServletUriComponentsBuilder.java v5.1.2.RELEASE (I'm using Spring Boot 2.1.0.RELEASE)...\n```\nAs of 5.1, methods in this class do not extract\n * {@code \"Forwarded\"} and {@code \"X-Forwarded-*\"} headers that specify the\n * client-originated address. Please, use\n * {@link org.springframework.web.filter.ForwardedHeaderFilter\n * ForwardedHeaderFilter}, or similar from the underlying server, to extract\n * and use such headers, or to discard them.\n```",
                "time": "2018-11-14 17:02:31",
                "index": 1,
                "user": "hughwphamill"
            },
            {
                "id": "5bed17c2bb88787474cfede2",
                "text": "@hughwphamill Yes, see https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-5.x#forwarded-headers - so you should add that filter, or enable `server.use-forward-headers=true`",
                "time": "2018-11-15 06:52:50",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5bed3e52fee6703aaf7383c3",
                "text": "@bclozel Great, thank you!!",
                "time": "2018-11-15 09:37:22",
                "index": 11,
                "user": "hughwphamill"
            },
            {
                "id": "5bf1e3b8f9993b42672e4a63",
                "text": "@hughwphamill Spring Framework 5.1 indeed has altered how Forwarding headers are handled. This breaks Spring HATEOAS. We have a PR to fix things here => https://github.com/spring-projects/spring-hateoas/pull/717",
                "time": "2018-11-18 22:12:08",
                "index": 141,
                "user": "gregturn"
            }
        ]
    },
    {
        "id": 177,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d13d4e0501ea60f124eceff",
                "text": "Hi Booters :),\nIs it possible to override or overload properties defined in `application.properties` with another `application.properties` in a different application? I explain:\nI have 5 Spring Boot (2.1.6.RELEASE) applications which share common properties and some beans, so I defined a 6th application (called `commons`) which gather those properties in `application.properties`, `application-dev.properties` and  `application-prod.properties` and defined the common beans. This application does not have a main class, it's just packaged as a `commons-1.0.0.jar` and used as dependency in other applications. \nIn each application I would like to add other properties (specific to each application) to enable autoconfiguration, so I added an`application.properties` to define them but patatrac!!! each application failes to start because properties defined in `commons-1.0.0.jar` are no longer found .",
                "time": "2019-06-26 20:26:08",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5d13d5806fb02f5f6938fa08",
                "text": " I know we can't have 2 ` application.propeties` in the classpath but I thought that  only properties were overrode.",
                "time": "2019-06-26 20:28:48",
                "index": 1,
                "user": "akuma8"
            },
            {
                "id": "5d13d5fcd65dae046f94f3ad",
                "text": "If I remove  the `application.properties` in each application, thy start well and beans defined in `commons` are created. ",
                "time": "2019-06-26 20:30:52",
                "index": 2,
                "user": "akuma8"
            },
            {
                "id": "5d13d639aacbfb5fb7d3206c",
                "text": "How can I handle this situation? Thanks a lot",
                "time": "2019-06-26 20:31:53",
                "index": 3,
                "user": "akuma8"
            },
            {
                "id": "5d140bbde6ae0b757c6c7ad6",
                "text": "@akuma8 You should consider using Spring Cloud Config. By adding the spring cloud client dependency, your applications will download their configuration from the configuration server (which is typically backed by something like github). Under the covers, the application creates a small spring context using a bootstrap.yml/bootstrap.properties file, downloads the configuration from the server, and then launches the application context.\n\nAs for shared properties, you can do this with the configuration server as well by specifying multiple application names in your bootstrap.yml file:\n\n```\nspring:\n  cloud:\n    config:\n      #The label/branch that will be used to retrieve configuration from the configuration server.\n      label: master\n      name: service-a,commons\n```\n\nThis will download any configuration for \"service-a\" and also any configuration for \"commons\" and add them to your spring environment. Each configuration downloaded from the config server act as an additional property source and there are mechanisms for ordering them.\n\n",
                "time": "2019-06-27 00:20:13",
                "index": 4,
                "user": "tkvangorder"
            },
            {
                "id": "5d146cc8d65dae046f99fd87",
                "text": "@akuma8 Alternatively, if you don't want the flexibility (and complexity) of a config server, you could use an `EnvironmentPostProcessor` registered via `spring.factories` in your commons jar to add a property source to the environment that contains your common defaults.",
                "time": "2019-06-27 07:14:16",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d147822850b87037c6b125a",
                "text": "@wilkinsona Do you have an example of implementation? \n@tkvangorder Applications will be deployed on Google Kubernetes Engine, I plan to use `ConfigMap` instead of  a configuration server. ",
                "time": "2019-06-27 08:02:42",
                "index": 6,
                "user": "akuma8"
            },
            {
                "id": "5d147e91ddc34e0f13f2ea9f",
                "text": "@akuma8 There's one in the reference docs: https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/htmlsingle/#howto-customize-the-environment-or-application-context",
                "time": "2019-06-27 08:30:09",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5d14806a6fb02f5f693ee190",
                "text": "@wilkinsona Thanks ",
                "time": "2019-06-27 08:38:02",
                "index": 8,
                "user": "akuma8"
            },
            {
                "id": "5d148978f040bc5fb6d4938d",
                "text": "@wilkinsona Is it possible to be \"profile aware\" with this solution, I plan to rename my commons properties to `commons.properties`, `commons-dev.properties` and `commons-prod.properties`? ",
                "time": "2019-06-27 09:16:40",
                "index": 9,
                "user": "akuma8"
            },
            {
                "id": "5d149a200a60964f8a9a2478",
                "text": "Yes, it's possible, but you'd have to write some code yourself to do it.",
                "time": "2019-06-27 10:27:44",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5d149a2cd92cb54b2985c7f8",
                "text": "You can get the active profiles from the `Environment`",
                "time": "2019-06-27 10:27:56",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5d149acb850b87037c6c6130",
                "text": "We want to make this easier but haven't had time to do so yet. See https://github.com/spring-projects/spring-boot/issues/12822 for details.",
                "time": "2019-06-27 10:30:35",
                "index": 12,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 178,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e195ea965540a529af7f61e",
                "text": "I don't know if this is a bug. I have two configuration files defined in the resources directory.\napplication.properties:\n\n```properties\nrole.id=456\n```\n\napplication.yml\n\n```yaml\nuser:\n  id: 123\n```\n\n```java\n@Bean\npublic CommandLineRunner runner(Environment environment) {\n    return args -> {\n        Object userId = environment.getProperty(\"user.id\", Object.class);\n        Integer user_id = (Integer) userId;\n\n        // ClassCastException: java.lang.String cannot be cast to java.lang.Integer\n        Object roleId = environment.getProperty(\"role.id\", Object.class);\n        Integer role_id = (Integer) roleId;\n    };\n}\n```\n\nDoes this mean that properties and yaml are inconsistent\uff1f",
                "time": "2020-01-11 05:35:37",
                "index": 0,
                "user": "echooymxq"
            },
            {
                "id": "5e195ecb43c3b62d79d509a7",
                "text": "@wilkinsona ",
                "time": "2020-01-11 05:36:11",
                "index": 1,
                "user": "echooymxq"
            },
            {
                "id": "5e19646d65540a529af81e34",
                "text": "YAML parsing will indeed create Integer entries for elements that it thinks are numbers where as Properties files are always inserted as Strings.",
                "time": "2020-01-11 06:00:13",
                "index": 2,
                "user": "philwebb"
            },
            {
                "id": "5e19648f0aba1f0d8013bb60",
                "text": "I think if you do `environment.getProperty(\"role.id\", Integer.class);` then Spring will convert the `String` to and `Integer`",
                "time": "2020-01-11 06:00:47",
                "index": 3,
                "user": "philwebb"
            },
            {
                "id": "5e1965f143c3b62d79d53b61",
                "text": "Yes, including other types, such as Boolean. I just found that there are differences between the two methods. Should n\u2019t they be unified?  ",
                "time": "2020-01-11 06:06:41",
                "index": 4,
                "user": "echooymxq"
            },
            {
                "id": "5e19759adbacf55b3de8e70d",
                "text": "The only option we'd have is to change YAML to always insert Strings but I think that might end up causing other problems.",
                "time": "2020-01-11 07:13:30",
                "index": 5,
                "user": "philwebb"
            },
            {
                "id": "5e1975d243c3b62d79d59ac4",
                "text": "For example the source YAML can use a lot of different values for booleans https://yaml.org/type/bool.html",
                "time": "2020-01-11 07:14:26",
                "index": 6,
                "user": "philwebb"
            },
            {
                "id": "5e1975e7cb2aaa2d781b6eaf",
                "text": "The YAML parser we use takes care of these and gives us a `boolean`",
                "time": "2020-01-11 07:14:47",
                "index": 7,
                "user": "philwebb"
            },
            {
                "id": "5e19760ddbacf55b3de8e877",
                "text": "I think it's probably best just to store that, rather than converting it to a String",
                "time": "2020-01-11 07:15:25",
                "index": 8,
                "user": "philwebb"
            },
            {
                "id": "5e19761b65540a529af8872a",
                "text": "especially as the String would likely need to be converted back to Boolean when it's used",
                "time": "2020-01-11 07:15:39",
                "index": 9,
                "user": "philwebb"
            },
            {
                "id": "5e19783c6f604152991f4507",
                "text": "In some cases, people define a metadata: Map <String, Object>. with properties or yaml, It has different handling of type conversion when get the values.",
                "time": "2020-01-11 07:24:44",
                "index": 10,
                "user": "echooymxq"
            },
            {
                "id": "5e197854c6897e1bc612bfc0",
                "text": "I agree with you very much. This problem is more troublesome.",
                "time": "2020-01-11 07:25:08",
                "index": 11,
                "user": "echooymxq"
            },
            {
                "id": "5e1ef41b35e7a11909592768",
                "text": "@echooymxq according to https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config seems Spring reads your properties and yaml in random order. So you could not predict which value will be the actual one. ",
                "time": "2020-01-15 11:14:35",
                "index": 53,
                "user": "bvn13"
            },
            {
                "id": "5e1f0bf7c86a6f1fb37f5ac7",
                "text": "@bvn13 I don\u2019t see what makes you think SB loads the config in random order (it doesn\u2019t, that url points to the order we use for loading the config)",
                "time": "2020-01-15 12:56:23",
                "index": 58,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 179,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df393e40995661eb8db91b3",
                "text": "Hello.\nI need some help about TDD (test driven development).\nDoes it mean writing testing code before even creating entities and services ?\nWhat I actually know is we start creating entities, repositories and controllers, and then we write unit and integration test",
                "time": "2019-12-13 13:36:36",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5df39423ce2b2e652bcc1250",
                "text": "@amirensit Yep, tests first. But there's a lot on the web for that ;-)",
                "time": "2019-12-13 13:37:39",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5df3945b55d939230003bb21",
                "text": "@kschlesselmann Test even before the creation of entities and services ?",
                "time": "2019-12-13 13:38:35",
                "index": 3,
                "user": "amirensit"
            },
            {
                "id": "5df394730616d6515e30d241",
                "text": "@amirensit yes",
                "time": "2019-12-13 13:38:59",
                "index": 4,
                "user": "kschlesselmann"
            },
            {
                "id": "5df39481ac14cc652c784a14",
                "text": "@kschlesselmann okey. Thanks",
                "time": "2019-12-13 13:39:13",
                "index": 5,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 180,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5b90e4b411b41f69dbca6504",
                "text": "@bclozel what may be the reason that although using the server.http2.enabled=true i still see in chrome, that the protocol is http 1.1?",
                "time": "2018-09-06 08:26:28",
                "index": 0,
                "user": "doribd"
            },
            {
                "id": "5b90e4dacff55e5617b55899",
                "text": "did you add the required dependencies as mentioned in the docs (the link I gave you)?",
                "time": "2018-09-06 08:27:06",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5b90e6e24be56c5918ed1bc5",
                "text": "@bclozel on section 77.8.4 there isn't any ref to dependencies, to which ones are you aiming?",
                "time": "2018-09-06 08:35:46",
                "index": 2,
                "user": "doribd"
            },
            {
                "id": "5b90e73058a3797aa30e6c26",
                "text": "@doribd `io.netty:netty-tcnative-boringssl-static`",
                "time": "2018-09-06 08:37:04",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5b90eb7dac25fd11b5eb376f",
                "text": "@bclozel i took the latest from mvn repo' (2.0.15), still not working, chrome identifies it as http 1.1",
                "time": "2018-09-06 08:55:25",
                "index": 4,
                "user": "doribd"
            },
            {
                "id": "5b90f036c2bd5d117a28c7a2",
                "text": "@doribd do you have SSL set up? You should have `server.ssl.*` configuration keys and a local cert store",
                "time": "2018-09-06 09:15:34",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5b90ff16e5b40332ab51baef",
                "text": "@bclozel i know, have it. but getting now a strange exception of 'An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\njava.lang.RuntimeException: ALPN unsupported. Is your classpath configured correctly? For Conscrypt, add the appropriate Conscrypt JAR to classpath and set the security provider. For Jetty-ALPN, see http://www.eclipse.org/jetty/documentation/current/alpn-chapter.html#alpn-starting'",
                "time": "2018-09-06 10:19:02",
                "index": 6,
                "user": "doribd"
            },
            {
                "id": "5b90ffc01d3a5711b6f1911b",
                "text": "@doribd so you're using jetty? I thought you were using netty?",
                "time": "2018-09-06 10:21:52",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5b910027cff55e5617b5f96c",
                "text": "@bclozel i am using netty, i am not using jetty.",
                "time": "2018-09-06 10:23:35",
                "index": 8,
                "user": "doribd"
            },
            {
                "id": "5b91004ff86b741b05192baf",
                "text": "@bclozel  , when spring-boot raise up i am receiving this '2018-09-06 13:15:01.187  INFO 268528 --- [           main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port(s): 8443'  , defiantly not using jetty.",
                "time": "2018-09-06 10:24:15",
                "index": 9,
                "user": "doribd"
            },
            {
                "id": "5b9100cad457a1406cab41a4",
                "text": "maybe it's a bug in this version.",
                "time": "2018-09-06 10:26:18",
                "index": 10,
                "user": "doribd"
            },
            {
                "id": "5b9100e9c9500b4bab8e2dcc",
                "text": "@doribd could you create a sample app and push it to github? it's hard to figure things out here",
                "time": "2018-09-06 10:26:49",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5b9100fec2bd5d117a292a60",
                "text": "@bclozel yes, give me link to 'where' and i will",
                "time": "2018-09-06 10:27:10",
                "index": 12,
                "user": "doribd"
            },
            {
                "id": "5b910111c2bd5d117a292a7d",
                "text": "your github account, or a zip file uploaded somewhere public",
                "time": "2018-09-06 10:27:29",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5b91032bac25fd11b5ebc209",
                "text": "@bclozel ok, will and give you a link.",
                "time": "2018-09-06 10:36:27",
                "index": 14,
                "user": "doribd"
            },
            {
                "id": "5b921d65cff55e5617bc9095",
                "text": "@bclozel i uploaded the code as agreed to here https://github.com/doribd/hgw",
                "time": "2018-09-07 06:40:37",
                "index": 24,
                "user": "doribd"
            },
            {
                "id": "5b923b7ec2bd5d117a30561d",
                "text": "@doribd I've pulled your sample and generated a self-signed p12 certificate and it works",
                "time": "2018-09-07 08:49:02",
                "index": 31,
                "user": "bclozel"
            },
            {
                "id": "5b923ba194f8164c17edddec",
                "text": "I've cleaned up a bit the properties because several things were useless/duplicating default values",
                "time": "2018-09-07 08:49:37",
                "index": 32,
                "user": "bclozel"
            },
            {
                "id": "5b923bb2f86b741b052082bd",
                "text": "I've got this:\n```\nserver.port=8443\nserver.ssl.key-store=classpath:certificate.p12\nserver.ssl.key-store-type=PKCS12\nserver.ssl.key-store-password=password\nserver.http2.enabled=true\n```",
                "time": "2018-09-07 08:49:54",
                "index": 33,
                "user": "bclozel"
            },
            {
                "id": "5b923bc6f5402f32aaee4421",
                "text": "This might be a windows only issue then?",
                "time": "2018-09-07 08:50:14",
                "index": 34,
                "user": "bclozel"
            },
            {
                "id": "5b9245974be56c5918f51daf",
                "text": "Yes, it runs fine on macosx",
                "time": "2018-09-07 09:32:07",
                "index": 35,
                "user": "bclozel"
            },
            {
                "id": "5b9245ac1d3a5711b6f940f8",
                "text": "I've created an issue on your project with a few comments",
                "time": "2018-09-07 09:32:28",
                "index": 36,
                "user": "bclozel"
            },
            {
                "id": "5b92468e60f9ee7aa4ee15d6",
                "text": "@bclozel  yes , i am running this on windows 10 (my laptop), does it runs ok for you on linux ? do you see a way to fix it ? ",
                "time": "2018-09-07 09:36:14",
                "index": 37,
                "user": "doribd"
            },
            {
                "id": "5b924a4fac25fd11b5f35353",
                "text": "@bclozel so bottom line, it can run on linux but not windows ? will it be fixed for windows as well ? \ni don't mind running it on top of linux of course.",
                "time": "2018-09-07 09:52:15",
                "index": 38,
                "user": "doribd"
            },
            {
                "id": "5b924adee5b40332ab594dfb",
                "text": "@doribd netty tcnative should work on windows; I don't have a windows system right now, so I can't reproduce easily. Did you try removing the version and classifier information as suggested in my issue?",
                "time": "2018-09-07 09:54:38",
                "index": 39,
                "user": "bclozel"
            },
            {
                "id": "5b924af5d457a1406cb2b743",
                "text": "@bclozel not yet, will try and update here. ",
                "time": "2018-09-07 09:55:01",
                "index": 40,
                "user": "doribd"
            }
        ]
    },
    {
        "id": 181,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5b97954aa04db554a70c2268",
                "text": "I am using spring boot starter web. I have set the dependencies but get a NoClassDefFoundError when the restTemplate.doExecute is triggered. Anyone have this issue too?",
                "time": "2018-09-11 10:13:30",
                "index": 0,
                "user": "Dinodanio"
            },
            {
                "id": "5b97960fa04db554a70c291f",
                "text": "We need some more infos",
                "time": "2018-09-11 10:16:47",
                "index": 1,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97961ba2343433d130d0dd",
                "text": "this might happen because a dependency is missing",
                "time": "2018-09-11 10:16:59",
                "index": 2,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97962af59e0c1555dfc986",
                "text": "which class is not found?",
                "time": "2018-09-11 10:17:14",
                "index": 3,
                "user": "christianbuerckert"
            },
            {
                "id": "5b9797451e2b442a25f5ec46",
                "text": "@Dinodanio ",
                "time": "2018-09-11 10:21:57",
                "index": 4,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a0351e2b442a25f62898",
                "text": "@christianbuerckert sorry for the late response ```io/netty/handler/codec/http/FullHttpRequest```",
                "time": "2018-09-11 11:00:05",
                "index": 5,
                "user": "Dinodanio"
            },
            {
                "id": "5b97a07d45318b2dfe91c912",
                "text": "But if it's possible i don't want to add this package.",
                "time": "2018-09-11 11:01:17",
                "index": 6,
                "user": "Dinodanio"
            },
            {
                "id": "5b97a0c9a2343433d13116ec",
                "text": "ok never seen this class missing actually",
                "time": "2018-09-11 11:02:33",
                "index": 7,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a0df550f8808f592af49",
                "text": "I think it is in starter web by default",
                "time": "2018-09-11 11:02:55",
                "index": 8,
                "user": "Dinodanio"
            },
            {
                "id": "5b97a126a2343433d1311a26",
                "text": "no it's not",
                "time": "2018-09-11 11:04:06",
                "index": 9,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a145728ddf0282908aab",
                "text": "I just checked the application I am working on - which is a spring boot starter web and it does not have this class. At least in Spring Boot 2.0.3.R",
                "time": "2018-09-11 11:04:37",
                "index": 10,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a22851a02e2a2613a8e9",
                "text": "due to my research it looks like this happens when netty is on the class path. Maybe you should try to find out which dependency brings in netty and then exclude from your classpath",
                "time": "2018-09-11 11:08:24",
                "index": 11,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a28bcddb292dff589534",
                "text": "you cann look at `mvn dependency:tree` to findout where netty is included. ",
                "time": "2018-09-11 11:10:03",
                "index": 12,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a2db0fb4232e38a97f63",
                "text": "if you use netbeans open the pom, select the graph view and search for netty. Then you can right click and select 'exclude' to  add the exclude instruction to the pom :)",
                "time": "2018-09-11 11:11:23",
                "index": 13,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97a4327189ae6fddaafe58",
                "text": "I will check, ty for the information",
                "time": "2018-09-11 11:17:06",
                "index": 14,
                "user": "Dinodanio"
            },
            {
                "id": "5b97ae7aa2343433d1317261",
                "text": "Ok i found the issue. I am using spring cassandra with a dependency on the package without the http deeper nested. Your tip helped me a lot thanks.",
                "time": "2018-09-11 12:00:58",
                "index": 15,
                "user": "Dinodanio"
            },
            {
                "id": "5b97b5c833ebb72e37ffb623",
                "text": "@Dinodanio you're welcome :)",
                "time": "2018-09-11 12:32:08",
                "index": 21,
                "user": "christianbuerckert"
            }
        ]
    },
    {
        "id": 182,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c588c811b62f12650a0fd2a",
                "text": "Hi guys,\nI got some problems with STOMP Websocket in Spring I'l trying to return a publisher and I'm getting: `org.springframework.messaging.converter.MessageConversionException: Unable to convert payload with type='graphql.execution.reactive.CompletionStageMappingPublisher', contentType='null', converter=[CompositeMessageConverter[converters=[org.springframework.messaging.converter.StringMessageConverter@66630a43, org.springframework.messaging.converter.ByteArrayMessageConverter@7e452528, org.springframework.messaging.converter.MappingJackson2MessageConverter@4ccc9ce9]]]`\n",
                "time": "2019-02-04 19:03:29",
                "index": 0,
                "user": "wathek"
            },
            {
                "id": "5c588d22975714406b947a3a",
                "text": "I'm stuck I don't know how can I have a dynamic publisher with it",
                "time": "2019-02-04 19:06:10",
                "index": 1,
                "user": "wathek"
            },
            {
                "id": "5c589299ca428b064554f38c",
                "text": "@wathek the STOMP support is only available in the servlet based websocket support - and this does not support reactive streams right now.",
                "time": "2019-02-04 19:29:29",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5c589323975714406b94a79e",
                "text": "@bclozel oh ! well I have a strange architecture here. I mean I'm using webmvc (so it's servlet based arch) but at the same time I'm trying to implement websockets",
                "time": "2019-02-04 19:31:47",
                "index": 4,
                "user": "wathek"
            },
            {
                "id": "5c589368ceb5a2264f93ac78",
                "text": "websocket support with Spring MVC has been there for quite a while and is just fine. It's just that the payload that you're providing is a reactive streams publisher and it is not supported",
                "time": "2019-02-04 19:32:56",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5c5893cbca428b064554fd95",
                "text": "@bclozel do you think it'll work if I have a subscriber to that stream which gets the data and sends it through STOMP ?",
                "time": "2019-02-04 19:34:35",
                "index": 6,
                "user": "wathek"
            },
            {
                "id": "5c5894c6ca428b06455502cb",
                "text": "@wathek can you instead return a `CompletionStage` directly?",
                "time": "2019-02-04 19:38:46",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c5894df1b62f12650a13acd",
                "text": "instead of wrapping it with that `CompletionStageMappingPublisher`?",
                "time": "2019-02-04 19:39:11",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5c5895058aa5ca5abf844657",
                "text": "Those are the return types supported: https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web.html#return-values",
                "time": "2019-02-04 19:39:49",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5c58955454f21a71a1fac986",
                "text": "honestly I dont' know if I can return a `CompletionStage` currently I generate a `Flowable` that is given to a `DataFetcher`which is related to `graphql-java`",
                "time": "2019-02-04 19:41:08",
                "index": 10,
                "user": "wathek"
            },
            {
                "id": "5c58956d93fe7d5ac0425f9d",
                "text": "and it's `graphql-java` which encapsulates it into a CompletionStageMappingPublisher",
                "time": "2019-02-04 19:41:33",
                "index": 11,
                "user": "wathek"
            },
            {
                "id": "5c5896517b68f941026f97a5",
                "text": "my current flow is \n1. Client sends request through STOMP Websocket.\n2. Server gets the request payload which is supposed to be a valid Subscription GraphQL query.\n3. Server resolves the GraphQL subscription query and returns a `DataFetcher<Flowable<T>>`\n",
                "time": "2019-02-04 19:45:21",
                "index": 12,
                "user": "wathek"
            },
            {
                "id": "5c58965d41775971a0d80c3a",
                "text": "at this stage I'm supposed to return that to client ",
                "time": "2019-02-04 19:45:33",
                "index": 13,
                "user": "wathek"
            },
            {
                "id": "5c589e177b68f941026fc70e",
                "text": "@wathek I think you should ask the graphql-java community; it seems they're using `CompletableFuture` in their webmvc support and I don't see any websocket support in there. Maybe an enhancement request to make?",
                "time": "2019-02-04 20:18:31",
                "index": 14,
                "user": "bclozel"
            },
            {
                "id": "5c58a359f46373406a52792b",
                "text": "ok thank you @bclozel ",
                "time": "2019-02-04 20:40:57",
                "index": 15,
                "user": "wathek"
            }
        ]
    },
    {
        "id": 183,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dcc83d8eeb63e1a83aaa149",
                "text": "I have enabled actuators in Spring boot 2.x . I am trying to enable actuators in the legacy application. (Spring boot 1.4.7). I have added dependency in the maven. I can see the jar in the external libs. When I go to http://127.0.0.1:8081/actuator/health,  I get 404",
                "time": "2019-11-13 22:29:44",
                "index": 0,
                "user": "gaganontvtr_twitter"
            },
            {
                "id": "5dcc84b052b73c7cb21220ae",
                "text": "I have set server.port as 8081",
                "time": "2019-11-13 22:33:20",
                "index": 1,
                "user": "gaganontvtr_twitter"
            },
            {
                "id": "5dcc884badd5717a88023985",
                "text": "@gaganontvtr_twitter the \"/actuator\" context path was only added in spring boot 2. In spring boot 1.x, you'll just need http://127.0.0.1:8081/health\nhttps://www.baeldung.com/spring-boot-actuators#boot-1x-actuator",
                "time": "2019-11-13 22:48:43",
                "index": 5,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5dcc8a8a5eb2e813db1c8a63",
                "text": "@michaelmcfadyen Ah. Thank you very much",
                "time": "2019-11-13 22:58:18",
                "index": 9,
                "user": "gaganontvtr_twitter"
            },
            {
                "id": "5dcc8ab035889012b102c4de",
                "text": "@gaganontvtr_twitter no problem :)",
                "time": "2019-11-13 22:58:56",
                "index": 10,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5dcd104d091dd14a0eb949f0",
                "text": "@gaganontvtr_twitter Spring Boot `1.x` doesn\u2019t use an `/actuator` prefix by default, please check the documentation",
                "time": "2019-11-14 08:29:01",
                "index": 24,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 184,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d4e3ad77d56bc6080286261",
                "text": "Hello, I implemented a configuration class which extends SpringBootServletInitializer. However, I found that the overrided onstartup method couldn't be called when spring-booting. Can someone help me clarify how I can get that method triggered on startup? Thanks a lot.",
                "time": "2019-08-10 03:32:39",
                "index": 0,
                "user": "t0920008899"
            },
            {
                "id": "5d4fd2342612bb718c498243",
                "text": "@t0920008899 that\u2019s for war-deployment based stuff. If you run with jar packaging that won\u2019t be invoked as indiciated in the Javadoc of that class",
                "time": "2019-08-11 08:30:44",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5d4fdde51db76d0ffeb181b3",
                "text": "@snicoll I set the package to war, but run it with spring-boot:run. Would spring-boot:run plugin still run it as a jar?",
                "time": "2019-08-11 09:20:37",
                "index": 2,
                "user": "t0920008899"
            },
            {
                "id": "5d5068ffc87a0963e752a369",
                "text": "`spring-boot:run` won\u2019t deploy a war file to an existing container. So, no, this callback won\u2019t be called",
                "time": "2019-08-11 19:14:07",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 185,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ce4a57e7c363c75a71f7d99",
                "text": "Does Embedded Tomcat in Spring Boot uses catalina.properties in any way. In other words how can I configure `package.access` defined generally in $CATALINA_BASE/conf/catalina.properties . There is a default catalina.properties bundled in `tomcat-embed-core.jar` but I dont see it loaded during the server startup. Is there a way to configure the properties defined in `catalina.properties` ",
                "time": "2019-05-22 01:27:26",
                "index": 0,
                "user": "ranarula"
            },
            {
                "id": "5ce515e39d64e537bcef35f3",
                "text": "@ranarula Embedded Tomcat does not use `catalina.properties`. It's only used when Tomcat is launched using `Catalina` via a shell script. You can mimic the same behaviour though if you want to do so. Take a look at `org.apache.catalina.startup.Catalina.setSecurityProtection()` and `org.apache.catalina.security.SecurityConfig`. It ultimately leads to a call to `java.security.Security.setProperty(String, String)`.",
                "time": "2019-05-22 09:26:59",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5ce5bb94b313d723140f8181",
                "text": "\n> @ranarula Embedded Tomcat does not use `catalina.properties`. It's only used when Tomcat is launched using `Catalina` via a shell script. You can mimic the same behaviour though if you want to do so. Take a look at `org.apache.catalina.startup.Catalina.setSecurityProtection()` and `org.apache.catalina.security.SecurityConfig`. It ultimately leads to a call to `java.security.Security.setProperty(String, String)`.\n\nThanks @wilkinsona I will give it a try",
                "time": "2019-05-22 21:13:56",
                "index": 105,
                "user": "ranarula"
            }
        ]
    },
    {
        "id": 186,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c33ee8d1491b27876d8dfab",
                "text": "```\nfun main(args: Array<String>) {\n    val ctx = runApplication<Application>(*args)\n    val artifact = ctx.getBean<BuildProperties>().artifact\n    LogManager.getLogger(Application::class.java).info(\"Starting {}\", artifact)\n}\n```",
                "time": "2019-01-08 00:27:56",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5c33eea01948ad07e8050b02",
                "text": "^ is there a good way to do that on application startup?",
                "time": "2019-01-08 00:28:16",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5c33eea657c6883f9b7c34bc",
                "text": "that doesn't exactly work",
                "time": "2019-01-08 00:28:22",
                "index": 2,
                "user": "xenoterracide"
            },
            {
                "id": "5c33eeb882a6c30b909f6227",
                "text": "CommandLineRunner bean?",
                "time": "2019-01-08 00:28:40",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c33f15a12db9607e751ea1d",
                "text": "I think this *should* work, but\n\n```\nException in thread \"main\" java.lang.NoSuchMethodException: com.potrero.Application.main([Ljava.lang.String;)\n\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2476)\n\tat org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:47)\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:50)\n\tat org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)\n```\n```\npackage com.potrero\n\nimport org.apache.logging.log4j.LogManager\nimport org.springframework.beans.factory.getBeanProvider\nimport org.springframework.boot.autoconfigure.SpringBootApplication\nimport org.springframework.boot.info.BuildProperties\nimport org.springframework.boot.runApplication\n\n@SpringBootApplication\nopen class Application\n\nfun main(args: Array<String>) {\n    val ctx = runApplication<Application>(*args)\n    ctx.getBeanProvider<BuildProperties>().ifAvailable {\n        LogManager.getLogger(Application::class.java).info(\"Starting {}\", it.artifact)\n    }\n}\n```\nshouldn't this kotlin class work?",
                "time": "2019-01-08 00:39:54",
                "index": 4,
                "user": "xenoterracide"
            },
            {
                "id": "5c34a19826d86e4d5644ae1a",
                "text": "@xenoterracide wouldn\u2019t you want something like this?\n\n```kotlin\n@SpringBootApplication\nclass Application {\n\t@Bean\n\tfun runner(buildProperties: BuildProperties?) = CommandLineRunner {\n            if (buildProperties != null) {\n                LogManager.getLogger(Application::class.java).info(\"Starting {}\", buildProperties.artifact)\n            }\n\t}\n}\n\nfun main(args: Array<String>) {\n\trunApplication<DemoApplication>(*args)\n}\n```",
                "time": "2019-01-08 13:11:52",
                "index": 35,
                "user": "edeandrea"
            },
            {
                "id": "5c34c5c757c6883f9b817977",
                "text": "@edeandrea maybe, I'll give it a go, don't understand why the kotlin is blowing up.... I moved back to java for the application class and it runs though `BuildProperties` is not available...",
                "time": "2019-01-08 15:46:15",
                "index": 45,
                "user": "xenoterracide"
            },
            {
                "id": "5c34c88f26d86e4d5645b3fa",
                "text": "https://stackoverflow.com/q/54083990/206466",
                "time": "2019-01-08 15:58:07",
                "index": 46,
                "user": "xenoterracide"
            },
            {
                "id": "5c34cc0926d86e4d5645c7c1",
                "text": "@edeandrea when I do the java equivalent of what you suggest it says that the `BuildProperties` bean is not available",
                "time": "2019-01-08 16:12:57",
                "index": 47,
                "user": "xenoterracide"
            },
            {
                "id": "5c34ce7baac7082e6ff343aa",
                "text": "`BuildProperties` won\u2019t be available if your build does not generate a `build.properties` file. In Java you can use `Optional<BuildProperties>` as the injected bean",
                "time": "2019-01-08 16:23:23",
                "index": 48,
                "user": "edeandrea"
            },
            {
                "id": "5c34d4b46370df0b91acfbb9",
                "text": "@edeandrea my SO question in the comments shows where it's generating the file so it should be available? I also documented what I have in gradle, is something wrong there?",
                "time": "2019-01-08 16:49:56",
                "index": 49,
                "user": "xenoterracide"
            },
            {
                "id": "5c34dc444ed18278777bd4a8",
                "text": "the `BuildProperties` bean will be injected if it finds `classpath:META-INF/build-info.properties` on the classpath",
                "time": "2019-01-08 17:22:12",
                "index": 50,
                "user": "edeandrea"
            },
            {
                "id": "5c34dc9382a6c30b90a53e84",
                "text": "i would run a build and then inspect if that file is there in your archive (i.e. in your jar/war)\u2026if it is then maybe your IDE is messing with you (been known to happen in Eclipse)",
                "time": "2019-01-08 17:23:31",
                "index": 51,
                "user": "edeandrea"
            },
            {
                "id": "5c34dca58b6399655e297d63",
                "text": "to take the IDE out of it try running `gradlew bootRun` from the command line and see what happens",
                "time": "2019-01-08 17:23:49",
                "index": 52,
                "user": "edeandrea"
            },
            {
                "id": "5c34dd3326d86e4d56463b1c",
                "text": "well then why is it in `BOOT-INFO/classes/META-INF`",
                "time": "2019-01-08 17:26:11",
                "index": 53,
                "user": "xenoterracide"
            },
            {
                "id": "5c34dd72bd592b2e6e713c73",
                "text": "in my `build.gradle` i\u2019ve always just done\n\n```groovy\napply plugin: 'io.spring.dependency-management\u2019\napply plugin: 'org.springframework.boot'\napply plugin: 'com.gorylenko.gradle-git-properties'\n\nspringBoot {\n  buildInfo()\n}\n\ngenerateGitProperties {\n  onlyIf {\n    !source.isEmpty()\n  }\n}\n```\n\nAnd everything has always just worked",
                "time": "2019-01-08 17:27:14",
                "index": 55,
                "user": "edeandrea"
            },
            {
                "id": "5c34dd87bd592b2e6e713e78",
                "text": "@snicoll is that info only added on publish do you know?\n```\nCalebs-MBP:META-INF calebcushing$ cat MANIFEST.MF \nManifest-Version: 1.0\nMain-Class: org.springframework.boot.loader.JarLauncher\nStart-Class: com.potrero.Application```",
                "time": "2019-01-08 17:27:35",
                "index": 56,
                "user": "xenoterracide"
            },
            {
                "id": "5c34de5a26d86e4d56464430",
                "text": "Right now I just ran `gradlew assemble` and inspected my application\u2019s archive and I see `WEB-INF/classes/META-INF/build-info.properties` (note My project builds a war not a jar)",
                "time": "2019-01-08 17:31:06",
                "index": 57,
                "user": "edeandrea"
            },
            {
                "id": "5c34ded1357dd7655d38c7c5",
                "text": "if i switch to build a jar i do see `BOOT-INF/classes/META-INF/build-info.properties`",
                "time": "2019-01-08 17:33:05",
                "index": 58,
                "user": "edeandrea"
            },
            {
                "id": "5c34dfba357dd7655d38ce97",
                "text": "@edeandrea yeah I have that file generated but the bean still isn't available yet, however @snicoll is suggesting I just use the info in MANIFEST.MF in my banner... strangely though this metadata isn't there...",
                "time": "2019-01-08 17:36:58",
                "index": 59,
                "user": "xenoterracide"
            },
            {
                "id": "5c34dfc81491b27876dedcf9",
                "text": "In either case when i add\n\n```java\n@Bean\npublic CommandLineRunner runner(BuildProperties bp) {\n\treturn args -> System.out.println(\"bp = \" + ToStringBuilder.reflectionToString(bp));\n}\n```\n\nto my main application class I see it printed to the console on startup\n\n```\nbp = org.springframework.boot.info.BuildProperties@1f062e10[entries={version=1.0, artifact my-app-artifact, name=my-app-name, time=1546968979843, group=com.mycompany.mygroup}]\n```",
                "time": "2019-01-08 17:37:12",
                "index": 60,
                "user": "edeandrea"
            },
            {
                "id": "5c34e072bd592b2e6e715182",
                "text": "Ahh i think i missed what you are trying to do with the banner\u2026i think what the response on SO post says with putting placeholders in banner.txt and then making sure the `bootBuildInfo` task runs before the `processResources` task, then doing property substitution within the `processResources` task on `banner.txt` is probably the best way",
                "time": "2019-01-08 17:40:02",
                "index": 61,
                "user": "edeandrea"
            },
            {
                "id": "5c34e094aac7082e6ff3bced",
                "text": "it doesn't have to be banner, I'm just trying to get the information *early*",
                "time": "2019-01-08 17:40:36",
                "index": 62,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e0b626d86e4d564652bc",
                "text": "what does _early_ mean? what are you trying to do with the information?\n\n",
                "time": "2019-01-08 17:41:10",
                "index": 63,
                "user": "edeandrea"
            },
            {
                "id": "5c34e0d51d1c2c3f9ce085f4",
                "text": "print it to the console?",
                "time": "2019-01-08 17:41:41",
                "index": 64,
                "user": "edeandrea"
            },
            {
                "id": "5c34e0f24ed18278777bf1f8",
                "text": "Does it have to be part of the banner? does it have to be immediately after the banner? or can it appear to the console at some point during application startup?",
                "time": "2019-01-08 17:42:10",
                "index": 65,
                "user": "edeandrea"
            },
            {
                "id": "5c34e15126d86e4d56465658",
                "text": "would one of these [application events](https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-spring-application.html#boot-features-application-events-and-listeners) do the trick?",
                "time": "2019-01-08 17:43:45",
                "index": 66,
                "user": "edeandrea"
            },
            {
                "id": "5c34e1551948ad07e80b0524",
                "text": "@edeandrea needs to be before hibernate starts, or really before anything broken starts ;)",
                "time": "2019-01-08 17:43:49",
                "index": 67,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e16f1d1c2c3f9ce08a45",
                "text": "so in the first few lines of log probably",
                "time": "2019-01-08 17:44:15",
                "index": 68,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e1af1948ad07e80b0749",
                "text": "maybe listening for `ApplicationPreparedEvent` would work?",
                "time": "2019-01-08 17:45:19",
                "index": 69,
                "user": "edeandrea"
            },
            {
                "id": "5c34e1c626d86e4d56465942",
                "text": "maybe not - at that stage the context hasn\u2019t been loaded",
                "time": "2019-01-08 17:45:42",
                "index": 70,
                "user": "edeandrea"
            },
            {
                "id": "5c34e1e31491b27876deeb96",
                "text": "seems what you are really after is a hook to do something before a certain bean (or set of beans) are loaded",
                "time": "2019-01-08 17:46:11",
                "index": 71,
                "user": "edeandrea"
            },
            {
                "id": "5c34e2b526d86e4d56465f1c",
                "text": "```\n2019-01-08 11:48:03.913  INFO 24549 --- [           main] com.potrero.Application                  : Starting Application on Calebs-MBP.lan with PID 24549 (/Users/calebcushing/IdeaProjects/predictive-health-service-app/build/libs/predictive-health-service-app-0.1.7-3-g62911c1.jar started by calebcushing in /Users/calebcushing/IdeaProjects/predictive-health-service-app)\n2019-01-08 11:48:03.921  INFO 24549 --- [           main] com.potrero.Application                  : No active profile set, falling back to default profiles: default\n2019-01-08 11:48:04.186  WARN 24549 --- [kground-preinit] o.s.h.c.j.Jackson2ObjectMapperBuilder    : For Jackson Kotlin classes support please add \"com.fasterxml.jackson.module:jackson-module-kotlin\" to the classpath\n2019-01-08 11:48:05.582  INFO 24549 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.\n2019-01-08 11:48:05.782  INFO 24549 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 189ms. Found 2 repository interfaces.\n2019-01-08 11:48:06.573  INFO 24549 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$503f12ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n2019-01-08 11:48:06.984  WARN 24549 --- [           main] onfigReactiveWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration$$EnhancerBySpringCGLIB$$d03ce08e]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine suitable jdbc url\n2019-01-08 11:48:07.015  INFO 24549 --- [           main] ConditionEvaluationReportLoggingListener : \n\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.\n2019-01-08 11:48:07.017 ERROR 24549 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   : \n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nFailed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.\n\nReason: Failed to determine suitable jdbc url\n\n\nAction:\n\nConsider the following:\n\tIf you want an embedded database (H2, HSQL or Derby), please put it on the classpath.\n\tIf you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).```\n",
                "time": "2019-01-08 17:49:41",
                "index": 72,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e2c173360b4d55da99af",
                "text": "just trying to make sure it's before that ;)",
                "time": "2019-01-08 17:49:53",
                "index": 73,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e2e74ed18278777bfc91",
                "text": "note: that has your `CommandLineRunner` code in it",
                "time": "2019-01-08 17:50:31",
                "index": 74,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e2e88b6399655e29a663",
                "text": ":/",
                "time": "2019-01-08 17:50:32",
                "index": 75,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e31b6370df0b91ad62ab",
                "text": "`CommandLineRunner`s run after the application context is successfully refreshed. This error is due to a validation failure of some required properties. In that case a `CommandLineRunner` won\u2019t run",
                "time": "2019-01-08 17:51:23",
                "index": 76,
                "user": "edeandrea"
            },
            {
                "id": "5c34e33aaac7082e6ff3cd22",
                "text": "yes, so I want something that happens before validation?",
                "time": "2019-01-08 17:51:54",
                "index": 77,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e3923cf6c35a84af3fb5",
                "text": "that paste includes my custom banner.txt",
                "time": "2019-01-08 17:53:22",
                "index": 78,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e39c3cf6c35a84af402d",
                "text": "wonder why the manifest doesn't have that info",
                "time": "2019-01-08 17:53:32",
                "index": 79,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e3a026d86e4d56466691",
                "text": "i guess my question at this point is what is it you are trying to accomplish overall?",
                "time": "2019-01-08 17:53:36",
                "index": 80,
                "user": "edeandrea"
            },
            {
                "id": "5c34e3b482a6c30b90a573d3",
                "text": "say you can find the correct point to do something - what is it that you want to do at that point?",
                "time": "2019-01-08 17:53:56",
                "index": 81,
                "user": "edeandrea"
            },
            {
                "id": "5c34e3e01d1c2c3f9ce09eef",
                "text": "do you just want to include the build info in the log at application startup?",
                "time": "2019-01-08 17:54:40",
                "index": 82,
                "user": "edeandrea"
            },
            {
                "id": "5c34e4291491b27876defb2f",
                "text": "you could build your own custom `FailureAnalyzer` which takes in the `BuildProperties` bean and on application startup failure print something out",
                "time": "2019-01-08 17:55:53",
                "index": 83,
                "user": "edeandrea"
            },
            {
                "id": "5c34e4305ec8fe5a85207114",
                "text": "you could pursue the banner idea",
                "time": "2019-01-08 17:56:00",
                "index": 84,
                "user": "edeandrea"
            },
            {
                "id": "5c34e43b1948ad07e80b1cf4",
                "text": "There are a number of different ways to solve that problem",
                "time": "2019-01-08 17:56:11",
                "index": 85,
                "user": "edeandrea"
            },
            {
                "id": "5c34e4593cf6c35a84af44bd",
                "text": "a log message asap, that contains what version of the app they're trying to run",
                "time": "2019-01-08 17:56:41",
                "index": 86,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e46daac7082e6ff3d3c6",
                "text": "due bad ops script",
                "time": "2019-01-08 17:57:01",
                "index": 87,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e475357dd7655d38f367",
                "text": "for that i like the banner idea",
                "time": "2019-01-08 17:57:09",
                "index": 88,
                "user": "edeandrea"
            },
            {
                "id": "5c34e48dbd592b2e6e716d99",
                "text": "putting a custom placeholder in `banner.txt` and resolving it at build time so that it always displays at startup",
                "time": "2019-01-08 17:57:33",
                "index": 89,
                "user": "edeandrea"
            },
            {
                "id": "5c34e4b582a6c30b90a579e1",
                "text": "I did that... see above",
                "time": "2019-01-08 17:58:13",
                "index": 90,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e4e212db9607e757e11e",
                "text": "```\n${application.title} ${application.version}\n```\ncurrent content of `banner.txt`\n",
                "time": "2019-01-08 17:58:58",
                "index": 91,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e4ec12db9607e757e13e",
                "text": "current output, a space",
                "time": "2019-01-08 17:59:08",
                "index": 92,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e503bd592b2e6e716fa7",
                "text": "how are you getting your application\u2019s version into MANIFEST.MF?",
                "time": "2019-01-08 17:59:31",
                "index": 93,
                "user": "edeandrea"
            },
            {
                "id": "5c34e54412db9607e757e414",
                "text": "I'm probably not",
                "time": "2019-01-08 18:00:36",
                "index": 94,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e55b8b6399655e29b84a",
                "text": "been looking for that in the docs...",
                "time": "2019-01-08 18:00:59",
                "index": 95,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e58812db9607e757e5d6",
                "text": "thats not a Spring boot thing - thats a Gradle thing",
                "time": "2019-01-08 18:01:44",
                "index": 96,
                "user": "edeandrea"
            },
            {
                "id": "5c34e65612db9607e757eb69",
                "text": "sorry actually can\u2019t share that code directly as it has company-specific stuff in it",
                "time": "2019-01-08 18:05:10",
                "index": 97,
                "user": "edeandrea"
            },
            {
                "id": "5c34e6614ed18278777c1002",
                "text": "https://docs.gradle.org/current/userguide/java_plugin.html#sub:manifest",
                "time": "2019-01-08 18:05:21",
                "index": 98,
                "user": "edeandrea"
            },
            {
                "id": "5c34e66e4ed18278777c10c1",
                "text": "but that has details on how to get at stuff in the build and configure the manifest",
                "time": "2019-01-08 18:05:34",
                "index": 99,
                "user": "edeandrea"
            },
            {
                "id": "5c34e80f1d1c2c3f9ce0b9ee",
                "text": "we have stuff like this in our custom build plugins suite that every application uses. We put all kinds of other information into it so we can trace back any archive built in our CI environment back to the node/job/version/java version/gradle version/groovy version that built the artifact",
                "time": "2019-01-08 18:12:31",
                "index": 100,
                "user": "edeandrea"
            },
            {
                "id": "5c34e830357dd7655d391125",
                "text": "I have to go rip my hair out because that didn't actually add the stuff to manifest for some reason....",
                "time": "2019-01-08 18:13:04",
                "index": 101,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e87812db9607e757fcbe",
                "text": "how is your CI environment communicating the version to your build? At some point the `version` property in your gradle build needs to be set",
                "time": "2019-01-08 18:14:16",
                "index": 102,
                "user": "edeandrea"
            },
            {
                "id": "5c34e8a726d86e4d56468845",
                "text": "we use environment variables - our plugins do something like `project.version = System.env[\u2018BUILD_VERSION\u2019]`",
                "time": "2019-01-08 18:15:03",
                "index": 103,
                "user": "edeandrea"
            },
            {
                "id": "5c34e8abbd592b2e6e71893b",
                "text": "that's done by my plugin, but neither are being added to manifest and both are being added to build-info.prperties",
                "time": "2019-01-08 18:15:07",
                "index": 104,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e8cf357dd7655d39161b",
                "text": "maybe it's because it's a fat packed jar?",
                "time": "2019-01-08 18:15:43",
                "index": 105,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e8e83cf6c35a84af64bd",
                "text": "the fat packing rewrites the jar... and the manifest probably?",
                "time": "2019-01-08 18:16:08",
                "index": 106,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e9015ec8fe5a85208c7c",
                "text": "are you adding the `manifest` closure to the `Jar` task that produces your archive? or are you adding it to the `jar` closure (which only runs for the `jar` task directly)",
                "time": "2019-01-08 18:16:33",
                "index": 107,
                "user": "edeandrea"
            },
            {
                "id": "5c34e91a1d1c2c3f9ce0c00b",
                "text": "you could try putting the `manifest` closure inside a `tasks.withType(Jar)`",
                "time": "2019-01-08 18:16:58",
                "index": 108,
                "user": "edeandrea"
            },
            {
                "id": "5c34e92c1948ad07e80b3afa",
                "text": "that way it\u2019ll run for any task that creates a `Jar` (which includes `War` & `Ear`)",
                "time": "2019-01-08 18:17:16",
                "index": 109,
                "user": "edeandrea"
            },
            {
                "id": "5c34e933bd592b2e6e718e1d",
                "text": "```\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\nimport org.springframework.boot.gradle.tasks.bundling.BootJar\n\nplugins {\n    `java-library`\n    `maven-publish`\n    id(\"com.xenoterracide.gradle.sem-ver\").version(\"0.7.8\")\n    id(\"org.springframework.boot\").version(\"2.1.1.RELEASE\")\n    id(\"com.brightsparklabs.gradle.multi-git\").version(\"1.3.0\")\n}\n\ntasks.withType<BootJar>().configureEach {\n    this.enabled = true\n}\n\nspringBoot {\n    buildInfo()\n}\n\nval applicationModules = listOf(\n    \"ph-db-migration\",\n    \"ph-emr-event-pub\"\n)\n\ndependencies {\n    implementation(enforcedPlatform(\"org.springframework.boot:spring-boot-starter-parent:2.1.1.RELEASE\"))\n    applicationModules.map { \"${project.group}:$it:+\" }.forEach { runtime(it) }\n\n    runtime(\"org.springframework.boot:spring-boot-starter-actuator\")\n    runtime(\"org.springframework.boot:spring-boot-devtools\")\n    runtime(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n    implementation(\"org.springframework.boot:spring-boot-starter-webflux\")\n    testImplementation(\"org.springframework.boot:spring-boot-starter-test\")\n    testImplementation(\"io.projectreactor:reactor-test\")\n}\n\ntasks.withType<Test> {\n    useJUnitPlatform()\n}\n\nval repos = listOf(\n    \"ph-emr-entity\",\n    \"ph-emr-event-type\",\n    \"ph-emr-repo\",\n    \"ph-events\"\n)\n\nmultiGitPluginConfig {\n    repositoriesDir = file(\"modules\")\n    repositories = repos.associateWith { \"git@bitbucket.org:potrero/$it.git\" }\n}\n\ntasks.jar {\n    manifest {\n        attributes(\n            \"Implementation-Title\" to project.description,\n            \"Implementation-Version\" to project.version\n        )\n    }\n}\n\ntasks {\n    \"build\" {\n        gradle.includedBuilds.forEach { dependsOn(it.task(\":${this.name}\")) }\n    }\n    \"clean\" {\n        gradle.includedBuilds.forEach {\n            dependsOn(it.task(\":${this.name}\"))\n        }\n    }\n    \"wrapper\" {\n        gradle.includedBuilds.forEach {\n            dependsOn(it.task(\":${this.name}\"))\n        }\n    }\n}\n\nrepositories {\n    System.getenv(\"JAR_REPOSITORY_URI\")?.let {\n        maven(it) {\n            credentials({\n                username = System.getenv(\"JAR_REPOSITORY_USER\")!!\n                password = System.getenv(\"JAR_REPOSITORY_PASS\")!!\n            })\n        }\n    }\n    mavenCentral()\n}\n\nSystem.getenv(\"JRS_S3_URI\")?.let {\n    publishing {\n        publications {\n            create<MavenPublication>(\"bootJava\") {\n                artifact(tasks.getByName(\"bootJar\"))\n            }\n        }\n        repositories {\n            maven {\n                url = uri(it)\n\n                System.getenv(\"JRS_ACCESSKEYID\")?.let { accessKeyId ->\n                    credentials(AwsCredentials::class.java) {\n                        accessKey = accessKeyId\n                        setSecretKey(System.getenv(\"JRS_SECRETACCESSKEY\")!!)\n                    }\n                }\n            }\n        }\n    }\n}\n```",
                "time": "2019-01-08 18:17:23",
                "index": 110,
                "user": "xenoterracide"
            },
            {
                "id": "5c34e98a26d86e4d56468fb6",
                "text": "the spring boot gradle plugin disables the `jar` task and instead enabled the `bootJar` task",
                "time": "2019-01-08 18:18:50",
                "index": 111,
                "user": "edeandrea"
            },
            {
                "id": "5c34e9951d1c2c3f9ce0c4dc",
                "text": "so you probably need to apply the manifest stuff to that",
                "time": "2019-01-08 18:19:01",
                "index": 112,
                "user": "edeandrea"
            },
            {
                "id": "5c34ea4d82a6c30b90a5a331",
                "text": "finally, it worked!",
                "time": "2019-01-08 18:22:05",
                "index": 113,
                "user": "xenoterracide"
            },
            {
                "id": "5c34ea5657c6883f9b82786b",
                "text": ":)",
                "time": "2019-01-08 18:22:14",
                "index": 114,
                "user": "edeandrea"
            },
            {
                "id": "5c34ea65bd592b2e6e71976e",
                "text": "I was doing that before you said it ;) but yeah...",
                "time": "2019-01-08 18:22:29",
                "index": 115,
                "user": "xenoterracide"
            },
            {
                "id": "5c34ea736370df0b91ad8d79",
                "text": "glad it worked out for you",
                "time": "2019-01-08 18:22:43",
                "index": 116,
                "user": "edeandrea"
            },
            {
                "id": "5c34ea9b1491b27876df2383",
                "text": "that took... far more time than I think it should have... ",
                "time": "2019-01-08 18:23:23",
                "index": 117,
                "user": "xenoterracide"
            },
            {
                "id": "5c34eaa2bd592b2e6e7197f5",
                "text": "i would put the manifest stuff inside of\n\n```kotlin\ntasks.withType<Jar>().configureEach {\n    \n}\n```",
                "time": "2019-01-08 18:23:30",
                "index": 118,
                "user": "edeandrea"
            },
            {
                "id": "5c34eab7357dd7655d39216c",
                "text": "that way no matter when you create any jar file it\u2019ll be included in that file\u2019s manifest",
                "time": "2019-01-08 18:23:51",
                "index": 119,
                "user": "edeandrea"
            },
            {
                "id": "5c34f0eb82a6c30b90a5d754",
                "text": "@edeandrea yeah, good idea",
                "time": "2019-01-08 18:50:19",
                "index": 121,
                "user": "xenoterracide"
            },
            {
                "id": "5c34f2ec1948ad07e80b7a58",
                "text": "@edeandrea @snicoll thanks for the help!",
                "time": "2019-01-08 18:58:52",
                "index": 122,
                "user": "xenoterracide"
            },
            {
                "id": "5c34f60a1948ad07e80b8fd6",
                "text": "You're welcome",
                "time": "2019-01-08 19:12:10",
                "index": 123,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 187,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cdd7b1463dea422b491df8f",
                "text": "Hello all, \nI'm looking for a way to serialize back into a .properties or .yaml a root object annotated with @ConfigurationProperties (in which I modified a few values). Is it possible ?\nI fear not and everything I read leads me to believe that the mechanism is unidirectionnal... I've read the following guide [Property Binding in Spring Boot 2.0](https://spring.io/blog/2018/03/28/property-binding-in-spring-boot-2-0) and googled a bit but nothing showed up...\nIdeally it would preserve the comments originally stored in the original .properties or .yaml but it is not a hard requirement.\nAnyone got an idea ?",
                "time": "2019-05-16 15:00:36",
                "index": 0,
                "user": "fmarot"
            },
            {
                "id": "5cdd7c3c8265145bbb1ef2f5",
                "text": "@fmarot, is your goal to overwrite the original .properties file or just storing it somewhere else?",
                "time": "2019-05-16 15:05:32",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cdd7d0063dea422b491ebb2",
                "text": "Hi @tonisostrat, I fear that by saying that my goal is to overwrite the original .properties file you might tell me that it's not the right way to do it :D . But yes, this is the goal to simplify a legacy application.",
                "time": "2019-05-16 15:08:48",
                "index": 2,
                "user": "fmarot"
            },
            {
                "id": "5cdd7d927c363c75a7eddaf5",
                "text": "generally yes, overwriting/modifying internal properties files is not the right way to go.\n\nwhat's the actual use case?",
                "time": "2019-05-16 15:11:14",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5cdd80c47c363c75a7edf003",
                "text": " @tonisostrat (sorry for the delay) my current legacy app currently reads from a file and overwrites it when the user changes a setting from its the config panel. There is a lot of custom error-prone code involved and I was wondering if I could migrate all this to Spring Boot .properties/yaml/@ConfigurationProperties conventions to simplify the process",
                "time": "2019-05-16 15:24:52",
                "index": 4,
                "user": "fmarot"
            },
            {
                "id": "5cdd81389404bf2aed57fe3c",
                "text": "ah, no. any type of serialization back to the file has to be custom code, anyway. the annotation is one way, file -> pojo",
                "time": "2019-05-16 15:26:48",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5cdd817175d9a575a6f06da1",
                "text": "yeah, I was fearing this was the case ! Nevertheless, thanks very much for the support :)",
                "time": "2019-05-16 15:27:45",
                "index": 6,
                "user": "fmarot"
            }
        ]
    },
    {
        "id": 188,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c7ee6e165ffa019ea9261bc",
                "text": "extremely frustrated by this. I'm getting this error `Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'amqpConfiguration' for bean class [com.promontech.common.spring.spring2.config.AmqpConfiguration] conflicts with existing, non-compatible bean definition of same name and class [com.promontech.loanapp.common.config.AmqpConfiguration]`\n\nof course indicating that I have two beans of the same name being component scanned. \n\nIf I try to exclude the class like this \n```\n@SpringBootApplication(\n        scanBasePackages = {/*...*/ },\n        exclude = { com.promontech.common.spring.spring2.config.AmqpConfiguration.class }\n)```\nI continue to get the error. If I _add_ a `@ComponentScan` annotation and exclude it there, **it freaking works**. Why does the `@SpringBootApplication` annotation not properly exclude this class? \n\nThis, _in addition to the SpringBootApplication annotation_ works to exclude the AmqpConfiguration... \n```\n@ComponentScan(\n        basePackages = { /*...*/},\n        excludeFilters = @ComponentScan.Filter(\n                type = FilterType.ASSIGNABLE_TYPE,\n                classes = { com.promontech.common.spring.spring2.config.AmqpConfiguration.class }\n        )\n)\n```\n\nI've verified with `--debug` that the configuration class that is being used is my `@SpringBootApplication` class. here are parts of the logs. \n\n```\n14:07:53.530 [Test worker] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.promontech.loanapp.common.ClientConfigServiceTest]\n14:07:53.538 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]\n14:07:53.546 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]\n14:07:53.569 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.promontech.loanapp.common.ClientConfigServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]\n14:07:53.586 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.promontech.loanapp.common.ClientConfigServiceTest], using SpringBootContextLoader\n14:07:53.590 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.promontech.loanapp.common.ClientConfigServiceTest]: class path resource [com/promontech/loanapp/common/ClientConfigServiceTest-context.xml] does not exist\n14:07:53.590 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.promontech.loanapp.common.ClientConfigServiceTest]: class path resource [com/promontech/loanapp/common/ClientConfigServiceTestContext.groovy] does not exist\n14:07:53.591 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.promontech.loanapp.common.ClientConfigServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.\n14:07:53.592 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.promontech.loanapp.common.ClientConfigServiceTest]: ClientConfigServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.\n14:07:54.121 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file ```",
                "time": "2019-03-05 21:15:13",
                "index": 0,
                "user": "snowe2010"
            },
            {
                "id": "5c7f8f0fb4b6ef7bc8644235",
                "text": "@snowe2010 The `exclude` attribute is used to \"exclude specific auto-configuration classes such that they will never be applied\". Auto-configuration classes are loaded via entries in `META-INF/spring.factories`. Your `AmqpConfiguration` class is a `@Configuration` class that's being picked up by component scanning.",
                "time": "2019-03-06 09:12:47",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5c7ffe4de527821f0a149525",
                "text": "@wilkinsona in regards to `exclude` only excluding auto configurations, then is it possible to exclude component scanning without using the component scanning annotation? If I use the `@ComponentScan` annotation, then our `WebMvcTest`, `DataJpaTest`, etc. all fail due to the fact that the component scanning is overridden. \nfrom the docs. \n>Doing so effectively overrides the default component scan directive with the side effect of scanning those two packages regardless of the slice that you chose. For instance, a @DataJpaTest seems to suddenly scan components and user configurations of your application. Again, moving the custom directive to a separate class is a good way to fix this issue.\n\nwe have a lot of tests, and a lot of modules... it will take a long time to fix all the tests if I have to make custom configurations for each of them.  ",
                "time": "2019-03-06 17:07:25",
                "index": 47,
                "user": "snowe2010"
            },
            {
                "id": "5c8023cdd1e7281f09e75355",
                "text": "@snowe2010 You can use `@ComponentScan` as long as you configure the same filters as `@SpringBootApplication` does:\n\n```\n@ComponentScan(excludeFilters = {\n\t\t@Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n\t\t@Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\n```",
                "time": "2019-03-06 19:47:25",
                "index": 50,
                "user": "wilkinsona"
            },
            {
                "id": "5c8023f81fae6423ca4123d9",
                "text": "You could then add an additional filter to exclude the class(es) you don't want to be found by scanning",
                "time": "2019-03-06 19:48:08",
                "index": 51,
                "user": "wilkinsona"
            },
            {
                "id": "5c802402293ac75db5642f85",
                "text": "Alternatively, you could move those classes to another package.",
                "time": "2019-03-06 19:48:18",
                "index": 52,
                "user": "wilkinsona"
            },
            {
                "id": "5c80246986e34a126f9a2d81",
                "text": "@wilkinsona I'm not sure I understand. If I add a `@ComponentScan` it will break `@WebMvcTest` correct? ",
                "time": "2019-03-06 19:50:01",
                "index": 53,
                "user": "snowe2010"
            },
            {
                "id": "5c802511d1e7281f09e75a69",
                "text": "It will not break it if you include the filters shown in my comment above",
                "time": "2019-03-06 19:52:49",
                "index": 54,
                "user": "wilkinsona"
            },
            {
                "id": "5c8029ea8f294b134afc88d1",
                "text": "Are you saying to include component scan on the web MVC test? Or on the spring boot application?",
                "time": "2019-03-06 20:13:30",
                "index": 55,
                "user": "snowe2010"
            },
            {
                "id": "5c8035f10a6b915163e80fcd",
                "text": "@wilkinsona adding it to our main `@SpringBootApplication` class _or_ our `TestApplicationConfiguration` class both result in errors still. Not the same error though, but it's still missing beans that need to be autowired. `No qualifying bean of type 'com.promontech.common.spring.spring2.security.jwt.TokenHandler' available:` \n\nI had gotten to this error without the exclusion of the `AutoConfigurationExcludeFilter` but have been stuck on it since yesterday. \n\n```\n@SpringBootConfiguration\n@ComponentScan(\n        basePackages = {\n                \"com.promontech.common.spring.spring2\"\n        },\n        excludeFilters = {\n                @ComponentScan.Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n                @ComponentScan.Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class),\n                @ComponentScan.Filter(\n                        type = FilterType.ASSIGNABLE_TYPE,\n                        classes = { AmqpConfiguration.class, JacksonConfiguration.class, GlobalExceptionHandler.class }\n                )\n        },\n        includeFilters = @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, classes = { TokenHandler.class, UnverifiedUserDetailsFilter.class })\n)\npublic class TestApplicationConfiguration {\n```\nTried with both `useDefaultFilters = true` and `false`. \n\nDebug log is \n```\n2019-03-06 14:01:32.706 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: file [/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-deploy/build/classes/java/main/com/promontech/loanapp/config/MvcConfig.class]\n2019-03-06 14:01:32.715 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: file [/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-deploy/build/classes/java/main/com/promontech/loanapp/config/WebSecurityConfig.class]\n2019-03-06 14:01:32.783 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: URL [jar:file:/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-loanapp-write/build/libs/lp-server-loanapp-write-0.17.0-SNAPSHOT.jar!/com/promontech/loanapp/rest/loantx/LoanTransactionController.class]\n2019-03-06 14:01:34.605 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: URL [jar:file:/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-common/build/libs/lp-server-common-0.17.0-SNAPSHOT.jar!/com/promontech/loanapp/config/IdConfig.class]\n2019-03-06 14:01:34.620 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: URL [jar:file:/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-common/build/libs/lp-server-common-0.17.0-SNAPSHOT.jar!/com/promontech/loanapp/common/config/GlobalExceptionHandler.class]\n2019-03-06 14:01:34.640 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: URL [jar:file:/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-common/build/libs/lp-server-common-0.17.0-SNAPSHOT.jar!/com/promontech/loanapp/common/JGlobalDefaultExceptionHandler.class]\n2019-03-06 14:01:34.648 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: URL [jar:file:/Users/tyler.thrailkill/Documents/code/backend/server/lp-server-common/build/libs/lp-server-common-0.17.0-SNAPSHOT.jar!/com/promontech/loanapp/common/GlobalDefaultExceptionHandler.class]\n2019-03-06 14:01:34.905 DEBUG 74393 --- [    Test worker] o.s.c.a.ClassPathBeanDefinitionScanner   : Identified candidate component class: URL [jar:file:/Users/tyler.thrailkill/.m2/repository/com/promontech/common/spring/0.0.1-SNAPSHOT/spring-0.0.1-SNAPSHOT.jar!/com/promontech/common/spring/spring2/security/jwt/UnverifiedUserDetailsFilter.class]\n```",
                "time": "2019-03-06 21:04:49",
                "index": 58,
                "user": "snowe2010"
            },
            {
                "id": "5c8035f3d1e7281f09e7cabd",
                "text": "It picks up `UnverifiedUserDetailsFilter` but not `TokenHandler` even though they are in the same package, same module, same project, etc. ",
                "time": "2019-03-06 21:04:51",
                "index": 59,
                "user": "snowe2010"
            },
            {
                "id": "5c8036ba3162ec7bc72cfae6",
                "text": "I also tried this on both our `Application.java` and `TestApplicationConfiguration`",
                "time": "2019-03-06 21:08:10",
                "index": 60,
                "user": "snowe2010"
            },
            {
                "id": "5c80f15c293ac75db5694b0e",
                "text": "@snowe2010 Sorry, but I can't really tell why that would be the case without knowing more about your application. There are too many moving parts otherwise. It feels to me like you're fighting against component scanning which is fundamentally package-based. Rather than adding complexity by trying to tune component scanning to meet your needs, it may be easier to repackage some of your code or you remove `@Component` from the classes that you don't want component scanning to pick up.",
                "time": "2019-03-07 10:24:28",
                "index": 64,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 189,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd9eacd076992347a95502e",
                "text": "Hi springboot team, I am looking for some guidance on what is the best way to make outbound rest calls from SpringBoot application. I would like to understand what are the common practices used here. I am still new to it",
                "time": "2018-10-31 17:47:57",
                "index": 0,
                "user": "dhaval24"
            },
            {
                "id": "5bd9eb55995818347b80d4ca",
                "text": "I would also like to know is there a flexibility to choose the HTTP client when we make the RestCalls ",
                "time": "2018-10-31 17:50:13",
                "index": 1,
                "user": "dhaval24"
            },
            {
                "id": "5bd9ebf3995818347b80d677",
                "text": "@dhaval24 you may use WebClient : \nhttps://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-client-builder\nOr RestTemplate :\nhttps://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#webmvc-client",
                "time": "2018-10-31 17:52:51",
                "index": 2,
                "user": "BenEfrati"
            },
            {
                "id": "5bd9ec1dcd2a6b5bdc74fe42",
                "text": "Thanks @BenEfrati ! If I use RestTemplate, is there a way for me to configure the underlying HTTPClient ?",
                "time": "2018-10-31 17:53:33",
                "index": 3,
                "user": "dhaval24"
            },
            {
                "id": "5bd9ece46eb1e3597a8c9b89",
                "text": "With most things in Spring Boot, if you wire up a bean of the same type, it will be used instead of the autoconfigured bean @dhaval24 ",
                "time": "2018-10-31 17:56:52",
                "index": 4,
                "user": "pbriggs28"
            },
            {
                "id": "5bd9eceaa9c55b257487771d",
                "text": "Some examples: https://howtodoinjava.com/spring-restful/resttemplate-httpclient-java-config/",
                "time": "2018-10-31 17:56:58",
                "index": 5,
                "user": "pbriggs28"
            },
            {
                "id": "5bd9ed356eb1e3597a8c9e2f",
                "text": "And spring doc info on customizing: https://docs.spring.io/autorepo/docs/spring-boot/current/reference/htmlsingle/#boot-features-resttemplate-customization",
                "time": "2018-10-31 17:58:13",
                "index": 6,
                "user": "pbriggs28"
            },
            {
                "id": "5bd9ed4126be6b597949bbcb",
                "text": "> I would also like to know is there a flexibility to choose the HTTP client when we make the RestCalls \n\nYou may create multiple RestTemplates `Bean` and configure each one with HttpClient",
                "time": "2018-10-31 17:58:25",
                "index": 7,
                "user": "BenEfrati"
            },
            {
                "id": "5bd9ed82538a1c197151a61d",
                "text": "Thanks @BenEfrati. By default what does spring autowire ?",
                "time": "2018-10-31 17:59:30",
                "index": 8,
                "user": "dhaval24"
            },
            {
                "id": "5bd9ee275760a73eb4195e1f",
                "text": "If u create multiple beans of `RestTemplate` u may Autowire with bean name or qualifier, unless u'll get exception of multiple beans of type found...",
                "time": "2018-10-31 18:02:15",
                "index": 9,
                "user": "BenEfrati"
            },
            {
                "id": "5bd9ee475760a73eb4195f44",
                "text": "I get that. However, in common scenarios I would assume people use what spring provides by default",
                "time": "2018-10-31 18:02:47",
                "index": 10,
                "user": "dhaval24"
            },
            {
                "id": "5bd9ee4f5760a73eb4195f57",
                "text": "Therefore when I do something like",
                "time": "2018-10-31 18:02:55",
                "index": 11,
                "user": "dhaval24"
            },
            {
                "id": "5bd9ee6826be6b597949c059",
                "text": "`RestTemplate template = new RestTemplate()` what HttpClient is wired underneath ",
                "time": "2018-10-31 18:03:20",
                "index": 12,
                "user": "dhaval24"
            },
            {
                "id": "5bd9efd2076992347a957277",
                "text": "I think apache HttpClient",
                "time": "2018-10-31 18:09:22",
                "index": 13,
                "user": "BenEfrati"
            },
            {
                "id": "5bd9f01e538a1c197151b6e0",
                "text": "specific implement`CloseableHttpClient`",
                "time": "2018-10-31 18:10:38",
                "index": 14,
                "user": "BenEfrati"
            },
            {
                "id": "5bd9f1cb25b9875faeb1a94f",
                "text": "ok ",
                "time": "2018-10-31 18:17:47",
                "index": 15,
                "user": "dhaval24"
            },
            {
                "id": "5bd9f1cc538a1c197151bf6a",
                "text": "cool ",
                "time": "2018-10-31 18:17:48",
                "index": 16,
                "user": "dhaval24"
            },
            {
                "id": "5bd9f1cd6eb1e3597a8cbdcb",
                "text": "sounds good ",
                "time": "2018-10-31 18:17:49",
                "index": 17,
                "user": "dhaval24"
            }
        ]
    },
    {
        "id": 190,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d0d8d58d4535e477a7ac671",
                "text": "Hi I'm wondering if anyone here has loaded up jars from a spring project? I'm loading jars with a classloader in my Spring project. It scans and loads all classes, then makes a new instance of a module class all the plugins interrupt, and autowires it.\n\nEach module creates a AnnotationConfigApplicationContext and returns it's own Configuration class annotated with @Configuration also containing @ComponentScan. Unfortunately ComponentScan doesn't appear to be working in the modules when I autowire via the modules context\n\nAnyone know how to make this work?  ",
                "time": "2019-06-22 02:07:20",
                "index": 0,
                "user": "Redmancometh"
            },
            {
                "id": "5d0df6d41e35ef14b6990e32",
                "text": "@Redmancometh Can you share some code that illustrates what you're trying to do?",
                "time": "2019-06-22 09:37:24",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d0fd955d4535e477a8daec4",
                "text": "@wilkinsona \nThis is my module class: https://hastebin.com/potayuqali.java\nThis is the controller which loads said modules: https://hastebin.com/ipegaqojiv.java\nThis is an example of one of the modules: https://hastebin.com/umujiqepob.java\nThis is the @configuration for that module: https://hastebin.com/lakemucifo.css",
                "time": "2019-06-23 19:56:05",
                "index": 10,
                "user": "Redmancometh"
            },
            {
                "id": "5d1135b4aafbc326297ad21f",
                "text": "@Redmancometh If you can turn that into something that I can run and that illustrates the problem, I'll happily take a look. Unfortunately, I don't have enough time to piece things together.",
                "time": "2019-06-24 20:42:28",
                "index": 22,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 191,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c90e62cfcaf7b5f73dcd6a3",
                "text": "Is there a way to easily require the Accept-Language in a subset of RestControllers? Lets say N controllers M require it & should return 400 bad request. By easy I mean an annotation on ClassLevel instead of @NotNull @RequestHeader in every single method",
                "time": "2019-03-19 12:53:00",
                "index": 0,
                "user": "carlmolemans"
            },
            {
                "id": "5c90eccc9d9cc8114ae764bf",
                "text": "@carlmolemans the `@RequestMapping` annotation has a `headers` attribute; and you can use that annotation at the class level",
                "time": "2019-03-19 13:21:16",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5c90ed028aa66959b637085a",
                "text": "thx ",
                "time": "2019-03-19 13:22:10",
                "index": 2,
                "user": "carlmolemans"
            },
            {
                "id": "5c90f38b9d9cc8114ae7988d",
                "text": "@bclozel results in 404 not 400",
                "time": "2019-03-19 13:50:03",
                "index": 3,
                "user": "carlmolemans"
            }
        ]
    },
    {
        "id": 192,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd539a3bc163f62b63275f8",
                "text": "Hello. Is there a way to manually set the `actuator/health` endpoint status? I would like to be able to set a status (could be a custom health check underneath the main status) to Up/Down with an API call. I know I could do this by building my own API for it, but is there a way within spring boot?",
                "time": "2019-11-20 13:03:31",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5dd539ca23300564a64960e8",
                "text": "for instance, can I POST to `/actuator/health` and set a status value?",
                "time": "2019-11-20 13:04:10",
                "index": 1,
                "user": "springroll12"
            },
            {
                "id": "5dd5423a167c4f62b788490b",
                "text": "@springroll12 No, you can't. You should implement your own health contributor/indicator for that",
                "time": "2019-11-20 13:40:10",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5dd54924bc163f62b632e132",
                "text": "@wilkinsona To clarify: If I create my own health indicator that extends `HealthIndicator`,  I can't POST to `/actuator/health` to change the value of that indicator either? ",
                "time": "2019-11-20 14:09:40",
                "index": 5,
                "user": "springroll12"
            },
            {
                "id": "5dd5493cedec8e6c1ab07658",
                "text": "(obviously I would have to enable the details on the health endpoint)",
                "time": "2019-11-20 14:10:04",
                "index": 6,
                "user": "springroll12"
            },
            {
                "id": "5dd54d634d0c163b5b674777",
                "text": "@springroll12 Correct, you'll need to provide a mechanism for changing your custom indicator's response. That could be a `@Controller`, an MBean, whatever you want.",
                "time": "2019-11-20 14:27:47",
                "index": 10,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 193,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb35c725331811c2e39ea01",
                "text": "Hello, I'm having an usecase where at this moment I have a normale Spring Boot (2.0.4) application, with a application.yaml and @EnableConfigurationProperties and @ConfigurationProperties configured. \nHowever some of these properties need to be retrieved from an external system, not in particular a Spring Cloud config server, but maybe I could use that (or dont) as a proxy in between",
                "time": "2018-10-02 11:54:26",
                "index": 0,
                "user": "dnijssen"
            },
            {
                "id": "5bb35ca2c08b8b3067bee116",
                "text": "So in my Spring Boot application, lets call it MyApp I need to retrieve content (on the fly / for every request) from a CMS. What is the best way to handle this? ",
                "time": "2018-10-02 11:55:14",
                "index": 1,
                "user": "dnijssen"
            },
            {
                "id": "5bb35cc65331811c2e39ecaa",
                "text": "I would love to stick with my @ConfigurationProperties  but it would be nice if there was some hook that could help me with retrieving part of the properties from a CMS",
                "time": "2018-10-02 11:55:50",
                "index": 2,
                "user": "dnijssen"
            },
            {
                "id": "5bb35cf0c08b8b3067bee325",
                "text": "And preferably with one call to the CMS / external application :) ",
                "time": "2018-10-02 11:56:32",
                "index": 3,
                "user": "dnijssen"
            },
            {
                "id": "5bb362d7435c2a518e3da1af",
                "text": "@dnijssen I think the correct implementation would depend on the kind of information coming from the CMS. Is the information to be considered properties that would drive the configuration of your application? Or is it more along the lines of content, not necessarily configuration?\n\nIf it is configuration then this should only be read once before bean creation, not on every request. Otherwise you\u2019d have to reload your application context on each request, which surely wouldn\u2019t be a good thing",
                "time": "2018-10-02 12:21:43",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5bb36300a9be136b94e42b2c",
                "text": "`@ConfigurationProperties` are meant just for that purpose - fetching configuration information once on application startup as well as providing a mechanism for refreshing the information and reloading the application context",
                "time": "2018-10-02 12:22:24",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5bb36331435c2a518e3da2f9",
                "text": "if the information you want to retrieve is not configuration-related (i.e. it does not define behavior/configuration of beans within the context), then you will most likely need to figure out a different mechanism for retrieving it",
                "time": "2018-10-02 12:23:13",
                "index": 6,
                "user": "edeandrea"
            },
            {
                "id": "5bb36344435c2a518e3da36b",
                "text": "just my 2 cents",
                "time": "2018-10-02 12:23:32",
                "index": 7,
                "user": "edeandrea"
            },
            {
                "id": "5bb3727d600c5f6423411a4e",
                "text": "oke thank you for your thoughts about this ",
                "time": "2018-10-02 13:28:29",
                "index": 8,
                "user": "dnijssen"
            }
        ]
    },
    {
        "id": 194,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be9b9ad62866f74738a631c",
                "text": "Spring Boot has special support for converting to `java.time.Duration` and `org.springframework.util.unit.DataSize` when reading `application.properties`.\nDoes the same work for `java.time.Period`?",
                "time": "2018-11-12 17:34:37",
                "index": 0,
                "user": "larsgrefer"
            },
            {
                "id": "5be9c1127a36913a9a302216",
                "text": "@larsgrefer In terms of `java.time.*`, it's only for `Duration`.",
                "time": "2018-11-12 18:06:10",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5be9c1643102f145218ed6eb",
                "text": "@wilkinsona Are there any plans/discussions to support this?",
                "time": "2018-11-12 18:07:32",
                "index": 5,
                "user": "larsgrefer"
            },
            {
                "id": "5be9c1a4d001b917204cdac1",
                "text": "We don't have any plans to support it",
                "time": "2018-11-12 18:08:36",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5be9c217bb06d73a9962d009",
                "text": "Shall I open an issue for this?",
                "time": "2018-11-12 18:10:31",
                "index": 7,
                "user": "larsgrefer"
            },
            {
                "id": "5be9c2ad9600d10e649c583b",
                "text": "Sure. FWIW, I think it's unlikely that we'll implement anything specifically for `Period` as I don't think there's as obvious a need as there was for `Duration`. Anything that is accepted by `Period.parse` is already supported thanks to Spring Framework's `PeriodFormatter`.",
                "time": "2018-11-12 18:13:01",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5be9c335d001b917204ce240",
                "text": "Oh, okay. `P6M` is not as pretty as `6m`, but will work, too. Thanks for the tip.",
                "time": "2018-11-12 18:15:17",
                "index": 9,
                "user": "larsgrefer"
            }
        ]
    },
    {
        "id": 195,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5efb1b9554d7862dc4b9a883",
                "text": "Hello, I have upgraded a service to spring-boot 2.3.1 from 2.2.4. A previously passing test which was asserting beans of two types (one type extending another) are the same instance, is now failing. Now there are two instance, one is normal instance, the other is `MockitoMock`, whereas both are `@Autowired` into the test class, and it's a `@SpringBootTest`. What are the changes in the spring-boot `2.3.1` that's causing this change in behaviour?",
                "time": "2020-06-30 11:01:41",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5efb21cfec4a341beefa5fea",
                "text": "@asgarj Is there a `FactoryBean` involved? If so, I would guess that it's https://github.com/spring-projects/spring-boot/issues/20665 that's caused the change in behaviour.",
                "time": "2020-06-30 11:28:15",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5efb2205a813c72dcf1b8135",
                "text": "Thanks @wilkinsona I put another aspect of it in the thread, I think that's easier to understand the point of my question",
                "time": "2020-06-30 11:29:09",
                "index": 2,
                "user": "asgarj"
            },
            {
                "id": "5efb22d5e0e5673398e33e7f",
                "text": "\nThe test looks as below\n```\n@ExtendWith(SpringExtension.class)\n@SpringBootTest(classes = { SpringBootApp.class })\n@TestPropertySource(properties = { \"feature-flag=false\" })\nclass DummyTest {\n@Autowired\n  ConfigurableApplicationContext applicationContext;\n\n  @Test\n  @DisplayName(\"...\")\n  void test() {\n    var context = AssertableApplicationContext.get(() -> applicationContext);\n\n    assertThat(context)\n        .hasSingleBean(DummyBeanType.class);\n  }\n}\n```",
                "time": "2020-06-30 11:32:37",
                "index": 3,
                "user": "asgarj"
            },
            {
                "id": "5efb23406c06cd1bf462e0ec",
                "text": "Is that issue you mentioned resolved and part of the spring-boot `2.3.1`?",
                "time": "2020-06-30 11:34:24",
                "index": 4,
                "user": "asgarj"
            },
            {
                "id": "5efb239efa0c9221fc6c60b8",
                "text": "When I inspect the instance of the `DummyBeanType` in the example above, it has `MockitoMock` in its name.",
                "time": "2020-06-30 11:35:58",
                "index": 5,
                "user": "asgarj"
            },
            {
                "id": "5efb243b54d7862dc4b9bde0",
                "text": "The fix for 20665 is in 2.3.1 but it may be what is causing the problem rather than a fix for it. There was a bug where `@MockBean` would eagerly initialise factory beans. To fix this, we had to lose some ability to detect the bean type that a factory bean would produce. This can be fixed by the factory bean definition being enhanced with some metadata about the type that it'll produce.\n\nLooking at your code snippet above, I don't think my guess was right. I can't see any sign of `@MockBean` so I can't explain why `DummyBeanType` has become a Mockito mock.",
                "time": "2020-06-30 11:38:35",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 196,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e9ee8d547110862054d99a0",
                "text": "Question about running a piece of code transactionally in the application startup.\nMore context:\nI need to programmatically schedule some Quartz jobs and I do it in `@PostConstruct` method. One way to ensure transactionality around scheduling is using programmatic transaction management which I want to avoid and rather rely on the applications' TX management (because this is a library). I know that `@Transactional` annotation if coexists with `@PostConstruct` on a method, it wouldn't take affect.\nSo my question is what's the best approach?\n* (1) if I listen to an application event (e.g. ContextRefreshed) would my `@Transactional` annotated `onApplicationEvent` method run transactionally?\n* (2) If I implement InitializingBean, would `afterPropertiesSet()` method work with `@Transactional` annotation on top of it? (I guess no?)\n* (3) If I call another bean's `@Transactional` method in my `@PostConstruct` method, would it be transactional?",
                "time": "2020-04-21 12:36:37",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5e9ee8f5d65bcf75b5de04a2",
                "text": "No to all",
                "time": "2020-04-21 12:37:09",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e9ee90363e7b73a5ff5230a",
                "text": "Ah, sorry (1) might",
                "time": "2020-04-21 12:37:23",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5e9ee91585b01628f069f00b",
                "text": "(2) and (3) are mentioned in the reference documentation btw",
                "time": "2020-04-21 12:37:41",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5e9ee952e920022432c32da9",
                "text": "I am not sure I understood how transaction management would help you with this though. I would use programmatic registration, in particular for a library",
                "time": "2020-04-21 12:38:42",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5e9ee9668e987f3a5e35adb2",
                "text": "you have no way to know for sure transaction management was enabled on the app used by your library",
                "time": "2020-04-21 12:39:02",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5e9ee9b1a1284c4f20ab5d94",
                "text": "with spring-quartz, quartz uses JobStoreCMT which relies on spring tx management",
                "time": "2020-04-21 12:40:17",
                "index": 6,
                "user": "asgarj"
            },
            {
                "id": "5e9ee9cbc7dcfc14e2d9c238",
                "text": "Ah you\u2019re using the database to store the jobs, that\u2019s the part I missed",
                "time": "2020-04-21 12:40:43",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5e9ee9d685b01628f069f3d8",
                "text": "The problem with programmatic one is to get the right transaction manager for that datasource",
                "time": "2020-04-21 12:40:54",
                "index": 8,
                "user": "asgarj"
            },
            {
                "id": "5e9ee9f42ff88975b43b82f0",
                "text": "If you use `@Transactional` you have no way to know if it is indeed transactional",
                "time": "2020-04-21 12:41:24",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5e9ee9fcd240da24338ee669",
                "text": "relying on `@Transactional` would help I guess",
                "time": "2020-04-21 12:41:32",
                "index": 10,
                "user": "asgarj"
            },
            {
                "id": "5e9ee9fe8e987f3a5e35afe5",
                "text": "Well you could check I guess",
                "time": "2020-04-21 12:41:34",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5e9eea1a74bfed5a1b553326",
                "text": "You could use `SmartInitializingSingleton` instead",
                "time": "2020-04-21 12:42:02",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5e9eea1f0480c128efd83a89",
                "text": "proxies will be created at that point",
                "time": "2020-04-21 12:42:07",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5e9eea3bc7dcfc14e2d9c357",
                "text": "Give that one a try",
                "time": "2020-04-21 12:42:35",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5e9eea6ba1284c4f20ab60c3",
                "text": "Is it an interface to implement?",
                "time": "2020-04-21 12:43:23",
                "index": 15,
                "user": "asgarj"
            },
            {
                "id": "5e9eea7747110862054da2d5",
                "text": "Check in your ide?",
                "time": "2020-04-21 12:43:35",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5e9eea9d85b01628f069f5c3",
                "text": "And how can I test that `@Transactional` annotation would take affect (that I could use to test the event approach as well)",
                "time": "2020-04-21 12:44:13",
                "index": 17,
                "user": "asgarj"
            },
            {
                "id": "5e9eeb59e920022432c33544",
                "text": "Wow so far that interface docs sounds like what I needed :+1: . ",
                "time": "2020-04-21 12:47:21",
                "index": 18,
                "user": "asgarj"
            },
            {
                "id": "5e9eeba30480c128efd840ce",
                "text": " So I need to annotate the `afterSingletonsInstantiated` method with `@Transactional` right? Second important question, how can I test this?",
                "time": "2020-04-21 12:48:35",
                "index": 19,
                "user": "asgarj"
            }
        ]
    },
    {
        "id": 197,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb49e733844923661d98b22",
                "text": "Hello guys, how to add error handling in default CRUD methods like deleteById, findById? If id does not exist it throw exception, and I want to handle it to change the status to 400 and to write some message in ResponseBody.",
                "time": "2018-10-03 10:48:19",
                "index": 0,
                "user": "vlatk0o"
            },
            {
                "id": "5bb49eb4e65a634336781712",
                "text": "Catch the exception in your endpoint and return a 400 response in your catch althogether with the message you want",
                "time": "2018-10-03 10:49:24",
                "index": 1,
                "user": "PaulienVa"
            },
            {
                "id": "5bb49f8c6e5a401c2d0d5685",
                "text": "@PaulienVa thank you a lot!",
                "time": "2018-10-03 10:53:00",
                "index": 2,
                "user": "vlatk0o"
            }
        ]
    },
    {
        "id": 198,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bfefdf2f849b222e0bbc309",
                "text": "can we annotate POJO (Employee.class with getters/setters) class with @Component so that i can autowire and use it in service class.",
                "time": "2018-11-28 20:43:30",
                "index": 0,
                "user": "gitmnd"
            },
            {
                "id": "5bfefe0ad24f9324d26b0410",
                "text": "is it good practise to avoid creating new Employee() everytime inside method?",
                "time": "2018-11-28 20:43:54",
                "index": 1,
                "user": "gitmnd"
            },
            {
                "id": "5bfefe27b6c0701052a1f8ee",
                "text": "No, it is fine to create new Employee() in the service class",
                "time": "2018-11-28 20:44:23",
                "index": 2,
                "user": "pbriggs28"
            },
            {
                "id": "5bfefe53ced7003fe19ec822",
                "text": "any specific reason to not to have annotate for POJO ?",
                "time": "2018-11-28 20:45:07",
                "index": 3,
                "user": "gitmnd"
            },
            {
                "id": "5bfefeeb7074b903686e60a1",
                "text": "It\u2019s more like what reason do you have TO annotate it. I would only autowire it if you needed some stuff injected into the Employee class. Even then you would have to be careful with the scope. By default @Autowired is singleton meaning there is only ever one. You would probably want request scoped but even then, what if you needed to create multiple employees in one request?",
                "time": "2018-11-28 20:47:39",
                "index": 4,
                "user": "pbriggs28"
            },
            {
                "id": "5bfefefff048fa10513ab72d",
                "text": "It would just add an uneccesary level of complexity with zero benefit.",
                "time": "2018-11-28 20:47:59",
                "index": 5,
                "user": "pbriggs28"
            },
            {
                "id": "5bff0007d24f9324d26b1219",
                "text": "I agree !! I could very well use @Scope(\"prototype\") to get new instance every time in service method for every request. The reason i am looking for this behaviour is during unit testing,every time i need to use Spy to access the new Employee() method or need to move the new object creation to some factory implementation.",
                "time": "2018-11-28 20:52:23",
                "index": 6,
                "user": "gitmnd"
            },
            {
                "id": "5bff00c3cb32736b29aaffd7",
                "text": "Not to harm you @gitmnd but what you are saying doesn\u2019t make sense to be done. It\u2019s a POJO not a service or something, why would you inject that instead of creating one as necessary?\nI know you said about your tests but what I can tell so far is that your tests are probably wrong ",
                "time": "2018-11-28 20:55:31",
                "index": 7,
                "user": "marcosbarbero"
            },
            {
                "id": "5bff0196cb32736b29ab0630",
                "text": "@marcosbarbero ok fine..",
                "time": "2018-11-28 20:59:02",
                "index": 8,
                "user": "gitmnd"
            },
            {
                "id": "5bff01b9958fc5389504f33a",
                "text": "understood",
                "time": "2018-11-28 20:59:37",
                "index": 9,
                "user": "gitmnd"
            },
            {
                "id": "5bff19fcf59704348e1cecf4",
                "text": "If you wanna paste your service method in question and your test maybe we can help you design it?",
                "time": "2018-11-28 22:43:08",
                "index": 10,
                "user": "pbriggs28"
            }
        ]
    },
    {
        "id": 199,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5de93b87f65fec1c8ec9bb11",
                "text": "Hey is there a reason why the Jaxb2XmlDecoder does not support own xml mediatypes (application/\\*+xml)? The Jackson2JsonDecode supports custom json mediatypes (application/*+json)",
                "time": "2019-12-05 17:16:55",
                "index": 0,
                "user": "Chr3is"
            },
            {
                "id": "5de941bbb065c6433c4347a2",
                "text": "@Chr3is Both decoders support any mime types you want. You can pass them into the constructor.",
                "time": "2019-12-05 17:43:23",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5de95e6105eec2433ddd714b",
                "text": "@wilkinsona yeah I extended the Jaxb2XmlDecoder with the application/*+xml mediatype and registered him in my spring webclient but I think it should support this out of the box like the jsondecoder or am I wrong?",
                "time": "2019-12-05 19:45:37",
                "index": 4,
                "user": "Chr3is"
            },
            {
                "id": "5dea662646397c721c99381e",
                "text": "@wilkinsona can you give me a/the reason for supporting application/\\*+json in the Jackson2JsonDecode but not application/*+xml in the Jaxb2XmlDecoder (out of the box without extra configuration)? I think they should behave the same way..  ",
                "time": "2019-12-06 14:31:02",
                "index": 12,
                "user": "Chr3is"
            },
            {
                "id": "5dea89f626eeb8518f793530",
                "text": "@Chr3is I can't as I wasn't involved in the decision. You'd have to ask the Framework team. @bclozel might know.",
                "time": "2019-12-06 17:03:50",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5dea9b8908d0c961b7017c20",
                "text": "@Chr3is I don't remember anyone asking for that. Introducing it right now could be a breaking change. Maybe create an issue here? https://github.com/spring-projects/spring-framework/issues",
                "time": "2019-12-06 18:18:49",
                "index": 26,
                "user": "bclozel"
            },
            {
                "id": "5deabb7246397c721c9b9827",
                "text": "@bclozel all right I am going to create an issue tomorrow ",
                "time": "2019-12-06 20:34:58",
                "index": 29,
                "user": "Chr3is"
            }
        ]
    },
    {
        "id": 200,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d2ef26a3e2c7e39709e46fa",
                "text": "Why is spring boot running scheduled tasks while building JAR file?",
                "time": "2019-07-17 10:03:22",
                "index": 0,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d2efbfd4d750532415f21be",
                "text": "@a-mujthaba321 I would guess it's your tests that are doing that, but it's impossible to say for sure without some more information",
                "time": "2019-07-17 10:44:13",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 201,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd3c5e26ba2347d2dbf8918",
                "text": "is there any built-in support to combine `org.springframework.test.web.client.RequestMatcher`s  ?",
                "time": "2019-11-19 10:37:22",
                "index": 0,
                "user": "tgeens"
            },
            {
                "id": "5dd3c6565eb2e813db511a3b",
                "text": "@tgeens what do you mean? The API chains.",
                "time": "2019-11-19 10:39:18",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3c70a68ad1c4a0ff3aad9",
                "text": "@tgeens typically you'd use `org.springframework.test.web.client.ResponseActions.andExpect(RequestMatcher)` on the `ResponseActions` returned from `org.springframework.test.web.client.MockRestServiceServer.expect(RequestMatcher)` to configure multiple expectations for a single request.",
                "time": "2019-11-19 10:42:18",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dd3c75168ad1c4a0ff3ac0a",
                "text": "aha, that was the point I was missing",
                "time": "2019-11-19 10:43:28",
                "index": 3,
                "user": "tgeens"
            },
            {
                "id": "5dd3c754091dd14a0ee95025",
                "text": "thank you very much",
                "time": "2019-11-19 10:43:32",
                "index": 4,
                "user": "tgeens"
            }
        ]
    },
    {
        "id": 202,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5cd3e01956271260f92ec491",
                "text": "Hi, I would like to migrate my spring boot application from properties to yaml file. \nWhile I was reading the documentation I found this :\n[24.7.4 YAML Shortcomings](https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html#boot-features-external-config-yaml-shortcomings)\n``` \nYAML files cannot be loaded by using the @PropertySource annotation. So, in the case that you need to load values that way, you need to use a properties file.\n```\n\nActually I use the annotation ```@PropertySource ``` and it is working correctly with properties file as with yaml file.\n\nSomeone can explain to me if I am doing something wrong or there are an error inside the springboot documentation ?",
                "time": "2019-05-09 08:08:57",
                "index": 0,
                "user": "yatho"
            },
            {
                "id": "5cd3e06879d70050993db1a3",
                "text": "SB has a *special* handler for the \"application.yaml\" file.",
                "time": "2019-05-09 08:10:16",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3e07dda34620ff90e6c84",
                "text": "but if you do `@PropertySource(\"my-random-config.yaml\")` it will fail",
                "time": "2019-05-09 08:10:37",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3e0900824230a7703edeb",
                "text": "In fact it is working in my project",
                "time": "2019-05-09 08:10:56",
                "index": 3,
                "user": "yatho"
            },
            {
                "id": "5cd3e6250824230a7704161d",
                "text": "@yatho, i doubt that. can you show us some code?",
                "time": "2019-05-09 08:34:45",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3e67779d70050993dddcc",
                "text": "```\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.TYPE})\n@Documented\n@PropertySource(\"classpath:application-fwk-batch.yaml\")\n@Import({BatchStandardConfiguration.class})\n@EnableBatchProcessing\n@Configuration\npublic @interface EnableBatchStandard {\n}\n```",
                "time": "2019-05-09 08:36:07",
                "index": 6,
                "user": "yatho"
            },
            {
                "id": "5cd3e768f52a237516ff5952",
                "text": "that's because `application-fwk-batch.yaml` is considered to be a profile-specific derivative of `application.yaml`. you can read more about it here: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html#boot-features-external-config-profile-specific-properties\n\nas i said, try it with a completely random `.yaml` file, you'll see it doesn't work.",
                "time": "2019-05-09 08:40:08",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3e8df79d70050993deb64",
                "text": "I have just changed the name of properties for test and it's continue to work correctly",
                "time": "2019-05-09 08:46:23",
                "index": 8,
                "user": "yatho"
            },
            {
                "id": "5cd3e900bdc3b64fcf1652b3",
                "text": "what exactly did you change?",
                "time": "2019-05-09 08:46:56",
                "index": 9,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3e90abdc3b64fcf165316",
                "text": "I think the answer is here \n```\n24.7 Using YAML Instead of Properties\nYAML is a superset of JSON and, as such, is a convenient format for specifying hierarchical configuration data. The SpringApplication class automatically supports YAML as an alternative to properties whenever you have the SnakeYAML library on your classpath.\n\n[Note]\nIf you use \u201cStarters\u201d, SnakeYAML is automatically provided by spring-boot-starter.\n```",
                "time": "2019-05-09 08:47:06",
                "index": 10,
                "user": "yatho"
            },
            {
                "id": "5cd3e920f251e60ffa4edc43",
                "text": "I have done a refactor of the name and a mvn clean install",
                "time": "2019-05-09 08:47:28",
                "index": 11,
                "user": "yatho"
            },
            {
                "id": "5cd3ea05bdc3b64fcf16589e",
                "text": "what did you change the name to",
                "time": "2019-05-09 08:51:17",
                "index": 12,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3ea1a56271260f92f105a",
                "text": "random.yaml",
                "time": "2019-05-09 08:51:38",
                "index": 13,
                "user": "yatho"
            },
            {
                "id": "5cd3eb2ce7f42160fa5b07ba",
                "text": "very interesting. it seems like this is something that they recently added support for and didn't update the docs. it didn't used to be possible",
                "time": "2019-05-09 08:56:12",
                "index": 14,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3ee2556271260f92f335f",
                "text": "I have just open an issue on github",
                "time": "2019-05-09 09:08:53",
                "index": 15,
                "user": "yatho"
            },
            {
                "id": "5cd3eea45d48a24fd0990404",
                "text": "pay no attention, i'm an idiot :D",
                "time": "2019-05-09 09:11:00",
                "index": 16,
                "user": "tonisostrat"
            },
            {
                "id": "5cd3eeb08fcdb05d47a54dc4",
                "text": ":D",
                "time": "2019-05-09 09:11:12",
                "index": 17,
                "user": "yatho"
            },
            {
                "id": "5cd3f70af251e60ffa4f3e85",
                "text": "@yatho the issue you\u2019ve created looks wrong to me.",
                "time": "2019-05-09 09:46:50",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5cd3f72479d70050993e56bd",
                "text": "> I have just changed the name of properties for test and it's continue to work correctly",
                "time": "2019-05-09 09:47:16",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5cd3f72e0824230a770496a0",
                "text": "How is that proving the yaml file is loaded?",
                "time": "2019-05-09 09:47:26",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5cd3f76d79d70050993e581b",
                "text": "@snicoll I am using some @Value to check the value inside the yaml file ",
                "time": "2019-05-09 09:48:29",
                "index": 21,
                "user": "yatho"
            },
            {
                "id": "5cd3f78a5a887e1cd9b93e59",
                "text": "It could come from another source, that doesn\u2019t mean that file was loaded",
                "time": "2019-05-09 09:48:58",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5cd3f7d3e7f42160fa5b6e5c",
                "text": "I can try to change the  value inside the yaml file and check easily if it is the value inside the yaml file",
                "time": "2019-05-09 09:50:11",
                "index": 23,
                "user": "yatho"
            },
            {
                "id": "5cd3f8b7da34620ff90f2334",
                "text": "After testing (Change a property value inside my application.yaml), my new value is correctly inject in my @Value annotation",
                "time": "2019-05-09 09:53:59",
                "index": 24,
                "user": "yatho"
            },
            {
                "id": "5cd3f8c65a887e1cd9b946ce",
                "text": "can you share a sample that showcase that? ",
                "time": "2019-05-09 09:54:14",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5cd3f9016fd7c11cd8895934",
                "text": "Ok I'll try to make a sample on github I am coming back to you",
                "time": "2019-05-09 09:55:13",
                "index": 26,
                "user": "yatho"
            },
            {
                "id": "5cd3fb53bdc3b64fcf16d722",
                "text": "@snicoll I will  put a minimalist example here https://github.com/yatho/springboot-yaml-test",
                "time": "2019-05-09 10:05:07",
                "index": 27,
                "user": "yatho"
            },
            {
                "id": "5cd40928b149ca50985f3498",
                "text": "ah, i figured it out",
                "time": "2019-05-09 11:04:08",
                "index": 28,
                "user": "tonisostrat"
            },
            {
                "id": "5cd409ff0f381d0a7686ca11",
                "text": "@snicoll, i think this was the point of confusion\n\n`random.yaml`\n```\nfoo: FOO_SUCCESS\nnested:\n  foo: NESTED_FOO_SUCCESS\n```\n\n```\n@PropertySource(\"random.yaml\")\n@SpringApplication\npublic class Entrypoint {\n  public static void main(String[] args) {\n    var ctxt = SpringApplication.run(Entrypoint.class, args);\n\n    ctxt.getEnvironment().getProperty(\"foo\");  // works\n    ctxt.getEnvironment().getProperty(\"nested.foo\"); // null\n  }\n}\n```",
                "time": "2019-05-09 11:07:43",
                "index": 30,
                "user": "tonisostrat"
            },
            {
                "id": "5cd411835a1d435d460fcf35",
                "text": "@tonisostrat sorry I don\u2019t remember what the context of that was",
                "time": "2019-05-09 11:39:47",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5cd411cfda34620ff90fea84",
                "text": "@snicoll it was related to my issue ",
                "time": "2019-05-09 11:41:03",
                "index": 36,
                "user": "yatho"
            },
            {
                "id": "5cd411d40f381d0a76870924",
                "text": "@yatho that sample does not test anything, `application.yaml` is loaded by Spring Boot by default.",
                "time": "2019-05-09 11:41:08",
                "index": 37,
                "user": "snicoll"
            },
            {
                "id": "5cd411e856271260f93045fd",
                "text": "I am sorry I have not push before lunch, I have just done",
                "time": "2019-05-09 11:41:28",
                "index": 38,
                "user": "yatho"
            },
            {
                "id": "5cd41204bdc3b64fcf1782d1",
                "text": "No need to be sorry but that sample does not show what you\u2019re claiming at all",
                "time": "2019-05-09 11:41:56",
                "index": 40,
                "user": "snicoll"
            },
            {
                "id": "5cd4125bb149ca50985f851d",
                "text": "@yatho where is the `@PropertySource` anyway? What am I looking at?",
                "time": "2019-05-09 11:43:23",
                "index": 41,
                "user": "snicoll"
            },
            {
                "id": "5cd41288f251e60ffa5014a0",
                "text": "@snicoll  https://github.com/yatho/springboot-yaml-test/blob/master/src/main/java/com/example/demo/TestYamlPropertyValue.java",
                "time": "2019-05-09 11:44:08",
                "index": 42,
                "user": "yatho"
            },
            {
                "id": "5cd412b35d48a24fd09a0cba",
                "text": "I can't reproduce exactly the behaviour of my project I don't know why it works well on my project",
                "time": "2019-05-09 11:44:51",
                "index": 43,
                "user": "yatho"
            },
            {
                "id": "5cd4132b79d70050993f3474",
                "text": "@yatho that\u2019s not a yaml file",
                "time": "2019-05-09 11:46:51",
                "index": 44,
                "user": "snicoll"
            },
            {
                "id": "5cd413566fd7c11cd88a1a13",
                "text": "You\u2019ve put a `.properties` file in a file named `.yaml`.",
                "time": "2019-05-09 11:47:34",
                "index": 45,
                "user": "snicoll"
            },
            {
                "id": "5cd41363e7f42160fa5c455a",
                "text": "I know I am trying to reproduce the behqviour of my project but I can't currently",
                "time": "2019-05-09 11:47:47",
                "index": 46,
                "user": "yatho"
            },
            {
                "id": "5cd4136b6fd7c11cd88a1a34",
                "text": "I will find the difference",
                "time": "2019-05-09 11:47:55",
                "index": 47,
                "user": "yatho"
            },
            {
                "id": "5cd413725a887e1cd9ba0324",
                "text": "You probably can\u2019t because YAML is not supported",
                "time": "2019-05-09 11:48:02",
                "index": 48,
                "user": "snicoll"
            },
            {
                "id": "5cd413a95a887e1cd9ba05a3",
                "text": "Please don\u2019t communicate links to something you know is broken, it\u2019s a waste of time for everybody",
                "time": "2019-05-09 11:48:57",
                "index": 49,
                "user": "snicoll"
            },
            {
                "id": "5cd413debdc3b64fcf179355",
                "text": "In this case I don't understand why it is working on my project without done anything",
                "time": "2019-05-09 11:49:50",
                "index": 50,
                "user": "yatho"
            },
            {
                "id": "5cd41401f52a23751600a4ae",
                "text": "If I find the difference I will send a new issue you can close this one",
                "time": "2019-05-09 11:50:25",
                "index": 51,
                "user": "yatho"
            },
            {
                "id": "5cd414125a1d435d460fe2ed",
                "text": "@yatho, a yaml file looks like this:\n\n```\nyatho:\n  test:\n    yaml: VALUE\n```\n\nyou have a properties file with a different extension",
                "time": "2019-05-09 11:50:42",
                "index": 52,
                "user": "tonisostrat"
            },
            {
                "id": "5cd414208fcdb05d47a66fda",
                "text": "Thanks @tonisostrat we already said that",
                "time": "2019-05-09 11:50:56",
                "index": 53,
                "user": "snicoll"
            },
            {
                "id": "5cd4143be7f42160fa5c4ae3",
                "text": "i know :D",
                "time": "2019-05-09 11:51:23",
                "index": 54,
                "user": "tonisostrat"
            },
            {
                "id": "5cd4145ce7f42160fa5c4b48",
                "text": "I am using yaml in my project there is a part of my application-fwk-api.yaml\n```\nserver:\n    undertow:\n        accesslog:\n            dir: /data/log/springboot/${info.app.custom.environment}/${info.app.custom.projectName}/${info.app.custom.projectName}_${info.app.custom.serverPort}\n# Enable access log.\n            enabled: true\n```",
                "time": "2019-05-09 11:51:56",
                "index": 55,
                "user": "yatho"
            },
            {
                "id": "5cd418278fcdb05d47a68d35",
                "text": "Perhaps you have a `fwk-api` profile that is active. Sprig Boot will load `application-*.yml` automatically (making your propertysource useless)",
                "time": "2019-05-09 12:08:07",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5cd41cd10f381d0a76875d02",
                "text": "Maybe",
                "time": "2019-05-09 12:28:01",
                "index": 57,
                "user": "yatho"
            },
            {
                "id": "5cd41cdc8fcdb05d47a6b9ec",
                "text": "Thank you for your time",
                "time": "2019-05-09 12:28:12",
                "index": 58,
                "user": "yatho"
            },
            {
                "id": "5cd41ce5f52a23751600f668",
                "text": "just rename the file to not have `application` as a prefix for a start",
                "time": "2019-05-09 12:28:21",
                "index": 59,
                "user": "snicoll"
            },
            {
                "id": "5cd41da95a887e1cd9ba52ae",
                "text": "I think it's right",
                "time": "2019-05-09 12:31:37",
                "index": 60,
                "user": "yatho"
            },
            {
                "id": "5cd41dd7da34620ff910418c",
                "text": "I have just tried before this morning, I think I have made a mistake at this moment",
                "time": "2019-05-09 12:32:23",
                "index": 61,
                "user": "yatho"
            },
            {
                "id": "5cd41de25a1d435d461032b0",
                "text": "Sorry :)",
                "time": "2019-05-09 12:32:34",
                "index": 62,
                "user": "yatho"
            }
        ]
    },
    {
        "id": 203,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ee85109ef5c1c28f026a209",
                "text": "Hi \nI'm trying to auto initialize HSQL Embedded DB for @SpringBootTest in SpringBoot(2.0.9.RELEASE - just migrated from 1.5.x)\nAuto initialization stopped working with `schema-hsqldb.sql` and `data.hsqldb.sql` after migration",
                "time": "2020-06-16 04:56:41",
                "index": 0,
                "user": "saisuryakat"
            },
            {
                "id": "5ee8512a49260560aa62e8f6",
                "text": "However the if I use this snippet, it works\n```@Bean\n    public DataSource dataSource() {\n        return new EmbeddedDatabaseBuilder()\n            .generateUniqueName(true)\n            .setType(HSQL)\n            .setScriptEncoding(\"UTF-8\")\n            .ignoreFailedDrops(true)\n            .addScript(\"schema-hsqldb.sql\")\n            .addScript(\"data-hsqldb.sql\")\n            .build();\n    }```",
                "time": "2020-06-16 04:57:14",
                "index": 1,
                "user": "saisuryakat"
            },
            {
                "id": "5ee851521e099b0388cbc50a",
                "text": "May I know why the default datasource(`HikariDataSource`) is not considering the schema and data scripts for initialization",
                "time": "2020-06-16 04:57:54",
                "index": 2,
                "user": "saisuryakat"
            },
            {
                "id": "5ee857f2a85de30394178b9f",
                "text": "and I'm using spring-jdbc not jpa",
                "time": "2020-06-16 05:26:10",
                "index": 3,
                "user": "saisuryakat"
            },
            {
                "id": "5ee8598924a3382d5d6cba5b",
                "text": "check the `spring.datasource.platform` and `spring.datasource.initialization-mode` properties",
                "time": "2020-06-16 05:32:57",
                "index": 4,
                "user": "zeagord"
            },
            {
                "id": "5ee8598d7a7f8d2d6339fc35",
                "text": "https://docs.spring.io/spring-boot/docs/2.1.x/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc",
                "time": "2020-06-16 05:33:01",
                "index": 5,
                "user": "zeagord"
            },
            {
                "id": "5ee860e149260560aa630a25",
                "text": "@saisuryakat that does not ring a bell. This should happen automatically with embedded databases, see https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#database-initialization. If you have a small sample that shows your upgrade issue we can have a look to it",
                "time": "2020-06-16 06:04:17",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5ee8625e24a3382d5d6ccd7f",
                "text": "@zeagord I've already tried setting them, still it doesn't work",
                "time": "2020-06-16 06:10:38",
                "index": 7,
                "user": "saisuryakat"
            },
            {
                "id": "5ee862ed1e099b0388cbeb41",
                "text": "What doesn\u2019t work exactly? The platform specific files aren\u2019t used?",
                "time": "2020-06-16 06:13:01",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5ee8630e49260560aa630ed1",
                "text": "`spring.datasource.initialization-mode=always` ?",
                "time": "2020-06-16 06:13:34",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5ee86358a85de3039417a445",
                "text": "Yes, though the script files are present on classpath, my unit tests are failing ",
                "time": "2020-06-16 06:14:48",
                "index": 10,
                "user": "saisuryakat"
            },
            {
                "id": "5ee8636aef5c1c28f026c4f7",
                "text": "Ohh, just realized, I was using `embedded` not `always`",
                "time": "2020-06-16 06:15:06",
                "index": 11,
                "user": "saisuryakat"
            },
            {
                "id": "5ee8636fef5c1c28f026c50c",
                "text": ":)",
                "time": "2020-06-16 06:15:11",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5ee863895782a3127800e931",
                "text": "if you have a non-embedded datasource you have to opt-in in 2.x",
                "time": "2020-06-16 06:15:37",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ee863932cf2f36eae610e11",
                "text": "embedded datasources are initialized automatically",
                "time": "2020-06-16 06:15:47",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5ee863b95dcbb760b6f1347a",
                "text": "isn't hsqldb embedded by default ? I mean with just hsqldb on classpath and no properties declared in test config yml",
                "time": "2020-06-16 06:16:25",
                "index": 15,
                "user": "saisuryakat"
            },
            {
                "id": "5ee863bc013105125a3a0a7b",
                "text": "Although hsql is embedded so that shouldn\u2019t make a difference. It\u2019s hard to provide support with the info you\u2019ve provided so if you can build a small sample from start.spring.io we can have a look",
                "time": "2020-06-16 06:16:28",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5ee863c049260560aa6310fd",
                "text": "It is",
                "time": "2020-06-16 06:16:32",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5ee863d0035dfa126122e661",
                "text": "As I said, create a small sample from start.spring.io to make sure we\u2019re looking at the same thing",
                "time": "2020-06-16 06:16:48",
                "index": 18,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 204,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5de7b682b065c6433c37be05",
                "text": "@wilkinsona Hello Andy, you've helped me the last time and I am grateful.\n I have another question if you would please assist me, I need to have 2 differently configured RestTemplates (@Bean(proxiedRestTemplate) and noProxyRestTemplate). I cannot use RestTemplateCustomizer  because I don't need the configuration to be common for both of them.  And I wouldn't like to define my own RestTemplateBuilder beans, so my preferred approach would be to inject the auto-configured RestTemplateBuilder. \n\nMy question is how can I inject the  auto-configured RestTemplateBuilder into each RestTemplate methods? ",
                "time": "2019-12-04 13:37:06",
                "index": 0,
                "user": "celroid"
            },
            {
                "id": "5de7e6c9c3d6795b9f2194df",
                "text": "@celroid If I've understood you correctly, you'd have two `@Bean` methods, each of which takes `RestTemplateBuilder` as an argument and uses it to build and return a `RestTemplate` instance.",
                "time": "2019-12-04 17:03:05",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5de8b0728e906a1c8d7141bd",
                "text": "@wilkinsona I've done that and it works, but I don't understand how it works. How can RestTemplateBuilder be injected if I haven't defined a bean for it and I haven't used the @Autowired annotation?",
                "time": "2019-12-05 07:23:30",
                "index": 12,
                "user": "celroid"
            },
            {
                "id": "5de8dad605eec2433dd979f3",
                "text": "@celroid The `RestTemplateBuilder` bean is defined by Spring Boot's auto-configuration.",
                "time": "2019-12-05 10:24:22",
                "index": 18,
                "user": "wilkinsona"
            },
            {
                "id": "5de8dfb2f65fec1c8ec6f1cc",
                "text": "That amazes me, what other beans are defined by Spring Boot's auto-configuration? Is there a way to find out? I've looked at https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-auto-configuration-classes.html#auto-configuration-classes but `RestTemplateBuilder` is not even listed there. @wilkinsona",
                "time": "2019-12-05 10:45:06",
                "index": 21,
                "user": "celroid"
            },
            {
                "id": "5de8e13346397c721c8e2074",
                "text": "@celroid we don't maintain a list of all beans per se, but we're documenting all features: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-resttemplate",
                "time": "2019-12-05 10:51:31",
                "index": 22,
                "user": "bclozel"
            },
            {
                "id": "5de8e1725ac7f22fb564f594",
                "text": "@celroid Auto-configuration is one of Spring Boot's main features. If you're using Boot and you're amazed by it auto-configuring things, I'd recommend taking some time to read some of the reference documentation. [This](https://docs.spring.io/spring-boot/docs/2.2.1.RELEASE/reference/htmlsingle/#using-boot-auto-configuration) is a good starting point. It introduces the concept and explains that you can use `--debug` to see a report of everything that's been auto-configured.",
                "time": "2019-12-05 10:52:34",
                "index": 23,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 205,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5b9e229f8909f71f75dfa366",
                "text": "Looking fora good open source framework which has CRUD and built on Spring boot. Any idea ??",
                "time": "2018-09-16 09:30:07",
                "index": 0,
                "user": "prog20901"
            },
            {
                "id": "5b9e28c67dca3065030b465a",
                "text": "@jkathir spring data rest",
                "time": "2018-09-16 09:56:22",
                "index": 1,
                "user": "chsi13"
            },
            {
                "id": "5b9e339ab9531f2dfa74db22",
                "text": "@jkathir i think spring webflux more power than rest , for crud i think spring mongodb reactive is better than spring data jpa, for now spring webflux + reactive mongodb is best until spring data jpa become reactive with new version of async jdbc from oracle as soon  ",
                "time": "2018-09-16 10:42:34",
                "index": 2,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e3591f7e1580625db7be0",
                "text": "@halim Be reactive or not is all about business context.. nio programming could be a better choice than io for some usecase but in major cases IO oriented programming is sufficient. So no one is better than the other in general..  better only in some context.",
                "time": "2018-09-16 10:50:57",
                "index": 3,
                "user": "chsi13"
            },
            {
                "id": "5b9e384dd655361f76095bd6",
                "text": "@chsi13 what do you mean by nio programing and in witch context is better ??",
                "time": "2018-09-16 11:02:37",
                "index": 4,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e8cdabe4f300626a22b76",
                "text": "@halimpuckjava thanks for your clarifications. I gone through https://www.callicoder.com/reactive-rest-apis-spring-webflux-reactive-mongo/ and need clarifications on the below\n\nIn earlier version we have to specify as below to return the output as Json\n\n@RequestMapping(value = \"/getString\", method = RequestMethod.GET, produces = \"application/json\")\n\nHow to return the response as Json in new Spring 5 ?\n\nIn earlier version we can return a stream directly to the browser to process to the front end. either stream or base64 url. How to return a stream in the current spring 5 version\n\nWhere i can find out the syntax differences between spring earlier and spring 5 version\n\nThanks.",
                "time": "2018-09-16 17:03:22",
                "index": 17,
                "user": "prog20901"
            }
        ]
    },
    {
        "id": 206,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d301be94f7f9e219c14c8c8",
                "text": "Running into issue with Flyway and H2 when upgrading a project from Spring-boot 1.5.20 to 2.1.6. The supplied Flyway and H2 versions seem not to be compatible. A log message is printed: `Flyway upgrade recommended: H2 1.4.199 is newer than this version of Flyway and support has not been tested.`\nNow running into this issue when running tests:\n```\nMigration V2015.001__Initial version PostgreSQL.sql failed\n----------------------------------------------------------\nSQL State  : 42001\nError Code : 42001\nMessage    : Syntax error in SQL statement \"SET STATEMENT_TIMEOUT[*] = 0 \"; expected \"@, AUTOCOMMIT, MVCC, EXCLUSIVE, IGNORECASE, PASSWORD, SALT, MODE, COMPRESS_LOB, DATABASE, COLLATION, BINARY_COLLATION, UUID_COLLATION, CLUSTER, DATABASE_EVENT_LISTENER, ALLOW_LITERALS, DEFAULT_TABLE_TYPE, CREATE, HSQLDB.DEFAULT_TABLE_TYPE, PAGE_STORE, CACHE_TYPE, FILE_LOCK, DB_CLOSE_ON_EXIT, AUTO_SERVER, AUTO_SERVER_PORT, AUTO_RECONNECT, ASSERT, ACCESS_MODE_DATA, OPEN_NEW, JMX, PAGE_SIZE, RECOVER, NAMES, SCOPE_GENERATED_KEYS, SCHEMA, DATESTYLE, SEARCH_PATH, SCHEMA_SEARCH_PATH, JAVA_OBJECT_SERIALIZER, LOGSIZE, FOREIGN_KEY_CHECKS\"; SQL statement:\nSET statement_timeout = 0 [42001-199]\nLocation   : db/migration/V2015.001__Initial version PostgreSQL.sql (/Users/xxx/xxx/xxx/xxx/target/classes/db/migration/V2015.001__Initial version PostgreSQL.sql)\nLine       : 9\nStatement  : SET statement_timeout = 0\n```\nAny clues on how to fix this greatly appreciated",
                "time": "2019-07-18 07:12:41",
                "index": 0,
                "user": "diversit"
            },
            {
                "id": "5d301cbc202bb93f00c417bf",
                "text": "@diversit You could override the Flyway or H2 version to meet your needs. However, that error is, as far as I can tell, caused by an error in your migration script rather than an incompatibility between Flyway and H2.",
                "time": "2019-07-18 07:16:12",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5d301d49202bb93f00c41b48",
                "text": "@wilkinsona Thanks for your reply. These migration scripts have not been changed and do work in the old Spring-boot/Flyway/H2. It is a valid Postgres statement (h2 runs in Postgres mode). I think it's just strange Spring-boot provides dependency versions of dependencies which are not compatible with each other.",
                "time": "2019-07-18 07:18:33",
                "index": 2,
                "user": "diversit"
            },
            {
                "id": "5d301d74e1909039360768ed",
                "text": "I don't think they are incompatible. Flyway may not have tested support for this version of H2, but that does not mean that they are incompatible.",
                "time": "2019-07-18 07:19:16",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5d301d8d54d33839372a171a",
                "text": "If you executed `SET statement_timeout = 0` against the same version of H2 without Flyway I believe it would still fail.",
                "time": "2019-07-18 07:19:41",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5d301dd5b74a8716e273fec1",
                "text": "H2's Postgres-compatibility mode has always had its rough edges. IMO, if you're at the point of using database migrations and Postgres-compatibility mode, you'd be better served by using something like Testcontainers and a real Postgres DB in dev.",
                "time": "2019-07-18 07:20:53",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d301e9e5fa7895c432087e9",
                "text": "Yes, that would also the be approach I would take. However, this project is such a mess, I'm trying to improve it in small steps because every small change already seems to cause issue so I don't dare to big changes because I'm afraid it would take weeks to get it right again. I have pinpointed where it fails. Now going to try an older h2 version.",
                "time": "2019-07-18 07:24:14",
                "index": 6,
                "user": "diversit"
            },
            {
                "id": "5d301f1301621760bcd601b8",
                "text": "From Boot's perspective that should work fine. I don't think we have anything that couples Boot to a specific version. We just try to keep up-to-date with the latest maintenance releases.",
                "time": "2019-07-18 07:26:11",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5d302c94f4fe9439712bcf0e",
                "text": "Found the issue. Flyway was never enabled in tests, _flyway.enabled = false_ in test application properties. However, a newer Spring boot added a 'spring.' prefix to the flyway properties and therefore Flyway now suddenly was run with the newer Spring boot version. Something I missed in the changelog probably. Changing the property to _spring.flyway.enabled = false_ now disables Flyway again. Whether that is the right approach is debatable, but I have to deal with this for the moment.",
                "time": "2019-07-18 08:23:48",
                "index": 8,
                "user": "diversit"
            },
            {
                "id": "5d308c40f4fe9439712e891a",
                "text": "@diversit I'm pleased to hear that you got to the bottom of it. You may be interested in the `spring-boot-properties-migrator` module. There's a bit more information about it in the wiki: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide",
                "time": "2019-07-18 15:12:00",
                "index": 13,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 207,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e15c259a74ac85377732667",
                "text": "Hello folks!",
                "time": "2020-01-08 11:51:53",
                "index": 0,
                "user": "sharadm20"
            },
            {
                "id": "5e15c2cd810a1042cb85b232",
                "text": "I am new to JUnit Unit Testing and i am kinda looking for a good resource which i can follow with spring-boot. Can anyone have a good refs? ",
                "time": "2020-01-08 11:53:49",
                "index": 1,
                "user": "sharadm20"
            },
            {
                "id": "5e15c79f821b826f5a8669e4",
                "text": "https://spring.io/guides/gs/testing-web/\nhttps://www.baeldung.com/spring-boot-testing",
                "time": "2020-01-08 12:14:23",
                "index": 2,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 208,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eb0707b7975db7ebfe3e706",
                "text": "Question about `@ConfigurationProperties`. I have a multi-module app with a module for web-app (web tier, and app wiring/config). If something in my Service Tier requires configuration, i'd still prefer to keep all the wiring in spring-boot deps in the web-app project. That is, I don't want to add spring-boot.jar to the service project just to be able to annotate something as `@ConfigurationProperties`. Is there any recommendation there? ",
                "time": "2020-05-04 19:43:55",
                "index": 0,
                "user": "madorb"
            },
            {
                "id": "5eb0708c31a6d25d7cab646a",
                "text": "has there been any thought about moving things like that into a more lightweight `spring-boot-annotations` lib?",
                "time": "2020-05-04 19:44:12",
                "index": 1,
                "user": "madorb"
            },
            {
                "id": "5eb071355cd4fe50a3ec6c01",
                "text": "i could, of course, create an interface in the service-tier module that has all the config params, and then implement it in a concrete @ConfigurationProperties class in the app-tier module, but that seems... annoying",
                "time": "2020-05-04 19:47:01",
                "index": 2,
                "user": "madorb"
            },
            {
                "id": "5eb081a097338850a2e8e3a2",
                "text": "@ben add spring-boot in optional scope if you don\u2019t want that dependency to be transitive. A spring boot annotations kind of module was discussed and we declined that idea.",
                "time": "2020-05-04 20:57:04",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5eb082b35cd4fe50a3ec9e4a",
                "text": "thanks @snicoll that makes sense ",
                "time": "2020-05-04 21:01:39",
                "index": 7,
                "user": "madorb"
            }
        ]
    },
    {
        "id": 209,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bdae1ff0445e15fad0736e2",
                "text": "I converted my project to Spring Boot 2, and I'm getting this error:\n> org.springframework.dao.IncorrectResultSizeDataAccessException Query { \"$java\" : Query: { query here }, Fields: { }, Sort: { } } returned non unique result.\n\nany idea how to fix that? (Why a query that returned a single item in 1.5 now returns more ?)",
                "time": "2018-11-01 11:22:39",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5bdae3b2cd2a6b5bdc7aaf6d",
                "text": "@ofabricio No idea without some more context, sorry. Why not run that query allowing multiple results and see what comes back? Perhaps that would let you see why your query is returning more than one result.",
                "time": "2018-11-01 11:29:54",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bdae4395905a9195537dde6",
                "text": "i guess I can use `findFirst` instead",
                "time": "2018-11-01 11:32:09",
                "index": 3,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 210,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f17b3db9360cb1f465fb9de",
                "text": "hello All,  is there anyway to configire multiple instances of db urls for the same db connection in spring boot? \nthanks in advance ",
                "time": "2020-07-22 03:34:51",
                "index": 0,
                "user": "narraboss"
            },
            {
                "id": "5f1863cf273e723b7ffa128a",
                "text": "@narraboss  yes, you'll have to configure two DataSource beans for it. it's somewhat tricky,  imho.",
                "time": "2020-07-22 16:05:35",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5f18cb926279c91f42087e02",
                "text": "@chad_d_stud_twitter Thanks, do you think of any example that helps for my situation.",
                "time": "2020-07-22 23:28:18",
                "index": 6,
                "user": "narraboss"
            },
            {
                "id": "5f18e291a4b25c73c1e3de25",
                "text": "@narraboss  https://www.baeldung.com/spring-data-jpa-multiple-databases",
                "time": "2020-07-23 01:06:25",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5f18e2b99419f46bf5c27991",
                "text": "@narraboss  this one we used way back. It's now a production system: https://medium.com/@gokuldas.puthenpurakkal/using-multiple-data-sources-using-spring-boot-2-and-spring-data-d94769383646",
                "time": "2020-07-23 01:07:05",
                "index": 8,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 211,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5edf89ce30401c1f2445f29e",
                "text": "Hi @wilkinsona with regards to this issue https://github.com/spring-projects/spring-boot/issues/21487 we're currently using the work-around but was just wondering if you expect the fix to be in next release of spring boot? We have lots of microservices using Cassandra, so was debating whether to upgrade them all now or hold on for a little while. Cheers",
                "time": "2020-06-09 13:08:30",
                "index": 0,
                "user": "AndersClausen"
            },
            {
                "id": "5edf92017b6da9126a83ba26",
                "text": "@AndersClausen we\u2019ll do our best. I\u2019ve flagged it on my list again",
                "time": "2020-06-09 13:43:29",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5edf954024a3382d5d56f12c",
                "text": "Thanks @snicoll, no pressure mate, I know you guys are doing so much great work - it was only to get an idea to when you think it will be released. Many thanks for your reply",
                "time": "2020-06-09 13:57:20",
                "index": 5,
                "user": "AndersClausen"
            },
            {
                "id": "5edf955f29d8bc28f9e623f3",
                "text": "We\u2019re releasing 2.3.1 this week. I don\u2019t know if we\u2019ll have the time to get to that but we\u2019ll do our best. Thanks for the kind words :)",
                "time": "2020-06-09 13:57:51",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5ee092e9013105125a271e61",
                "text": "@AndersClausen the cassandra password-authentication issue has just been fixed. If you could give `2.3.1.BUILD-SNAPSHOT` a try today, that would be super helpful",
                "time": "2020-06-10 07:59:37",
                "index": 12,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 212,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ddc087ad2c92c2275f4d072",
                "text": "Hi, what's the best way to register a `ResponseBodyAdvice` in auto configuration?",
                "time": "2019-11-25 16:59:38",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5ddc0937afacdc4de4728f67",
                "text": "I'm looking at `RequestMappingHandlerAdapter` to register it, but how to do it exactly in an auto-configuration? by implementing `InitializingBean ` or how?",
                "time": "2019-11-25 17:02:47",
                "index": 1,
                "user": "asgarj"
            },
            {
                "id": "5ddc0988c52bc74c968d0eb9",
                "text": "@wilkinsona can you pls have a look at this?",
                "time": "2019-11-25 17:04:08",
                "index": 2,
                "user": "asgarj"
            },
            {
                "id": "5ddc20531bf5192e66a2e2ab",
                "text": "@asgarj Annotate your `ResponseBodyAdvice` with `@ControllerAdvice` and then make it a bean via an `@Bean` method",
                "time": "2019-11-25 18:41:23",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 213,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bdaf858a9c55b25748dbf92",
                "text": "I use custom `Jackson` modules that I register by defining them as Spring `@Bean`. I used to have a problem with `WebClient` using those custom modules however I was suggested here to instead of building WebClient manually through `WebClient.builder()` to inject the Spring Boot enchanced `WebClient.Builder` and that fixed my problems with `Jackson` not utilising the `Jackson Modules` through the client. So far so good.\n\nI'm now writing tests for my controller and I'm using autowired instance of `WebTestClient` and I'm having the same problems with `Jackson` missing my custom modules in tests. I verified that theyre missing by running tests in debug mode and inspecting `WebTestClient`'s `Jackson2JsonDecoder/Encoder`and modules registed inside of it. My `Jackson Module Beans` are however present in the test context since I even wrote extra tests to see if theyre being injected into my test class. Is there some other trick to get custom jackson modules to register with `WebTestClient`?\n\nThis is how I bootstrap my suite of tests:\n```\n\n@RunWith(SpringRunner::class)\n@Import(JacksonConfig::class)\n@WebFluxTest(controllers = [MyController::class])\nclass MyControllerTest {\n\n\t@Autowired\n\t@Qualifier(\"jtsModule\")\n\tprivate lateinit var jtsModule: Module\n\n\t@Autowired\n\tprivate lateinit var testClient: WebTestClient\n\n\t@Test\n\tfun `JTS Serializer bean should be present`() {\n\t\tassertNotNull(jtsModule) //Passes OK\n\t}\n```",
                "time": "2018-11-01 12:58:00",
                "index": 0,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdaf8d46eb1e3597a92faea",
                "text": "That should be taken care of by `SpringBootWebTestClientBuilderCustomizer`",
                "time": "2018-11-01 13:00:04",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaf928cd2a6b5bdc7b3d21",
                "text": "@wilkinsona Automatically during bootstrap? Or is there something else to be specified manually?",
                "time": "2018-11-01 13:01:28",
                "index": 2,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdaf9db5760a73eb41fbf35",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/lJPf/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/lJPf/image.png)",
                "time": "2018-11-01 13:04:27",
                "index": 3,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdafa55cd2a6b5bdc7b423a",
                "text": "This should include the custom JTS module registered through bean like it does during normal runtime",
                "time": "2018-11-01 13:06:29",
                "index": 4,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdafa63076992347a9bb7d2",
                "text": "It should happen automatically due to `@WebFluxTest`",
                "time": "2018-11-01 13:06:43",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bdafa75538a1c1971580819",
                "text": "That was my assumption as well",
                "time": "2018-11-01 13:07:01",
                "index": 6,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdafa9da9c55b25748dcd87",
                "text": "Can you take a look in the debugger at `org.springframework.boot.test.autoconfigure.web.reactive.SpringBootWebTestClientBuilderCustomizer.customizeWebTestClientCodecs(Builder)`?",
                "time": "2018-11-01 13:07:41",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5bdafaaf0445e15fad07d460",
                "text": "It'd be interesting to know what customizers, if any, it has found",
                "time": "2018-11-01 13:07:59",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5bdafc8f6eb1e3597a93132e",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/inbC/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/inbC/image.png)",
                "time": "2018-11-01 13:15:59",
                "index": 9,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdafcc86ab3f85bdde908e2",
                "text": "@wilkinsona Looks like none. Assuming I'm inspecting the right thing",
                "time": "2018-11-01 13:16:56",
                "index": 10,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdafd77076992347a9bcb1f",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/WUem/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/WUem/image.png)",
                "time": "2018-11-01 13:19:51",
                "index": 11,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdaff53995818347b87513b",
                "text": "Thanks. Yeah, that's the right thing. So that's why it's not working. Now to figure out why it's like that",
                "time": "2018-11-01 13:27:47",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaff600445e15fad07f0e0",
                "text": "I wonder if the `WebFluxTest` slice is stripping them out",
                "time": "2018-11-01 13:28:00",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaff8fd3442e197270ef9f",
                "text": "You could try `@SpringBootTest` with `@AutoConfigureWebTestClient` and see if that works. If it does, it's the slice that's causing it",
                "time": "2018-11-01 13:28:47",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5bdaffd1538a1c1971582a11",
                "text": "Any way I could inspect it? What constructs and injects `WebTestClient.Builder` in there?",
                "time": "2018-11-01 13:29:53",
                "index": 15,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdb004cd3442e197270f43e",
                "text": "It fails to start and bootstrap context with `@SpringBootTest`+ `@AutoConfigureWebTestClient`. `No qualifying bean of type 'org.springframework.test.web.reactive.server.WebTestClient' available`",
                "time": "2018-11-01 13:31:56",
                "index": 16,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdb03e0995818347b8771ed",
                "text": "I'm assuming its because it doesn't use `WebFluxTestContextBootstrapper` with `@SpringBootTest`",
                "time": "2018-11-01 13:47:12",
                "index": 17,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bdb14bd076992347a9c6b92",
                "text": "@BartoszKaszewczuk `@AutoConfigureWebTestClient` should make `WebTestClient.Builder` injectable",
                "time": "2018-11-01 14:59:09",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5bdb1d836eb1e3597a93f896",
                "text": "Actually, `@SpringBootTest` alone will do that",
                "time": "2018-11-01 15:36:35",
                "index": 22,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 214,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5dea693b05eec2433de4e0c3",
                "text": "Has anyone a great reference for building quick POC with spring boot, Jpa, h2, and thymeleaf ... especially for models with relationships?",
                "time": "2019-12-06 14:44:11",
                "index": 0,
                "user": "teafg"
            },
            {
                "id": "5dea6d6332df1245cbf41e56",
                "text": "@teafg did you check out https://www.jhipster.tech/ ?",
                "time": "2019-12-06 15:01:55",
                "index": 1,
                "user": "rowi1de"
            },
            {
                "id": "5dea6da6f65fec1c8ed247ac",
                "text": "Thanks I will look now:)",
                "time": "2019-12-06 15:03:02",
                "index": 2,
                "user": "teafg"
            },
            {
                "id": "5dea6dda08d0c961b70027e0",
                "text": "@teafg is more like generating a lot of stuff, but for quick it's really great ",
                "time": "2019-12-06 15:03:54",
                "index": 3,
                "user": "rowi1de"
            },
            {
                "id": "5dea700f32df1245cbf43506",
                "text": "thanks Robert for the guidance!",
                "time": "2019-12-06 15:13:19",
                "index": 4,
                "user": "teafg"
            },
            {
                "id": "5dea702b6a85195b9e0b90d9",
                "text": "@rowi1de thanks so much",
                "time": "2019-12-06 15:13:47",
                "index": 5,
                "user": "teafg"
            }
        ]
    },
    {
        "id": 215,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5f2ab4bf107f3a0efaadf41c",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/1zHK/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/1zHK/image.png)",
                "time": "2020-08-05 13:31:43",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5f2ab4fa03112566198b425f",
                "text": "hi we have some spring boot builds getting stuck at this stage, does anyone know how I could get more verbose logging for this \"download dependencies part\"?",
                "time": "2020-08-05 13:32:42",
                "index": 1,
                "user": "konstantinblaesi"
            },
            {
                "id": "5f2ab53c71c83e6f0fbdb58d",
                "text": "the issue comes and goes, but when it comes up it will break all our builds. We're running maven in a docker image as part of our `docker build ...`",
                "time": "2020-08-05 13:33:48",
                "index": 2,
                "user": "konstantinblaesi"
            },
            {
                "id": "5f2abe2ea541217404e013d6",
                "text": "@konstantinblaesi You could try running Maven with -X",
                "time": "2020-08-05 14:11:58",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 216,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bcdfc3d435c2a518ee9e057",
                "text": "Hi all. I'm working on upgrading a [JHipster](https://www.jhipster.tech/) (Spring+Angular) application and have [this](https://gist.github.com/dancancro/31fef6ecdb845757a7b294c4e6cb4da9) error: `java.lang.NoSuchMethodError: org.elasticsearch.common.settings.Settings.settingsBuilder()`. My pom.xml looks like [this](https://gist.github.com/dancancro/301a32b33f0122d058696964d8a9a4dd). I'm not a Spring expert at all.  Would someone mind taking a look at it?",
                "time": "2018-10-22 16:35:09",
                "index": 0,
                "user": "dancancro"
            },
            {
                "id": "5bcdfd9dae7be940169b0e73",
                "text": "@dancancro Your Spring Boot and Spring Boot Data ES starter versions seem to be out of sync.",
                "time": "2018-10-22 16:41:01",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5bce05d382893a2f3b21c976",
                "text": "@bclozel Thanks. Are you referring to the versions of `spring-boot.version` (2.0.4.RELEASE) and `spring-boot-starter-data-elasticsearch` (2.0.6.RELEASE)? I tried setting them both to 2.0.4.RELEASE and setting them both to 2.0.6.RELEASE but got the same error.",
                "time": "2018-10-22 17:16:03",
                "index": 2,
                "user": "dancancro"
            },
            {
                "id": "5bce1865c7bf7c3662523531",
                "text": "@dancancro then maybe something has brought on your classpath an ES version that's not supported by this Spring Boot generation.  `mvn dependency:tree` should give you a better picture of what's going on.",
                "time": "2018-10-22 18:35:17",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5bce79d5c7bf7c366254a5e5",
                "text": "@bclozel  `mvn dependency:tree` produced \nhttps://gist.github.com/dancancro/b6c905f7ed83a70c0116d4b63d7b1384",
                "time": "2018-10-23 01:31:01",
                "index": 19,
                "user": "dancancro"
            },
            {
                "id": "5bced99d82893a2f3b271a8f",
                "text": "@dancancro you're using a spring-data-jest version that's not compatible with the elasticsearch and boot versions you've configured in your app. See https://github.com/VanRoy/spring-data-jest#versions",
                "time": "2018-10-23 08:19:41",
                "index": 29,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 217,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ba9090e913ba7799b394968",
                "text": "What is best practice for injecting secrets (e.g. Database credentials) into spring boot in a dockerized context? I had previously been using environmental variables to inject into templated application.properties, but this is very clunky and not super secure. Is there a better way to go about this? I would like to not commit any of these values to a repository and have them defined in only one place.",
                "time": "2018-09-24 15:55:58",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5ba909be5df5194734084703",
                "text": "I would also like to support multiple deployment types (dev/qa/prod etc), but I don't know how to do that in properties files without either fetching the secrets from the environment or committing the secrets to some repository. It seems like a no-win situation.",
                "time": "2018-09-24 15:58:54",
                "index": 1,
                "user": "springroll12"
            },
            {
                "id": "5ba91964b9531f2dfab45bc3",
                "text": "@springroll12 you have quite a few options to achieve what you want, here's two options:\n1. [Externalized Configuration](https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html)\n2. [Spring Cloud Config Server](https://cloud.spring.io/spring-cloud-config/multi/multi__spring_cloud_config_server.html)\n\nWith these two you can explore it as necessary to solve your problem, with the first option you probably need to use some kind of tooling to write your docker compose files in which will manage all your secrets. Using spring-cloud-config you'll gain a lot of more options such as:\n  - git based storage\n  - vault integration\n  - jdbc storage\n  - file system \n  - maybe some more? I don't recall ",
                "time": "2018-09-24 17:05:40",
                "index": 7,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba9236f41177e0bc79dea42",
                "text": "@marcosbarbero Thanks. I am aware of spring cloud config and I agree that it is the way to go when deploying multiple dockerized services. I'm not sure it makes sense to use it for development services though, since the goal would be to get up and running as soon as possible. For example, I don't want to have to have a spring-cloud-config instance running just to initialize a local service. ",
                "time": "2018-09-24 17:48:31",
                "index": 9,
                "user": "springroll12"
            },
            {
                "id": "5ba92411eba8e60bc63b734c",
                "text": "you don't need to, the configserver dependency won't break your build while you are running locally it will probably just throw a log line saying it couldn't fetch the configuration from the configserver. You can also disable it for local development as well",
                "time": "2018-09-24 17:51:13",
                "index": 10,
                "user": "marcosbarbero"
            }
        ]
    },
    {
        "id": 218,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d42c32ad7fc954750dc4898",
                "text": "hello all.\nI have a simple question about spring framework documentation. Any idea what is the difference between these two documentation ?\nhttps://docs.spring.io/spring-framework/docs/5.0.0.M1/spring-framework-reference/html/index.html\nand\nhttps://docs.spring.io/spring/docs/current/spring-framework-reference/index.html\nIs the second something like a resume of the first one ?",
                "time": "2019-08-01 10:47:06",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5d42c4c975c7976e030a21c5",
                "text": "The second is always points to the current spring version while the first points to specific versions",
                "time": "2019-08-01 10:54:01",
                "index": 1,
                "user": "IEnoobong"
            },
            {
                "id": "5d42c63175c7976e030a2f16",
                "text": "@amirensit not sure I understand that question. These are two different versions and the layout was changed.",
                "time": "2019-08-01 11:00:01",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5d42c8697c87746165f0a458",
                "text": "@snicoll ignoring the versions, I see that one is like a full documentation and the other is more simpler",
                "time": "2019-08-01 11:09:29",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5d42c880ee80d76164cb0f87",
                "text": ">  the layout was changed.",
                "time": "2019-08-01 11:09:52",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5d42c8b445da450fec870c3c",
                "text": "@snicoll okey. thanks :smile: ",
                "time": "2019-08-01 11:10:44",
                "index": 6,
                "user": "amirensit"
            },
            {
                "id": "5d42c8d04635976e040dfe9c",
                "text": "I don\u2019t know if I've answered your question as I don\u2019t understand what you\u2019re asking really",
                "time": "2019-08-01 11:11:12",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5d42c91dff59f961b4f579a6",
                "text": "I was asking if these documentations are different or not. So you answered that just the layout has changed. :smiley: ",
                "time": "2019-08-01 11:12:29",
                "index": 8,
                "user": "amirensit"
            },
            {
                "id": "5d42c92f75c7976e030a45af",
                "text": "Well they are different \ud83e\udd37\u200d\u2642\ufe0f",
                "time": "2019-08-01 11:12:47",
                "index": 9,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 219,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dfc8cf20cb24d1d44ef4882",
                "text": "how can I make sure spring properly closes database connections during tests execution? We use liquibase for migrations and JdbcTemplate to query the database. After many test executions some fail with traces like\n``` Caused by: liquibase.exception.DatabaseException: java.sql.SQLException: Too many connections\n\tat liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:307)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)\n\t... 47 more\nCaused by: java.sql.SQLException: Too many connections\n\tat org.mariadb.jdbc.internal.com.read.ReadInitialHandShakePacket.<init>(ReadInitialHandShakePacket.java:92)\n\tat org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.handleConnectionPhases(AbstractConnectProtocol.java:688)\n\tat org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:412)\n\tat org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1124)\n\tat org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)\n\tat org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)\n\tat org.mariadb.jdbc.Driver.connect(Driver.java:92)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:302)\n\t... 49 more\n```",
                "time": "2019-12-20 08:57:22",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5dfc8d5b44e1fb33f6f9f9fc",
                "text": "afaik the default hikari pool limit is 10 and our maria db config (docker container) seems to default to 100 max connections",
                "time": "2019-12-20 08:59:07",
                "index": 1,
                "user": "konstantinblaesi"
            },
            {
                "id": "5dfc984c0cb24d1d44ef943b",
                "text": "@konstantinblaesi Database connections should be closed when the application context is closed. Spring Framework's test framework caches contexts so that they can be reused by subsequent tests with the same configuration. If you have lots of tests with different configuration, you may be caching more contexts than your DB configuration can support. There are a few things you could do:\n\n1. Tune the connection pool in your tests so that it's smaller\n2. Tune to size of the test framework's context cache\n3. Review your test configuration so that more tests can share the same context\n4. Use `@DirtiesContext` in some places to prevent cache of that test class's context",
                "time": "2019-12-20 09:45:48",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dfca6d244e1fb33f6faabe8",
                "text": "@wilkinsona thanks for the tips, I'll check that!",
                "time": "2019-12-20 10:47:46",
                "index": 3,
                "user": "konstantinblaesi"
            }
        ]
    },
    {
        "id": 220,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5df2c41e0dc628523e2612b8",
                "text": "I just upgraded spring boot to 2.2.2.RELEASE version and i am getting an error when i use lombok annotation @slf4j. It works fine with 2.2.1.RELEASE. Any thoughts ?\n\n`java.util.ServiceConfigurationError: com.fasterxml.jackson.databind.Module: Provider com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule not found`",
                "time": "2019-12-12 22:50:06",
                "index": 0,
                "user": "ravikancherla_gitlab"
            },
            {
                "id": "5df347127ce7ea1e3576ee56",
                "text": "@ravikancherla_gitlab I don't see the connection with `@Slf4j`, but it sounds like you may have a corrupted jar file somewhere. Assuming you're using Maven, trying clearing out your local cache and rebuilding your app.",
                "time": "2019-12-13 08:08:50",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 221,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c7a9aeab1503b3d706aab5a",
                "text": "Hi, what is the best practice for creating a bulk post request (multiple request in one - request of collection resource)?  is there some offitial way for handling batch operations? Thanks in advance.",
                "time": "2019-03-02 15:02:02",
                "index": 0,
                "user": "Anisorf"
            },
            {
                "id": "5c7cd90ae8ea143737ac1ea7",
                "text": "@Anisorf I am afraid that\u2019s not linked to Spring Boot specifically. I\u2019d ask that on stackoverflow (maybe someone else asked the same thing already?)",
                "time": "2019-03-04 07:51:38",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5c7ceb22e1446a6ebe7d2050",
                "text": "thanks @snicoll, I'll check better on SO",
                "time": "2019-03-04 09:08:50",
                "index": 14,
                "user": "Anisorf"
            }
        ]
    },
    {
        "id": 222,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bd87a6dc7bf7c3662940830",
                "text": "question: i added resources/static/index.html",
                "time": "2018-10-30 15:36:13",
                "index": 0,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87a7b271506518d9453c9",
                "text": "but when i go to localhost:8080 i dont see that specific page",
                "time": "2018-10-30 15:36:27",
                "index": 1,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87a9bc08b8b306798524f",
                "text": "i only see the page Your Server is now running",
                "time": "2018-10-30 15:36:59",
                "index": 2,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87ae4069fca52a5bab2e9",
                "text": "@PieterAndriesBerg \"Your Server is now running\" doesn't sound like something that Boot serves by default.  Are you connecting directly to Boot?",
                "time": "2018-10-30 15:38:12",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bd87affab17df263114ca28",
                "text": "yeah its the glashfish server",
                "time": "2018-10-30 15:38:39",
                "index": 4,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87b06c08b8b3067985492",
                "text": "i followed this tutorial",
                "time": "2018-10-30 15:38:46",
                "index": 5,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87b0ac08b8b3067985499",
                "text": "https://spring.io/guides/gs/serving-web-content/",
                "time": "2018-10-30 15:38:50",
                "index": 6,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87b53271506518d9459cb",
                "text": "That guide builds an executable jar that's to be run using `java -jar`. What additional steps have you taken to deploy your app to Glassfish?",
                "time": "2018-10-30 15:40:03",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5bd87b88ab17df263114ce28",
                "text": "You need to follow the steps described in https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file.",
                "time": "2018-10-30 15:40:56",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5bd87bd03844923661c0c753",
                "text": "nah didnt use it for that",
                "time": "2018-10-30 15:42:08",
                "index": 9,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87bd61e23486b93408d71",
                "text": "think it was still running",
                "time": "2018-10-30 15:42:14",
                "index": 10,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87bdc6e5a401c2df4555a",
                "text": "rebooted it see if it works now",
                "time": "2018-10-30 15:42:20",
                "index": 11,
                "user": "PieterAndriesBerg"
            },
            {
                "id": "5bd87cf4ef4afc4f28f68aca",
                "text": "works now",
                "time": "2018-10-30 15:47:00",
                "index": 12,
                "user": "PieterAndriesBerg"
            }
        ]
    },
    {
        "id": 223,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5e09c7bfd5a7f357e6a5dd4e",
                "text": "Hi all, newbie question here. If I want to submit a PR to spring-boot, can I create a branch in the Spring-boot repo? Or must I fork it before and then raise the PR from that fork?",
                "time": "2019-12-30 09:47:43",
                "index": 0,
                "user": "victor-ferrer"
            },
            {
                "id": "5e09c7e489701b511d341e03",
                "text": "Hey Victor. First fork it, then create a local branch and push it to your fork. You can then create the PR from there",
                "time": "2019-12-30 09:48:20",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e09c81604a1900497d4b5a1",
                "text": "OK, thanks",
                "time": "2019-12-30 09:49:10",
                "index": 2,
                "user": "victor-ferrer"
            },
            {
                "id": "5e09c8add31dba03fdcb2409",
                "text": "Don\u2019t submit the PR though please as we\u2019d like to hear from the first person",
                "time": "2019-12-30 09:51:41",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5e09c8b5eaa2cd096fc5b3ae",
                "text": "I also suggest setting spring specific formatting settings in IDE and using spring-javaformat maven plugin :) Might save you some time preparing PR",
                "time": "2019-12-30 09:51:49",
                "index": 4,
                "user": "SammyVimes"
            },
            {
                "id": "5e09c8e607a1a67d1d8181e7",
                "text": "Good advice. Running a build before makes sure code formatting and rules are valid",
                "time": "2019-12-30 09:52:38",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5e09c8e807a1a67d1d8181ea",
                "text": "@snicoll No, no. Don\u00b4t worry. I am just playing around",
                "time": "2019-12-30 09:52:40",
                "index": 6,
                "user": "victor-ferrer"
            },
            {
                "id": "5e09c8ed07a1a67d1d8181ed",
                "text": ":+1: ",
                "time": "2019-12-30 09:52:45",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5e09c903d5a7f357e6a5e750",
                "text": "If you share a link to the branch I can have a look if you want some sort of validation",
                "time": "2019-12-30 09:53:07",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5e09c9258ba16b107cf29396",
                "text": "I have never submitted a PR to an OSS project and I am trying to grasp the branch policies, testing approaches and so on",
                "time": "2019-12-30 09:53:41",
                "index": 9,
                "user": "victor-ferrer"
            },
            {
                "id": "5e09c96604a1900497d4bd16",
                "text": "Cool, feel free to ask here if you have questions",
                "time": "2019-12-30 09:54:46",
                "index": 10,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 224,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c50485ef46373406a1bf26a",
                "text": "Hi,  I am switch from spring boot 1.5.x to 2.x in my project and I experienced new issue during migration. Project contains extension to tomcat and undertow so both starters are in dependencies (spring-boot-starter-tomcat,spring-boot-starter-undertow).Issue is following, during integration test (@SpringBootTest) in spring boot 1.5x undertow was automatically launched, now in spring boot 2.x tomcat is. ",
                "time": "2019-01-29 12:34:38",
                "index": 0,
                "user": "tzebrowski"
            },
            {
                "id": "5c504876975714406b5e22fa",
                "text": "Do you have an idea how to force undertow when both starters are in pom ?",
                "time": "2019-01-29 12:35:02",
                "index": 1,
                "user": "tzebrowski"
            },
            {
                "id": "5c5049b09221b9382dde6417",
                "text": "@tzebrowski You should create ServletWebServerFactory bean, I guess",
                "time": "2019-01-29 12:40:16",
                "index": 2,
                "user": "4shael"
            },
            {
                "id": "5c5049bbf04ef00644a5d0f3",
                "text": "Something like this: https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-web-servers.html#howto-enable-multiple-connectors-in-tomcat",
                "time": "2019-01-29 12:40:27",
                "index": 3,
                "user": "4shael"
            },
            {
                "id": "5c504b1b1b62f126506a62d6",
                "text": "hi @v.zarembouski, looks good, thanks :), I will try it,",
                "time": "2019-01-29 12:46:19",
                "index": 4,
                "user": "tzebrowski"
            },
            {
                "id": "5c504ca11b62f126506a6c71",
                "text": "np",
                "time": "2019-01-29 12:52:49",
                "index": 5,
                "user": "4shael"
            },
            {
                "id": "5c505db7975714406b5eb5c8",
                "text": "It works, thanks",
                "time": "2019-01-29 14:05:43",
                "index": 6,
                "user": "tzebrowski"
            }
        ]
    },
    {
        "id": 225,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d2756e958c6811bf98f591e",
                "text": "Guys, What is the environment variable format for SPRING BOOT VAULT in the docker-compose file? ",
                "time": "2019-07-11 15:34:01",
                "index": 0,
                "user": "gowthamakanthan"
            },
            {
                "id": "5d27587df5dd145742684757",
                "text": "which docker-compose file ?",
                "time": "2019-07-11 15:40:45",
                "index": 1,
                "user": "tgeens"
            },
            {
                "id": "5d27590deab1bd15a84129ae",
                "text": "version: \"2\"\n\nservices:\n   '''Name:\n    image: \u201cimage name\u201d\n    container_name: < Container name >\n    network_mode: \"host\"\n    environment:\n      - SERVER_PORT=8091\n      - SPRING_CLOUD_CONSUL_PORT=8500\n      - SPRING_CLOUD_CONSUL_DISCOVERY_IPADDRESS=${DISCOVERY_ADDRESS}\n      - SPRING_CLOUD_VAULT_TOKEN=<token>\n      - SPRING_CLOUD_VAULT_URI=http://<vault ip>:8200\n      - SPRING_CLOUD_VAULT_AUTHENTICATION=TOKEN\n      - SPRING_CLOUD_VAULT_GENERIC_ENABLED=false\n    logging:\n      driver: \"json-file\"\n      options:\n        labels: \"environment\"\n    labels:\n      environment: \"${ENVIRONMENT} '''\n\n",
                "time": "2019-07-11 15:43:09",
                "index": 2,
                "user": "gowthamakanthan"
            },
            {
                "id": "5d275b13bea9f35741376314",
                "text": "that's the integration with Hashicorp Vault",
                "time": "2019-07-11 15:51:47",
                "index": 3,
                "user": "tgeens"
            },
            {
                "id": "5d275b32cdb70805c97a4cdd",
                "text": "So the environment variable which i have mentioned for vault is correct?  \\",
                "time": "2019-07-11 15:52:18",
                "index": 4,
                "user": "gowthamakanthan"
            },
            {
                "id": "5d275b7eb0027d2b19b36e74",
                "text": "https://cloud.spring.io/spring-cloud-static/spring-cloud-vault/2.2.0.M1/#_authentication",
                "time": "2019-07-11 15:53:34",
                "index": 5,
                "user": "tgeens"
            },
            {
                "id": "5d275b97270d2b1bfa7bc811",
                "text": "```\nspring.cloud.vault:\n    token: 19aefa97-cccc-bbbb-aaaa-225940e63d76\n```\n",
                "time": "2019-07-11 15:53:59",
                "index": 6,
                "user": "tgeens"
            },
            {
                "id": "5d275badf827ad6676eb31f5",
                "text": "so that should probably be `SPRING_CLOUD_VAULT_TOKEN=$TOKEN` ?",
                "time": "2019-07-11 15:54:21",
                "index": 7,
                "user": "tgeens"
            },
            {
                "id": "5d275bca98934d15a73a2ca6",
                "text": "okay, What about the other VAULT variables? ",
                "time": "2019-07-11 15:54:50",
                "index": 8,
                "user": "gowthamakanthan"
            },
            {
                "id": "5d275d2ef5dd145742686e94",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html#boot-features-external-config-relaxed-binding",
                "time": "2019-07-11 16:00:46",
                "index": 9,
                "user": "tgeens"
            },
            {
                "id": "5d275d5458c6811bf98f8baf",
                "text": "you can basically use any format",
                "time": "2019-07-11 16:01:24",
                "index": 10,
                "user": "tgeens"
            },
            {
                "id": "5d275d6c0c8daa1686c787a7",
                "text": "> ACME_MYPROJECT_PERSON_FIRSTNAME - Upper case format, which is recommended when using system environment variables.",
                "time": "2019-07-11 16:01:48",
                "index": 11,
                "user": "tgeens"
            },
            {
                "id": "5d275d7958c6811bf98f8dc7",
                "text": "convert to upper case and use _ instead of .",
                "time": "2019-07-11 16:02:01",
                "index": 12,
                "user": "tgeens"
            },
            {
                "id": "5d275d79eab1bd15a8414ee6",
                "text": "Thank you @tgeens ",
                "time": "2019-07-11 16:02:01",
                "index": 13,
                "user": "gowthamakanthan"
            },
            {
                "id": "5d275dc4f867ec1687ee4f3b",
                "text": "the relaxed binding rules might be a bit tighter since SB2",
                "time": "2019-07-11 16:03:16",
                "index": 14,
                "user": "tgeens"
            }
        ]
    },
    {
        "id": 226,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5eaaa826b6dd230697983d58",
                "text": "Hello guys, I have a bit of a trouble during the upgrade to JDK 11 (from 8). I upgraded to springboot 2.2.6 and now the root application.yml simply overrides the application.yml inside the JAR. The exact issue is that the 'port= 9999' is mentionned in the JAR application.yml and not in the root one, but when i boot, it boots on the 8080 default port. As if i never says to boot on 9999. The workaround we found is to force --server.port=9999 on the command to boot but it's a bit dirty imo. Anyone have a clue on this ?",
                "time": "2020-04-30 10:27:50",
                "index": 0,
                "user": "SachaMaiornikoff"
            },
            {
                "id": "5eaaac689f0c955d7d9672fa",
                "text": "What \"root\" application.yml?",
                "time": "2020-04-30 10:46:00",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5eaab4a6f0377f16315b13ab",
                "text": "sorry, the application.yml that i pass via the command line with '-Dspring.config.location=.../application.yml'",
                "time": "2020-04-30 11:21:10",
                "index": 2,
                "user": "SachaMaiornikoff"
            },
            {
                "id": "5eaabee131a6d25d7c9ddd6b",
                "text": "that will be your only config: they don't stack and afaik never have",
                "time": "2020-04-30 12:04:49",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5eaabef9d898fe7a3758d621",
                "text": "if you want multiple ymls to apply you do it with profiles",
                "time": "2020-04-30 12:05:13",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5eaacc667a24ff01b0f292fa",
                "text": "@OrangeDog Thanks for your answer :) will stay with our workaround and then try to implement some profile yep",
                "time": "2020-04-30 13:02:30",
                "index": 9,
                "user": "SachaMaiornikoff"
            }
        ]
    },
    {
        "id": 227,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d242f9058c6811bf97837f9",
                "text": "What are the default timeouts in a reactor based `WebClient`? Currently we see a couple of `io.netty.channel.unix.Errors$NativeIoException: syscall:read(..) failed: Connection reset by peer` and some SO posts suggest that it may have something to do with your keep alive timeouts and load balacer configs. Our AWS ALB is currently configure to 600s and https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html recommends to set your clients timeouts even higher.",
                "time": "2019-07-09 06:09:20",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5d2454c9cdb70805c9641cbf",
                "text": "@kschlesselmann @bclozel can correct me if I'm mistaken, but I think it uses Reactor Netty's defaults. Someone, most likely Violetta, in https://gitter.im/reactor/reactor-netty will know what those defaults are.",
                "time": "2019-07-09 08:48:09",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 228,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e876231fac8f94c20e28ea5",
                "text": "Hi , Is there any option in spring to pick up  the configuration file in src/main/resoucres folder based on condition value ?Quick help is much apprecitaed",
                "time": "2020-04-03 16:20:01",
                "index": 0,
                "user": "murali474"
            },
            {
                "id": "5e87637299d0f964190489a7",
                "text": "@murali474 only based on active profiles: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-profile-specific-properties\n\nis there another type of condition you have in mind? ",
                "time": "2020-04-03 16:25:22",
                "index": 1,
                "user": "scottfrederick"
            },
            {
                "id": "5e87648db2778e7c93362fa3",
                "text": "First of all Thanks @scottfrederick  for quick answer.  Currently my spring boot application is picking up  config xml but i want this to happen based some property value(lets say test.enabled=true) in application.properties",
                "time": "2020-04-03 16:30:05",
                "index": 2,
                "user": "murali474"
            },
            {
                "id": "5e8ac113e7ca460b063fbe63",
                "text": "@murali474 you could do that with auto-configuration",
                "time": "2020-04-06 05:41:39",
                "index": 10,
                "user": "62mkv"
            },
            {
                "id": "5e8b1397d021c45cc7c9a9cc",
                "text": "@62mkv Could you give me an example or any reference plz?",
                "time": "2020-04-06 11:33:43",
                "index": 19,
                "user": "murali474"
            },
            {
                "id": "5e8c3328e24b4d6c44efe539",
                "text": "@murali474 https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-developing-auto-configuration",
                "time": "2020-04-07 08:00:40",
                "index": 47,
                "user": "62mkv"
            },
            {
                "id": "5e8c68bfe7ca460b06447d8c",
                "text": "thanks @62mkv Fortunately and unknowingly i have tried the same approach (using conditional bean annotations) and it worked :)",
                "time": "2020-04-07 11:49:19",
                "index": 49,
                "user": "murali474"
            },
            {
                "id": "5e8c68dbe7ca460b06447e25",
                "text": ":thumbsup: ",
                "time": "2020-04-07 11:49:47",
                "index": 50,
                "user": "62mkv"
            }
        ]
    },
    {
        "id": 229,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eb2c2c6f0377f16316e1259",
                "text": "Trying to wrap some FileNet code in a builder and am finding it difficult to inject dependencies with  SP2. Not that it's  a Spring problem, just a design issue",
                "time": "2020-05-06 13:59:34",
                "index": 0,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2c2f5f0377f16316e1325",
                "text": "So I started looking at the BeanFactory , and that might work",
                "time": "2020-05-06 14:00:21",
                "index": 1,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2c344b6dd230697abcad1",
                "text": "Then, I realize that the Builder is static internal  and not suited to multi-threading",
                "time": "2020-05-06 14:01:40",
                "index": 2,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2c38f5cd4fe50a3f20c43",
                "text": "And here I thought I was being all cool and what-not... ",
                "time": "2020-05-06 14:02:55",
                "index": 3,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2c3fdb6dd230697abcde3",
                "text": "Is there a way to lock the region (not pretty, but would proted the data corruption... I think)  and use the AbstractFactoryBean  to inject the dependencies I need?",
                "time": "2020-05-06 14:04:45",
                "index": 4,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2c57c97338850a2ee56b5",
                "text": "Sorry that I'm dumping some random questions that probably seem non-sensical with-out code samples, but I'm desperate",
                "time": "2020-05-06 14:11:08",
                "index": 6,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2c7c7adb0ec5c2bea607d",
                "text": "@stephenpatten indeed :) Why doesn't a regular bean method work?",
                "time": "2020-05-06 14:20:55",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2c8d8adb0ec5c2bea63bd",
                "text": "@OrangeDog  Hi James.. I'm a noob with Java and Spring, coming from 20 yrs with .NET (cough) so some of the terminology  needs translating.. what is a bean method? Is that waht the methods are coalled in the IOC Bootstrap/Configuration?",
                "time": "2020-05-06 14:25:28",
                "index": 8,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2ca24f0377f16316e2ade",
                "text": "@OrangeDog  Unfortunatly, I have wrtten a fair amount of code with the Builder and of course, it wasn't until now that I needed injection for this component. Reading the docs for the BeanFactory  and Abstract Factory is when it dawned on me that my design was flawed. I am using the builder to enter credentials and other data that would be specific to a session, NOT shared via a static builder ",
                "time": "2020-05-06 14:31:00",
                "index": 9,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cbde347bd616305b196b",
                "text": "@OrangeDog  Mind if I paste  about 50 lines of code?",
                "time": "2020-05-06 14:38:22",
                "index": 10,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cc293d58de7a38fa45ca",
                "text": "I think you've jumped in at too low a level - looking at how Spring is implemented instead of how you use it",
                "time": "2020-05-06 14:39:37",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2ccab31a6d25d7cb13f5c",
                "text": "a bean method is a method annotated with `@Bean`, which defines a bean and returns the initial instance",
                "time": "2020-05-06 14:41:47",
                "index": 12,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2ccd75cd4fe50a3f22ea8",
                "text": "I've made way more progress with Spring-Boot than I did with Jakarta EE. Spring-Boot feels somewhat familiar to what I'm acustomed to using, Autofac for a container ",
                "time": "2020-05-06 14:42:31",
                "index": 13,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cd1c5cd4fe50a3f22fb2",
                "text": "So when you say \"builder\" you mean like the variable here?\nhttps://autofac.org/",
                "time": "2020-05-06 14:43:40",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cd1d22f9c45c2a723193",
                "text": "@OrangeDog  Yeah, I was just re-reading the docs again regarding Declaringa bean",
                "time": "2020-05-06 14:43:41",
                "index": 15,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cd4cf0377f16316e3586",
                "text": "All that stuff looks like the low-level implemntation details that Spring hides",
                "time": "2020-05-06 14:44:28",
                "index": 16,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cd8eb6dd230697abf0cc",
                "text": "@OrangeDog  , Oh man, I wish I had made the jump years ago, you guys have done a fantastic job with Spring",
                "time": "2020-05-06 14:45:34",
                "index": 17,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cda922f9c45c2a7233b3",
                "text": "@OrangeDog  NOTHING in .NET come even close!",
                "time": "2020-05-06 14:46:01",
                "index": 18,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cdab0b23797ec0666715",
                "text": "e.g. instead of\n```\nbuilder.RegisterInstance(new TaskRepository())\n       .As<ITaskRepository>();\n```\nin Spring you have\n```\n@Bean\npublic ITaskRepository taskRepository() {\n    return new TaskRepository();\n}\n```",
                "time": "2020-05-06 14:46:03",
                "index": 19,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cdd17975db7ebfe9a5c7",
                "text": "(in Java the naming conventions would be `TaskRepository` and `TaskRepositoryImpl` instead.)",
                "time": "2020-05-06 14:46:41",
                "index": 20,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2ce22a9de3d01b1efc6ea",
                "text": "a \"builder\" is a particular design pattern for initialising immutable objects, not related to IoC\n",
                "time": "2020-05-06 14:48:02",
                "index": 21,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2ce2e97338850a2ee78f5",
                "text": "@OrangeDog  My issue is with how I applied the builder pattern to a problem I was trying to solve, which was encapsulate the FileNet bits that were needed to interact with the backend",
                "time": "2020-05-06 14:48:14",
                "index": 22,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2ce47347bd616305b2196",
                "text": "public class CEDocument {\n\n    private String userName;\n    private String userPassword;\n    private String mimeType;\n    private String documentClass;\n\n    private CEDocument(Builder builder) {\n        this.userName = builder.userName;\n        this.userPassword = builder.userPassword;\n        this.mimeType = builder.mimeType;\n        this.documentClass = builder.documentClass;\n    }\n\n    public void saveDocument() {\n        try (CEConnection conn = new CEConnection(this.userName, this.userPassword)) {\n            conn.establishConnection();\n\n            //do work here with the filenet api \n        }\n    }\n\n    public static class Builder {\n        private String userName;\n        private String userPassword;\n        private String mimeType;\n        private String documentClass;\n\n        public Builder withCredentials(String userName, String userPassword) {\n            this.userName = userName;\n            this.userPassword = userPassword;\n            return this;\n        }\n\n        public Builder withMimeType(String mimeType) {\n            this.mimeType = mimeType;\n            return this;\n        }\n\n        public Builder withDocClass(String documentClass) {\n            this.documentClass = documentClass;\n            return this;\n        }\n\n        public CEDocument build() {\n            // todo: run some simple logic validation on the properties\n            return new CEDocument(this);\n        }\n    }\n}",
                "time": "2020-05-06 14:48:39",
                "index": 23,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cecd5cd4fe50a3f235a0",
                "text": "@OrangeDog  There is a potential to in the static class to have data corruption if more that one instance of the CEDocument is instanciated, right? ",
                "time": "2020-05-06 14:50:53",
                "index": 24,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cef27a24ff01b00584b0",
                "text": "no...",
                "time": "2020-05-06 14:51:30",
                "index": 25,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cf20adb0ec5c2bea76a8",
                "text": "~~that's not the usual arrangement for a builder pattern, but~~ it should work",
                "time": "2020-05-06 14:52:16",
                "index": 26,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cf35b6dd230697abf575",
                "text": "I stole that from Mr Block",
                "time": "2020-05-06 14:52:37",
                "index": 27,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cf3822f9c45c2a7237e8",
                "text": "if you don't like typing, the lombok project covers builders",
                "time": "2020-05-06 14:52:40",
                "index": 28,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cf4a22f9c45c2a723820",
                "text": "I have lombok installed",
                "time": "2020-05-06 14:52:58",
                "index": 29,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cf600b23797ec0666c8c",
                "text": "for logging, just to get my feet wet",
                "time": "2020-05-06 14:53:20",
                "index": 30,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cf6e97338850a2ee7d2e",
                "text": "https://www.projectlombok.org/features/Builder",
                "time": "2020-05-06 14:53:34",
                "index": 31,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cf73a9de3d01b1efcaa4",
                "text": "but it looks promising for boilerplate code",
                "time": "2020-05-06 14:53:39",
                "index": 32,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cfa10b23797ec0666eaa",
                "text": "However, this thing looks like something that should be a service, but you need multiple instances with different credentials?",
                "time": "2020-05-06 14:54:25",
                "index": 33,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2cfb77975db7ebfe9aecd",
                "text": "Correct",
                "time": "2020-05-06 14:54:47",
                "index": 34,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2cfe1b6dd230697abf804",
                "text": "Lots of conncurent users, both humans and services",
                "time": "2020-05-06 14:55:29",
                "index": 35,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d003a9de3d01b1efcc64",
                "text": "You can have session-scoped beans, which might help\nso the bean method will be called anew for each session the bean is accessed from",
                "time": "2020-05-06 14:56:03",
                "index": 36,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d055f0377f16316e41f1",
                "text": "it's that stupid inner static class that I need to get rid of, but it looks like lombok using it that way too",
                "time": "2020-05-06 14:57:25",
                "index": 37,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d0925cd4fe50a3f23dce",
                "text": "the class being static is of no consequence",
                "time": "2020-05-06 14:58:26",
                "index": 38,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d0a5b6dd230697abfb0b",
                "text": "Spring Security also maintains a current user context you can access",
                "time": "2020-05-06 14:58:45",
                "index": 39,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d0e8adb0ec5c2bea7d86",
                "text": "so there can be more than one instance of the static inner class?",
                "time": "2020-05-06 14:59:52",
                "index": 40,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d1105cd4fe50a3f24050",
                "text": "I was in the middle of writing a test to prove this out for my own good",
                "time": "2020-05-06 15:00:32",
                "index": 41,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d117a9de3d01b1efd2ae",
                "text": "yes",
                "time": "2020-05-06 15:00:39",
                "index": 42,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d12831a6d25d7cb14f3d",
                "text": "the static means it's independent of any instances of the outer class",
                "time": "2020-05-06 15:00:56",
                "index": 43,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d14722f9c45c2a723ef1",
                "text": "it would only be an issue if the class had any static members, which it doesn't",
                "time": "2020-05-06 15:01:27",
                "index": 44,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d16097338850a2ee8482",
                "text": "dude, I'm buying you some beers!",
                "time": "2020-05-06 15:01:52",
                "index": 45,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d19c22f9c45c2a723f8c",
                "text": "Real quick, back to terminolgy .",
                "time": "2020-05-06 15:02:52",
                "index": 46,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d1f95cd4fe50a3f2434f",
                "text": "(in Java the naming conventions would be `TaskRepository` and `TaskRepositoryImpl` instead.) In my former life we would name interfaces ITaskRepository, are you saying it a good convention not to do it that way in Java? ",
                "time": "2020-05-06 15:04:25",
                "index": 47,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d20c7975db7ebfe9b62b",
                "text": "yes, IThing is the C-land convention",
                "time": "2020-05-06 15:04:44",
                "index": 48,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d215adb0ec5c2bea813d",
                "text": "in Java, the interface gets the primary name",
                "time": "2020-05-06 15:04:53",
                "index": 49,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d21cb6dd230697ac00a8",
                "text": "Same goes for Impl. Is Spring keying off of the naming conventions?",
                "time": "2020-05-06 15:05:00",
                "index": 50,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d23eb6dd230697ac0107",
                "text": "OK,  thats for both abstract and interfaces",
                "time": "2020-05-06 15:05:34",
                "index": 51,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d25c347bd616305b2ec7",
                "text": "an abstract class is usually AbstractThing",
                "time": "2020-05-06 15:06:04",
                "index": 52,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d2807a24ff01b00591ac",
                "text": "I don't think there's anything in spring that relies on something being named Impl, though Spring Data Repositories do get a bit magic",
                "time": "2020-05-06 15:06:40",
                "index": 53,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d28a5cd4fe50a3f2456e",
                "text": "I also thought that Impl was a hold over from the EE stuff, and in Spring we do it differnt",
                "time": "2020-05-06 15:06:50",
                "index": 54,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d2aa14b48f0698b231d0",
                "text": "It's just a Java thing. If you have an implementation of an interface, but no better way to name it",
                "time": "2020-05-06 15:07:22",
                "index": 55,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d2db22f9c45c2a72448d",
                "text": "Everything in spring is preferably done via type and annotation, not name",
                "time": "2020-05-06 15:08:11",
                "index": 56,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d2e0adb0ec5c2bea82ab",
                "text": "It makes complete sense and you don't need to reason about the code as your reading it",
                "time": "2020-05-06 15:08:16",
                "index": 57,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d30731a6d25d7cb153cd",
                "text": "Yeah, you guys are nailing that down pretty well, good job!",
                "time": "2020-05-06 15:08:55",
                "index": 58,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d31cf0377f16316e4a82",
                "text": "Though it saves a lot of typing if your arg names are the same as your web param names and your db column names etc.",
                "time": "2020-05-06 15:09:16",
                "index": 59,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d3247a24ff01b0059495",
                "text": "Man, just the devtools and InTellij and the intergartion",
                "time": "2020-05-06 15:09:24",
                "index": 60,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d37ad898fe7a376c3533",
                "text": "the embedded tomcat and a macro keyed to crtl-save , boom!  code , refactor, test, code , refactor test all the while it's running",
                "time": "2020-05-06 15:10:50",
                "index": 61,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d398a9de3d01b1efdb11",
                "text": "(IntelliJ auto-saves on focus change, you don't even need that)",
                "time": "2020-05-06 15:11:20",
                "index": 62,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d39cadb0ec5c2bea85f6",
                "text": "It's actually VERY cool. Again, nothing like it on the MS side",
                "time": "2020-05-06 15:11:24",
                "index": 63,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d3c8f0377f16316e4d8d",
                "text": "IIRC MS tools do hot-reloading just fine, though it's been a while and I never used any web platforms",
                "time": "2020-05-06 15:12:08",
                "index": 64,
                "user": "OrangeDog"
            },
            {
                "id": "5eb2d3f09f0c955d7da9a633",
                "text": "Yeah, but not as fast",
                "time": "2020-05-06 15:12:48",
                "index": 65,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d417b6dd230697ac07a7",
                "text": "The story on the Java side is much more robust",
                "time": "2020-05-06 15:13:27",
                "index": 66,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d464adb0ec5c2bea8a37",
                "text": "Looks like I bound crtl-s to Ation: CompileDirty",
                "time": "2020-05-06 15:14:44",
                "index": 67,
                "user": "stephenpatten"
            },
            {
                "id": "5eb2d9050b23797ec06691a7",
                "text": "@OrangeDog  Thank you for sharing your expertise with me, very kind. cheers!",
                "time": "2020-05-06 15:34:29",
                "index": 68,
                "user": "stephenpatten"
            }
        ]
    },
    {
        "id": 230,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d381822d6188741642a58ca",
                "text": "Is there a replacement for `org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMappingCustomizer` in 2.x? I used this customizer to expose health endpoint on additional paths (e.g. `/health.jsp`, `/health` and  the default one `/actuator/health`)",
                "time": "2019-07-24 08:34:42",
                "index": 0,
                "user": "mzcu"
            },
            {
                "id": "5d381b0fbe916e76e2294cfc",
                "text": "In SpringBoo 2.x you don't need these customizers any more, you can simply add in the following dependency\n```\n   <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n```\n\nAnd access the all the endpoints which come under this, if you specifically wants to use health then do the following configurations in application.properties file.\n#actuator\nmanagement.endpoints.web.base-path = /\nmanagement.endpoints.web.exposure.include = health\nmanagement.endpoints.enabled-by-default = false\nmanagement.endpoint.health.enabled = true\n",
                "time": "2019-07-24 08:47:11",
                "index": 1,
                "user": "deepakmehra10"
            },
            {
                "id": "5d381b3935e05c09939058c2",
                "text": "Use the first config only if you want to start with /health instead of /actuator/health",
                "time": "2019-07-24 08:47:53",
                "index": 2,
                "user": "deepakmehra10"
            },
            {
                "id": "5d381b5f808425671cdb80ff",
                "text": "And you can add more endpoints int the second configurations with , seperated values",
                "time": "2019-07-24 08:48:31",
                "index": 3,
                "user": "deepakmehra10"
            },
            {
                "id": "5d381bd9be916e76e229537d",
                "text": "Please refer to the folowing link for more endpoints\nhttps://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html",
                "time": "2019-07-24 08:50:33",
                "index": 4,
                "user": "deepakmehra10"
            },
            {
                "id": "5d382466b2db751dabbd52aa",
                "text": "I want to expose a single health endpoint on multiple paths (/health, /actuator/health) while keeping /actuator context for other endpoints (e.g. /actuator/info). I don\u2019t see how is this possible with configuration that was suggested ",
                "time": "2019-07-24 09:27:02",
                "index": 5,
                "user": "mzcu"
            },
            {
                "id": "5d38260cbe916e76e229a1c5",
                "text": "Why would you want to do that? Isn\u2019t a redirect better?",
                "time": "2019-07-24 09:34:04",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5d38274f5ea6e644ec0dbd2c",
                "text": "Good idea! Is it possible to setup redirects only through application config ?",
                "time": "2019-07-24 09:39:27",
                "index": 7,
                "user": "mzcu"
            },
            {
                "id": "5d382774808425671cdbdbe1",
                "text": "No. Why do you want this to be configurable? ",
                "time": "2019-07-24 09:40:04",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5d382b96be916e76e229d084",
                "text": "This is just a way to make things work you can define and drive everything you want from application.properties itself",
                "time": "2019-07-24 09:57:42",
                "index": 9,
                "user": "deepakmehra10"
            },
            {
                "id": "5d382bc3e2d1aa6688fdc28c",
                "text": "If you want to route with actuator/health then you might have to write some business logic for that",
                "time": "2019-07-24 09:58:27",
                "index": 10,
                "user": "deepakmehra10"
            },
            {
                "id": "5d382c01e2d1aa6688fdc33d",
                "text": "Redirect is not possible of course",
                "time": "2019-07-24 09:59:29",
                "index": 11,
                "user": "deepakmehra10"
            },
            {
                "id": "5d382c18a0351b1a8c8bf94f",
                "text": "With configurations you can minimize the business logic to great extent",
                "time": "2019-07-24 09:59:52",
                "index": 12,
                "user": "deepakmehra10"
            },
            {
                "id": "5d382c561dc633296605115f",
                "text": "configuration does not always have to be in properties (so-called programming by properties). IMO, such setup is more clear using the API (`WebMvcConfigurer` lets you manage that, see the doc)",
                "time": "2019-07-24 10:00:54",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5d382d15437a3a134847511b",
                "text": "looks good @snicoll ",
                "time": "2019-07-24 10:04:05",
                "index": 14,
                "user": "deepakmehra10"
            },
            {
                "id": "5d382dde5ea6e644ec0df46a",
                "text": "@snicoll Did you have `WebMvcConfigurer#addViewControllers` in mind for setting up the redirects dynamically?",
                "time": "2019-07-24 10:07:26",
                "index": 15,
                "user": "mzcu"
            },
            {
                "id": "5d382e8cec5abe7bbc3c7899",
                "text": "Yes",
                "time": "2019-07-24 10:10:20",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5d382ed9b2db751dabbda043",
                "text": "Great, that's exactly what I need. Thanks!",
                "time": "2019-07-24 10:11:37",
                "index": 17,
                "user": "mzcu"
            },
            {
                "id": "5d383050ec5abe7bbc3c89f5",
                "text": "@snicoll is it okat to use WebMvcConfigurer if you do not have views in your applications, i.e just the rest APIs",
                "time": "2019-07-24 10:17:52",
                "index": 18,
                "user": "deepakmehra10"
            },
            {
                "id": "5d383122ec5abe7bbc3c8f1f",
                "text": "@deepakmehra10 Yes",
                "time": "2019-07-24 10:21:22",
                "index": 19,
                "user": "bclozel"
            },
            {
                "id": "5d383156a0351b1a8c8c2201",
                "text": "Okay thanks",
                "time": "2019-07-24 10:22:14",
                "index": 20,
                "user": "deepakmehra10"
            }
        ]
    },
    {
        "id": 231,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eec438954d7862dc496af4b",
                "text": "@here",
                "time": "2020-06-19 04:48:09",
                "index": 0,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec438e6c06cd1bf43fbc4f",
                "text": "I have my service class which does a post call. I would like to instantiate that bean/ autowire it to create a object in another class which is not a component or configuration class.",
                "time": "2020-06-19 04:48:14",
                "index": 1,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec43c86c06cd1bf43fbcee",
                "text": "```\n@Service\npublic class SavePayload {\n\n  // Rest Post Call implementation \n\n}\n```",
                "time": "2020-06-19 04:49:12",
                "index": 2,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec43e07ba3965373b71b90",
                "text": "```\npublic class PayloadRecord\n            implements Record {\n\n        private String payload;\n\n        PayloadProcessor payloadProcessor = new PayloadProcessor();\n\n        public PayloadRecord(String payload) {\n            this.payload = payload;\n        }\n\n        @SneakyThrows\n        @Override\n        public boolean isValid() throws ValidationException {\n            payloadProcessor.savePayload(payload);\n            return true;\n        }\n\n        @Override\n        public byte[] getBytes(Charset charset) {\n            return payload.getBytes(StandardCharsets.UTF_8);\n        }\n\n        @Override\n        public String getID() {\n            return payload;\n        }\n\n\n        @Override\n        public String toString() {\n            return payload;\n        }\n\n        private static class PayloadProcessor {\n\n            @Autowired\n            private SavePayload savePayload;\n\n        }\n\n    }\n```",
                "time": "2020-06-19 04:49:36",
                "index": 3,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec440bc4bdd83475f1b621",
                "text": "Can someone help me how can I get the service object into PayloadRecord class non-spring managed class.",
                "time": "2020-06-19 04:50:19",
                "index": 4,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec448854d7862dc496b172",
                "text": "You could us @Configurable at PayloadProcessor",
                "time": "2020-06-19 04:52:24",
                "index": 5,
                "user": "ahoehma"
            },
            {
                "id": "5eec4559fa0c9221fc492ab0",
                "text": "@ARUNMANNURU I\u2019m also new here, hopefully this article can help you.\nhttps://www.baeldung.com/spring-inject-bean-into-unmanaged-objects",
                "time": "2020-06-19 04:55:53",
                "index": 6,
                "user": "dipengfei"
            },
            {
                "id": "5eec47cfa813c72dcff8bab1",
                "text": "Any other thoughts on it ?",
                "time": "2020-06-19 05:06:23",
                "index": 7,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec48356c06cd1bf43fc673",
                "text": "Remove PayloadProcessor :) For what reason do you need this extra wrapper?",
                "time": "2020-06-19 05:08:05",
                "index": 8,
                "user": "ahoehma"
            },
            {
                "id": "5eec4882613d3b3394f61791",
                "text": "My use case is, I have kafka topic where I consume message and do validation if it is valid then I\u2019ll send it to another queue ",
                "time": "2020-06-19 05:09:22",
                "index": 9,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec48a96c06cd1bf43fc791",
                "text": "To do the validation I need to make API call ",
                "time": "2020-06-19 05:10:01",
                "index": 10,
                "user": "ARUNMANNURU"
            },
            {
                "id": "5eec48b7ec4a341beed75448",
                "text": "For that i have that service class ",
                "time": "2020-06-19 05:10:15",
                "index": 11,
                "user": "ARUNMANNURU"
            }
        ]
    },
    {
        "id": 232,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5cbdeb135b3f941aa5738fdd",
                "text": "Hi, I'm trying to update my spring boot from 1.4.2 to 2.1, but our project is using elasticsearch 2.4.1, and spring boot requires spring 5.1, and it seems not compatible with elasticsearch 2.4.1. Which version of spring boot is the latest version that is compatible? and Are there any way to use spring boot 2.x together with elasticsearch 2.4.1 ? Our project use spring-boot-starter-data-elasticsearch",
                "time": "2019-04-22 16:25:55",
                "index": 0,
                "user": "dongjin"
            },
            {
                "id": "5cbdeb7b5b3f941aa5739442",
                "text": "Oh. is it compatible with elasticsearch 2.4.1? where can I find those information?",
                "time": "2019-04-22 16:27:39",
                "index": 1,
                "user": "dongjin"
            },
            {
                "id": "5cbdebcab489bb6ed7a7f550",
                "text": "I see the following comment even from spring boot 2.0 : Spring Boot 2 requires Elasticsearch 5.4 from now on.",
                "time": "2019-04-22 16:28:58",
                "index": 2,
                "user": "dongjin"
            },
            {
                "id": "5cbeaf501cd0b8307d59adb2",
                "text": "@dongjin 1.4 to 2.1 is quite a leap so having to upgrade third party dependencies is fair IMO and you should take the time to review what\u2019s required to upgrade to a more recent ES version.",
                "time": "2019-04-23 06:23:12",
                "index": 14,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 233,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d080ab96f0ec85ade2735da",
                "text": "@wilkinsona is there a reason why it seems like it's messing up in the lifecycle once it picks up `BeanFactoryPostProcessor` as bean ? not all my other properties won't resolved\n``` \n    @Bean(\"streamBeanFactoryPostProcessor\")\n    @ConditionalOnProperty(prefix = \"inferno.subscriber\", value = {\"host\", \"registration.streams\"})\n    public static BeanFactoryPostProcessor beanFactoryPostProcessor(RestTemplate restTemplate) {\n        log.info(\"Initializing streamBeanFactoryPostProcessor.\");\n        return new StreamBeanFactoryPostProcessor(restTemplate);\n    }\n``` ",
                "time": "2019-06-17 21:48:41",
                "index": 0,
                "user": "jselamy"
            },
            {
                "id": "5d084c4cecc6a91b3105aaee",
                "text": "@wilkinsona the `RestTemplate restTemplate` i'm using is an `OAuth2RestTemplate` and in the `StreamBeanFactoryPostProcessor` I register an app on a specific endpoint which is secured &  the props are defined in a property file.  `OAuth2RestTemplate` inject these properties in the bean but at this point it's too early in the lifecycle",
                "time": "2019-06-18 02:28:28",
                "index": 4,
                "user": "jselamy"
            },
            {
                "id": "5d090bb3fbcc305cc49deefc",
                "text": "@jselamy You're injecting `RestTemplate` into your bean factory post-processor's definition. That's going to cause the `RestTemplate` bean to get created really early. You need to avoid injecting anything into the BFPP.",
                "time": "2019-06-18 16:05:07",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5d090def325b465cc35a6325",
                "text": "@wilkinsona i've figured but what can i do in this case ?  or what should i do ? What would be the best approach since I need to register to an OAuth2 secured resource endpoint using OAuth2 token bearer",
                "time": "2019-06-18 16:14:39",
                "index": 16,
                "user": "jselamy"
            },
            {
                "id": "5d090f0dbb789747fb3452c2",
                "text": "You need to make an HTTP call as part of the dynamic bean registration?",
                "time": "2019-06-18 16:19:25",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5d09101626477710bbdd8d94",
                "text": "@wilkinsona yes to dynamically create my registrationBean that has information about where the incoming messages will be dispatched on an exchange with a specified routingKey for a registered app",
                "time": "2019-06-18 16:23:50",
                "index": 18,
                "user": "jselamy"
            },
            {
                "id": "5d0914968e050f62aa4a9bc7",
                "text": "You could use a context hierarchy, define the `RestTemplate` in the parent context, and do the dynamic registration in a child context. Alternatively, you'll have to avoid using a `RestTemplate` bean and create the `RestTemplate` directly in the BFPP.",
                "time": "2019-06-18 16:43:02",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5d09152d2313502d38715b7f",
                "text": "@wilkinsona this part is done in a SB starter for all our apps that need to register, can you elaborate on the context hierarchy",
                "time": "2019-06-18 16:45:33",
                "index": 20,
                "user": "jselamy"
            },
            {
                "id": "5d09241bfbcc305cc49ff24b",
                "text": "@jselamy A context hierarchy probably isn't a good solution if you want to do this in your own general purpose starter",
                "time": "2019-06-18 17:49:15",
                "index": 33,
                "user": "wilkinsona"
            },
            {
                "id": "5d09243e8e050f62aa4bdf69",
                "text": "In that case, I'd recommend at looking at alternative ways of creating a `RestTemplate` that meets your needs",
                "time": "2019-06-18 17:49:50",
                "index": 34,
                "user": "wilkinsona"
            },
            {
                "id": "5d092bcdecc6a91b31177e04",
                "text": "@wilkinsona Is there a way i could enforce the validation of all my attributes while manually creating `oAuth2RestTemplate` for my needs ? sort of `InitializingBean`",
                "time": "2019-06-18 18:22:05",
                "index": 36,
                "user": "jselamy"
            }
        ]
    },
    {
        "id": 234,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df33351ce2b2e652bc944a5",
                "text": "Hi , could you please provide the link for webflux channel?",
                "time": "2019-12-13 06:44:33",
                "index": 0,
                "user": "sofocleous2_twitter"
            },
            {
                "id": "5df34745ce2b2e652bc9e0f9",
                "text": "@sofocleous2_twitter I don't  think there is any webflux channel, these channels are mapped towards github-repos, and there is no standalone github-repo for webflux. This channel is, however, a good place for Webflux-related questions I would say - whereas specific questions regarding core functionality of the reactor components' behavior and operators, might be better  off in the reactor channel.",
                "time": "2019-12-13 08:09:41",
                "index": 2,
                "user": "mickeelm"
            },
            {
                "id": "5df348be0995661eb8d97b08",
                "text": "@sofocleous2_twitter No, Spring MVC and Spring WebFlux can't run at the same time within the same app. You can't mix and match blocking and reactive contracts within the same controller in WebFlux. But Spring MVC supports some reactive types (see https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web.html#mvc-ann-async-reactive-types): you won't leverage the full non-blocking+reactive behavior, but at least you can return those types when, for example, using WebClient or another reactive library in your application.",
                "time": "2019-12-13 08:15:58",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5df34a90e47fb31eb7a3ec1a",
                "text": "@sofocleous2_twitter Sorry, my answer in the reactor-channel about this was wrong. @Controller can indeed be used whether you have reactive or blocking endpoints (if I'm not very mistaken), e.g. there isn't a @WebfluxController or something like that but yeah, you can't mix the endpoint because either you run classic MVC or you run WebFlux. Thanks @bclozel",
                "time": "2019-12-13 08:23:44",
                "index": 4,
                "user": "mickeelm"
            },
            {
                "id": "5df34dd77ce7ea1e35771c1e",
                "text": "Thanks a lot @bclozel ",
                "time": "2019-12-13 08:37:43",
                "index": 5,
                "user": "sofocleous2_twitter"
            }
        ]
    },
    {
        "id": 235,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cefb4a2b76eac527a737090",
                "text": "Hi all. I'm looking for a little advice with regard to `@ConfigurationProperties` beans. Our team are getting sporadic \"failed to bind to configuration properties\" failures when running tests annotated with:\n\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest\n@ActiveProfiles(\"integration\")\n@EmbeddedKafka(controlledShutdown = true)\n@EnableConfigurationProperties\n```\n\nThe configuration properties in general are custom properties, that are bound to a `ConfigurationProperties` bean.  Which itself is annotated with:\n\n```\n@Configuration\n@ConfigurationProperties(\"parcel-events\")\n@Validated\n```\n\nThe configuration properties in `application.properties` and `application-integration.properties` for this are:\n\n```\nparcel-events.codes.del=A\nparcel-events.codes.del-BE=B\nparcel-events.codes.del-CE=C\n\nparcel-events.kafka-setup.event-codes-to-destination-topic-names.A=\\${receipting.kafka.parcel.topic-name}\nparcel-events.kafka-setup.event-codes-to-specific-record-producer-bean-names.A=receiptingEventsProducer\n\nparcel-events.kafka-setup.event-codes-to-destination-topic-names.B=\\${delivery.kafka.parcel.topic-name}\nparcel-events.kafka-setup.event-codes-to-specific-record-producer-bean-names.B=deliveryEventsProducer\n\nparcel-events.kafka-setup.event-codes-to-destination-topic-names.C=\\${delivery.kafka.parcel.topic-name}\nparcel-events.kafka-setup.event-codes-to-specific-record-producer-bean-names.C=deliveryEventsProducer\n``` ",
                "time": "2019-05-30 10:46:58",
                "index": 0,
                "user": "mlk5060"
            },
            {
                "id": "5cefc4616f530d3b6109853a",
                "text": "@mlk5060 What's the failure?",
                "time": "2019-05-30 11:54:09",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ceff333702b7e5e76fefbc9",
                "text": "@wilkinsona Hello, sir :-) Its a \"failure to bind to configuration properties\" error. Apologies, I don't have the *actual* message to hand",
                "time": "2019-05-30 15:13:55",
                "index": 10,
                "user": "mlk5060"
            },
            {
                "id": "5cf009b2faac64393411519a",
                "text": "@mlk5060 If you ever do have the complete failure to hand, let me know and I'll take a look. I don't think I can do much to help without it.",
                "time": "2019-05-30 16:49:54",
                "index": 11,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 236,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5df284b60dc628523e244691",
                "text": "@wilkinsona Regarding the question @kpaxton  asked...  Is this a bug? A `ConditionalOnProperty` relies on Spring to have brought in all the properties at that point. Otherwise,  how would this EVER work if you couldn't rely on the property it's conditioned on to not yet have been brought into the Spring Context without having to resort to `EnvironmentPostProcessor`. My understanding is that you'd want to use `EnvironmentPostProcessor` for modifying things that would otherwise happen automatically (like changing the actual property names or augmenting the values that were already read in), but is this normal behavior that a property isn't loaded until AFTER `ConditionalOnProperty` is evaluated?",
                "time": "2019-12-12 18:19:34",
                "index": 0,
                "user": "ychaikin"
            },
            {
                "id": "5df2875ece2b2e652bc4c079",
                "text": "After thinking about it, I think maybe it's because, as you stated, the properties are being brought in through `@PropertySource ` instead of the default method. So, the \"wrong\" `@Configuration` is loaded first before the one that has the `@PropertySource` on it. So, that means that `@PropertySource` is NOT considered as \"somewhat a dependency\" when Spring evaluates the dependency tree it needs to create? Why not?",
                "time": "2019-12-12 18:30:54",
                "index": 1,
                "user": "ychaikin"
            },
            {
                "id": "5df287f4e47fb31eb79eb07b",
                "text": "What's EVEN more perplexing is that we tried to specify `@PropertySource` **directly** on the configuration which has the `@ConditionalOnProperty` on it and it STILL didn't load it before evaluating the conditional (at least that's everyone's assumption). So, I guess, I just don't get how this is  not a bug.",
                "time": "2019-12-12 18:33:24",
                "index": 2,
                "user": "ychaikin"
            },
            {
                "id": "5df2a981c6ce6027ebadee38",
                "text": "@ychaikin conditions are evaluated to determine whether or not a configuration class should be processed. Only once any conditions have matched will the class be processed and any `@PropertySource` declared on it be acted upon. `EnvironmentPostProcessor` is intended for any post-processing of the environment, including adding new property sources. It's called at a point in the application's lifecycle that means that any changes made to the environment will be available before anything tries to use it.",
                "time": "2019-12-12 20:56:33",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5df2cc060616d6515e2b721b",
                "text": "@wilkinsona Thanks for the explanation. Makes sense!",
                "time": "2019-12-12 23:23:50",
                "index": 6,
                "user": "ychaikin"
            }
        ]
    },
    {
        "id": 237,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5bd831cac08b8b3067965a9b",
                "text": "How do you configure custom `Jackson ObjectMapper` with `WebFlux`? I tried following docs as in here https://docs.spring.io/spring-boot/docs/current/reference/html/howto-spring-mvc.html#howto-customize-the-jackson-objectmapper but executing `.bodyToMono(MyClass::class.java)` always fails to deserialise responses from my `WebClient`. However if I inject `ObjectMapper` to my webclient service and deserialise response manually like below then everything works just fine:\n```\n\t.bodyToMono(String::class.java)\n\t.map { objectMapper.readValue<MyClass>(it) }\n```",
                "time": "2018-10-30 10:26:18",
                "index": 0,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd8348abbdc0b2505c2305f",
                "text": "Defining custom `MappingJackson2HttpMessageConverter` like so doesn't seem to change the mapper for JSON messages either\n```\n\t@Bean(name = [\"MappingJackson2HttpMessageConverter\"])\n\t@Order(Ordered.HIGHEST_PRECEDENCE)\n\t@Primary\n\tfun customMapper(objectMapper: ObjectMapper): MappingJackson2HttpMessageConverter {\n\t\treturn MappingJackson2HttpMessageConverter(objectMapper)\n\t}\n```",
                "time": "2018-10-30 10:38:02",
                "index": 1,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd83930ab17df263112efbc",
                "text": "@BartoszKaszewczuk https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-webflux-httpcodecs",
                "time": "2018-10-30 10:57:52",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5bd83c56ab17df26311305d7",
                "text": "@bclozel Thanks, just found this in the docs as well but I'm entirely sure how to add `ObjectMapper` through this. I assume `ObjectMapper` has to be registered with both readers and writers but they require `Decoder<T>`and `Encoder<T>`. Is there an example by any chance?",
                "time": "2018-10-30 11:11:18",
                "index": 3,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd83d87bbdc0b2505c26b3d",
                "text": "BTW I'm only registering extra Jackson modules by defining them as `@Beans` like so:\n```\n\t@Bean\n\tfun jtsModule(): JtsModule {\n\t\treturn JtsModule()\n\t}\n```\nI assumed this would update Jackson mappers accross the board since I'm not overriding `Jackson2ObjectMapperBuilder`but it doesn't seem to be the case.",
                "time": "2018-10-30 11:16:23",
                "index": 4,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd83db7600c5f64232e578f",
                "text": "@BartoszKaszewczuk two things to consider first:\n1) can you use `spring.jackson.*` configuration properties to achieve what you want?\n2) Can you use any other customization method described in https://docs.spring.io/spring-boot/docs/current/reference/html/howto-spring-mvc.html#howto-customize-the-jackson-objectmapper\n3) as a last resort in this case, you can take a look at: https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.java#L58-L66",
                "time": "2018-10-30 11:17:11",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5bd83dec435c2a518e2a294b",
                "text": "In this case, declaring a module as a bean should work. Maybe something is defining an `ObjectMapper` bean and is overriding all that?",
                "time": "2018-10-30 11:18:04",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5bd83e50069fca52a5b8f7b0",
                "text": "You can take a look at the auto-configuration report to know how objectmapper is being configured in your app: https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#auto-configuration-classes",
                "time": "2018-10-30 11:19:44",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5bd840e0bbdc0b2505c281ea",
                "text": "@bclozel  Module registration through beans does indeed seem to work since I can ask Spring to inject `ObjectMapper` into my instances and then manual deserialisation works perfectly. So Spring seems to have a correnctly configured `ObjectMapper` in its context, it just seems that its not the one used by `WebFlux`. An order of precedence issue, perhaps?",
                "time": "2018-10-30 11:30:40",
                "index": 9,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd84122ab17df2631132871",
                "text": "@BartoszKaszewczuk what does the auto-configuration report says about CodecsAutoConfiguration ?",
                "time": "2018-10-30 11:31:46",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5bd841bb069fca52a5b90c2b",
                "text": "@BartoszKaszewczuk same for WebFluxAutoConfiguration please",
                "time": "2018-10-30 11:34:19",
                "index": 12,
                "user": "bclozel"
            },
            {
                "id": "5bd841e8c08b8b306796c660",
                "text": "```\nPositive matches:\n-----------------\n\n   CodecsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.codec.CodecConfigurer'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n```\n",
                "time": "2018-10-30 11:35:04",
                "index": 13,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd842203844923661bf23a7",
                "text": "@BartoszKaszewczuk Are you trying to leverage that jackson config on the client or server side?",
                "time": "2018-10-30 11:36:00",
                "index": 14,
                "user": "bclozel"
            },
            {
                "id": "5bd84261600c5f64232e7ad1",
                "text": "As of right now, client side through `WebClient`",
                "time": "2018-10-30 11:37:05",
                "index": 16,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd8428c64cfc273f94b2bc8",
                "text": "@BartoszKaszewczuk How are you creating that webclient?",
                "time": "2018-10-30 11:37:48",
                "index": 17,
                "user": "bclozel"
            },
            {
                "id": "5bd842be435c2a518e2a4764",
                "text": "```\nPositive matches:\n-----------------\n   ErrorWebFluxAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n\n   ErrorWebFluxAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorWebFluxAutoConfiguration#errorWebExceptionHandler matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   WebFluxAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.config.WebFluxConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebFluxAutoConfiguration#hiddenHttpMethodFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.reactive.HiddenHttpMethodFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n```",
                "time": "2018-10-30 11:38:38",
                "index": 18,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd843201e23486b933f0193",
                "text": "@bclozel Yes. Like so:\n```\n\tprivate val client = WebClient\n\t\t\t.builder()\n\t\t\t.baseUrl(baseUrl)\n\t\t\t.defaultHeaders { headers ->\n\t\t\t\twith(headers) {\n\t\t\t\t\taccept = listOf(MediaType.APPLICATION_JSON)\n\t\t\t\t\tcontentType = MediaType.APPLICATION_JSON\n\t\t\t\t\tset(apiAuthHeaderName, apiAuthHeaderValue)\n\t\t\t\t}\n\t\t\t}\n\t\t\t.build()\n```",
                "time": "2018-10-30 11:40:16",
                "index": 19,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd84349069fca52a5b91a95",
                "text": "@BartoszKaszewczuk if we're talking about the client side, using `WebClient.create()`/`WebClient.builder()` creates a brand new `WebClient` in a manual way, Spring Boot is not involved in that. If you want the Spring Boot autoconfig to be taken into account, you've got to use the builder bean that Spring Boot is providing. See here: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-webclient.html#boot-features-webclient",
                "time": "2018-10-30 11:40:57",
                "index": 20,
                "user": "bclozel"
            },
            {
                "id": "5bd84428600c5f64232e8746",
                "text": "@bclozel Spot on! Injecting `WebClient.Builder `does indeed fix the issue. I wasn't aware of this. Thanks a lot Brian!",
                "time": "2018-10-30 11:44:40",
                "index": 22,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd844daab17df2631134159",
                "text": "@bclozel Out of curiosity though. Whats special about the builder provided by Spring Boot? Would making both equal be a matter of passing some extra configuration regarding Codecs to the plain builder?",
                "time": "2018-10-30 11:47:38",
                "index": 23,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd8451f64cfc273f94b3c2c",
                "text": "@BartoszKaszewczuk Yeah, it's not obvious - we recently updated the documentation around that. calling `WebClient.builder()` is a static call, something implemented in Spring Framework proper that's not aware of all the Spring Boot infrastructure. You can call that at any given time.",
                "time": "2018-10-30 11:48:47",
                "index": 24,
                "user": "bclozel"
            },
            {
                "id": "5bd8454f1e23486b933f136d",
                "text": "The `WebClient.Builder` provided by Spring Boot is just Spring Boot calling itself that static builder method and building on top of it with the configuration opinions you've provided. And more.",
                "time": "2018-10-30 11:49:35",
                "index": 25,
                "user": "bclozel"
            },
            {
                "id": "5bd8458264cfc273f94b3f66",
                "text": "If you're using both Jetty client+server, or Reactor Netty client+server in an app, it's making sure that the client is sharing the HTTP resources with the server for maximum efficiency.",
                "time": "2018-10-30 11:50:26",
                "index": 26,
                "user": "bclozel"
            },
            {
                "id": "5bd845f1ef4afc4f28f51648",
                "text": "@bclozel It makes sense. Do you have a reference to source where this takes place?",
                "time": "2018-10-30 11:52:17",
                "index": 28,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd8461d1c100a4f2908d011",
                "text": "@BartoszKaszewczuk https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.java and https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.java",
                "time": "2018-10-30 11:53:01",
                "index": 29,
                "user": "bclozel"
            },
            {
                "id": "5bd84674bbdc0b2505c2acf7",
                "text": "@bclozel Perfect! Again, Thanks a lot!",
                "time": "2018-10-30 11:54:28",
                "index": 30,
                "user": "BartoszKaszewczuk"
            },
            {
                "id": "5bd84681069fca52a5b92ee3",
                "text": ":+1: ",
                "time": "2018-10-30 11:54:41",
                "index": 31,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 238,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e986ae9e920022432ab25d6",
                "text": "Hi guys, quick one:\nis it possible to define multiple profiles under 1 profile?\n\nexample:\n```\nspring:\n  application:\n    name: <someName>\n  profiles:\n    active: dev\n---\nspring:\n  profiles: dev\n  <all_other_props_related_to_dev_acc>\n ******\n---\nspring:\n  profiles: qa\n  <all_other_props_related_to_qa_acc>\n ******\n```\n\nbut what if dev and q `all_other_props_` are matching?\ncan I just do something like:\n\n```\nspring:\n  application:\n    name: <someName>\n  profiles:\n    active: dev\n---\nspring:\n  profiles: dev, qa\n  <all_other_props_related_to_dev_and_qa_acc>\n ******\n```\n\n??\n",
                "time": "2020-04-16 14:25:45",
                "index": 0,
                "user": "Bryksin"
            },
            {
                "id": "5e986e36c7dcfc14e2c19cd6",
                "text": "@Bryksin you can have some profile (usually first one) with list of additionally activated profiles, like this for example:\n```\nspring:\n  profiles:\n    active:\n      - stageDevel\n      - fillInTestData\n```",
                "time": "2020-04-16 14:39:50",
                "index": 1,
                "user": "luvarqpp"
            },
            {
                "id": "5e986e4fc7dcfc14e2c19d37",
                "text": "sou basically you have nearly hit formatting :)",
                "time": "2020-04-16 14:40:15",
                "index": 2,
                "user": "luvarqpp"
            },
            {
                "id": "5e986f494711086205358aa9",
                "text": "oh no no, I need a different way, I need to have single content, matching to the multiple profiles, here is a real example:\n\n```\n---\nspring:\n  profiles: dev-docker\n  cloud:\n    config:\n      fail-fast: true\n      #     defined as Docker ENV\n      uri: ${CONFIG_SERVICE_URL}\n\n---\nspring:\n  profiles: qa-docker\n  cloud:\n    config:\n      fail-fast: true\n      #     defined as Docker ENV\n      uri: ${CONFIG_SERVICE_URL}\n\n---\nspring:\n  profiles: prod-docker\n  cloud:\n    config:\n      fail-fast: true\n      #     defined as Docker ENV\n      uri: ${CONFIG_SERVICE_URL}\n```\n\nYou see this is code repetition, instead, I could do just:\n\n```\n---\nspring:\n  profiles: dev-docker, qa-docker` prod-docker\n  cloud:\n    config:\n      fail-fast: true\n      #     defined as Docker ENV\n      uri: ${CONFIG_SERVICE_URL}\n```",
                "time": "2020-04-16 14:44:25",
                "index": 3,
                "user": "Bryksin"
            },
            {
                "id": "5e986f72d240da243376c8bb",
                "text": "but not sure if that is possible, or how would you recommend to overcome this?\nso whatever profile I would activate it will refer to the same props content",
                "time": "2020-04-16 14:45:06",
                "index": 4,
                "user": "Bryksin"
            },
            {
                "id": "5e987037c38aa05a1a78133f",
                "text": "I see now... This is too much for me... I would try to go using code configuration and `@Profile` annotation, but this seems not the right solution",
                "time": "2020-04-16 14:48:23",
                "index": 5,
                "user": "luvarqpp"
            },
            {
                "id": "5e987088a9ca1862063defbe",
                "text": "could you make \"artificial\" profile called `dev+qa;prod-docker`, where you put your \"common subset\" things and than in each profile you just include it using profiles:active:dev+qa;prod-docker thing",
                "time": "2020-04-16 14:49:44",
                "index": 6,
                "user": "luvarqpp"
            },
            {
                "id": "5e98708ee920022432ab3aa6",
                "text": "@Bryksin https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config-multi-profile-yaml",
                "time": "2020-04-16 14:49:50",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5e9870d2c7dcfc14e2c1a752",
                "text": "oh awesome\n\n```\nspring:\n    profiles: production & eu-central\n```\n\nright? just `&` sign between profiles right?",
                "time": "2020-04-16 14:50:58",
                "index": 8,
                "user": "Bryksin"
            },
            {
                "id": "5e9870dfa412254f218bb2b9",
                "text": "@snicoll nice, thanks also from me :)",
                "time": "2020-04-16 14:51:11",
                "index": 9,
                "user": "luvarqpp"
            },
            {
                "id": "5e9870ef85b01628f0520b90",
                "text": "so it will be:\n\n```\n---\nspring:\n  profiles: dev-docker & qa-docker & prod-docker\n  cloud:\n    config:\n      fail-fast: true\n      #     defined as Docker ENV\n      uri: ${CONFIG_SERVICE_URL}\n```\n\nAm I right?",
                "time": "2020-04-16 14:51:27",
                "index": 10,
                "user": "Bryksin"
            },
            {
                "id": "5e9871418e987f3a5e1d8b55",
                "text": "I think that there should be `|` instead of `&`... Do you need given setting when any of given profiles are active?",
                "time": "2020-04-16 14:52:49",
                "index": 11,
                "user": "luvarqpp"
            },
            {
                "id": "5e98734e85b01628f05213ec",
                "text": "Yes",
                "time": "2020-04-16 15:01:34",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5e9873572ff88975b423b514",
                "text": "`&`is obviously when both profiles are active",
                "time": "2020-04-16 15:01:43",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5e9874efc38aa05a1a782691",
                "text": "ah or = | got it! thank you guys you helped a lot !!!!",
                "time": "2020-04-16 15:08:31",
                "index": 14,
                "user": "Bryksin"
            },
            {
                "id": "5e9875afc38aa05a1a782994",
                "text": "yes in our prod we do not mix profiles, only 1 active at a time\nhowever body content remains the same\nwhat is more, going forward, the config which is located at Config Server end is also the same,\nas all the difference only in values, and values are sensitive information, so config service resolve them from AWS secret manager on request\n\nhere is how it looks like:\n```\n---\nspring:\n  profiles: qa-docker\n  jpa:\n    generate-ddl: true\n    hibernate:\n      ddl-auto: update\n  datasource:\n    initialization-mode: always\n    username: <<db_username>>\n    password: <<db_password>>\n    url: jdbc:mysql://<<db_host>>:<<db_port>>/<<db_schema>>\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    hikari:\n      maximum-pool-size: 5\n```\n\nwhere any value in ``<<>>`` is a sensitive value which is injected by config service on request from Secret Manager",
                "time": "2020-04-16 15:11:43",
                "index": 15,
                "user": "Bryksin"
            },
            {
                "id": "5e987643d65bcf75b5c5f454",
                "text": "and in aws secret manager or to be specific parameter store we use,  it is stored as <application-name>/<active_profile>\n\nso if request to Config Server will come in from serviceX with active profileY\nit will go into param store:  `/<serviceX>/<profyleY>` and look for keys like `db_username`, `db_password` and so on",
                "time": "2020-04-16 15:14:11",
                "index": 16,
                "user": "Bryksin"
            }
        ]
    },
    {
        "id": 239,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df353e30616d6515e2ef250",
                "text": "Which java.time type should be used for Entity's created/updated timestamps? E.g. with\n`org.springframework.data.annotation.CreatedDate`\n`LocalDateTime`? `Instant`? `ZonedDateTime`?\nIt supports all of them, but I wonder which is better for which circumstance.",
                "time": "2019-12-13 09:03:31",
                "index": 0,
                "user": "AlexCzar"
            },
            {
                "id": "5df35775ce2b2e652bca4f0a",
                "text": "Ok, not ZonedDateTime, because it doesn't actually store timezone info, and we can run into problems, but from the other two? ",
                "time": "2019-12-13 09:18:45",
                "index": 1,
                "user": "AlexCzar"
            },
            {
                "id": "5df35cc00995661eb8da06e6",
                "text": "@AlexCzar That's a good question to ask in https://gitter.im/spring-projects/spring-data",
                "time": "2019-12-13 09:41:20",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5df36efee72656230138173c",
                "text": "`ZonedDateTime` does store timezone info... perhaps you're thinking of `OffsetDateTime`?",
                "time": "2019-12-13 10:59:10",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5df36f4fc6ce6027ebb32c90",
                "text": "`Instant` will always work to unambiguously represent the moment that something happened, which is usually why you're tracking created/updated",
                "time": "2019-12-13 11:00:31",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5df372127d382b523f6d4e0c",
                "text": "> unambiguously represent the moment that something happened\n\nExcluding effects of Special Relativity of course",
                "time": "2019-12-13 11:12:18",
                "index": 6,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 240,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5be13522fbb6f507e63deb39",
                "text": "hello",
                "time": "2018-11-06 06:30:58",
                "index": 0,
                "user": "guohaiming"
            },
            {
                "id": "5be135316c24a807cb630af3",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/y1NT/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/y1NT/image.png)",
                "time": "2018-11-06 06:31:13",
                "index": 1,
                "user": "guohaiming"
            },
            {
                "id": "5be135527660cf07ca7715e5",
                "text": "ServerPropertiesAutoConfiguration.class file not found",
                "time": "2018-11-06 06:31:46",
                "index": 2,
                "user": "guohaiming"
            },
            {
                "id": "5be1358e1f2bb1676b5f3e53",
                "text": "serverpropertiesautoconfiguration.class cannot be opened because it does not exist",
                "time": "2018-11-06 06:32:46",
                "index": 3,
                "user": "guohaiming"
            },
            {
                "id": "5be1359ecdc12d25bb7d343d",
                "text": "Does anyone know what may be the reason?",
                "time": "2018-11-06 06:33:02",
                "index": 4,
                "user": "guohaiming"
            },
            {
                "id": "5be144f8da57ff676c9ae485",
                "text": "@guohaiming you shouldn\u2019t be relying on that. If something else does (Spring Cloud?) then you need to make sure you\u2019re using compatible versions",
                "time": "2018-11-06 07:38:32",
                "index": 6,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 241,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e8c7d3b38198d56a1882946",
                "text": "I'm attempting to only run certain tests by @Profile annotations.  Using Spring Boot 2.2.x+, is there a solution for this?  The only recommendations are to use JUnit5's Assume on a profile, but that's not exactly what I want.  I'm using @SpringBootTest, and it would be wonderful if it the runner checked Profile(s).",
                "time": "2020-04-07 13:16:42",
                "index": 0,
                "user": "lukasbradley"
            },
            {
                "id": "5e8c81b6cc370f0b07cb22c9",
                "text": "You could make your own annotation extending both `@Profile` and `@Tag`",
                "time": "2020-04-07 13:35:50",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e8c8212e7ca460b0644dd37",
                "text": "> You could make your own annotation extending both `@Profile` and `@Tag`\n\nThat's a great idea.  Perhaps have a custom Tag start up the SpringBootTest condition.... I'll see what I can come up with.",
                "time": "2020-04-07 13:37:22",
                "index": 2,
                "user": "lukasbradley"
            },
            {
                "id": "5e8c8369f450c25cc8c46a82",
                "text": "Tag selection is a higher level than `@SpringBootTest`. I don't think it will work.",
                "time": "2020-04-07 13:43:05",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5e8c837b1aaf8e4b8e685815",
                "text": "They're fundamentally different thing you're trying to join together",
                "time": "2020-04-07 13:43:23",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5e8c841338198d56a1884021",
                "text": "@OrangeDog Understood.  But using Tag has gotten me a bit further already.  I'll keep you posted.  ",
                "time": "2020-04-07 13:45:55",
                "index": 5,
                "user": "lukasbradley"
            },
            {
                "id": "5e8c9044f450c25cc8c495f5",
                "text": "@OrangeDog Thanks for your feedback.  I just annotated the different classes using @Tag(\"unit\") and \"integ,\" and that got me far enough.  +1 to you",
                "time": "2020-04-07 14:37:56",
                "index": 6,
                "user": "lukasbradley"
            }
        ]
    },
    {
        "id": 242,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5cf4ebfb481ef4167bc11e87",
                "text": "Hi, if one of the issues in Github has been already triaged and I'd like to start working on them, can I get assign the issue or just develop the patch and raise the PR? someone else could be working on it. Thanks",
                "time": "2019-06-03 09:44:27",
                "index": 0,
                "user": "antmordel"
            },
            {
                "id": "5cf507c7faac64393431c6a7",
                "text": "@antmordel Thanks for your interest in contributing. We can't assign the issue to you (GitHub's permissions model isn't flexible enough), but we do have a `Spring Contributor` user that we use to indicate that someone in the community is working on an issue. Please comment on the issue that you're interested in working on and we can take things from there.",
                "time": "2019-06-03 11:43:03",
                "index": 10,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 243,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5de525c65ac7f22fb5499cf1",
                "text": "does java not have a spread operator yet?",
                "time": "2019-12-02 14:55:02",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5de52609b065c6433c24b147",
                "text": "@konstantinblaesi  You mean like in groovy collection*.element? No it does not have ;]\n",
                "time": "2019-12-02 14:56:09",
                "index": 1,
                "user": "Ziemowit"
            }
        ]
    },
    {
        "id": 244,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3615d31948ad07e812908e",
                "text": "Hi guys,\nIs it possible to use kotlin's coroutines with webflux ?",
                "time": "2019-01-09 15:40:03",
                "index": 0,
                "user": "wathek"
            },
            {
                "id": "5c361638bd592b2e6e78e6c9",
                "text": "```\n@GetMapping(\"/test/get\")\n suspend fun get(): Mono<Int> {\n        log.info(\"Before delay\")\n        delay(1)\n        log.info(\"After delay\")\n        return 1000.toMono()\n}\n```\n\nCurrently when i do that  it stops at the `delay(1)` and it returns a NullPointException since the thread is freed to do something else",
                "time": "2019-01-09 15:41:44",
                "index": 1,
                "user": "wathek"
            },
            {
                "id": "5c361f3773360b4d55e24fdf",
                "text": "@wathek it's not supported yet in Spring Framework, see https://jira.spring.io/browse/SPR-15413",
                "time": "2019-01-09 16:20:07",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c3643cc357dd7655d41b1c9",
                "text": "@bclozel  oh thanks. So I need to use reactor or something similar instead ?",
                "time": "2019-01-09 18:56:12",
                "index": 11,
                "user": "wathek"
            }
        ]
    },
    {
        "id": 245,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5c7ee08ede3a6e64c0e57dae",
                "text": "Now that https://start.spring.io doesn't show a list of available dependencies anymore, where do I go to see them?",
                "time": "2019-03-05 20:48:14",
                "index": 0,
                "user": "d-levin"
            },
            {
                "id": "5c7f7eab3162ec7bc727c2f9",
                "text": "@d-levin why do you need to see the list?",
                "time": "2019-03-06 08:02:51",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5c7f8bfc293ac75db55fbe2f",
                "text": "i like the list because I often think \"right, that would be useful as well\" when I click through it. But I'm using the Idea-Plugin, not the website",
                "time": "2019-03-06 08:59:40",
                "index": 10,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c7f8c1a3162ec7bc72826b5",
                "text": "Thanks for the feedback. Do you have an example of \u201cright, that would be useful as well?\"",
                "time": "2019-03-06 09:00:10",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5c7f8c2fbf7990126e59ed03",
                "text": "IJ doesn\u2019t really help you there as entries are separated in sections. Are you clicking on each sections?",
                "time": "2019-03-06 09:00:31",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5c7f8cce86e34a126f95e89d",
                "text": "Hm lombok is one of those things. Not really boot-related, but nice if it's there from the start. I mean it's not that hard to add it afterwards. Also DevTools, is one i tend to forget. I tend to click through the things I think i might need, i.e. typically core, security, SQL",
                "time": "2019-03-06 09:03:10",
                "index": 13,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c7f8cebb4b6ef7bc86435e5",
                "text": "That\u2019s very helpful, thank you.",
                "time": "2019-03-06 09:03:39",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5c7f8cf30a6b915163e34b42",
                "text": "and sometimes I browse it to see what's there. Boot is quite big, and it's hard to keep up to date what starters do exist these days",
                "time": "2019-03-06 09:03:47",
                "index": 15,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c7f8d3d1c597e5db6907430",
                "text": "Yeah that\u2019s the use case I\u2019d personnaly like to move elsewhere. I don\u2019t think the site should be used to discover what you can do because there are a bunch of things that aren\u2019t there. There are, for instance, interesting 3rd party integrations we don\u2019t list and not all projects are listed either. We focus on the getting started experience there which doesn\u2019t give much space for things you may want to add when you have something off the ground. ",
                "time": "2019-03-06 09:05:01",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c7f8d6a7851db134977daec",
                "text": "just clicked through it, flyway is also one of those things. I would have forgotten it. But these days, I know that boot supports it OOTB, but if I didn't know that...",
                "time": "2019-03-06 09:05:46",
                "index": 17,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c7f8d9525e4e24c07233ba7",
                "text": "Again, there are much more we support or others support that is not on that list. ",
                "time": "2019-03-06 09:06:29",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5c7f8dc8bf7990126e59f659",
                "text": "yeah, right. even things like activiti, vaadin etc pp have starters these days. quite awesome",
                "time": "2019-03-06 09:07:20",
                "index": 19,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c7fec3b8f294b134afac72c",
                "text": "@snicoll My reasons for wanting (rather than needing) to see the list are basically the same as have already been stated by the community here, on Twitter, and in the comments on the announcement itself. Now that the list is gone, where do I go to see the available dependencies? IntelliJ seems to be one option...",
                "time": "2019-03-06 15:50:19",
                "index": 46,
                "user": "d-levin"
            }
        ]
    },
    {
        "id": 246,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf6f7b9a115c91ef7778c8c",
                "text": "I'm having a problem with Spring+Couchbase and hoping someone can suggest a way forward.\n\nWe have typical Spring Boot application. It uses `spring-data-couchbase` for repositories. However, if Couchbase is not available when the application starts, then the application fails to start (related to dependency injection).\n\nI would rather the application start, but fail when it tries to use Couchbase. Is this possible?\n\nRationale:\nI would like to have the application depend on couchbase (from a service script), but that isn't the only valid configuration, so managing that dependency externally doesn't seem viable.",
                "time": "2018-11-22 18:38:49",
                "index": 0,
                "user": "garretfick"
            },
            {
                "id": "5bf6f7eb87c4b86bccfed782",
                "text": "I don't think is is specific to Couchbase, but it is perhaps related to how Couchbase auto-configuration works.",
                "time": "2018-11-22 18:39:39",
                "index": 1,
                "user": "garretfick"
            },
            {
                "id": "5bf707a3f048fa1051087c87",
                "text": "@garretfick You might be interested",
                "time": "2018-11-22 19:46:43",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bf707b0662131389401092e",
                "text": "in this issue: https://github.com/spring-projects/spring-boot/issues/11325",
                "time": "2018-11-22 19:46:56",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bf70827fa7bbb3fe0ea6410",
                "text": "IIRC, if you\u2019re using Spring Data Couchbase it needs to connect during startup. If it can\u2019t startup will fail. Spring Data Lovelace has some new options for deferring initialisation for JPA. I think they may apply across all data stores.  That may help if they do.",
                "time": "2018-11-22 19:48:55",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bf70b8ce25cc27405298684",
                "text": "Thanks",
                "time": "2018-11-22 20:03:24",
                "index": 5,
                "user": "garretfick"
            },
            {
                "id": "5bf70d8697a8982b9a4af19a",
                "text": "Your items here are spot on - yet to figure out if Couchbase supports it, but should be easy to figure it out by experimentation",
                "time": "2018-11-22 20:11:50",
                "index": 6,
                "user": "garretfick"
            },
            {
                "id": "5bf722fd87c4b86bccffe4ce",
                "text": "Well... out of luck. ",
                "time": "2018-11-22 21:43:25",
                "index": 7,
                "user": "garretfick"
            }
        ]
    },
    {
        "id": 247,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c760a5b608c6f37362d9920",
                "text": "who has the src of spring-boot-configuration-processor",
                "time": "2019-02-27 03:56:11",
                "index": 0,
                "user": "gengfangdong"
            },
            {
                "id": "5c7645f2c1cab53d6f46e652",
                "text": "@gengfangdong the source of the annotation processor is in the Github project with the rest of Spring Boothttps://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor - Curious why you need it",
                "time": "2019-02-27 08:10:26",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5c765be15015f21e19693290",
                "text": "@snicoll thanks",
                "time": "2019-02-27 09:44:01",
                "index": 13,
                "user": "gengfangdong"
            }
        ]
    },
    {
        "id": 248,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c6c3686c4da4a11f5805e9e",
                "text": "any idea what might be causing this error, this happens only where I have my kubernetes cluster running, does not seem to happen when I run my application locally in Intellij\n\n```\n2019-02-19 16:51:36.705 ERROR 850 --- [           main] o.s.boot.SpringApplication               : Application run failed\n\norg.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.greenqloud.usage.Main]; nested exception is java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist\n\tat org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:646) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.annotation.ConfigurationClassParser.lambda$processDeferredImportSelectors$2(ConfigurationClassParser.java:566) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat java.util.ArrayList.forEach(ArrayList.java:1257) ~[na:1.8.0_171]\n\tat org.springframework.context.annotation.ConfigurationClassParser.processDeferredImportSelectors(ConfigurationClassParser.java:563) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:188) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:271) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:91) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532) ~[spring-context-5.0.9.RELEASE.jar!/:5.0.9.RELEASE]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:780) [spring-boot-2.0.5.RELEASE.jar!/:2.0.5.RELEASE]\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.0.5.RELEASE.jar!/:2.0.5.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:333) [spring-boot-2.0.5.RELEASE.jar!/:2.0.5.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1277) [spring-boot-2.0.5.RELEASE.jar!/:2.0.5.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1265) [spring-boot-2.0.5.RELEASE.jar!/:2.0.5.RELEASE]\n\tat com.greenqloud.usage.Main.main(Main.java:32) [classes!/:4.19.0-SNAPSHOT]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_171]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_171]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_171]\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_171]\n\tat org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48) [qstack-usage.jar:4.19.0-SNAPSHOT]\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:87) [qstack-usage.jar:4.19.0-SNAPSHOT]\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:50) [qstack-usage.jar:4.19.0-SNAPSHOT]\n\tat org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51) [qsta\n```",
                "time": "2019-02-19 17:01:57",
                "index": 0,
                "user": "jonbrmasson"
            },
            {
                "id": "5c6d482100aa630d9ae1619c",
                "text": "@jonbrmasson `ServerPropertiesAutoConfiguration` was removed in Spring Boot 2.0. It looks like `com.greenqloud.usage.Main`, or something that it is pulling in, isn't compatible with Spring Boot 2.x. I can't explain why it only happens in your Kubernetes cluster. Perhaps there's a custom condition that means something only kicks in in that environment?",
                "time": "2019-02-20 12:29:21",
                "index": 41,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 249,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5e295685342e1054d06b70af",
                "text": "Hi All, \nCan anyone please tell steps on how to deploy SpringWebflux with ReactorNetty in production.",
                "time": "2020-01-23 08:17:09",
                "index": 0,
                "user": "vegeta03"
            },
            {
                "id": "5e295898da04a624f46a01af",
                "text": "@vegeta03 your question is so broad, that it is impossible for anyone here to understand exactly what you want us to help you with. Have you built an application that you want to deploy, if so, with what kind of setup/infrastructure? Or, do you want to learn how to build an application with the named technologies?",
                "time": "2020-01-23 08:26:00",
                "index": 2,
                "user": "mickeelm"
            },
            {
                "id": "5e2a8652a420263e038ca84e",
                "text": "@mickeelm I have created an application with Spring Webflux MongoDB, I want to know that, do we deploy using tomcat like normal Spring MVC apps or is there a difference because of the NIO aspect of Webflux.\nThanks.",
                "time": "2020-01-24 05:53:22",
                "index": 12,
                "user": "vegeta03"
            },
            {
                "id": "5e2a8d8dcd53a80aac1692a5",
                "text": "I see - thank you for clarifying. Have you read https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-server-choice? ",
                "time": "2020-01-24 06:24:13",
                "index": 13,
                "user": "mickeelm"
            },
            {
                "id": "5e2a903134829272791aefd1",
                "text": "Ah, sorry, lose the question mark on the end. Can't edit the post now",
                "time": "2020-01-24 06:35:29",
                "index": 14,
                "user": "mickeelm"
            }
        ]
    },
    {
        "id": 250,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bb5bfe51c100a4f292b1f7f",
                "text": "2018-10-04 15:22:43.712 ERROR 17299 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Exception starting filter [servletContainer]\n\njava.lang.TypeNotPresentException: Type javax.xml.bind.JAXBContext not present\n\tat java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:117) ~[na:na]",
                "time": "2018-10-04 07:23:14",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5bfeeef4afc4f28179074",
                "text": "i\u2019m getting this error when starting one of our simpler services",
                "time": "2018-10-04 07:23:26",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5bffa1c100a4f292b2098",
                "text": "i\u2019m trying out 2.1.0.M4",
                "time": "2018-10-04 07:23:38",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5c3cae65a6343367f4d4f",
                "text": "@chad_d_stud_twitter there's a note on JAXB on that wiki page; this library is not part of the JDK anymore",
                "time": "2018-10-04 07:39:54",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5bb5c3f3600c5f64234f9551",
                "text": "yeah i saw that but i\u2019m not using it either",
                "time": "2018-10-04 07:40:35",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5c3fa3844923661e0ba74",
                "text": "so why is it looking for it?",
                "time": "2018-10-04 07:40:42",
                "index": 5,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5cfd01c100a4f292b7ee7",
                "text": "okay i traced the problem to having the ```@EnableEurekaServer``` annotation",
                "time": "2018-10-04 08:31:12",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5cfd8ae7be94016fc61b0",
                "text": "Is there some changes for this?",
                "time": "2018-10-04 08:31:20",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5d043435c2a518e4cd40d",
                "text": "as mentioned on that wiki, adding a JAXB implementation should fix it",
                "time": "2018-10-04 08:33:07",
                "index": 8,
                "user": "shakuzen"
            },
            {
                "id": "5bb5d447600c5f64235003fe",
                "text": "this documentaion is missing this additional dependency: javax.activation:activation",
                "time": "2018-10-04 08:50:15",
                "index": 9,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5d450435c2a518e4cf0e3",
                "text": "after adding the jab-runtime it was looking for that",
                "time": "2018-10-04 08:50:24",
                "index": 10,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5dd6b271506518db5772c",
                "text": "That\u2019s what you should do with 11",
                "time": "2018-10-04 09:29:15",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5bb5dd7f1c100a4f292bd508",
                "text": "It\u2019s written in the wiki that was referenced above",
                "time": "2018-10-04 09:29:35",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bb5de6bbbdc0b2505e43e72",
                "text": "what\u2019s will 2.1.0 be production ready?",
                "time": "2018-10-04 09:33:31",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5de76c08b8b3067ce8132",
                "text": "the milestone dates are on github, as usual",
                "time": "2018-10-04 09:33:42",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5bb5dea51e23486b93879dd9",
                "text": "javax.activation is not in the document",
                "time": "2018-10-04 09:34:29",
                "index": 15,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5deb9c7bf7c3662b3e299",
                "text": "It doesn\u2019t have to afaik",
                "time": "2018-10-04 09:34:49",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5bb5debaa9be136b94f3b5de",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/IqvL/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/IqvL/image.png)",
                "time": "2018-10-04 09:34:50",
                "index": 17,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5e196e65a6343368005fc",
                "text": "is this really necessary for 2.1.0? ```spring.main.allow-bean-definition-overriding=true```",
                "time": "2018-10-04 09:47:02",
                "index": 18,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5e1c3435c2a518e4d4278",
                "text": "i have multiple feign clients pointing to the same service but they contain a different set of methods",
                "time": "2018-10-04 09:47:47",
                "index": 19,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5e1e6e65a634336800928",
                "text": "it\u2019s so it can be distributed to other services that only access the urls that is relevant to it",
                "time": "2018-10-04 09:48:22",
                "index": 20,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 251,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d4a70b0c87a0963e7284983",
                "text": "Hello everyone. I've faced with one wierd  issue about Spring @MockBean annotation. Spring-Boot version 1.5.19\nI have two beans where one of them is annotated with Primary. I try to mock this bean with annotation @MockBean but get this error. \n```No qualifying bean of type '*' available: expected single matching bean but found 2:```",
                "time": "2019-08-07 06:33:20",
                "index": 0,
                "user": "limpid-kzonix"
            },
            {
                "id": "5d4a70ef53490e334daa509b",
                "text": "Have @all ever faced with the similar issue?",
                "time": "2019-08-07 06:34:23",
                "index": 1,
                "user": "limpid-kzonix"
            },
            {
                "id": "5d4a8c122612bb718c244fd9",
                "text": "@limpid-kzonix  use @MockBean(name = \"a\") to select the bean you want to mock",
                "time": "2019-08-07 08:30:10",
                "index": 15,
                "user": "adrianSoria"
            }
        ]
    },
    {
        "id": 252,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ea9af0fa9de3d01b1d98587",
                "text": "I am pretty sure I am doing something wrong, just dabbling with RSocket out of the box and do not create/inject the RSocket server (as in the documentation) because if the server is not up I would get an exception.  Instead, my hope was to lazily connect/close when I needed to invoke an RSocket endpoint.  \n\nIt seems to work well with the exception of seeing a \"ClosedChannelException\" server-side, I am assuming my client request is not disconnecting/finishing?  Is this the right approach?\n\nClient:\n```\n@Inject\nRSocketRequester.Builder builder;\n\n@Test\nvoid should_cache_data() throws InterruptedException\n{\n    builder.connectTcp(\"localhost\", 7000).flatMap(r -> {\n        return r.route(\"streams\")\n            .data(new DataStreamerMessage())\n            .retrieveMono(Boolean.class);\n    }).block();\n}\n```\n\nServer:\n```\n@MessageMapping(STREAMS_ROUTE)\n public Mono<Boolean> handleStream(final DataStreamerMessage message)\n  {\n        log.debug(\"Received\");\n        return Mono.just(true);\n  }\n```\nSo, if I make 5 requests, the server then shows the exception 5x.",
                "time": "2020-04-29 16:45:03",
                "index": 0,
                "user": "kjq"
            },
            {
                "id": "5eaa9282f0377f16315ab120",
                "text": "@kjq it looks like your client is connecting, sending a request and then disconnecting (exiting the test suite shuts down the VM?). So it's consistent to see that disconnect message on the server side.",
                "time": "2020-04-30 08:55:30",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5eaac07422f9c45c2a5f168d",
                "text": "@bclozel - Thanks for the response, that was a test I creating.  When we deploy the client service, and the client is not shutdown, should the sockets gets closed after they are used?  That test is the same call being made from the client to the server.  When the client gets redeployed or restarted then I see the flurry of exceptions on the server.  My worry is that my client, when connecting to the server, is not releasing the sockets or completing sending the message.",
                "time": "2020-04-30 12:11:32",
                "index": 21,
                "user": "kjq"
            },
            {
                "id": "5eaac1403d58de7a38e70d9f",
                "text": "@kjq by design, the RSocket client maintains a (TCP or WebSocket) connection with the server and multiplexes requests on it. So creating, a client connection and reusing it for many requests is the expected way of using it.",
                "time": "2020-04-30 12:14:56",
                "index": 22,
                "user": "bclozel"
            },
            {
                "id": "5eaac1ba22f9c45c2a5f1a4f",
                "text": "@bclozel - ok, I so I am just chasing down a red herring then.  Is there a way to catch/handle/ignore that exception thought?  Between regular and serverless services that connect via sockets to the server I could end up with a flood of those exceptions. ",
                "time": "2020-04-30 12:16:58",
                "index": 23,
                "user": "kjq"
            },
            {
                "id": "5eaac98b31a6d25d7c9e034d",
                "text": "@kjq I think it's an issue in reactor-netty now; it was reported in Spring Framework here: https://github.com/spring-projects/spring-framework/issues/24596 and now it's followed there https://github.com/reactor/reactor-netty/issues/1039",
                "time": "2020-04-30 12:50:19",
                "index": 24,
                "user": "bclozel"
            },
            {
                "id": "5eab1b48f0377f16315c62cf",
                "text": "@bclozel - thanks, that was my guess tracing through because it didnt show any log information.  Is is something you think I need to be concerned with and is the an ETA when it might be resolved (didnt read too deeply yet in the ticket)?",
                "time": "2020-04-30 18:39:04",
                "index": 29,
                "user": "kjq"
            }
        ]
    },
    {
        "id": 253,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be56d103102f14521743b75",
                "text": "hello everyone, plz how can i convert  the date from this format  2018-11-10T00:00:00.000+0000  to this one  \"yyyy-MM-dd\",",
                "time": "2018-11-09 11:18:40",
                "index": 0,
                "user": "zoumhane"
            },
            {
                "id": "5be56d39c0e6da07fefb7812",
                "text": "without using String or something like thate , i want just cinvert it before save it in DB",
                "time": "2018-11-09 11:19:21",
                "index": 1,
                "user": "zoumhane"
            },
            {
                "id": "5be56d78bb06d73a9948897d",
                "text": "parse into zonedDateTime and print in the format you like",
                "time": "2018-11-09 11:20:24",
                "index": 2,
                "user": "pcornelissen"
            },
            {
                "id": "5be56da14e7ca145207ac543",
                "text": "@pcornelissen  any axample plz ",
                "time": "2018-11-09 11:21:05",
                "index": 4,
                "user": "zoumhane"
            },
            {
                "id": "5be56da53102f14521743f3e",
                "text": "Emmm, You use MySQL? check the data type ,using  timestamp",
                "time": "2018-11-09 11:21:09",
                "index": 5,
                "user": "moocstudent"
            },
            {
                "id": "5be56db54e7ca145207ac5f8",
                "text": "@deadzq  yes i'm using mysql",
                "time": "2018-11-09 11:21:25",
                "index": 6,
                "user": "zoumhane"
            },
            {
                "id": "5be56dcb6b9822140d025917",
                "text": "P language?",
                "time": "2018-11-09 11:21:47",
                "index": 7,
                "user": "moocstudent"
            },
            {
                "id": "5be56dd19600d10e6481b674",
                "text": "Java or C?",
                "time": "2018-11-09 11:21:53",
                "index": 8,
                "user": "moocstudent"
            },
            {
                "id": "5be56dd23102f14521744078",
                "text": "@zoumhane ZonedDateTime.parse() just have a look at the javadoc, that should help",
                "time": "2018-11-09 11:21:54",
                "index": 9,
                "user": "pcornelissen"
            },
            {
                "id": "5be56e227326df140edb580e",
                "text": "@pcornelissen  ok i will do, thanks ",
                "time": "2018-11-09 11:23:14",
                "index": 10,
                "user": "zoumhane"
            },
            {
                "id": "5be56e612138723405dcae54",
                "text": "@deadzq  java , in fact  when i send data from angular app, to my rest api i get it in this format   2018-11-10T00:00:00.000+0000, before save it in db",
                "time": "2018-11-09 11:24:17",
                "index": 11,
                "user": "zoumhane"
            },
            {
                "id": "5be56e9d3102f14521744490",
                "text": ",,Yeah, I using easyUI and some problem like that, but finally I fix it...wait a second.",
                "time": "2018-11-09 11:25:17",
                "index": 12,
                "user": "moocstudent"
            },
            {
                "id": "5be56eeef1b87534049ba49c",
                "text": "Angular is good,,, I will learn it!",
                "time": "2018-11-09 11:26:38",
                "index": 13,
                "user": "moocstudent"
            },
            {
                "id": "5be56fb14e7ca145207ad1bd",
                "text": "yes is good for front end side ",
                "time": "2018-11-09 11:29:53",
                "index": 14,
                "user": "zoumhane"
            },
            {
                "id": "5be577176b9822140d0294cb",
                "text": "@zoumbane",
                "time": "2018-11-09 12:01:27",
                "index": 27,
                "user": "moocstudent"
            },
            {
                "id": "5be57730f1b87534049bdaa8",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/CjH5/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/CjH5/image.png)",
                "time": "2018-11-09 12:01:52",
                "index": 28,
                "user": "moocstudent"
            },
            {
                "id": "5be5774a3102f145217480d2",
                "text": "Look this,, the easyUI site. show the date...and..",
                "time": "2018-11-09 12:02:18",
                "index": 29,
                "user": "moocstudent"
            },
            {
                "id": "5be577602138723405dce577",
                "text": "@JsonFormat(pattern=\"yyyy-MM-dd  HH:mm:ss\" ,  timezone=\"GMT+8\")\n    private Date lastLogindate;\n",
                "time": "2018-11-09 12:02:40",
                "index": 30,
                "user": "moocstudent"
            },
            {
                "id": "5be577813102f14521748171",
                "text": "using this annotation.... @JsonFormat",
                "time": "2018-11-09 12:03:13",
                "index": 31,
                "user": "moocstudent"
            },
            {
                "id": "5be5779562866f7473709c30",
                "text": "and , change the timezone as you want ",
                "time": "2018-11-09 12:03:33",
                "index": 32,
                "user": "moocstudent"
            },
            {
                "id": "5be58c2ec0e6da07fefc4166",
                "text": "@deadzq big thanks for you man, it works for me ^^",
                "time": "2018-11-09 13:31:26",
                "index": 50,
                "user": "zoumhane"
            }
        ]
    },
    {
        "id": 254,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cd40986f251e60ffa4fced1",
                "text": "org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.trgr.cobalt.history.feature.application.communication.HistoryControllerIntegrationTests': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.trgr.cobalt.history.feature.application.communication.HistoryController com.trgr.cobalt.history.feature.application.communication.HistoryControllerIntegrationTests.historyController; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.trgr.cobalt.history.feature.application.communication.HistoryController] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}",
                "time": "2019-05-09 11:05:42",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd40a1d79d70050993ee8a7",
                "text": "<bean id=\"historyController\" class=\"com.trgr.cobalt.history.feature.application.communication.HistoryController\" />",
                "time": "2019-05-09 11:08:13",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd40a5af251e60ffa4fd458",
                "text": "@snicoll  any clue",
                "time": "2019-05-09 11:09:14",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd40abbda34620ff90fb241",
                "text": "<import resource=\"classpath:/application-beans-context.xml\" />",
                "time": "2019-05-09 11:10:51",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd411ef5d48a24fd09a07d6",
                "text": "@DoraRajappan can you please take the time to wrap code sample and exception as we\u2019ve numerously asked you to do so?",
                "time": "2019-05-09 11:41:35",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5cd4393679d7005099405bb6",
                "text": "@snicoll  I will put a sample Tomo\n",
                "time": "2019-05-09 14:29:10",
                "index": 37,
                "user": "DoraRajappan"
            },
            {
                "id": "5cd439795a1d435d46110c6e",
                "text": "Thank u",
                "time": "2019-05-09 14:30:17",
                "index": 38,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 255,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf424202735965dfe065e74",
                "text": "is There a recommended way to create starters for spring boot, like if i am creating a starter for a library i wrote, should i keep the starter and library as two projects or i can build the library to be a starter itself ?",
                "time": "2018-11-20 15:11:28",
                "index": 0,
                "user": "chermehdi"
            },
            {
                "id": "5bf42548a47c6c5d3b16c324",
                "text": "If you expect the library to be predominantly or even exclusively used with Spring Boot then combining the two makes sense. If the library is often used with plain Spring Framework or without Spring at all then I would keep the two separate.",
                "time": "2018-11-20 15:16:24",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bf425671ad4155d3af4d0a4",
                "text": "Thanks @wilkinsona ",
                "time": "2018-11-20 15:16:55",
                "index": 2,
                "user": "chermehdi"
            },
            {
                "id": "5bf425c8a47c6c5d3b16c77a",
                "text": "Those are only guidelines though. Keep those in mind but also do what feels right to you and the way you like to structure your code.",
                "time": "2018-11-20 15:18:32",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bf4262f4720c11e0e9805a4",
                "text": "yeah, cause i saw in one of @snicoll talks, he made them separate and i wondered what if the library's intention is to be used only inside of spring why bother making it separate and that's why i asked .. Thanks \ud83d\ude04",
                "time": "2018-11-20 15:20:15",
                "index": 5,
                "user": "chermehdi"
            },
            {
                "id": "5bf427151ad4155d3af4ddca",
                "text": "@chermehdi there is a section about you\u2019ve asked in the doc",
                "time": "2018-11-20 15:24:05",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5bf427255f5c92504089cfd5",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-custom-starter-naming",
                "time": "2018-11-20 15:24:21",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5bf427942735965dfe067b7a",
                "text": "yap i must've missed it \ud83d\ude05",
                "time": "2018-11-20 15:26:12",
                "index": 12,
                "user": "chermehdi"
            }
        ]
    },
    {
        "id": 256,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f0309e0d65a3b0292d04647",
                "text": "Hi everyone, I recently started to work on upgrading my Spring Boot starter tests to use testcontainers (instead of a @ClassRule in test classes).\nI used to have a single test class, which would load some specific static @Configuration classes and properties depending on the scenarios.\nI had two static classes (SingleDataSource, MultipleDataSources) that would configure datasources based on the @ClassRule static field.\n\nThe problem I have now is that the connectivity data I get via testcontainers is retrieved via instance fields inherited from a @Parameterized super class, not static fields like before.\nI'm not even sure how to even declare an application context in such a setting.",
                "time": "2020-07-06 11:24:16",
                "index": 0,
                "user": "fbiville"
            },
            {
                "id": "5f030a9bb8152d34848617e0",
                "text": "I thought of using ApplicationContextInitializer, but I need at least 3 different contexts (1 with a single property, 1 with a single datasource, 1 with multiple datasources).",
                "time": "2020-07-06 11:27:23",
                "index": 1,
                "user": "fbiville"
            },
            {
                "id": "5f030bdd47fdfd21ed089fbf",
                "text": "To give more context, here is the current test class (https://github.com/liquibase/liquigraph/blob/master/liquigraph-spring-boot-starter/src/test/java/org/liquigraph/spring/LiquigraphAutoconfigurationTest.java) that I would like to migrate to https://github.com/liquibase/liquigraph/blob/master/liquigraph-testing/src/main/java/org/liquigraph/testing/ParameterizedDatabaseIT.java.",
                "time": "2020-07-06 11:32:45",
                "index": 2,
                "user": "fbiville"
            },
            {
                "id": "5f030d10e0e5673398f7ba15",
                "text": "I'd make the connectivity data you get via Testcontainers available in the context as properties in the environment. You can then inject those properties into the `@Bean` methods that need them.",
                "time": "2020-07-06 11:37:52",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5f03104f82f87b2ad70a1c50",
                "text": "The connectivity data is available via the test superclass constructor (see https://github.com/liquibase/liquigraph/blob/master/liquigraph-testing/src/main/java/org/liquigraph/testing/ParameterizedDatabaseIT.java#L59)\nHow can I export these in the environment?",
                "time": "2020-07-06 11:51:43",
                "index": 4,
                "user": "fbiville"
            },
            {
                "id": "5f03140b405be935cde4455e",
                "text": "I'd use Boot's `TestPropertyValues` to do it I think.",
                "time": "2020-07-06 12:07:39",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5f031433405be935cde445a7",
                "text": "Something like `TestPropertyValues.of(\"neo4j.uri:\" + uri).applyTo(context)`",
                "time": "2020-07-06 12:08:19",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5f0314a682f87b2ad70a2960",
                "text": "I see, but I do not have any Context instance at that point in time (i.e. in the test class constructor).",
                "time": "2020-07-06 12:10:14",
                "index": 7,
                "user": "fbiville"
            },
            {
                "id": "5f031504613d3b33942d9c8e",
                "text": "And the constructor has 3 parameters already, which are not managed by Spring, so I could not just mark it as @Autowired and get an extra context param",
                "time": "2020-07-06 12:11:48",
                "index": 8,
                "user": "fbiville"
            },
            {
                "id": "5f03164b47fdfd21ed08bae2",
                "text": "What about   @DynamicPropertySource maybe that could help you ? \nhttps://spring.io/blog/2020/03/27/dynamicpropertysource-in-spring-framework-5-2-5-and-spring-boot-2-2-6",
                "time": "2020-07-06 12:17:15",
                "index": 9,
                "user": "artjomka"
            },
            {
                "id": "5f031ca7ec4a341bee0edda3",
                "text": "@fbiville They don\u2019t need to be passed to the constructor, do they? Can\u2019t you access the uri field in each test method where you create the context?",
                "time": "2020-07-06 12:44:23",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5f031f22405be935cde46369",
                "text": "@wilkinsona hmmm, they could probably indeed",
                "time": "2020-07-06 12:54:58",
                "index": 12,
                "user": "fbiville"
            },
            {
                "id": "5f032328c223cc536a59a38b",
                "text": "there will be 1 problem left, I think\nthe test case where I have two datasources in the context (inc. one DS with a specific annotation to tell the starter which DS to pick)\nTestPropertyValues won't help here, or?",
                "time": "2020-07-06 13:12:08",
                "index": 13,
                "user": "fbiville"
            },
            {
                "id": "5f0324bea813c72dcf306d4f",
                "text": "I think it could. You can inject a property (using `@Value`) into https://github.com/liquibase/liquigraph/blob/master/liquigraph-spring-boot-starter/src/test/java/org/liquigraph/spring/LiquigraphAutoconfigurationTest.java#L199",
                "time": "2020-07-06 13:18:54",
                "index": 14,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 257,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dca8f2868ad1c4a0fb13555",
                "text": "Hello, I'm  suddenly having issues running my application in Kubernetes\n\n`nested exception is java.lang.IllegalStateException: Failed to introspect Class `",
                "time": "2019-11-12 10:53:28",
                "index": 0,
                "user": "IEnoobong"
            },
            {
                "id": "5dca8f4752b73c7cb203b106",
                "text": "Happens only on k8s, running the docker image locally is fine too",
                "time": "2019-11-12 10:53:59",
                "index": 1,
                "user": "IEnoobong"
            },
            {
                "id": "5dca8fb5fd6fe41fc06deb4c",
                "text": "What's the full stack trace?",
                "time": "2019-11-12 10:55:49",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dca930335889012b1f45015",
                "text": "> What's the full stack trace?\n@wilkinsona \n```2019-11-08 15:38:53,618 \u00a0WARN | main | o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext | Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionController' defined in URL [jar:file:/opt/jar/library.jar!/BOOT-INF/classes!/project/name/controllers/v1/transaction/TransactionController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryService' defined in URL [jar:file:/opt/jar/library.jar!/BOOT-INF/lib/library-name-1.0.1106.20191108115133.jar!/library/package/name/lib/transaction/services/TransactionHistoryService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'depositTransactionService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [library.package.name.transaction.services.DepositTransactionService] from ClassLoader [org.springframework.boot.loader.LaunchedURLClassLoader@48e7b3d2] \n2019-11-08 15:38:53,618 \u00a0WARN | main | o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext | Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionController' defined in URL [jar:file:/opt/jar/library.jar!/BOOT-INF/classes!/project/name/controllers/v1/transaction/TransactionController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionHistoryService' defined in URL [jar:file:/opt/jar/library.jar!/BOOT-INF/lib/library-name-1.0.1106.20191108115133.jar!/library/package/name/lib/transaction/services/TransactionHistoryService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'depositTransactionService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [library.package.name.transaction.services.DepositTransactionService] from ClassLoader [org.springframework.boot.loader.LaunchedURLClassLoader@48e7b3d2]```\n\n",
                "time": "2019-11-12 11:09:55",
                "index": 6,
                "user": "IEnoobong"
            },
            {
                "id": "5dca963f6ba2347d2d7d1650",
                "text": "Thanks. That looks like it's just the log messages rather than the stack trace. I'm interested in seeing where the `IllegalStateException` is thrown. Can you share the full stack trace for it please? It would also be useful to see the code for `DepositTransactionService`.",
                "time": "2019-11-12 11:23:43",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5dca96bde75b2d5a19bb5cb9",
                "text": "Appears was a memory issue on the node. Works now. Thanks!",
                "time": "2019-11-12 11:25:49",
                "index": 8,
                "user": "IEnoobong"
            }
        ]
    },
    {
        "id": 258,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c5af43b41775971a0e7e167",
                "text": "Hi,  I have a spring boot web application which takes in an external jar which contains `@ControllerAdvice`. When i run the application, no `@ExceptionHandler` method is invoked. However, when I take out the class from the external jar and back into the application. Everything works fine. This is my `@ControllerAdvice` class inside the external jar \n```\nimport org.zalando.problem.Status;\nimport org.zalando.problem.violations.ConstraintViolationProblem;\n\n@ControllerAdvice\npublic class ExceptionTranslator implements ProblemHandlingWithNoSecurity {\n    private static final String VIOLATIONS = \"violations\";\n    private static final String MESSAGE = \"message\";\n    public static final String ERROR_HTTP = \"error.http.\";\n\n    public ExceptionTranslator() {\n    }\n    @ExceptionHandler\n    public ResponseEntity<Problem> handleBadRequestAlertException(BadRequestAlertException ex, NativeWebRequest request) {\n        return this.create(ex, request, HeaderUtil.createFailureAlert(ex.getApplicationName(), ex.getEntityName(), ex.getErrorKey(), ex.getMessage()));\n    }\n\n    @ExceptionHandler\n    public ResponseEntity<Problem> handleConcurrencyFailure(ConcurrencyFailureException ex, NativeWebRequest request) {\n        Problem problem = Problem.builder().withStatus(Status.CONFLICT).with(\"message\", \"error.concurrencyFailure\").build();\n        return this.create(ex, problem, request);\n    }\n```\n",
                "time": "2019-02-06 14:50:35",
                "index": 0,
                "user": "mhdzaid"
            },
            {
                "id": "5c5af67bf46373406a621aad",
                "text": "What package is `ExceptionTranslator` in? I suspect it's not being picked up by component scanning when it's in the external jar",
                "time": "2019-02-06 15:00:11",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c5b0146f46373406a627642",
                "text": "@wilkinsona  `ExceptionTranslator` is in  `package com.carbook.api.errors;` and my main class in the application is annotated by \n```\npackage com.carbook.bookings;\n\n@ComponentScan(basePackages = \"com.carbook\",\n        includeFilters = @ComponentScan.Filter(ControllerAdvice.class))\n@SpringBootApplication(scanBasePackages={\"com.carbook\"})\n@EnableDiscoveryClient\npublic class BookingsServiceApplication \n```",
                "time": "2019-02-06 15:46:14",
                "index": 3,
                "user": "mhdzaid"
            },
            {
                "id": "5c5be86741775971a0ee5e10",
                "text": "@mhdzaid That looks ok. Have you checked to see if `ExceptionTranslator` has been registered as a bean, in other words have you confirmed that component scanning has picked it up?",
                "time": "2019-02-07 08:12:23",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5c5bee839221b9382d2b950c",
                "text": "@wilkinsona when i copy the `ExceptionTranslator ` from external jar to inside my project it will give an exception. \n```\nConflictingBeanDefinitionException: Annotation-specified bean name 'exceptionTranslator' for bean class [com.carbook.api.errors.ExceptionTranslator] conflicts with existing, non-compatible bean definition of same name and class [com.carbook.bookings.advice.ExceptionTranslator]\n```\nI'm presuming, because of this exception, that spring-boot can access the `ExceptionTranslator ` from inside jar. But the `@ExceptionHandler` method isn't invoked. Not sure if my assumption is correct though.",
                "time": "2019-02-07 08:38:27",
                "index": 11,
                "user": "mhdzaid"
            },
            {
                "id": "5c5bf8e1ca428b06456c180c",
                "text": "@mhdzaid Yeah, that does look like it's being found twice by component scanning. If you turn on debug logging for `org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver` you should see some information output about the number of controller advice beans that were found",
                "time": "2019-02-07 09:22:41",
                "index": 18,
                "user": "wilkinsona"
            },
            {
                "id": "5c5c0cd0f04ef00644f41e89",
                "text": "@wilkinsona \n```\n    <logger name=\"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver\" level=\"DEBUG\" />\n\n```\nPutting this in my `logback-spring.xml`.\n```\nDEBUG 10364 --- [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Looking for exception mappings: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15b5ee40: startup date [Thu Feb 07 15:36:00 PKT 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@716a4057\nINFO 10364 --- [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler\n```\nThis is the stack trace. But from this, it seems that `@ExceptionHandler` methods of `ExceptionTranslator` from external jar are not being detected. :/",
                "time": "2019-02-07 10:47:44",
                "index": 19,
                "user": "mhdzaid"
            }
        ]
    },
    {
        "id": 259,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5dd89d39d2c92c2275dcf306",
                "text": "why Spring Boot have Main Method????",
                "time": "2019-11-23 02:45:13",
                "index": 0,
                "user": "venky4026_twitter"
            },
            {
                "id": "5dd93ef4afacdc4de45f045b",
                "text": "@venky4026_twitter It's used to launch your app without needing to deploy it to an application server or a servlet container.",
                "time": "2019-11-23 14:15:16",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 260,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c79c66c4a65f754734bf56b",
                "text": "Does anyone know how to configure a dialect with HikariCP? it appears that the update from 1.5.6 -> 2.1.3 has changed how the dialect is configured, and our custom H2 dialect is not being picked up. ",
                "time": "2019-03-01 23:55:24",
                "index": 0,
                "user": "snowe2010"
            },
            {
                "id": "5c7cd8d0e8ea143737ac1ce9",
                "text": "@snowe2010 not sure I understand what you mean. Why would you want to configure a dialect on a `DataSource`? ",
                "time": "2019-03-04 07:50:40",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5c7d589e35c0130753745775",
                "text": "@snicoll I guess I'm not asking how to configure on the datasource, but we previously had this configuration \n\n```\nspring:\n  jpa:\n    database-dialect: com.datapublica.pg.dialect.H2JsonDialect\n    format-sql: false\n    show-sql: false\n    ddl-auto: create-drop\n  loanappDatasource:\n    defaultUsername: sa\n    defaultPassword:\n    restrictedMaxPoolSize: 5\n\n    commonProperties:\n      platform: h2\n      driverClassName: org.h2.Driver\n      jdbcUrl: jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;DB_CLOSE_ON_EXIT=FALSE\n      maximum-pool-size: ${AGGREGATE_DB_MAX_ACTIVE:5}\n      minimum-idle: ${AGGREGATE_DB_MIN_IDLE:1}\n      validation-timeout: ${AGGREGATE_DB_VALIDATION_INTERVAL:60000}\n```\n\nand it no longer works. The dialect is not picked up and we receive errors like `Caused by: org.hibernate.MappingException: No Dialect mapping for JDBC type: 1999`\n\nI've tried updating the `database-dialect` to instead use `database-platform` but that also does not work.",
                "time": "2019-03-04 16:55:58",
                "index": 17,
                "user": "snowe2010"
            }
        ]
    },
    {
        "id": 261,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ee9e30c5833b0624bd4dce9",
                "text": "Hi all. does anyone know if it's supported to write custom constraint validators in spring-webflux which support a reactive api? Example use case: a form for setting a primary, unique email for your user. The validator needs to make a lookup to a database during the validation to check if the submitted email already exists. So far i think this is not possible in webflux with traditional custom constraints, but i hope i'm wrong that's why i'm asking here :) ",
                "time": "2020-06-17 09:31:56",
                "index": 0,
                "user": "pulse00"
            },
            {
                "id": "5ee9f8bba28e7a6fb281fba1",
                "text": "@pulse00 When you say custom constrain validators, are you talking about bean validation (JSR-303)? If so, you can't safely make a DB call during validation as it may block.",
                "time": "2020-06-17 11:04:27",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5eea69273316c66e00d56c51",
                "text": "@wilkinsona yes, i'm talking bean validation (jsr-303). I thought so. Is there reactive-compatible way of doing the same thing? that is: validating the request body with IO calls but in a reactive way?",
                "time": "2020-06-17 19:04:07",
                "index": 8,
                "user": "pulse00"
            },
            {
                "id": "5eeb04e4a813c72dcff59f49",
                "text": "@pulse00 You\u2019ll have to roll your own to some extent at least. You could use R2DBC for the database access. A library like https://github.com/making/yavi may help with the validation. I\u2019m not sure how much reactive support it has, but as it\u2019s programmatic it gives you the option of using Reactor\u2019s elastic scheduler if needs be.",
                "time": "2020-06-18 06:08:36",
                "index": 22,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 262,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c41c8c3dab15872ceb396ac",
                "text": "Is it possible to use one repository for two Data-sources?",
                "time": "2019-01-18 12:38:27",
                "index": 0,
                "user": "vlatk0o"
            },
            {
                "id": "5c41f20235350772cf4fcc20",
                "text": "@vlatk0o have a look to `AbstractRoutingDataSource`",
                "time": "2019-01-18 15:34:26",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c422ac0cb47ec30006515e4",
                "text": "@vlatk0o Did you get an answer to your question? I would like something similar.\n\nCurrently, we allow different repositories using `@Profile` to enable only one configuration. However, we now need to write a custom query for Couchbase (using `@Query`). I would like to be able to provide different implementations of that query when run with other backing stores.",
                "time": "2019-01-18 19:36:32",
                "index": 5,
                "user": "garretfick"
            },
            {
                "id": "5c422ad635350772cf51582c",
                "text": "Is that possible?",
                "time": "2019-01-18 19:36:54",
                "index": 6,
                "user": "garretfick"
            },
            {
                "id": "5c4230a1f780a1521f302be7",
                "text": "Ah, I think I have it now :)",
                "time": "2019-01-18 20:01:37",
                "index": 7,
                "user": "garretfick"
            }
        ]
    },
    {
        "id": 263,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dbbe4edfb4dab784a426ce0",
                "text": "Hello, after updating spring boot `2.1.4` to `2.2` I encountered a problem on starting application `Caused by: java.lang.IllegalStateException: Can't configure antMatchers after anyRequest`\nnothing changed in code except spring boot version and configuration file where that `IllegalStateException` pointing on looks like that \n``` \n        http.antMatcher(\"/something/**\")\n                .csrf().disable()\n                .authorizeRequests().anyRequest().hasRole(ROLE)\n                .antMatchers(PUT, \"/api/**\").hasRole(ROLE)\n                .and().httpBasic();\n```\nAnyone encountered similar problem ? ",
                "time": "2019-11-01 07:55:25",
                "index": 0,
                "user": "artjomka"
            },
            {
                "id": "5dbbea0c2a6494729c7903b0",
                "text": "`anyRequest()` should be the last one in that chain, i think, as it's the widest catch-all.",
                "time": "2019-11-01 08:17:16",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5dbbebf79c39821509c13657",
                "text": "@artjomka, basically\n```\nhttp\n  .authorizeRequests()\n  .antMatchers('/one')\n  .antMatchers('/two')\n  .anyRequest()\n  .and()\n  // everything else\n```",
                "time": "2019-11-01 08:25:27",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5dbbee96e469ef4358a16c1c",
                "text": "Thanks, will revisit security configuration",
                "time": "2019-11-01 08:36:38",
                "index": 3,
                "user": "artjomka"
            }
        ]
    },
    {
        "id": 264,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f158f98a874ff08d289606e",
                "text": "Hi there, is it possible to use some descriminator in spring boot properties `@ConfigurationProperties` to build different types of properties? For example if we have such yaml file \n\n```\ntables:  \n  transactions.csv:\n    name: Transactions\n    file-name: transactions.csv\n    fields:\n      field1:\n        type: String\n        name: Z_KASSE_ID\n        jsonPath: \"cash_point_closing.head.company.location.cash_register.id\"\n        length: 50\n      field2:\n        type: Decimal\n        name: Z_NR\n        jsonPath: \"cash_point_closing.number\"\n        decimalPlaces: 0\n```\n\nwould it be somehow possible to create two different objects in fields? One would be of type `StringField` and second `DecimalField`?\n",
                "time": "2020-07-20 12:35:36",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5f15d88418ddba6ef5e7642c",
                "text": "@bilak I'm afraid not. The type information for property binding comes from the types to which the properties are being bound. If you want to do something more dynmaically typed, you'll have to work with SnakeYAML directly",
                "time": "2020-07-20 17:46:44",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 265,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd969ee0445e15fadfdf877",
                "text": "Hi, regarding spring-boot-actuator: If you have multiple SQL DBs, is it possible to disable the health check for only one of it?",
                "time": "2018-10-31 08:38:06",
                "index": 0,
                "user": "helpermethod"
            },
            {
                "id": "5bd96a096eb1e3597a891138",
                "text": "Currently it seems I can only disable the health check for all SQL DBs",
                "time": "2018-10-31 08:38:33",
                "index": 1,
                "user": "helpermethod"
            },
            {
                "id": "5bd9752526be6b5979467325",
                "text": "@helpermethod Yes, that's possible. Create your own bean named `dbHealthIndicator` that's either a `DataSourceHealthIndicator` if you're only left with one `DataSource` that you care about or a `CompositeHealthIndicator` if there's more than one.",
                "time": "2018-10-31 09:25:57",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bd9753ccd2a6b5bdc71c903",
                "text": "Take a look at `DataSourceHealthIndicatorAutoConfiguration` and its super-class for some inspiration",
                "time": "2018-10-31 09:26:20",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bd97a796ab3f85bdddf963c",
                "text": "@wilkinsona Thank you, will do!",
                "time": "2018-10-31 09:48:41",
                "index": 4,
                "user": "helpermethod"
            },
            {
                "id": "5bd97ee26eb1e3597a89a13c",
                "text": "Hello everyone",
                "time": "2018-10-31 10:07:30",
                "index": 5,
                "user": "reverseskydiver"
            },
            {
                "id": "5bd97f06d3442e19726777b7",
                "text": "Hi",
                "time": "2018-10-31 10:08:06",
                "index": 6,
                "user": "helpermethod"
            }
        ]
    },
    {
        "id": 266,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bdab36bc7440646d71119eb",
                "text": "Hello. In `2.1.0.RELEASE`, what is the appropriate strategy to catch `ConfigurationPropertiesBindException`s?  Or put another way, is there a good way to replace or augment `ConfigurationPropertiesBindingPostProcessor` which seems to throw that error? ",
                "time": "2018-11-01 08:03:55",
                "index": 0,
                "user": "mmoayyed"
            },
            {
                "id": "5bdad62c5905a9195537856d",
                "text": "@mmoayyed What problem are you trying to solve?",
                "time": "2018-11-01 10:32:12",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5bdad698ee8e69215343aaa3",
                "text": "@wilkinsona I am trying to figure out how I may prevent against accidental configuration issues such as `server.port[0]=whatever` (though this example is a bit extreme). My goal is to catch these, and provide better information and perhaps auto-substitute things if possible. (I have looked at the failure analysis reporters and the the way properties migrator works, to research this out). ",
                "time": "2018-11-01 10:34:00",
                "index": 7,
                "user": "mmoayyed"
            },
            {
                "id": "5bdad6bf02d2b37dd37f3ce8",
                "text": "Specifically, this issue: https://github.com/spring-projects/spring-boot/issues/7961 (while reported against `1.5.x`, applicable to v2)",
                "time": "2018-11-01 10:34:39",
                "index": 8,
                "user": "mmoayyed"
            },
            {
                "id": "5bdad73802d2b37dd37f3cf1",
                "text": "A much better message, In my opinion, would be: \u201cHey, `server.port` does not take indexes, and `whatever` is not a valid value. Here are the possible values you may choose. here is also some info from the config metadata (whether from boot or our own app) that explains what this thing does.\u201d ",
                "time": "2018-11-01 10:36:40",
                "index": 9,
                "user": "mmoayyed"
            },
            {
                "id": "5bdae026538a1c1971575376",
                "text": "@mmoayyed We don't disagree, that's why the issue's still open",
                "time": "2018-11-01 11:14:46",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5bdb26b8e078fc446fca9e31",
                "text": "@wilkinsona Thank you. is there something I can help with to move https://github.com/spring-projects/spring-boot/issues/7961 along? ",
                "time": "2018-11-01 16:15:52",
                "index": 73,
                "user": "mmoayyed"
            },
            {
                "id": "5bdb28e0cd2a6b5bdc7c8495",
                "text": "Any other examples you have of unhelpful failures would be useful",
                "time": "2018-11-01 16:25:04",
                "index": 74,
                "user": "wilkinsona"
            },
            {
                "id": "5bdb29014775f53eb3253337",
                "text": "We'll be planning the 2.2 release early next year. Having more examples will increase the changes of it getting scheduled for that release",
                "time": "2018-11-01 16:25:37",
                "index": 75,
                "user": "wilkinsona"
            },
            {
                "id": "5bdb6605c7440646d7111bfa",
                "text": "Sure thing. I\u2019ll try to update the issue more thoroughly. Thank you for your attention, as always. ",
                "time": "2018-11-01 20:45:57",
                "index": 76,
                "user": "mmoayyed"
            },
            {
                "id": "5bdbf1d35760a73eb42645aa",
                "text": "If I have keycloak adapter configured on Spring Boot service, should Swagger return the api documentation or it should be blocked because of CORS?",
                "time": "2018-11-02 06:42:27",
                "index": 77,
                "user": "vlatk0o"
            }
        ]
    },
    {
        "id": 267,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ef21630e0e5673398cd7f69",
                "text": "Is it possible to use different types of caches in a springboot-app? Is cacheManager at @Cachable the right way?",
                "time": "2020-06-23 14:48:16",
                "index": 0,
                "user": "ahoehma"
            },
            {
                "id": "5ef2181ab8152d34845c1f45",
                "text": "@ahoehma https://www.baeldung.com/spring-multiple-cache-managers provides a pretty good overview of your options.",
                "time": "2020-06-23 14:56:26",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ef21854fa0c9221fc569fdb",
                "text": "Thanks for that link! :D",
                "time": "2020-06-23 14:57:24",
                "index": 2,
                "user": "ahoehma"
            }
        ]
    },
    {
        "id": 268,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d47d3d27c8774616514a90d",
                "text": "I have updated spring-boot version from 1.4.2 to 2.1.4 and related springframework dependencies. I am not sure why I am getting this issue",
                "time": "2019-08-05 06:59:30",
                "index": 0,
                "user": "chinnareddy578"
            },
            {
                "id": "5d47d3d9e939ab2447fb8a50",
                "text": "Caused by: java.lang.ClassNotFoundException: org.springframework.security.authentication.AuthenticationManager\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_201]\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_201]\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_201]\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_201]\n\t... 41 common frames omitted",
                "time": "2019-08-05 06:59:37",
                "index": 1,
                "user": "chinnareddy578"
            },
            {
                "id": "5d47d3f64635976e0431ad83",
                "text": "Can someone help me with this?",
                "time": "2019-08-05 07:00:06",
                "index": 2,
                "user": "chinnareddy578"
            },
            {
                "id": "5d47e0794b8ca519c9e9c288",
                "text": "@chinnareddy578 review the migration guide and make sure you\u2019re not overridding dependencies in your build as it\u2019s likely to bring incompatible versions on upgrade",
                "time": "2019-08-05 07:53:29",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 269,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5cf931df3d46b639437a5da6",
                "text": "hello everyone. I'm using Spring Boot for an application that I have built and packaged with Maven, with come JAR dependencies. Anyway, when I launch it with `java -jar my-app.jar` it looks like the libs under `BOOT-INF/lib` are not loaded by the classloader. any hint?",
                "time": "2019-06-06 15:31:43",
                "index": 0,
                "user": "lorthirk"
            },
            {
                "id": "5cf93215dab2d11d80704334",
                "text": "I already checked that the classloader is an instance of `LaunchedURLClassLoader`",
                "time": "2019-06-06 15:32:37",
                "index": 1,
                "user": "lorthirk"
            },
            {
                "id": "5cf93b8be41fe15e7521f7ee",
                "text": "@lorthirk What symptom have you seen that makes you think that's the case? If `LauncherURLClassLoader` is the class loader, everything in `BOOT-INF/lib/*.jar` should be available. What URLs does it have on its class path?",
                "time": "2019-06-06 16:12:59",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cf9566188345163247641a0",
                "text": "@wilkinsona my libraries use a Guice implementation to locate some classes, but despite the jars containing both the interfaces and their implementation are in `BOOT-INF/lib` the Guice module won't find any class. this only happens when I run `java -jar my-app.jar` though; if I run the project with `mvn spring-boot:run` all the classes are in place",
                "time": "2019-06-06 18:07:29",
                "index": 7,
                "user": "lorthirk"
            },
            {
                "id": "5cf95b5682e5c6732228852f",
                "text": "@wilkinsona ok... I made some more test, it looks like Guice is to blame after all, since I can reference classes coming from libraries if I just call them",
                "time": "2019-06-06 18:28:38",
                "index": 9,
                "user": "lorthirk"
            },
            {
                "id": "5cf95b6a899fca350aba1b45",
                "text": "so somehow the Guice scanner has some problem with the Jar layout. I'll check. thanks!",
                "time": "2019-06-06 18:28:58",
                "index": 10,
                "user": "lorthirk"
            }
        ]
    },
    {
        "id": 270,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5baf20aa19b139275a1ab887",
                "text": "Hello guys. I really struggle to solve an issue which kinda annoys me already. I have a springboot project which is maven multi module and the @EntityScan annotation  does not work like expected.  I have some classes annotated with @MappedSuperClass in the domain layer and some DAO s in infrastructure which are actually entities that extend those classes from the domain layer. Spring actually manages to find the classes from the domain (I don't know how), so if I move all the DAO's  from infrastructure to domain the app works.  I have added the @EntityScan annotation  with both packages but still there is this exception \"Not a managed type\" ",
                "time": "2018-09-29 06:50:18",
                "index": 0,
                "user": "CosminChr"
            },
            {
                "id": "5baf2125271506518d8dd0e5",
                "text": "[![1.PNG](https://files.gitter.im/spring-projects/spring-boot/Q7Xt/thumb/1.png)](https://files.gitter.im/spring-projects/spring-boot/Q7Xt/1.PNG)",
                "time": "2018-09-29 06:52:21",
                "index": 1,
                "user": "CosminChr"
            },
            {
                "id": "5baf21301c100a4f2903ff47",
                "text": "[![2.PNG](https://files.gitter.im/spring-projects/spring-boot/rLAI/thumb/2.png)](https://files.gitter.im/spring-projects/spring-boot/rLAI/2.PNG)",
                "time": "2018-09-29 06:52:32",
                "index": 2,
                "user": "CosminChr"
            },
            {
                "id": "5baf2133ef4afc4f28f0a221",
                "text": "[![3.PNG](https://files.gitter.im/spring-projects/spring-boot/xb1y/thumb/3.png)](https://files.gitter.im/spring-projects/spring-boot/xb1y/3.PNG)",
                "time": "2018-09-29 06:52:35",
                "index": 3,
                "user": "CosminChr"
            },
            {
                "id": "5baf219d640179275b6c5919",
                "text": "Any ideas?",
                "time": "2018-09-29 06:54:21",
                "index": 4,
                "user": "CosminChr"
            },
            {
                "id": "5bb08feb600c5f6423300daf",
                "text": "@CosminChr let me see your DAOs source code  ",
                "time": "2018-09-30 08:57:15",
                "index": 10,
                "user": "halimpuckjava"
            },
            {
                "id": "5bb10c75435c2a518e2f9b84",
                "text": "@halimpuckjava  ",
                "time": "2018-09-30 17:48:37",
                "index": 13,
                "user": "CosminChr"
            },
            {
                "id": "5bb10c7b1c100a4f290e834b",
                "text": "[![Capture.PNG](https://files.gitter.im/spring-projects/spring-boot/hdlg/thumb/Capture.png)](https://files.gitter.im/spring-projects/spring-boot/hdlg/Capture.PNG)",
                "time": "2018-09-30 17:48:43",
                "index": 14,
                "user": "CosminChr"
            }
        ]
    },
    {
        "id": 271,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bc41323271506518d138121",
                "text": "Hi all, The spring boot application uses log4j for logging and invokes log4j based on profile i.e.  Dev , prod, perf etc.. Based on t environment I need to set log file Path. For this added multiple log4j file. Log4j-dev.xml, log4j-prod.xml etc.. is there anyway to inject the log file path dynamically in log4j xml or generic way?? I.e. /opt/log/prod/xx.lo, opt/log/dev/xx.log, opt/devstag/xx.log.",
                "time": "2018-10-15 04:10:11",
                "index": 0,
                "user": "vajpai"
            },
            {
                "id": "5bc4145bae7be940165bddfd",
                "text": "For logging ,  we need to log a a duration of request invocation , request id ,request url. For this planning to use aspectsj. So is cause any performance issue?? Or can we use filter insteasof . Which one is the best solution with responsive to performance. I knew that actuator do this for log request process duration.",
                "time": "2018-10-15 04:15:23",
                "index": 1,
                "user": "vajpai"
            },
            {
                "id": "5bc43909435c2a518eac2c82",
                "text": "@vajpai I don't know about log configuration, but judging from your requirements, a filter is the best solution - and ultimately it looks like you're reimplementing what's already available with Micrometer metrics. For example, your next problem will be to collect logs for all instances an correlate all response times for all app instances, etc. All those problems, including the intricacies of properly measuring times (and taking into account GC pauses) are solved by Micrometer and its metrics support in Spring Boot",
                "time": "2018-10-15 06:51:53",
                "index": 3,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 272,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b8dc6b61d3a5711b6de0cc4",
                "text": "Anyone online ?",
                "time": "2018-09-03 23:41:42",
                "index": 0,
                "user": "satijabharat_twitter"
            },
            {
                "id": "5b8dc6cd4be56c5918d9e4c9",
                "text": " int numberOfDays = (int) ChronoUnit.DAYS.between(endDate, startDate);\n\n    System.out.println(\"--------days--------\"+numberOfDays);\n\n\n    for(int i = 1; i < numberOfDays; i++){\n        System.out.println(\"--------days--------\"+i);\n\n    }  ",
                "time": "2018-09-03 23:42:05",
                "index": 1,
                "user": "satijabharat_twitter"
            },
            {
                "id": "5b8dc6f0c9500b4bab7a5852",
                "text": "I am using this in the rest api code and her for loop is not working.",
                "time": "2018-09-03 23:42:40",
                "index": 2,
                "user": "satijabharat_twitter"
            },
            {
                "id": "5b8dc70a58a3797aa3fb5a59",
                "text": "it's does not print anything.",
                "time": "2018-09-03 23:43:06",
                "index": 3,
                "user": "satijabharat_twitter"
            },
            {
                "id": "5b8e2e34f86b741b0507ce6e",
                "text": "@satijabharat_twitter maybe because endDate is after startDate? This will return a negative result and you loop expects a positive one.",
                "time": "2018-09-04 07:03:16",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5b8e33b1ac25fd11b5da6bf4",
                "text": "@bclozel @satijabharat_twitter You will not notice if numberOfDays is negative because you print --- before the value with no separation.",
                "time": "2018-09-04 07:26:41",
                "index": 9,
                "user": "corneil"
            }
        ]
    },
    {
        "id": 273,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f060b79a9378637e8b6bc7d",
                "text": "Hi there, I'm trying out Spring Boot 2.3.2 with kotlin coroutines.\nFor database communication, I use R2DBC  0.8\n\nThe problem I face is tests do not create database schema from `schema.sql` file\n\nI annotate test class with `@DataR2dbcTest`; in `application.properties` I set `spring.r2dbc.initialization-mode=always`\n\nWhat is missing?",
                "time": "2020-07-08 18:07:53",
                "index": 0,
                "user": "toidi"
            },
            {
                "id": "5f060f6a6e1b8050c3dfe966",
                "text": "@toidi There's no `spring.r2dbc.initialization-mode` property in Spring Boot. There may have been one in the experimental project, I can't remember. Please see [this section of the documentation](https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/htmlsingle/#howto-initialize-a-database-using-r2dbc) for details of how to initialise the database when using R2DBC.",
                "time": "2020-07-08 18:24:42",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 274,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5beb6bdffee6703aaf68279a",
                "text": "hi, I am starting to learn spring-boot and someone know about a course with of good quality respect to good practices",
                "time": "2018-11-14 00:27:11",
                "index": 0,
                "user": "juanjosegdoj_gitlab"
            },
            {
                "id": "5beb99729600d10e64a7ede4",
                "text": "@juanjosegdoj_gitlab Spring boot documentation is itself quite awesome. If you want video tutorials, I would recommend the ones on LinkedIn.",
                "time": "2018-11-14 03:41:38",
                "index": 2,
                "user": "badari31"
            }
        ]
    },
    {
        "id": 275,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5c6aa9897502282258063200",
                "text": "Can someone tell me what this means. ",
                "time": "2019-02-18 12:48:09",
                "index": 0,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c6aa98a253c2b5ea331957e",
                "text": "Caused by: org.springframework.context.ApplicationContextException: Unable to start ServletWebServerApplicationContext due to missing ServletWebServerFactory bean.",
                "time": "2019-02-18 12:48:10",
                "index": 1,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c6aa9b275022822580632ad",
                "text": "I have already forced updated my dependencies ",
                "time": "2019-02-18 12:48:50",
                "index": 2,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c6aaa034bafd97ca310d8a7",
                "text": "As per Phil's comment on https://github.com/spring-projects/spring-boot/issues/12398 I have already purged the dependencies",
                "time": "2019-02-18 12:50:11",
                "index": 3,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c6badd9e5eeec0d9b8dd647",
                "text": "@rajjaiswalsaumya Did you try to update your project? For example if this is a Maven you can try  a chain: Project->Maven->Update project. Or try to delete m2 folder, where basicaly store all libraries.",
                "time": "2019-02-19 07:18:49",
                "index": 34,
                "user": "InetBard"
            }
        ]
    },
    {
        "id": 276,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c8146378f294b134a03e6bb",
                "text": "Hi. I have written a REST end point using WebFlux and also made a test using the WebFluxTest  and also added REST Docs to it. Question here is how do I make REST Docs to put snippets in a folder of my own?  I have used this @AutoConfigureRestDocs(outputDir = \"target/snippets\") but it is ignored and snippets are put in the folder 'generated-snippets' under 'target' folder in MAVEN. Is  this a bug or something is missing?",
                "time": "2019-03-07 16:26:31",
                "index": 0,
                "user": "cortizqgithub"
            },
            {
                "id": "5c819223c8e5bc516203d0e2",
                "text": "@cortizqgithub That should work. I've just tried it and it worked as expected anyway. Can you share some code that shows it not working as expected?",
                "time": "2019-03-07 21:50:27",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c819360c8e5bc516203ddd6",
                "text": "@wilkinsona  Yes of course https://github.com/cortizqgithub/csoftz-spring-boot-poc  See MessageControllerTest which is a WebFlux controller. And also HomeControllerTest which is an MVC controller.  Feel free to download and do a mvn clean install to validate, would you please?",
                "time": "2019-03-07 21:55:44",
                "index": 5,
                "user": "cortizqgithub"
            },
            {
                "id": "5c8195ad0a6b915163f1408f",
                "text": "@cortizqgithub You aren't using the auto-configured REST Docs setup as you're creating the JUnit rule and the `WebTestClient` yourself. Your test will work as you'd like if you change it to the following:\n\n```\npackage com.example.devops.controller;\n\nimport static org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.document;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs;\nimport org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTest;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.test.web.reactive.server.WebTestClient;\n\n@RunWith(SpringRunner.class)\n@AutoConfigureRestDocs(outputDir = \"target/snippets\", uriScheme=\"https\", uriHost=\"api.example.com\")\n@WebFluxTest\npublic class MessageControllerTest {\n\n    @Autowired\n    private WebTestClient webTestClient;\n\n    @Test\n    public void shouldReturnMessage() throws Exception {\n        this.webTestClient.get()\n                .uri(\"/api/v1/msg/say\")\n                .exchange()\n                .expectStatus()\n                .isOk()\n                .expectBody()\n                .consumeWith(document(\"message\"));\n    }\n\n}\n```",
                "time": "2019-03-07 22:05:33",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5c819752d1e7281f09f1046c",
                "text": "@wilkinsona  Yes, it worked. I asked this because I am just learning the basics of Spring REST Docs.",
                "time": "2019-03-07 22:12:34",
                "index": 8,
                "user": "cortizqgithub"
            },
            {
                "id": "5c81976ed1e7281f09f1056b",
                "text": "Thanks, problem solved. Cool!",
                "time": "2019-03-07 22:13:02",
                "index": 9,
                "user": "cortizqgithub"
            }
        ]
    },
    {
        "id": 277,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ec6429763c8e90e4300c11c",
                "text": "Hi, is there a reason why Spring can't find a Kotlin bean that's needed by a Java class?\n\nExample:\n\n```java\nprivate final kotlinBeanService kotlinBeanService;\n\npublic MyClass(KotlinBeanService kotlinBean) { this.kotlinBeanService = kotlinBean; }\n```\n\n```kotlin\n@Service\nopen class KotlinBeanImpl(private val myClass: MyClass) : KotlinBeanService { ... }\n```",
                "time": "2020-05-21 08:57:59",
                "index": 0,
                "user": "MarounMaroun"
            },
            {
                "id": "5ec643c4cf55346b5fbee33d",
                "text": "The error: \n\n```\nParameter 0 of constructor in com.... required a bean of type 'com.x.MyClass' that could not be found.\n\n```",
                "time": "2020-05-21 09:03:00",
                "index": 1,
                "user": "MarounMaroun"
            },
            {
                "id": "5ec6479dc6541c05d8ef7929",
                "text": "looks like it' other way round - MyClass not found. did you try to add `@Service` annottation to it?",
                "time": "2020-05-21 09:19:25",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5ec647e2b761400e29db5e03",
                "text": "also code looks strange to me - MyClass depends on KotlinBeanService, and KotlinBeanImpl depends on MyClass",
                "time": "2020-05-21 09:20:34",
                "index": 3,
                "user": "boda2004"
            },
            {
                "id": "5ec647fce06728175b80c864",
                "text": "The Kotlin service is annotated with `@Service`, and the Java controller annotated with a `@Controller`",
                "time": "2020-05-21 09:21:00",
                "index": 4,
                "user": "MarounMaroun"
            },
            {
                "id": "5ec64828b761400e29db5ee6",
                "text": "I had a mistake in the question, here is it again, simplified:\n\n```kotlin\n@Service\nopen class KotlinServiceImpl(private val myRepository: MyRepository) : MyService { ... }\n```\n\n```java\nprivate final MyService MyService;\n\npublic MyController(MyService myService) {\n  this.myService = myService;\n}\n```\n\n\n> Parameter 0 of constructor in MyController required a bean of type 'MyService' that could not be found.\n\nI'm using Gradle, and I have the following dependencies included:\n\n```\nimplementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"\nimplementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.72'\n```",
                "time": "2020-05-21 09:21:44",
                "index": 5,
                "user": "MarounMaroun"
            }
        ]
    },
    {
        "id": 278,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d2cf6ec202bb93f00ad3b95",
                "text": "Hello, everyone.\n\nWhat are the parameters you recommend to have set for your JVM (if any) in order to have a faster startup? or is there any tips and tricks?\nI'm using kubernetes and I usually allocate 256mb-512mb of RAM to the container and half CPU.\nAs I understand, the startup of spring (boot?) is very CPU intensive and that's why the application takes so long to start.\nIs there anything clever that can be done to speed up the startup of the average spring boot application? (considering the said resource allocation)\nThe application takes a little bit more than one minute to start with 256mb of RAM + half CPU.\nIt's really not a big deal, but if I could improve it, that would be great.\n\nThanks!",
                "time": "2019-07-15 21:58:04",
                "index": 0,
                "user": "renannprado"
            },
            {
                "id": "5d2d785a4d7505324153ed5f",
                "text": "how fast does it start on your local machine ?",
                "time": "2019-07-16 07:10:18",
                "index": 1,
                "user": "tgeens"
            },
            {
                "id": "5d2d7864570ac36f8d322b68",
                "text": "because 60+ seconds is really slow",
                "time": "2019-07-16 07:10:28",
                "index": 2,
                "user": "tgeens"
            },
            {
                "id": "5d2d97b601621760bcc341a3",
                "text": "@renannprado you can use spring-boot-autoconfigure-processor to precompute the autoconifg, which will speed things up",
                "time": "2019-07-16 09:24:06",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5d2d97f77dbfff3242b8f7a6",
                "text": "@OrangeDog I don\u2019t think that matters at all given the description. Using the processor is about saving milliseconds and would only affect them if they had a lot of custom auto-configurations",
                "time": "2019-07-16 09:25:11",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5d2d9828d14e297762de8d6b",
                "text": "check connection and JPA configuration - that's going to want to connect to everything and run various queries at startup",
                "time": "2019-07-16 09:26:00",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5d2d98367dbfff3242b8fa45",
                "text": "The 0.5 CPU is the problem",
                "time": "2019-07-16 09:26:14",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5d2d98575fa7895c430df101",
                "text": "ah, yes, I thought they meant half of the available CPUs",
                "time": "2019-07-16 09:26:47",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5d2d9b6654d338393717979a",
                "text": "@tgeens please chime in on the PR if you have comments about how the metric scheme: https://github.com/spring-projects/spring-boot/pull/17504",
                "time": "2019-07-16 09:39:50",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5d2da6335fa7895c430e54af",
                "text": ":thumbsup: ",
                "time": "2019-07-16 10:25:55",
                "index": 9,
                "user": "tgeens"
            },
            {
                "id": "5d3f09ff840e28718068b2cf",
                "text": "@snicoll sorry for the huge delay. Following up the discussion about the startup in kubernetes and the resources assigned.\nWith 512mb and 700m (1/7 CPU) the application takes an avg of 30s to start.\n\nHow much CPU do you consider appropriate for the average application?",
                "time": "2019-07-29 15:00:15",
                "index": 237,
                "user": "renannprado"
            }
        ]
    },
    {
        "id": 279,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dfa125fc62fdf33f711a8f4",
                "text": "Hi, I'm overriding javax.net.ssl.trustStore JVM property and I would like to know if it is possible to make a RestTemplate use the default jvm cacerts instead of the configured one ?",
                "time": "2019-12-18 11:49:51",
                "index": 0,
                "user": "Rajh"
            },
            {
                "id": "5dfa12bd49314a1d459be00d",
                "text": "Without having to specify the path since I don't know it, it depends on the host",
                "time": "2019-12-18 11:51:25",
                "index": 1,
                "user": "Rajh"
            },
            {
                "id": "5dfa1389260751301ccc2e47",
                "text": "You'll need to construct the path. `javax.net.ssl.trustStore` defines what the default is.",
                "time": "2019-12-18 11:54:49",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5dfa1409e0131f50c96506cc",
                "text": "There is no backup or way to find it via java objects ?\nOr maybe another property which will add instead of override a keystore ?",
                "time": "2019-12-18 11:56:57",
                "index": 3,
                "user": "Rajh"
            }
        ]
    },
    {
        "id": 280,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f296a630ff358499bd3da05",
                "text": "Hello. Is there a nice way to do all logging from a single class and still have the classname logged properly? I'm looking to enrich all my logs with MDC or structured logging and it would be nice to be able to pass around a single class for this (instead of creating new loggers per-class).",
                "time": "2020-08-04 14:02:11",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5f296e7847738110233f2f83",
                "text": "Theoretically, by inspecting stack traces, but it would be incredibly slow, and very complicated with proxies, lambdas, and other anonymous classes.",
                "time": "2020-08-04 14:19:36",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5f296e8903d73b60ee670507",
                "text": "Why not follow the way all Java logging systems have been designed instead?",
                "time": "2020-08-04 14:19:53",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5f296e9c03d73b60ee670531",
                "text": "Use lombok if you don't like typing",
                "time": "2020-08-04 14:20:12",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5f297034b9bc40357bb85b40",
                "text": "@OrangeDog What do you mean follow the way logging systems have been designed? I just want to enhance log messages with common context, which I imagine is a fairly common task in log4j, but my google-fu is failing me.",
                "time": "2020-08-04 14:27:00",
                "index": 4,
                "user": "springroll12"
            },
            {
                "id": "5f2971a536563560f2c1d9c7",
                "text": "I mean create loggers per-class",
                "time": "2020-08-04 14:33:09",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5f2971da03d73b60ee670e29",
                "text": "Use MDC if you want it, but is has nothing to do with logger instances (that's the whole point of it)",
                "time": "2020-08-04 14:34:02",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5f2971fd47738110233f3777",
                "text": "But if I want to add say the user-agent header to every single log entry",
                "time": "2020-08-04 14:34:37",
                "index": 7,
                "user": "springroll12"
            },
            {
                "id": "5f29721ea2be9049908f60d0",
                "text": "or something from spring security context (e.g. user_id)",
                "time": "2020-08-04 14:35:10",
                "index": 8,
                "user": "springroll12"
            },
            {
                "id": "5f29722d0ff358499bd3f2a4",
                "text": "wouldn't it make sense to put that all in one place (sort of like a logging interceptor?)",
                "time": "2020-08-04 14:35:25",
                "index": 9,
                "user": "springroll12"
            },
            {
                "id": "5f2974fc10aa45625517310a",
                "text": "@OrangeDog am I barking up the wrong tree here? Maybe there's a java/spring mechanism for this that I'm missing",
                "time": "2020-08-04 14:47:24",
                "index": 10,
                "user": "springroll12"
            },
            {
                "id": "5f29757a6334d26a7e73fcc5",
                "text": "@springroll12 what you are describing is MDC",
                "time": "2020-08-04 14:49:30",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5f2975d50ff358499bd4005f",
                "text": "@OrangeDog  right, but surely noone wraps each log statement or even controller methods in mdc statements? How do you deal with adding the same MDC for every single log request?",
                "time": "2020-08-04 14:51:01",
                "index": 12,
                "user": "springroll12"
            },
            {
                "id": "5f2977818d82e6625204df97",
                "text": "That's what MDC is...",
                "time": "2020-08-04 14:58:09",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5f2977ada0bdc3101d5264ad",
                "text": "If you're adding data manually to every log statement then you're not using MDC",
                "time": "2020-08-04 14:58:53",
                "index": 14,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 281,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f1002ab343f5d694952d88f",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/PArP/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/PArP/image.png)",
                "time": "2020-07-16 07:32:59",
                "index": 0,
                "user": "tgioer"
            },
            {
                "id": "5f1002ddff29b7773206300e",
                "text": "I want to add a Task manually using SchedulingConfigurer.",
                "time": "2020-07-16 07:33:49",
                "index": 1,
                "user": "tgioer"
            },
            {
                "id": "5f10031749fe2127949ac148",
                "text": "If I use the SchedulingConfigurer, I will not be able to use the taskScheduler with the spring Boot default configuration.",
                "time": "2020-07-16 07:34:47",
                "index": 2,
                "user": "tgioer"
            },
            {
                "id": "5f10032549fe2127949ac182",
                "text": "So how do we solve this?",
                "time": "2020-07-16 07:35:01",
                "index": 3,
                "user": "tgioer"
            },
            {
                "id": "5f1006ab343f5d694952e426",
                "text": "@tgioer you do aren\u2019t you. The only thing that code does is \u201cbuilder.build()\u201d. If you want to take control over this, you can still inject `TaskSchedulerBuilder` and set it or expose it as a bean.",
                "time": "2020-07-16 07:50:03",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5f1008b00d37916fda7b03e6",
                "text": "Thank you @snicoll ",
                "time": "2020-07-16 07:58:40",
                "index": 5,
                "user": "tgioer"
            },
            {
                "id": "5f1008f849fe2127949ad607",
                "text": "[![image.png](https://files.gitter.im/544f4753db8155e6700cefb5/peTq/thumb/image.png)](https://files.gitter.im/544f4753db8155e6700cefb5/peTq/image.png)",
                "time": "2020-07-16 07:59:52",
                "index": 6,
                "user": "tgioer"
            },
            {
                "id": "5f1008ff3fb51c4967a707c6",
                "text": "I'm going to create it manually, okay?",
                "time": "2020-07-16 07:59:59",
                "index": 7,
                "user": "tgioer"
            },
            {
                "id": "5f1009961cc043695967c9c2",
                "text": "It looks perfect, too.\u263a",
                "time": "2020-07-16 08:02:30",
                "index": 8,
                "user": "tgioer"
            }
        ]
    },
    {
        "id": 282,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e1c991b0e65654fa0d85f40",
                "text": "Is there a good way to supply different beans depending on the detected/configured db type (MySQL, PostgreSQL, etc.)?",
                "time": "2020-01-13 16:21:47",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5e1c992cdbacf55b3dfe5361",
                "text": "i.e. of the autoconfigured `DataSource`",
                "time": "2020-01-13 16:22:04",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e1c996165540a529a0da24a",
                "text": "checking the class doesn't work e.g. if it's a Hikari one",
                "time": "2020-01-13 16:22:57",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5e1c996cb720fa5b3c099485",
                "text": "that\u2019s the pooling implementation",
                "time": "2020-01-13 16:23:08",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5e1c99726f604152993467ac",
                "text": "indeed",
                "time": "2020-01-13 16:23:14",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5e1c9978b990d50d81a7b1ec",
                "text": "you could have profile for each db and use that as a trigger",
                "time": "2020-01-13 16:23:20",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5e1c9a3f8d9f831bc520bbc1",
                "text": "oh, I could use `DataSourceProperties.determineDriverClassName()`?",
                "time": "2020-01-13 16:26:39",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5e1cda53b990d50d81a97064",
                "text": "@OrangeDog you should take a look at the code used in AbstractDataSourceInitializer: https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/AbstractDataSourceInitializer.java#L87-L100",
                "time": "2020-01-13 21:00:03",
                "index": 7,
                "user": "tkvangorder"
            },
            {
                "id": "5e1cda78cb2aaa2d78326ed9",
                "text": "this is the code that is determining a database name to then load the proper, database-specific sql script from the classpath. ",
                "time": "2020-01-13 21:00:40",
                "index": 8,
                "user": "tkvangorder"
            },
            {
                "id": "5e1ce7071cf5106b35168ec5",
                "text": "you should be able to use something similar to conditionally add a bean to the context .",
                "time": "2020-01-13 21:54:15",
                "index": 9,
                "user": "tkvangorder"
            }
        ]
    },
    {
        "id": 283,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d4b1d2f4e17537f52eef8c5",
                "text": "Hi! I\u2019m making my own starter to use as a dependency of many similar projects. How can I configure some `spring.jpa\u2026` properties defaults in the starter, so that apps depending on it will have those values set?",
                "time": "2019-08-07 18:49:19",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5d4b39972612bb718c2957ee",
                "text": "@heraun I would recommend you use something like spring cloud config and external \"shared\" properties. You can then use a comma-separated value for you config name in your bootstrap.properties: \n\n```\nspring.clouid.config.name=common-settings,app-a\n```\n\nIf you want to embed properties within your code (and this only recommended if these are not going to change between environments) you can use a `@PropertySource` to load properties:\n\n`src/main/resources/common.properties`\n\nAnd on your configuration class: \n`@PropertySource(\"classpath:common.properties\")`\n\n\n",
                "time": "2019-08-07 20:50:31",
                "index": 1,
                "user": "tkvangorder"
            },
            {
                "id": "5d4bcac395071824779e3a86",
                "text": "@tkvangorder please don\u2019t recommend the use of `@PropertySource` it\u2019s actually something we don\u2019t recommend using.",
                "time": "2019-08-08 07:09:55",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5d4bcaf32612bb718c2d241d",
                "text": "@heruan You can add a `PropertySource`  on the  `Environment` using an `EnvironmentPostProcessor`. There is a section in the doc that expains you how to do that. I\u2019d strongly suggest you to think what the precedence of it should be so that apps using your starter have a chance to overridde things if necessary",
                "time": "2019-08-08 07:10:43",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5d4bcb3a029a51607f571e90",
                "text": "@heruan what makes you think `AutoConfigureTestDatabase` requires JPA?",
                "time": "2019-08-08 07:11:54",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5d4bcbb2d03a7c63e6ece853",
                "text": "Thank you @snicoll I\u2019ve used an `EnvironmentPostProcessor` loading properties from a YAML file and it\u2019s working great!",
                "time": "2019-08-08 07:13:54",
                "index": 6,
                "user": "heruan"
            },
            {
                "id": "5d4bcbd02612bb718c2d2acf",
                "text": "About the `AutoConfigureTestDatabase`, simply because if I set `replace = NONE` it\u2019s ignored if I don\u2019t have the JPA starter.",
                "time": "2019-08-08 07:14:24",
                "index": 7,
                "user": "heruan"
            },
            {
                "id": "5d4bcbdc1db76d0ffe94d3ff",
                "text": "I don\u2019t understand what you mean",
                "time": "2019-08-08 07:14:36",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5d4bccb553490e334db40d4d",
                "text": "I have a project with just `spring-data-jpa` and `spring-boot-starter-test` as a dependency. Within that project, I can write a test class annotated with `@DataJpaTest` and running the test I see it loads an H2 database and runs queries against it. But, if I add `@AutoConfigureTestDatabase(replace = NONE)` to use my `application.yml` defined datasource it doesn\u2019t work if I don\u2019t have the `spring-boot-starter-data-jpa` dependency.",
                "time": "2019-08-08 07:18:13",
                "index": 9,
                "user": "heruan"
            },
            {
                "id": "5d4bcd0a5178a724764cf342",
                "text": "It makes sense, I was just confused by the way it worked without that starter when using the in-memory database.",
                "time": "2019-08-08 07:19:38",
                "index": 10,
                "user": "heruan"
            },
            {
                "id": "5d4bcd12a4efe3718dc53ced",
                "text": "\u201cdoes not work\u201d meaning it\u2019s still replacing the database?",
                "time": "2019-08-08 07:19:46",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5d4bcd5590bba62a123a5bb1",
                "text": "Yeah, it\u2019s still replacing the database if it finds the H2 driver on the classpath; if I remove the driver, I gen an exception in the lines of \u201ccannot find a bean for EntityManagerFactory\u201d.",
                "time": "2019-08-08 07:20:53",
                "index": 12,
                "user": "heruan"
            },
            {
                "id": "5d4bcd741db76d0ffe94dd9b",
                "text": "that does not make any sense to me",
                "time": "2019-08-08 07:21:24",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5d4bd3011db76d0ffe95070c",
                "text": "Is there a sample project I could use to reproduce that myself?",
                "time": "2019-08-08 07:45:05",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5d4bd6f41dadc42a1131c1f0",
                "text": "Not right now, if I succeed to setup one I\u2019ll let you have a look! Thank you :slight_smile: ",
                "time": "2019-08-08 08:01:56",
                "index": 15,
                "user": "heruan"
            },
            {
                "id": "5d4bd958a4efe3718dc59679",
                "text": "Thanks",
                "time": "2019-08-08 08:12:08",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5d4c3afd5178a724765041dc",
                "text": "@snicoll sorry, I was unaware of the \"do not use `@PropertySource`\". Good to know. ",
                "time": "2019-08-08 15:08:45",
                "index": 18,
                "user": "tkvangorder"
            },
            {
                "id": "5d4c3dee4e17537f52f70999",
                "text": "A bit more details about that. There is some info in the developer guide. Essentially, `@PropertySource` are added very late and you can\u2019t control the precedence so it makes it a very poor candidate for a starter (as you definitely want to determine when those defaults apply)",
                "time": "2019-08-08 15:21:18",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5d4c3e2a2612bb718c30aca0",
                "text": "There is also a chicked and egg problem. Because  we have to parse your configuration or, worse, your auto-configuration, to process the annotations, you can be in a situation where some configurations are already applied before the properties loaded from `@PropertySource` have a chance to take effect",
                "time": "2019-08-08 15:22:18",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5d4c3e57bb5364334cf6623b",
                "text": "Essentially, we believe that the `Environment` should be prepared at the right phase and using `@PropertySource` does not let you do that",
                "time": "2019-08-08 15:23:03",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5d4c3e6cbb5364334cf662b0",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-application-events-and-listener",
                "time": "2019-08-08 15:23:24",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5d4c3e86d03a7c63e6f060fa",
                "text": "When `ApplicationPreparedEvent` is fired, the environment should be ready. Things from `@PropertySource` haven\u2019t even been looked at yet that point. ",
                "time": "2019-08-08 15:23:50",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5d4c3e945178a72476505f80",
                "text": "I hope that provides convincing insight for not using it :)",
                "time": "2019-08-08 15:24:04",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5d4c41ec7d56bc60801a4d5a",
                "text": "@snicoll Makes perfect sense, thank you. ",
                "time": "2019-08-08 15:38:20",
                "index": 26,
                "user": "tkvangorder"
            }
        ]
    },
    {
        "id": 284,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd17e741c100a4f29df0156",
                "text": "Hi all, I'm trying to setup some development helpers and services for manual testing purposes",
                "time": "2018-10-25 08:27:32",
                "index": 0,
                "user": "pascalwilbrink"
            },
            {
                "id": "5bd17e9e600c5f642304c3af",
                "text": "I'm thinking of a sourceset that only gets included with a specific spring profile. Is this possible?",
                "time": "2018-10-25 08:28:14",
                "index": 1,
                "user": "pascalwilbrink"
            },
            {
                "id": "5bd17ec0bbdc0b25059803e7",
                "text": "Or should I annotate all those controllers with @conditinalOn..",
                "time": "2018-10-25 08:28:48",
                "index": 2,
                "user": "pascalwilbrink"
            },
            {
                "id": "5bd181a1ab17df2631e928ad",
                "text": "sourceset would be build time",
                "time": "2018-10-25 08:41:05",
                "index": 3,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bd181b2c08b8b30676cd172",
                "text": "not tied to spring profiles at all (probably not a bad idea)",
                "time": "2018-10-25 08:41:22",
                "index": 4,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bd1c3e5600c5f642306a469",
                "text": "@styx_hcr_twitter thanks. I will create a DeVConfig class that is conditional on the dev profile that creates the controller as a bean",
                "time": "2018-10-25 13:23:49",
                "index": 14,
                "user": "pascalwilbrink"
            }
        ]
    },
    {
        "id": 285,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bda073f538a1c19715260b4",
                "text": "@EnableAutoConfiguration introduced in which version and compatible with which versions of Spring Boot",
                "time": "2018-10-31 19:49:19",
                "index": 0,
                "user": "akandula"
            },
            {
                "id": "5bda0781a9c55b257488330b",
                "text": "It doesn\u2019t have an `@since` in the javadoc so I would assume boot 1.0?",
                "time": "2018-10-31 19:50:25",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5bda07960445e15fad02218a",
                "text": "the `excludeName` attribute was added in `1.3.0`",
                "time": "2018-10-31 19:50:46",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5bda080d6eb1e3597a8d5cc7",
                "text": "`@SpringBootApplication` came in boot `1.2.0` and i believe `@EnableAutoConfiguration` existed before that",
                "time": "2018-10-31 19:52:45",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5bda0e65076992347a963bfe",
                "text": "@edeandrea boot 2.0",
                "time": "2018-10-31 20:19:49",
                "index": 4,
                "user": "akandula"
            },
            {
                "id": "5bda0eaba9c55b257488642e",
                "text": "What about boot 2.0?",
                "time": "2018-10-31 20:20:59",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5bda154c4775f53eb31ecdbc",
                "text": "You are correct, @edeandrea. `@EnableAutoConfiguration` has been there since the very beginning. It was part of the first milestone, 0.5.0.M1: https://github.com/spring-projects/spring-boot/blob/v0.5.0.M1/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfiguration.java",
                "time": "2018-10-31 20:49:16",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5bda170826be6b59794ad562",
                "text": "@edeandrea Thank you thought you had a ? against boot 1.0",
                "time": "2018-10-31 20:56:40",
                "index": 7,
                "user": "akandula"
            }
        ]
    },
    {
        "id": 286,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d443370475c0a0febe7c47e",
                "text": "I just started with Spring Boot. It works out of the box and I have basic API services running. I am looking for code examples (GET and POST) - is there a site which has a lot of examples?",
                "time": "2019-08-02 12:58:24",
                "index": 0,
                "user": "zillerium"
            },
            {
                "id": "5d44399a757b7b19c840d9a4",
                "text": "@zillerium Yes, https://spring.io/guides",
                "time": "2019-08-02 13:24:42",
                "index": 2,
                "user": "IEnoobong"
            }
        ]
    },
    {
        "id": 287,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c76bf20d2d62067b716da1f",
                "text": "Hi, \nCould someone suggests a solution about this?\n\n> ```\n> @Service\n> public class SecurityUserDetailsService implements UserDetailsService {\n>     @Lazy\n>     @Autowired\n>     private SecurityUserDetailsService userDetailsService;\n> \n>      @Override\n>     public UserDetails loadUserByUsername( String username ) throws UsernameNotFoundException {\n>        \n>        userDetailsService.warnChicowaServiceForNewChicoweur( loadedOwnerCredentials.isPresent(), username );\n> \n>         return ....;\n>     }\n> \n>     // ==================================================================================\n>     // ==================================================================================\n>     @Async\n>     public void warnChicowaServiceForNewChicoweur( .... ) {\n>       .......\n>      }\n> }\n> ```\n> Using `@Async` raises this exception after the user login:\n> \n> ```\n> java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.\n> \tat org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(RequestContextHolder.java:131)\n> \tat org.springframework.web.context.support.WebApplicationContextUtils.currentRequestAttributes(WebApplicationContextUtils.java:312)\n> \tat org.springframework.web.context.support.WebApplicationContextUtils.access$400(WebApplicationContextUtils.java:65)\n> \tat org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory.getObject(WebApplicationContextUtils.java:328)\n> \tat org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory.getObject(WebApplicationContextUtils.java:323)\n> \tat org.springframework.beans.factory.support.AutowireUtils$ObjectFactoryDelegatingInvocationHandler.invoke(AutowireUtils.java:301)\n> \tat com.sun.proxy.$Proxy225.getHeader(Unknown Source)\n> ```\n> I added this bean but the error remains: \n> \n> ```\n>     @Bean\n>     public RequestContextListener requestContextListener() {\n>         return new RequestContextListener();\n>     }\n> `` `\n> \n> Thanks\n> ",
                "time": "2019-02-27 16:47:28",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5c76c1588a7def0752e72612",
                "text": "@akuma8 Instead the `warnChicowaServiceForNewChicoweur` code gettnig data from the request context can they be looked up in `loadUserByUsername` and passed in as a method argument?\n",
                "time": "2019-02-27 16:56:56",
                "index": 1,
                "user": "micke-a"
            },
            {
                "id": "5c76fbce608c6f373633f237",
                "text": "@micke-a I changed the code as you suggested, the exception goes away but I don't have the result that I expected. The goal was to execute the  `warnChicowaServiceForNewChicoweur ` in another thread so the parent thread could finish the login process without worrying about that method's execution, but when I look at logging traces, the parent thread is still waiting for the  new thread to finish the execution of  `warnChicowaServiceForNewChicoweur ` before finishing user login process, I'm a bit confused.",
                "time": "2019-02-27 21:06:22",
                "index": 6,
                "user": "akuma8"
            },
            {
                "id": "5c77a00d5015f21e1971834c",
                "text": "@akuma8 Do you have `@EnableAsync` specified? If the thread is included in your logging you can also verify there which thread the async method is executing in.\nOn a side note I think it would make sense to split the `@Async` code out into a separate service, but this shouldn't impact your current situation since you're using the hack of injecting the service into \"itself\" which should give you the proxied instance.",
                "time": "2019-02-28 08:47:09",
                "index": 18,
                "user": "micke-a"
            },
            {
                "id": "5c77ad16e8ea1437378ab2eb",
                "text": "@micke-a I already tried both, split the `@Async` method in another service and the result is the same. I can see that the execution happens in another thread but what I don't understand is why the parent thread waits for that thread to finish its job before continuing. I'll add logging traces for more details. ",
                "time": "2019-02-28 09:42:46",
                "index": 20,
                "user": "akuma8"
            }
        ]
    },
    {
        "id": 288,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e8df5f01aaf8e4b8e6cc823",
                "text": "Hi",
                "time": "2020-04-08 16:04:00",
                "index": 0,
                "user": "akhan5"
            },
            {
                "id": "5e8df611e24b4d6c44f520db",
                "text": "after upgrading to spring boot 2.2.5 , server context path property in application.yml file is not working ",
                "time": "2020-04-08 16:04:33",
                "index": 1,
                "user": "akhan5"
            },
            {
                "id": "5e8df61916f84f04616574a8",
                "text": "can any one help me with that",
                "time": "2020-04-08 16:04:41",
                "index": 2,
                "user": "akhan5"
            },
            {
                "id": "5e8df67d5d148a0460f29ce8",
                "text": "That\u2019s `server.servlet.context-path`.  You didn\u2019t say from which version you upgraded so it\u2019s hard to provide help",
                "time": "2020-04-08 16:06:21",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5e8df6985d148a0460f29d29",
                "text": "I have tried in yml file",
                "time": "2020-04-08 16:06:48",
                "index": 4,
                "user": "akhan5"
            },
            {
                "id": "5e8df6ad6823cb38acbab621",
                "text": "server:\n   servlet:\n     context-path: /eform",
                "time": "2020-04-08 16:07:09",
                "index": 5,
                "user": "akhan5"
            },
            {
                "id": "5e8df6d1e24b4d6c44f523d0",
                "text": "You mentioned you upgraded so it was working before, I suppose. What version was that?",
                "time": "2020-04-08 16:07:45",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5e8df7231aaf8e4b8e6ccb40",
                "text": "1.5.2.RELEASE",
                "time": "2020-04-08 16:09:07",
                "index": 7,
                "user": "akhan5"
            },
            {
                "id": "5e8df742c52b6a38abd1f01b",
                "text": "earlier property was  server.contextPath:/eform",
                "time": "2020-04-08 16:09:38",
                "index": 8,
                "user": "akhan5"
            },
            {
                "id": "5e8df7685d148a0460f2a040",
                "text": "OK so you\u2019ve changed the property. If you have a small sample that shows the problem we can have a look. If you\u2019re using yaml, make sure stuff is indentend properly.",
                "time": "2020-04-08 16:10:16",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5e8df78c38198d56a18c8821",
                "text": "but now for spring boot 2.2.5 I have tried to use\nserver:\n   servlet:\n     context-path: /eform\n\nhere I am not getting any error but context path is not getting changed it is  root only",
                "time": "2020-04-08 16:10:52",
                "index": 10,
                "user": "akhan5"
            },
            {
                "id": "5e8df8a31aaf8e4b8e6cd058",
                "text": "Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'server.contextPath' in value \"${server.contextPat}\"\nat\norg.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~ [ spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]",
                "time": "2020-04-08 16:15:31",
                "index": 11,
                "user": "akhan5"
            },
            {
                "id": "5e8df8da5d148a0460f2a3eb",
                "text": "@snicoll when I am adding server.servlet.context-path:/eform in yml format ",
                "time": "2020-04-08 16:16:26",
                "index": 12,
                "user": "akhan5"
            },
            {
                "id": "5e8df8dc3a85536c43184e05",
                "text": "I got above error",
                "time": "2020-04-08 16:16:28",
                "index": 13,
                "user": "akhan5"
            },
            {
                "id": "5e8df983fea5216d696733fd",
                "text": "now I understood @snicoll  thanks for the help",
                "time": "2020-04-08 16:19:15",
                "index": 14,
                "user": "akhan5"
            },
            {
                "id": "5e8df98438198d56a18c8f33",
                "text": ":)",
                "time": "2020-04-08 16:19:16",
                "index": 15,
                "user": "akhan5"
            },
            {
                "id": "5e8dfa39f450c25cc8c8bf8e",
                "text": "problem was as I changed my property from server.contextPath to server.servlet.context-path but there was a reference of server.contextPath in my project due to which I was facing problem.\n\nBy the way thanks @snicoll  :)",
                "time": "2020-04-08 16:22:17",
                "index": 16,
                "user": "akhan5"
            }
        ]
    },
    {
        "id": 289,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bce06dfab17df2631d2b6cf",
                "text": "Does the Spring Boot community have any best practices around handling graceful shutdown in Kubernetes environments (e.g., when SIGTERM has been received to immediately take action to have the liveness probe fail so new requests are not sent to the app)? I found some commentary and advice on the web.",
                "time": "2018-10-22 17:20:31",
                "index": 0,
                "user": "scalderwoodsolstice"
            },
            {
                "id": "5bce29d5c08b8b3067572982",
                "text": "@scalderwoodsolstice The approach I have taken, but not directly with actuator health, is to create a Bean of type: `ApplicationListener<ContextClosedEvent>`",
                "time": "2018-10-22 19:49:41",
                "index": 3,
                "user": "devinsba"
            },
            {
                "id": "5bce2a39435c2a518eeb25d2",
                "text": "We toggle out grpc healthcheck here and then sleep to give time for connections to drain, I imagine you could do the same with the actuator healtcheck if you created a `HealthIndicator` bean that you could toggle off if there isn\u2019t a baked in way to manually override it to unhealthy. I don\u2019t know that one",
                "time": "2018-10-22 19:51:21",
                "index": 4,
                "user": "devinsba"
            },
            {
                "id": "5bce3b251c100a4f29c9e571",
                "text": "@devinsba Thanks! That is roughly what we were thinking of doing.",
                "time": "2018-10-22 21:03:33",
                "index": 5,
                "user": "scalderwoodsolstice"
            }
        ]
    },
    {
        "id": 290,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dbedafdfb4dab784a580a1c",
                "text": "Hi all\n\nWhat's the expected behaviour of:\n\n```java\n@Scheduled(cron = \"...\")\n@Scheduled(initialDelayString = \"PT10S\", fixedDelay = Long.MAX_VALUE)\npublic void someTask() {}\n```\n\nWhat would happen if the first scheduled run (`@Scheduled(initialDelayString = \"PT10S\", fixedDelay = Long.MAX_VALUE)`) is not finished and the current time kicks of the second one (`@Scheduled(cron = \"...\")`)? Would two concurrent executions occur or would the other one wait for the first run to finish?",
                "time": "2019-11-03 13:49:49",
                "index": 0,
                "user": "behrangsa"
            },
            {
                "id": "5dc0e02a3d669b28a03879f6",
                "text": "@behrangsa https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/Scheduled.html",
                "time": "2019-11-05 02:36:26",
                "index": 11,
                "user": "timbotetsu_twitter"
            }
        ]
    },
    {
        "id": 291,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bb49c0f1e23486b937fb2aa",
                "text": "Hello, I am working on a spring boot service (latest version 2.0.5) but somehow I get a warning about multiple JsonObject\u2019s on the classpath. This is also described in this issue (https://github.com/spring-projects/spring-boot/issues/9630). How come this is not solved yet? how can I solve it without any exclusion? It is coming from a vaadin dependency that I dont want anyway and I really don\u2019t see why it should be used in spring-boot-starter-test",
                "time": "2018-10-03 10:38:07",
                "index": 0,
                "user": "PaulienVa"
            },
            {
                "id": "5bb4a828bbdc0b2505dc90fc",
                "text": "@PaulienVa I am not sure what you mean by \u201csolved yet\u201d. The warning is there to indicate that you have multiple org.json implementation on the classpath that could include an API variants and an issue at runtime",
                "time": "2018-10-03 11:29:44",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5bb4a8cc435c2a518e45aadf",
                "text": "The starter brings `jsonassert` that uses a json library. Vaadin uses a different implementation. To fix the warning, exclude `org.skyscreamer:jsonassert` from the test starter",
                "time": "2018-10-03 11:32:28",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bb4bd6bc7bf7c3662ace711",
                "text": "@snicoll don\u2019t you think it is weard that org:skyscreamer uses a vaadin dependency ? \n```\n[INFO] |  +- org.skyscreamer:jsonassert:jar:1.5.0:test\n[INFO] |  |  \\- com.vaadin.external.google:android-json:jar:0.0.20131108.vaadin1:test\n```",
                "time": "2018-10-03 13:00:27",
                "index": 11,
                "user": "PaulienVa"
            }
        ]
    },
    {
        "id": 292,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c6ff781ddaa310c89d22470",
                "text": "Hi folks,\nWould it by possible to provide a new FailureAnalyzer when CommonsFileUpload is on the classpath and `spring.servlet.multipart.enabled=false` is not set? thx",
                "time": "2019-02-22 13:22:09",
                "index": 0,
                "user": "ask4gilles"
            },
            {
                "id": "5c70fc4fab952d308578f82d",
                "text": "@ask4gilles a failure analyzer for that sounds funky to me (at least what I understood). If you think this should be an interesting addition, please use the issue tracker and provide a bit more details. Thank you.",
                "time": "2019-02-23 07:54:55",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5c715587e5eeec0d9bb2eebe",
                "text": "@snicoll maybe it\u2019s not the best option. The thing is that if you configure a CommonsFileUpload bean but forget to set the mentioned flag, you get a stacktrace saying that file is missing while trying to upload a document. Maybe sb should prevent the application to start and mention the missing flag?",
                "time": "2019-02-23 14:15:35",
                "index": 14,
                "user": "ask4gilles"
            },
            {
                "id": "5c7251bcddaa310c89e08092",
                "text": "@ask4gilles creating your own bean and \u201cgetting a stracktrace because you forgot to set a property\u201d doesn\u2019t sound right. I\u2019d like to see this in action (i.e a sample we can run ourselves)",
                "time": "2019-02-24 08:11:40",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5c7260efc82c68509e298b95",
                "text": "@snicoll https://github.com/spring-projects/spring-boot/issues/16025",
                "time": "2019-02-24 09:16:31",
                "index": 22,
                "user": "ask4gilles"
            }
        ]
    },
    {
        "id": 293,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e959132d021c45cc7e5d679",
                "text": "Hi, I am using spring boot 2.3.0-M4 and noticed that schema.sql in src/main/resources is not run at startup. I am using `spring-boot-starter-data-r2dbc` from `start.spring.io`",
                "time": "2020-04-14 10:32:18",
                "index": 0,
                "user": "premanandc"
            },
            {
                "id": "5e95913f5b98016d6a35895a",
                "text": "Is this a conscious decision?",
                "time": "2020-04-14 10:32:31",
                "index": 1,
                "user": "premanandc"
            },
            {
                "id": "5e9593e91aaf8e4b8e80b2e5",
                "text": "Hi @premanandc , I've noticed that too (but I'm using the latest stable `2.2.6.RELEASE` Spring Boot Webflux version with `org.springframework.data:spring-data-r2dbc:1.0.0.RELEASE` and `io.r2dbc:r2dbc-h2:0.8.3.RELEASE`), so I'm loading this file myself at startup.",
                "time": "2020-04-14 10:43:53",
                "index": 2,
                "user": "eau-de-la-seine"
            },
            {
                "id": "5e95cef2d28abb5af5f1fda3",
                "text": "@premanandc There\u2019s a discusson on R2DBC and `schema.sql` in this issue: https://github.com/spring-projects/spring-boot/issues/20524\n\nand info in the reference docs here: https://docs.spring.io/spring-boot/docs/2.3.0.M4/reference/htmlsingle/#howto-initialize-a-database-using-r2dc",
                "time": "2020-04-14 14:55:46",
                "index": 4,
                "user": "scottfrederick"
            }
        ]
    },
    {
        "id": 294,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dc40a092f8a0343575056fa",
                "text": "hello, I have a question regarding gzip request decompression\nI'm using Spring Boot 2.2.0.RELEASE and jetty\nfor a controller method\n```\n @PostMapping(\"/message\")\n    public String message(@RequestBody String event) {\n```\nI can't seem to get jetty to decompress the request body\nI've registered GzipHandler with JettyServerCustomizer but I'm unable to get this to work, any hints?",
                "time": "2019-11-07 12:11:53",
                "index": 0,
                "user": "lpandzic"
            },
            {
                "id": "5dc41740ef84ab37861137c4",
                "text": "@lpandzic The first thing that I would check is that the handler is being called when you make a request",
                "time": "2019-11-07 13:08:16",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5dc41775a03ae1584f838b6f",
                "text": "You could use a debugger with a breakpoint on `org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)`, or you could enable debug logging with `logging.level.org.eclipse.jetty.server.handler.gzip=debug`",
                "time": "2019-11-07 13:09:09",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 295,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d3f2174bdfdb22bbb67cd2a",
                "text": "How Does Spring @Transactional Really Work?",
                "time": "2019-07-29 16:40:20",
                "index": 0,
                "user": "pkalushe_gitlab"
            },
            {
                "id": "5d3feab6a9200c242821e729",
                "text": "@pkalushe_gitlab There is a great article about that on [dzone](https://dzone.com/articles/how-does-spring-transactional).",
                "time": "2019-07-30 06:59:02",
                "index": 2,
                "user": "tomicarsk6"
            },
            {
                "id": "5d3feaf1c356af25e053490c",
                "text": "thanks",
                "time": "2019-07-30 07:00:01",
                "index": 3,
                "user": "pkalushe_gitlab"
            },
            {
                "id": "5d3feb4da9200c242821ec44",
                "text": "@tomicarsk6  Thanks",
                "time": "2019-07-30 07:01:33",
                "index": 4,
                "user": "pkalushe_gitlab"
            }
        ]
    },
    {
        "id": 296,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ba732840cfe7f30f1d5c56f",
                "text": "Hi All, can some please help on creating microservice without using database, I am storing in file but the issue i am facing is, on every request the data is getting overridden but I want to append to the file",
                "time": "2018-09-23 06:28:20",
                "index": 0,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            },
            {
                "id": "5ba7451ef7e1580625109538",
                "text": "Hi @Ravattailor, maybe you are creating a new instance of file in every service call. Can you share link",
                "time": "2018-09-23 07:47:42",
                "index": 2,
                "user": "ankeshKapil"
            },
            {
                "id": "5ba745df1043315947d1545e",
                "text": "@ankeshKapil above is my service code",
                "time": "2018-09-23 07:50:55",
                "index": 5,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            },
            {
                "id": "5ba747055df5194734fe3e3e",
                "text": "@Ravattailor have a look at this thread https://stackoverflow.com/q/3741564/5105569",
                "time": "2018-09-23 07:55:49",
                "index": 6,
                "user": "ankeshKapil"
            },
            {
                "id": "5ba74846b9531f2dfaaa0e55",
                "text": "@ankeshKapil Thanks Alot!",
                "time": "2018-09-23 08:01:10",
                "index": 7,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            }
        ]
    },
    {
        "id": 297,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c5d5208126af75deb6ecbc7",
                "text": "Hello all\nI have a `@RequestBody`which contains an `Integer`.  The `Integer` has the following validation`Digits(integer = 2, fraction = 0)`. The behaviour I'm seeing isn't as I expected. If I send a request with a fractional part (i.e. `\"myInteger\": 1.99`), instead or a `400` response, the fraction part is simply ignored. If I send the request as a `String` (i.e. `\"myInteger\": \"1.99\"`) then I get a `400` response with a `not a valid Integer value`.  How can I get the `not a valid Integer value` response for the first request?",
                "time": "2019-02-08 09:55:20",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5c5d6de9253c2b5ea3d90379",
                "text": "@mplanchant I suspect that `not a valid Integer value` is coming from the String to Integer conversion process. When you send a numeric value, no conversion is necessary and I would guess that Jackson just rounds the number or throws away the digits after the decimal point. Bean Validation works after the value has been set. If your field is typed as an `Integer`, validation of the `fraction` attribute is impossible as any fraction has already been lost by the time the field's value has been set.",
                "time": "2019-02-08 11:54:17",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c5d6e12253c2b5ea3d9040e",
                "text": "@wilkinsona just worked this out. Needed to set jackson option `accept_float_as_int: false`",
                "time": "2019-02-08 11:54:58",
                "index": 5,
                "user": "mplanchant"
            },
            {
                "id": "5c5d6e51253c2b5ea3d9062c",
                "text": "@wilkinsona Yeah, that makes sense with regards to the fraction being lost by the time it comes to the validation",
                "time": "2019-02-08 11:56:01",
                "index": 6,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 298,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e1610320ba7b60f2045aa3e",
                "text": "Hi! I'm a newbie here.\nHow do I call my custom class and make it to run first before any other auto-config being run?\nUsecase: I have some evn variable to read and parse and create my own properties, so the created properties can be used in application.properties \n",
                "time": "2020-01-08 17:24:02",
                "index": 0,
                "user": "mohanraj-nagasamy"
            },
            {
                "id": "5e16169ce0f13b70c95356ec",
                "text": "@mohanraj-nagasamy look into Spring application lifecycle events: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-application-events-and-listeners",
                "time": "2020-01-08 17:51:24",
                "index": 2,
                "user": "AlexCzar"
            },
            {
                "id": "5e1627cc810a1042cb886564",
                "text": "@AlexCzar  That works for me. Thanks!",
                "time": "2020-01-08 19:04:44",
                "index": 3,
                "user": "mohanraj-nagasamy"
            },
            {
                "id": "5e162e31e52f635378a82514",
                "text": "Im interested in ApplicationEnvironmentPreparedEvent event. But the event is not getting called\n\nThis is the code:\n```\n@Component\npublic class TestEvent implements ApplicationListener<ApplicationEnvironmentPreparedEvent> {\n    @Override\n    public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {\n        System.out.println(\"TestEvent.onApplicationEvent\");\n    }\n}\n\n```",
                "time": "2020-01-08 19:32:01",
                "index": 4,
                "user": "mohanraj-nagasamy"
            },
            {
                "id": "5e162ef30ba7b60f20467ba5",
                "text": "Im using boot `2.2.2` - Am I missing something?",
                "time": "2020-01-08 19:35:15",
                "index": 5,
                "user": "mohanraj-nagasamy"
            },
            {
                "id": "5e162fc2775e3b551027a462",
                "text": "@mohanraj-nagasamy How are you registering the listener? ",
                "time": "2020-01-08 19:38:42",
                "index": 6,
                "user": "scottfrederick"
            },
            {
                "id": "5e163006f0cf294b19a36bbb",
                "text": "from the docs link above, `Some events are actually triggered before the ApplicationContext is created, so you cannot register a listener on those as a @Bean.`. The `ApplicationEnvironmentPreparedEvent` is one of those. ",
                "time": "2020-01-08 19:39:50",
                "index": 7,
                "user": "scottfrederick"
            },
            {
                "id": "5e16388491129970ca91ab0e",
                "text": "Its working after adding to `spring.factories`. Thanks @scottfrederick ",
                "time": "2020-01-08 20:16:04",
                "index": 8,
                "user": "mohanraj-nagasamy"
            }
        ]
    },
    {
        "id": 299,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ba39a44e5c2cc56adb9aa55",
                "text": "I have added\n```\nbootJar {\n\tdependsOn asciidoctor\n\tfrom (\"${asciidoctor.outputDir}/html5\") {\n\t\tinto 'static/docs'\n\t}\t\n\tlaunchScript()\n}\n```\n```\n$ jar tf web/build/libs/web-0.0.1-SNAPSHOT.jar | grep static\nstatic/\nstatic/docs/\nstatic/docs/index.html\n```\nbut  I can't access it through `http://localhost:8080/docs/index.html` when running locally; any ideas what I'm doing wrong?",
                "time": "2018-09-20 13:01:56",
                "index": 0,
                "user": "delor"
            },
            {
                "id": "5ba39c6633da0f649e2973ca",
                "text": "@delor I\u2019ve only ever deployed that generated html separately; is it supposed to route it automatically on your service?",
                "time": "2018-09-20 13:11:02",
                "index": 1,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5ba39cad913ba7799b1a9afb",
                "text": "yes, according  to https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-spring-mvc-static-content",
                "time": "2018-09-20 13:12:13",
                "index": 2,
                "user": "delor"
            },
            {
                "id": "5ba39cc57dca3065032ba3bb",
                "text": "I'm using spring restdocs to generate that index.html",
                "time": "2018-09-20 13:12:37",
                "index": 3,
                "user": "delor"
            },
            {
                "id": "5ba39f84b4990c30eee278db",
                "text": "ah, ok. just static serving. in your startup std out, do you see it add that route on `/index.html`? Should be around all the other `Mapped \u201c{\u2026.}\u201d` entries",
                "time": "2018-09-20 13:24:20",
                "index": 4,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5ba39fed1ee2ca65024449cc",
                "text": "nope",
                "time": "2018-09-20 13:26:05",
                "index": 5,
                "user": "delor"
            },
            {
                "id": "5ba3a0111ee2ca6502444a6d",
                "text": "`Adding welcome page: ServletContext resource [/index.html]` is what I see if i\u2019ve got an index.html file in /static",
                "time": "2018-09-20 13:26:41",
                "index": 6,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5ba3a0331043315947bca03d",
                "text": "so yeah, looks like your /static dir isn\u2019t getting picked up automatically for dispatch",
                "time": "2018-09-20 13:27:15",
                "index": 7,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5ba3a085f7e1580625fbf78b",
                "text": "I get that msg, well a bit diff `Adding welcome page: class path resource [public/index.html]`",
                "time": "2018-09-20 13:28:37",
                "index": 8,
                "user": "delor"
            },
            {
                "id": "5ba3a0a333da0f649e298ab6",
                "text": "That\u2019s just for the resolution of `/` ",
                "time": "2018-09-20 13:29:07",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5ba3a10c0cfe7f30f1c15c0e",
                "text": "that's b/c I have `web/src/main/resources/public/index.html` for tests",
                "time": "2018-09-20 13:30:52",
                "index": 10,
                "user": "delor"
            },
            {
                "id": "5ba3a13a1043315947bca5dc",
                "text": "```\njar tf web/build/libs/web-0.0.1-SNAPSHOT.jar | grep index\nBOOT-INF/classes/public/index.html\nstatic/docs/index.html\n```",
                "time": "2018-09-20 13:31:38",
                "index": 11,
                "user": "delor"
            },
            {
                "id": "5ba3a2c3f7e1580625fc06b7",
                "text": "I have tried to hack it with\n```\nbootJar {\n\tdependsOn asciidoctor\n\tfrom (\"${asciidoctor.outputDir}/html5\") {\n\t\tinto 'BOOT-INF/classes/public'\n\t}\t\n\tlaunchScript()\n}\n```\nbut it doesn't bind to http://localhost:8080/ or http://localhost:8080/index.html",
                "time": "2018-09-20 13:38:11",
                "index": 12,
                "user": "delor"
            }
        ]
    },
    {
        "id": 300,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5f1b1db725cae90e6d7b5a36",
                "text": "Can someone point me to a release calendar, if one is there, for Spring Boot?  We had upgraded to Spring Boot 2.3.1 (from 2.1.x), but  this issue https://github.com/spring-projects/spring-boot/issues/22080 forced us to revert. I am particularly interested in finding out when 2.3.2 would be released. Thank you!",
                "time": "2020-07-24 17:43:19",
                "index": 0,
                "user": "alotia"
            },
            {
                "id": "5f1b364db1409c060f7fd040",
                "text": "@alotia It's all on the milestone page on GitHub: https://github.com/spring-projects/spring-boot/milestones. 2.3.2 is imminent. It's stuck on its way to Maven Central at the moment.",
                "time": "2020-07-24 19:28:13",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5f1b414525cae90e6d7bc819",
                "text": "@wilkinsona  Thank you! Appreciate the link.",
                "time": "2020-07-24 20:15:01",
                "index": 5,
                "user": "alotia"
            }
        ]
    },
    {
        "id": 301,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8f768758a3797aa3059d41",
                "text": "hey I was wondering if someone that is more intimately familiar with Spring/Spring Boot than I am can provide me with some guidance on web sockets?",
                "time": "2018-09-05 06:24:07",
                "index": 0,
                "user": "onlysolace"
            },
            {
                "id": "5b8f7723c2bd5d117a1fbbe8",
                "text": "I noticed that in the latest version of Spring Messaging (5.1.0.RC2), the message broker registry class - https://docs.spring.io/spring/docs/5.1.0.RC2/javadoc-api/org/springframework/messaging/simp/config/MessageBrokerRegistry.html",
                "time": "2018-09-05 06:26:43",
                "index": 1,
                "user": "onlysolace"
            },
            {
                "id": "5b8f773ef86b741b050fc780",
                "text": "received a new method called \"setPreservePublishOrder\" ",
                "time": "2018-09-05 06:27:10",
                "index": 2,
                "user": "onlysolace"
            },
            {
                "id": "5b8f776260f9ee7aa4dd85d0",
                "text": "when toggled to true, clients should be able to receive websocket messages in the order in which they were published ",
                "time": "2018-09-05 06:27:46",
                "index": 3,
                "user": "onlysolace"
            },
            {
                "id": "5b8f778a60f9ee7aa4dd86b2",
                "text": "however, there is a paragraph in the spring docs about this that says ",
                "time": "2018-09-05 06:28:26",
                "index": 4,
                "user": "onlysolace"
            },
            {
                "id": "5b8f7792ac25fd11b5e24969",
                "text": "\"When the flag is set, messages within the same client session are published to the \"clientOutboundChannel\" one at a time, so that the order of publication is guaranteed. Note that this incurs a small performance overhead, so enable it only if required.\"",
                "time": "2018-09-05 06:28:34",
                "index": 5,
                "user": "onlysolace"
            },
            {
                "id": "5b8f77e2f86b741b050fcb06",
                "text": "I was wondering if anyone could elaborate on what \"small performance overhead\" means? Should we avoid it if we need a single-server app to scale to thousands of users?",
                "time": "2018-09-05 06:29:54",
                "index": 6,
                "user": "onlysolace"
            },
            {
                "id": "5b8f77ee4be56c5918e440cc",
                "text": "are all messages processed within a single thread with this flag enabled?",
                "time": "2018-09-05 06:30:06",
                "index": 7,
                "user": "onlysolace"
            },
            {
                "id": "5b8f8c4d58a3797aa3062535",
                "text": "@onlysolace the question is: do you need to preserve the order of messages as a strong guarantee for your application? If not, don't use that feature as you'll pay a performance penalty for no good reason. It's difficult to put hard numbers on this, since it depends on the nature of your application, volume of messages, bursts, etc.\nBy default (as the Javadoc says), messages are sent by a `ThreadPoolExecutor`; that option just ensures that they're being sent one at a time. So you'll pay the synchronization price (it's using a `AtomicBoolean` for that) and your message throughput might be not as good as before.",
                "time": "2018-09-05 07:57:01",
                "index": 30,
                "user": "bclozel"
            },
            {
                "id": "5b8fefcbf86b741b0512e78b",
                "text": "@bclozel the application needs to have ordering. But I could work around it by avoiding single-element mutations and just replacing entire lists / objects that always reflect the latest state of the collection",
                "time": "2018-09-05 15:01:31",
                "index": 41,
                "user": "onlysolace"
            },
            {
                "id": "5b8ff0124be56c5918e769e3",
                "text": "@onlysolace then your best bet is to benchmark a bit this feature; if the message throughput is not too high, it might make no difference at all to your service",
                "time": "2018-09-05 15:02:42",
                "index": 42,
                "user": "bclozel"
            },
            {
                "id": "5b8ff1d4e5b40332ab4ba32b",
                "text": "@bclozel I\u2019ll try it out. Thanks for your help!",
                "time": "2018-09-05 15:10:12",
                "index": 43,
                "user": "onlysolace"
            },
            {
                "id": "5b8ff1e794f8164c17e08b80",
                "text": "@onlysolace let us know how it goes!",
                "time": "2018-09-05 15:10:31",
                "index": 44,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 302,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bd06617ab17df2631e2020f",
                "text": "Hi guys, before creating an issue wanted to ask if anyone else has a problem changing the `server.port` property when using spring boot 2.0.6 with webflux? It seems to always fall back to `8080`...",
                "time": "2018-10-24 12:31:19",
                "index": 0,
                "user": "sbuettner"
            },
            {
                "id": "5bd066cf64cfc273f919c8ad",
                "text": "Seems to work with a brand new project from start.spring.io",
                "time": "2018-10-24 12:34:23",
                "index": 1,
                "user": "sbuettner"
            },
            {
                "id": "5bd06913ae7be94016aad478",
                "text": "@sbuettner I'm not aware of such an issue; if you can come up with a small repro project that shows this problem, please open a new issue on our tracker.",
                "time": "2018-10-24 12:44:03",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5bd0696864cfc273f919dd3b",
                "text": "@bclozel Looks like its related to the import of `org.springframework.cloud:spring-cloud-dependencies`",
                "time": "2018-10-24 12:45:28",
                "index": 3,
                "user": "sbuettner"
            },
            {
                "id": "5bd069a282893a2f3b315c93",
                "text": "Maybe one of them is bringing Spring MVC transitively and this turns your app into a Spring MVC one. Although the `server.port` config property should work in both cases.",
                "time": "2018-10-24 12:46:26",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5bd06a1a1c100a4f29d7ed30",
                "text": "Thx, will take a look.",
                "time": "2018-10-24 12:48:26",
                "index": 5,
                "user": "sbuettner"
            }
        ]
    },
    {
        "id": 303,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5c90ba8249fdaa0d81dc69b5",
                "text": "I have a trivial documentation fix for the Spring Boot Reference Implementation page [46.3 Testing Spring Boot Applications](https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/htmlsingle/) - should be ... `@ExtendWith(SpringExtension**.class**)` instead of `@ExtendWith(SpringExtension)`; maybe someone can pick this up because official contribution effort would be a bit  overdone",
                "time": "2019-03-19 09:46:42",
                "index": 0,
                "user": "FrVaBe"
            },
            {
                "id": "5c90cd57fa5b721a1fb41440",
                "text": "@FrVaBe thanks, that seems already fixed",
                "time": "2019-03-19 11:07:03",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5c90cd89dfc69a1454bc0d22",
                "text": "https://docs.spring.io/spring-boot/docs/2.1.x-SNAPSHOT/reference/htmlsingle/#boot-features-testing-spring-boot-applications",
                "time": "2019-03-19 11:07:53",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c90cfd10d719050572d32b8",
                "text": "@snicoll :thumbsup:",
                "time": "2019-03-19 11:17:37",
                "index": 3,
                "user": "FrVaBe"
            }
        ]
    },
    {
        "id": 304,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ede158c4c9b0f060d5010c5",
                "text": "Hi there! Is there a way to apply a `WebClientCustomizer` only selectively, maybe using a `Qualifier`?",
                "time": "2020-06-08 10:40:12",
                "index": 0,
                "user": "ginkel"
            },
            {
                "id": "5ede18437f08394226d3cab2",
                "text": "@ginkel what do you mean by selectively? On what information you'd like to rely on to make that decision?",
                "time": "2020-06-08 10:51:47",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5ede1b14ff7a920a723c5906",
                "text": "@bclozel I'd like to have a `WebClient` that adds an `Authorization: Bearer` token header to be used for connections to certain destinations. For other destinations, no bearer token should be added. My idea was to habe two differently configured `WebClient.Builder` instances, which I'd distinguish using a `Qualifier`. That would, however, require the ability to selectively apply the `WebClientCustomizer`",
                "time": "2020-06-08 11:03:48",
                "index": 2,
                "user": "ginkel"
            },
            {
                "id": "5ede1b5c7f08394226d3d2fd",
                "text": "After looking at `org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration`, it seems though, that all customizers are applied unconditionally during autoconfiguration",
                "time": "2020-06-08 11:05:00",
                "index": 3,
                "user": "ginkel"
            },
            {
                "id": "5ede1b95ff7a920a723c5b8a",
                "text": "I can manually do, what the customizer is doing, though",
                "time": "2020-06-08 11:05:57",
                "index": 4,
                "user": "ginkel"
            },
            {
                "id": "5ede2229ff7a920a723c6cd8",
                "text": "@ginkel You could apply inside the customizer itself a filter that only adds that header for the configured destinations - the customizer is applied to all webclients.\nYou could also locally apply that customizer in the component itself, right before building the client. This is more dangerous, since developers could copy/paste that block and apply the customizer to another webclient instance and leak credentials.",
                "time": "2020-06-08 11:34:01",
                "index": 5,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 305,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5cbec7cc4b4cb471d941bb4d",
                "text": "Hi. The spring boot maven plugin moves the launcher into the root of my war file, which results in it being served from tomcat. Is that how it should be?",
                "time": "2019-04-23 08:07:40",
                "index": 0,
                "user": "gpsfl"
            },
            {
                "id": "5cbeeb3b375bac7470ef849f",
                "text": "@gpsfl The launcher has to be in the root of the war file. In the embedded case we prevent the launcher from being served but that's not possible when you deploy the war to a container. If you'd like to stop it from happening your best option is to build a normal war file that does not include the launcher.",
                "time": "2019-04-23 10:38:51",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5cbef6ae1cd0b8307d5ba12a",
                "text": "Well if I manually move the launcher into web-inf/classes it also works fine",
                "time": "2019-04-23 11:27:42",
                "index": 5,
                "user": "gpsfl"
            },
            {
                "id": "5cbef6bc3d78aa6c037eb2ca",
                "text": "What about just doing that automatically?",
                "time": "2019-04-23 11:27:56",
                "index": 6,
                "user": "gpsfl"
            },
            {
                "id": "5cbf2f735b3f941aa57c16bf",
                "text": "@gpsfl It'll work fine when deployed to Tomcat but will not work if you try to launch the war file with `java -jar`",
                "time": "2019-04-23 15:29:55",
                "index": 12,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 306,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c93ddc93dd81711492be1f8",
                "text": "Can some one help me solving this? ",
                "time": "2019-03-21 18:54:01",
                "index": 0,
                "user": "prakhar79"
            },
            {
                "id": "5c93ddcb5547f7744841cbe3",
                "text": "{\"timestamp\":\"2019-03-21T18:35:09.020+0000\",\"status\":500,\"error\":\"Internal Server Error\",\"message\":\"Failed to parse multipart servlet request; nested exception is java.io.IOException: org.apache.tomcat.util.http.fileupload.FileUploadBase$IOFileUploadException: Processing of multipart/form-data request failed. /tmp/tomcat.6803989657576238606.8080/work/Tomcat/localhost/ROOT/upload_c50f2ff3_d683_4cb6_b59b_779b6b40d440_00008620.tmp (Read-only file system)\",\"path\":\"/sav-scan\"}",
                "time": "2019-03-21 18:54:03",
                "index": 1,
                "user": "prakhar79"
            },
            {
                "id": "5c93dde6fcaf7b5f73f0fc9e",
                "text": "I am getting this error while working with multipart upload. ",
                "time": "2019-03-21 18:54:30",
                "index": 2,
                "user": "prakhar79"
            },
            {
                "id": "5c93f4c20d71905057429b0e",
                "text": "@prakhar79  \"Read-only file system\" seems to hint that the application is unable to write data. My guess is systemd and some wonky configuration in how the application is started.",
                "time": "2019-03-21 20:32:02",
                "index": 3,
                "user": "magnusp"
            },
            {
                "id": "5c93f5570d71905057429e7f",
                "text": "@magnusp  I am using dockerized environment to run this application.",
                "time": "2019-03-21 20:34:31",
                "index": 4,
                "user": "prakhar79"
            },
            {
                "id": "5c93f57b8126720abc1f55c5",
                "text": "I am sung default configuration to run this. ",
                "time": "2019-03-21 20:35:07",
                "index": 5,
                "user": "prakhar79"
            }
        ]
    },
    {
        "id": 307,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ee7f4992cf2f36eae60128a",
                "text": "I am having an issue with Json Date serialization in a simple REST Controller since updating to SB 2.3 as it looks like the default value of spring.jackson.date-format has changed from yyyy-MM-dd'T'HH:mm:ss.SSSZ to yyyy-MM-dd'T'HH:mm:ss.SSSXXX is this documented anywhere?",
                "time": "2020-06-15 22:22:17",
                "index": 0,
                "user": "mteodori"
            },
            {
                "id": "5ee8658a7c64f31f116335fd",
                "text": "https://medium.com/@anurag.dhunna/rest-api-exception-handling-in-spring-boot-d6b3272e7e21",
                "time": "2020-06-16 06:24:10",
                "index": 20,
                "user": "anuragdhunna"
            },
            {
                "id": "5ee870c51e099b0388cc0f11",
                "text": "@mteodori I don't believe we've changed the default, we should just pick up Jackson's. AFAIK, it hasn't changed either. If you don't configure a format it should use `StdDateFormat` which, assuming the javadoc is accurate, uses `yyyy-MM-dd'T'HH:mm:ss.SSSZ`: https://github.com/FasterXML/jackson-databind/blame/0a17f87abbf62e1afd62d26c40b4d17718674438/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java#L17",
                "time": "2020-06-16 07:12:05",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5ee889e0013105125a3a684e",
                "text": "Thanks @wilkinsona it's actually a change in Jackson done with 2.11 https://github.com/FasterXML/jackson-databind/issues/2643",
                "time": "2020-06-16 08:59:12",
                "index": 22,
                "user": "mteodori"
            },
            {
                "id": "5ee88b9649260560aa637d30",
                "text": "Ah, so Jackson has changed its default. Thanks for tracking that down.",
                "time": "2020-06-16 09:06:30",
                "index": 23,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 308,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d48805ca96def4751c2c326",
                "text": "Hey guys, I have a situation. I have written an Aspect in Springboot which works good on a normal function. But there are some functions which are called within a CompletableFuture.supplyAsync like below. \n```\nCompletableFuture.supplyAsync(()-> this.doSomething());\n```\nThe annotation is on the method ```doSomething()```  But the aspect is not invoked at all. ",
                "time": "2019-08-05 19:15:40",
                "index": 0,
                "user": "prabhatcraz"
            },
            {
                "id": "5d4880b67a151629e12c6060",
                "text": "@prabhatcraz it's because of the \"this\". If you call a method from within the class itself, AOP won't be of effect",
                "time": "2019-08-05 19:17:10",
                "index": 1,
                "user": "vanseverk"
            },
            {
                "id": "5d4880d6ee80d76164f422e3",
                "text": "It's basically because of how AOP works through proxying in the Spring Frameworkproxying works",
                "time": "2019-08-05 19:17:42",
                "index": 2,
                "user": "vanseverk"
            },
            {
                "id": "5d4880f3a96def4751c2c8e1",
                "text": "so, if I move ```doSomething``` to a different class, it would work fine ?",
                "time": "2019-08-05 19:18:11",
                "index": 3,
                "user": "prabhatcraz"
            },
            {
                "id": "5d4880f526e273244620acab",
                "text": "My suggestion would be putting the `doSomething()` method in another bean, inject the bean, then try calling the method",
                "time": "2019-08-05 19:18:13",
                "index": 4,
                "user": "vanseverk"
            },
            {
                "id": "5d488106d7fc95475005cb93",
                "text": "It should, yes.",
                "time": "2019-08-05 19:18:30",
                "index": 5,
                "user": "vanseverk"
            },
            {
                "id": "5d488106757b7b19c85efc54",
                "text": "I see, Thanks @vanseverk I will give your suggestion a try",
                "time": "2019-08-05 19:18:30",
                "index": 6,
                "user": "prabhatcraz"
            },
            {
                "id": "5d48812aa96def4751c2c9c7",
                "text": "https://www.baeldung.com/wp-content/uploads/2017/10/springaop-process-1024x504.png",
                "time": "2019-08-05 19:19:06",
                "index": 7,
                "user": "vanseverk"
            },
            {
                "id": "5d4881347c8774616519ef5b",
                "text": "I suggest taking a look at that picture, maybe it offers some clarity on the proxying",
                "time": "2019-08-05 19:19:16",
                "index": 8,
                "user": "vanseverk"
            },
            {
                "id": "5d48817bff59f961b41e7881",
                "text": "If you have something calling the Spring Proxy from outside (left side of the picture), the proxy will guide it through the aspect, then to the TargetObjectImpl. But if you call something from the TargetObjectImpl to the TargetObjectImpl itself, you don't pass the Aspect",
                "time": "2019-08-05 19:20:27",
                "index": 9,
                "user": "vanseverk"
            },
            {
                "id": "5d488418d7fc95475005e053",
                "text": "@prabhatcraz does it work now? :)",
                "time": "2019-08-05 19:31:36",
                "index": 10,
                "user": "vanseverk"
            },
            {
                "id": "5d4887d2d7fc95475005f993",
                "text": "@vanseverk hey thanks man, it does work now. Looking at the picture now.",
                "time": "2019-08-05 19:47:30",
                "index": 11,
                "user": "prabhatcraz"
            }
        ]
    },
    {
        "id": 309,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e0b5033fd580457e7a08899",
                "text": "Let's say I have a servlet router setup like this:\n```kotlin\n\n@Bean\nfun personApi() = router {\n    \"/api/person/{personId}\".nest {\n        GET(\"/\", personService::getById)\n        GET(\"/documents\", personService::getDocumentsByPersonId)\n        GET(\"/short-info\", personService::getShrotInfoByPersonId)\n        // ...\n    }\n}\n```\nin all of these handler methods I have to do the same thing: `request.pathVariable(personId).toLong()`\nCan I somehow avoid this repetition? For now I've just written an extension `val ServerRequest.personId: Long get() = pathVariable(\"personId\").toLong()` but I'm still getting \"dirty\" feeling from this.",
                "time": "2019-12-31 13:42:11",
                "index": 0,
                "user": "AlexCzar"
            },
            {
                "id": "5e0b775f8ba16b107cfdb257",
                "text": "what would you like to see happening instead? If you have an idea to improve, feel free to raise a framework issue",
                "time": "2019-12-31 16:29:19",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e0b99f707a1a67d1d8d8b93",
                "text": "Alex, you can attach a handler filter and do all your pre-processing there. The values however need to be passed via request attributes or reactor context",
                "time": "2019-12-31 18:56:55",
                "index": 2,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 310,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce78f2075d9a575a635da2d",
                "text": "how stable is the @Valid feature in spring boot? i\u2019ve been at this for a couple of hours and i get mixed results:\n```\n@NotNull\n\t@Max(10)\n\tprivate String senderBirthDate;\n```\n\nYet i get the following error which in itself is a contradiction:\n> \"defaultMessage\": \"must be less than or equal to 10\",\n            \"objectName\": \u201cMyRequest\",\n            \"field\": \"senderBirthDate\",\n            \"rejectedValue\": \"02/17/1988\",\n            \"bindingFailure\": false,\n            \"code\": \"Max\"",
                "time": "2019-05-24 06:28:48",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce79090ecdf942b4c377d39",
                "text": "@chad_d_stud_twitter what is it supposed to do? You have a String where you put a date in, and it should have a Max value of 10? It's very hard to figure out what you're trying to accomplish there :)",
                "time": "2019-05-24 06:34:56",
                "index": 1,
                "user": "vanseverk"
            },
            {
                "id": "5ce790aed22ba766a2ee1c98",
                "text": "the date has ten characters. it\u2019s complaning it is neither less than 10 or equal to ten",
                "time": "2019-05-24 06:35:26",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce790d4b313d723141c44fb",
                "text": "how can it be that hard to figure out? i enter 10 characters. it rejected 10 characters so it doesn\u2019t make sense",
                "time": "2019-05-24 06:36:04",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce790e163dea422b4d6f239",
                "text": "it doesn\u2019t stop there. i have other fields where the values didn\u2019t violate the validation but it said it did",
                "time": "2019-05-24 06:36:17",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce79100ecdf942b4c377fe9",
                "text": "The `@Max(10)` annotation you use...what is the fully qualified namespace?",
                "time": "2019-05-24 06:36:48",
                "index": 5,
                "user": "vanseverk"
            },
            {
                "id": "5ce7912f83ae782aeebfb562",
                "text": "package javax.validation.constraints;",
                "time": "2019-05-24 06:37:35",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce79151ecdf942b4c378211",
                "text": "Well...then you might want to read what it does, as opposed as what you assumed it does",
                "time": "2019-05-24 06:38:09",
                "index": 7,
                "user": "vanseverk"
            },
            {
                "id": "5ce79152d22ba766a2ee20bc",
                "text": "i have other stuff like \n```\n@Max(35)\nString firstName;\n```\n",
                "time": "2019-05-24 06:38:10",
                "index": 8,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce79157ecdf942b4c378226",
                "text": "https://docs.oracle.com/javaee/7/api/javax/validation/constraints/Max.html",
                "time": "2019-05-24 06:38:15",
                "index": 9,
                "user": "vanseverk"
            },
            {
                "id": "5ce79160879f4478c7d1c823",
                "text": "https://g00glen00b.be/validating-the-input-of-your-rest-api-with-spring/",
                "time": "2019-05-24 06:38:24",
                "index": 10,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce79165d22ba766a2ee20d3",
                "text": "that\u2019s what i followed",
                "time": "2019-05-24 06:38:29",
                "index": 11,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce7918ad22ba766a2ee220f",
                "text": "I believe you want to use `@Size` instead",
                "time": "2019-05-24 06:39:06",
                "index": 12,
                "user": "vanseverk"
            },
            {
                "id": "5ce7919d83ae782aeebfb7be",
                "text": "> /**\n * The annotated element must be a number whose value must be lower or\n * equal to the specified maximum.",
                "time": "2019-05-24 06:39:25",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce791b8ecdf942b4c37852b",
                "text": "i didn\u2019t assume what it does. that\u2019s what the documentation says",
                "time": "2019-05-24 06:39:52",
                "index": 14,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce791c1ef853135c813aa81",
                "text": "Yes. A number. Not a string length.",
                "time": "2019-05-24 06:40:01",
                "index": 15,
                "user": "vanseverk"
            },
            {
                "id": "5ce791d80ac9852a952f651d",
                "text": "oh",
                "time": "2019-05-24 06:40:24",
                "index": 16,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce791df6366992a9410f1a7",
                "text": "So what you're essentially saying is that that the value in the String (as opposed to the String length) is supposed to be less than 10.",
                "time": "2019-05-24 06:40:31",
                "index": 17,
                "user": "vanseverk"
            },
            {
                "id": "5ce7920675d9a575a635ef2b",
                "text": "this is what i get for skimming",
                "time": "2019-05-24 06:41:10",
                "index": 18,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce792107c363c75a733bfc7",
                "text": "https://docs.oracle.com/javaee/7/api/javax/validation/constraints/Size.html",
                "time": "2019-05-24 06:41:20",
                "index": 19,
                "user": "vanseverk"
            },
            {
                "id": "5ce7923613e9854e335975f3",
                "text": "So to answer your question... It's very stable.",
                "time": "2019-05-24 06:41:58",
                "index": 20,
                "user": "vanseverk"
            },
            {
                "id": "5ce792389d64e537bc007839",
                "text": "yeah i did a total refactor",
                "time": "2019-05-24 06:42:00",
                "index": 21,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce7924b6366992a9410f430",
                "text": "that fixed it. thanks",
                "time": "2019-05-24 06:42:19",
                "index": 22,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce7925b9d64e537bc0079ab",
                "text": "You're welcome. Do you now see why it was hard to figure out what your intentions were? ;-)",
                "time": "2019-05-24 06:42:35",
                "index": 23,
                "user": "vanseverk"
            },
            {
                "id": "5ce792a7879f4478c7d1d224",
                "text": "the steps for the tutorial followed the @Size steps. i thought it was a shortcut :D",
                "time": "2019-05-24 06:43:51",
                "index": 24,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce792b4879f4478c7d1d2c6",
                "text": "coz i\u2019m lazy like that",
                "time": "2019-05-24 06:44:04",
                "index": 26,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5ce7997475d9a575a6361bdd",
                "text": "@chad_d_stud_twitter, don't assume. read.",
                "time": "2019-05-24 07:12:52",
                "index": 27,
                "user": "tonisostrat"
            },
            {
                "id": "5ce7a1066366992a94115a36",
                "text": "\"To assume makes an 'ass' of 'u' and 'me'\" :)",
                "time": "2019-05-24 07:45:10",
                "index": 28,
                "user": "vanseverk"
            }
        ]
    },
    {
        "id": 311,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5dc9d6c36ba2347d2d77cc58",
                "text": "Hello, \nthere is interesting sentence in Spring doc: \"For Undertow, Spring WebFlux uses Undertow APIs directly without the Servlet API.\"\nWhere can I found more information WHY Undertow API is better than Servlet 3.1? Does it mean that Webflux with Undertow is better that Webflux  with Tomcat-Servlet 3.1? ",
                "time": "2019-11-11 21:46:43",
                "index": 0,
                "user": "michaldo"
            },
            {
                "id": "5dca6a04e75b2d5a19ba041d",
                "text": "@michaldo I think it was done that way because undertow doesn't support deploying war files directly (you need a Servlet container for that). So you can definitely use our Servlet adapter for deploying apps in wildfly (which is using undertow).\nSo it's not better, it's just the only way. Maybe cutting the Servlet adapter layer improves performance (I'm not sure it is). Now Undertow vs. Tomcat is very subjective as servers made different choices and one might be better than the other depending on your use case and the configuration you're applying to them.",
                "time": "2019-11-12 08:15:00",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5dca7fb568ad1c4a0fb0bd5b",
                "text": "@bclozel thanks for the answer. My next question is about Netty: Is there a difference from developer perspective to have webflux app running Netty vs Tomcat-3.1 servlet? The docs sentence is only: \"(Netty) lets a client and a server share resources\"\nIn past I reported a bug on webflux on Tomcat - it was not possible return http response code 400 when flux is empty (https://github.com/spring-projects/spring-framework/issues/21972). However, it was a bug, not a feature. ",
                "time": "2019-11-12 09:47:33",
                "index": 6,
                "user": "michaldo"
            },
            {
                "id": "5dca92be5eb2e813db0e1239",
                "text": "@michaldo from a developer perspective, with the Spring programming model there is zero difference. Now each server has its own configuration options and behaves differently. We've built common abstractions so that the app doesn't have to know which server it's running on. With Spring Boot, you can switch starters and use another server without changing application code.",
                "time": "2019-11-12 11:08:46",
                "index": 14,
                "user": "bclozel"
            },
            {
                "id": "5dcb39ad68ad1c4a0fb61ad3",
                "text": "@bclozel thanks for answer",
                "time": "2019-11-12 23:01:01",
                "index": 29,
                "user": "michaldo"
            }
        ]
    },
    {
        "id": 312,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d1a57603d12712ce4c6c376",
                "text": "Should I have access to actutator beans in Unit Tests? Using SpringBootTest and SpringRunner. \"Consider defining a bean of type 'org.springframework.boot.actuate.redis.RedisHealthIndicator' in your configuration.\"\n",
                "time": "2019-07-01 18:56:32",
                "index": 0,
                "user": "karlboyle"
            },
            {
                "id": "5d1a5bb4a8b20942babf95c3",
                "text": "Created my own TestConfiguration with a new RedisHealthIndicator() - seems to be fine for my tests at the minute but would of expected it to work without a TestConfiguration. Probably something silly :)",
                "time": "2019-07-01 19:15:00",
                "index": 1,
                "user": "karlboyle"
            },
            {
                "id": "5d1a6db6a8b20942bac040f3",
                "text": "@karlboyle The Redis health indicator isn't a `RedisHealthIndicator`. It's a `CompositeHealthIndicator` so you won't be able to inject it by type",
                "time": "2019-07-01 20:31:50",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 313,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c37a01ab35a0877665fc9e9",
                "text": "How do I go by changing the AuditingHandler.modifyOnCreation property? One way I can think of is by implementing a BeanFactoryPostProcessor listener. Is there any better solution?",
                "time": "2019-01-10 19:42:18",
                "index": 0,
                "user": "NicklasWallgren"
            },
            {
                "id": "5c37a813a57b501bcfe3d87a",
                "text": "@NicklasWallgren you can do that in the `@EnableJpaAuditing` annotation using the `modifyOnCreate` attribute",
                "time": "2019-01-10 20:16:19",
                "index": 18,
                "user": "edeandrea"
            },
            {
                "id": "5c37a8872e25e453d75fa2cc",
                "text": "https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/repository/config/EnableJpaAuditing.html#modifyOnCreate--",
                "time": "2019-01-10 20:18:15",
                "index": 19,
                "user": "edeandrea"
            },
            {
                "id": "5c38369883c7e377654f1da6",
                "text": "@edeandrea Thanks",
                "time": "2019-01-11 06:24:24",
                "index": 28,
                "user": "NicklasWallgren"
            }
        ]
    },
    {
        "id": 314,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bb10baeef4afc4f28fb349f",
                "text": "Is spring-boot fully usable in java 10 or 11?",
                "time": "2018-09-30 17:45:18",
                "index": 0,
                "user": "techzilla"
            },
            {
                "id": "5bb10bd2c7bf7c366296267d",
                "text": "Because no matter how I tried to set it in maven, it would error.",
                "time": "2018-09-30 17:45:54",
                "index": 1,
                "user": "techzilla"
            },
            {
                "id": "5bb10d43271506518d9831ac",
                "text": "@techzilla , I have been using 2.0.4.RELEASE with JDK 10 without any problem",
                "time": "2018-09-30 17:52:03",
                "index": 4,
                "user": "hayaticakici"
            },
            {
                "id": "5bb10d645331811c2e2c1593",
                "text": "How do you have it set up in your pom?",
                "time": "2018-09-30 17:52:36",
                "index": 5,
                "user": "techzilla"
            },
            {
                "id": "5bb10dc5c08b8b3067b13946",
                "text": "[![boot.PNG](https://files.gitter.im/spring-projects/spring-boot/nJ2Y/thumb/boot.png)](https://files.gitter.im/spring-projects/spring-boot/nJ2Y/boot.PNG)",
                "time": "2018-09-30 17:54:13",
                "index": 6,
                "user": "hayaticakici"
            },
            {
                "id": "5bb10de91c100a4f290e8b59",
                "text": "ok... I'm gonna try it without any properties",
                "time": "2018-09-30 17:54:49",
                "index": 7,
                "user": "techzilla"
            },
            {
                "id": "5bb10e15bbdc0b2505c666ed",
                "text": "However, that means you're building with Java 1.6 level language features, doesn't it?",
                "time": "2018-09-30 17:55:33",
                "index": 8,
                "user": "techzilla"
            },
            {
                "id": "5bb10e62ef4afc4f28fb4442",
                "text": "No I am fully on jdk 10 which I specify in my pom ",
                "time": "2018-09-30 17:56:50",
                "index": 9,
                "user": "hayaticakici"
            },
            {
                "id": "5bb10e70c08b8b3067b13c4d",
                "text": "OK.. that's the part I wanted to see.",
                "time": "2018-09-30 17:57:04",
                "index": 10,
                "user": "techzilla"
            },
            {
                "id": "5bb10e73ae7be94016df5aba",
                "text": "[![jdk.PNG](https://files.gitter.im/spring-projects/spring-boot/3fNz/thumb/jdk.png)](https://files.gitter.im/spring-projects/spring-boot/3fNz/jdk.PNG)",
                "time": "2018-09-30 17:57:07",
                "index": 11,
                "user": "hayaticakici"
            },
            {
                "id": "5bb10e8a1e23486b936a071e",
                "text": "Did you also set any properties?",
                "time": "2018-09-30 17:57:30",
                "index": 12,
                "user": "techzilla"
            },
            {
                "id": "5bb10ed8c7bf7c3662963756",
                "text": "yes but just basic information stuff, such that scm, developer names roles etc. nothing related to the spring really",
                "time": "2018-09-30 17:58:48",
                "index": 13,
                "user": "hayaticakici"
            },
            {
                "id": "5bb10ee7a9be136b94d64319",
                "text": "Anything java version related?",
                "time": "2018-09-30 17:59:03",
                "index": 14,
                "user": "techzilla"
            },
            {
                "id": "5bb10eeb6e5a401c2df7852a",
                "text": "or maven build related",
                "time": "2018-09-30 17:59:07",
                "index": 15,
                "user": "techzilla"
            },
            {
                "id": "5bb10eec435c2a518e2fa838",
                "text": "?",
                "time": "2018-09-30 17:59:08",
                "index": 16,
                "user": "techzilla"
            },
            {
                "id": "5bb10f58c7bf7c366296395d",
                "text": "OK, I just got the build go further... let me try out it the way you did",
                "time": "2018-09-30 18:00:56",
                "index": 17,
                "user": "techzilla"
            },
            {
                "id": "5bb10f5fbbdc0b2505c66e24",
                "text": "thanks for all your help, ",
                "time": "2018-09-30 18:01:03",
                "index": 18,
                "user": "techzilla"
            },
            {
                "id": "5bb10f693844923661c4063a",
                "text": "my pleasure.. feel free",
                "time": "2018-09-30 18:01:13",
                "index": 19,
                "user": "hayaticakici"
            },
            {
                "id": "5bb110116e5a401c2df78b32",
                "text": "I get, \"invalid flag: --release\"",
                "time": "2018-09-30 18:04:01",
                "index": 20,
                "user": "techzilla"
            },
            {
                "id": "5bb110441c100a4f290e9b30",
                "text": "what IDE do you use",
                "time": "2018-09-30 18:04:52",
                "index": 21,
                "user": "hayaticakici"
            },
            {
                "id": "5bb1104c5af48530683e855b",
                "text": "no ide, ",
                "time": "2018-09-30 18:05:00",
                "index": 22,
                "user": "techzilla"
            },
            {
                "id": "5bb1104f1c100a4f290e9c05",
                "text": "just cli",
                "time": "2018-09-30 18:05:03",
                "index": 23,
                "user": "techzilla"
            },
            {
                "id": "5bb11053c08b8b3067b146d5",
                "text": "mvn",
                "time": "2018-09-30 18:05:07",
                "index": 24,
                "user": "techzilla"
            },
            {
                "id": "5bb11085271506518d984874",
                "text": "I mean do you use any IDE to develop your code? I did not mean to run mvn commands",
                "time": "2018-09-30 18:05:57",
                "index": 25,
                "user": "hayaticakici"
            },
            {
                "id": "5bb1108f6e5a401c2df78f5a",
                "text": "Just vscode",
                "time": "2018-09-30 18:06:07",
                "index": 26,
                "user": "techzilla"
            },
            {
                "id": "5bb11093bbdc0b2505c6749b",
                "text": "nothing special",
                "time": "2018-09-30 18:06:11",
                "index": 27,
                "user": "techzilla"
            },
            {
                "id": "5bb110995331811c2e2c27d4",
                "text": "the code is basically just blank",
                "time": "2018-09-30 18:06:17",
                "index": 28,
                "user": "techzilla"
            },
            {
                "id": "5bb110a05af48530683e8899",
                "text": "it's a skeleton ",
                "time": "2018-09-30 18:06:24",
                "index": 29,
                "user": "techzilla"
            },
            {
                "id": "5bb110a81c100a4f290e9e1b",
                "text": "with stub",
                "time": "2018-09-30 18:06:32",
                "index": 30,
                "user": "techzilla"
            },
            {
                "id": "5bb110ae1e23486b936a12ba",
                "text": "ahh ok. can you share your whole pom",
                "time": "2018-09-30 18:06:38",
                "index": 31,
                "user": "hayaticakici"
            },
            {
                "id": "5bb110d7c7bf7c36629642c4",
                "text": "`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>biz.uniwear.batch</groupId>\n  <artifactId>cli</artifactId>\n  <version>1.0</version>\n  <packaging>jar</packaging>\n\n  <name>Batch CLI</name>\n  <description>Uniwear Batch CLI</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-parent</artifactId>\n\t<version>2.0.5.RELEASE</version>\n\t<relativePath />\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n  </properties>\n\n\n\t<dependencies>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-jdbc</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.xerial</groupId>\n\t\t\t<artifactId>sqlite-jdbc</artifactId>\n\t\t\t<version>3.23.1</version>\n\t\t</dependency>\n\n\t</dependencies>\n\n\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.7.0</version>\n\t\t\t\t<configuration>\n\t\t\t\t<source>10</source>\n\t\t\t\t<target>10</target>\n\t\t\t\t<release>10</release>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>`\n",
                "time": "2018-09-30 18:07:19",
                "index": 32,
                "user": "techzilla"
            },
            {
                "id": "5bb111c15af48530683e8ee8",
                "text": "I'm on fedora 28, if that is relevent, ",
                "time": "2018-09-30 18:11:13",
                "index": 33,
                "user": "techzilla"
            },
            {
                "id": "5bb111d0c7bf7c36629648e8",
                "text": "try without release tag. remove it from the pom. also I do not see that you define the boot version you wanna use. you can just specify it in the parent tag ",
                "time": "2018-09-30 18:11:28",
                "index": 34,
                "user": "hayaticakici"
            },
            {
                "id": "5bb111e7271506518d9851b1",
                "text": "[![bootV.PNG](https://files.gitter.im/spring-projects/spring-boot/dHzv/thumb/bootV.png)](https://files.gitter.im/spring-projects/spring-boot/dHzv/bootV.PNG)",
                "time": "2018-09-30 18:11:51",
                "index": 36,
                "user": "hayaticakici"
            },
            {
                "id": "5bb111fcbbdc0b2505c67dd0",
                "text": "`<parent>\n<groupId>org.springframework.boot</groupId>\n<artifactId>spring-boot-starter-parent</artifactId>\n<version>2.0.5.RELEASE</version>\n<relativePath />\n</parent>`",
                "time": "2018-09-30 18:12:12",
                "index": 37,
                "user": "techzilla"
            },
            {
                "id": "5bb11206bbdc0b2505c67dfd",
                "text": "you mean that part?",
                "time": "2018-09-30 18:12:22",
                "index": 38,
                "user": "techzilla"
            },
            {
                "id": "5bb1120dc08b8b3067b14e68",
                "text": "yes",
                "time": "2018-09-30 18:12:29",
                "index": 39,
                "user": "hayaticakici"
            },
            {
                "id": "5bb11218bbdc0b2505c67e92",
                "text": "yea let me get this highliter syntax right",
                "time": "2018-09-30 18:12:40",
                "index": 40,
                "user": "techzilla"
            },
            {
                "id": "5bb1121d435c2a518e2fbbd5",
                "text": "so you can see it",
                "time": "2018-09-30 18:12:45",
                "index": 41,
                "user": "techzilla"
            },
            {
                "id": "5bb112451c100a4f290ea710",
                "text": "\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>biz.uniwear.batch</groupId>\n\t<artifactId>cli</artifactId>\n\t<version>1.0</version>\n\t<packaging>jar</packaging>\n\n\t<name>Batch CLI</name>\n\t<description>Uniwear Batch CLI</description>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.0.5.RELEASE</version>\n\t\t<relativePath />\n\t</parent>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t</properties>\n\n\n\t\t<dependencies>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-starter-jdbc</artifactId>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.xerial</groupId>\n\t\t\t\t<artifactId>sqlite-jdbc</artifactId>\n\t\t\t\t<version>3.23.1</version>\n\t\t\t</dependency>\n\n\t\t</dependencies>\n\n\n\n\t\t<build>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<version>3.7.0</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t<source>10</source>\n\t\t\t\t\t<target>10</target>\n\t\t\t\t\t<release>10.0</release>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</build>\n\n\t</project>\n",
                "time": "2018-09-30 18:13:25",
                "index": 42,
                "user": "techzilla"
            },
            {
                "id": "5bb11249435c2a518e2fbd5f",
                "text": "AHA",
                "time": "2018-09-30 18:13:29",
                "index": 43,
                "user": "techzilla"
            },
            {
                "id": "5bb11264a9be136b94d657b7",
                "text": "I tried without release also, ",
                "time": "2018-09-30 18:13:56",
                "index": 44,
                "user": "techzilla"
            },
            {
                "id": "5bb1126b435c2a518e2fbf28",
                "text": "didn't work, ",
                "time": "2018-09-30 18:14:03",
                "index": 45,
                "user": "techzilla"
            },
            {
                "id": "5bb11275600c5f642332fb4c",
                "text": "    [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.7.0:compile (default-compile) on project cli: Fatal error compiling: invalid target release: 10 -> [Help 1]\n",
                "time": "2018-09-30 18:14:13",
                "index": 46,
                "user": "techzilla"
            },
            {
                "id": "5bb112e1c08b8b3067b152c1",
                "text": "I think the 2.0.5 does not support 3.7.0 . you need to find out which maven compiler 3.7.0 ",
                "time": "2018-09-30 18:16:01",
                "index": 47,
                "user": "hayaticakici"
            },
            {
                "id": "5bb112e4435c2a518e2fc236",
                "text": "remove  <version>3.7.0</version>",
                "time": "2018-09-30 18:16:04",
                "index": 48,
                "user": "hayaticakici"
            },
            {
                "id": "5bb112ea5331811c2e2c34f9",
                "text": "and try",
                "time": "2018-09-30 18:16:10",
                "index": 49,
                "user": "hayaticakici"
            },
            {
                "id": "5bb113043844923661c41d8f",
                "text": "if still does not work then add back the  <version>3.7.0</version> and try with  2.0.4 not 2.0.5",
                "time": "2018-09-30 18:16:36",
                "index": 50,
                "user": "hayaticakici"
            },
            {
                "id": "5bb1131e271506518d9857c5",
                "text": "the worst case that you need to find out which maven compiler version that 2.0.5 comes with and change the version accordingly",
                "time": "2018-09-30 18:17:02",
                "index": 51,
                "user": "hayaticakici"
            },
            {
                "id": "5bb11377ef4afc4f28fb5fda",
                "text": "k",
                "time": "2018-09-30 18:18:31",
                "index": 52,
                "user": "techzilla"
            },
            {
                "id": "5bb1137bc08b8b3067b15549",
                "text": "gonna try that",
                "time": "2018-09-30 18:18:35",
                "index": 53,
                "user": "techzilla"
            },
            {
                "id": "5bb115c1271506518d9865cf",
                "text": "OK, I don't think I will be able to get anywhere reducing the compiler-plugin, first because they release new ones in line with new JDK releases, second because none of them worked > 3.6.2, at least when I tried now",
                "time": "2018-09-30 18:28:17",
                "index": 54,
                "user": "techzilla"
            },
            {
                "id": "5bb115faef4afc4f28fb6f24",
                "text": "I think there is a bug in the 2.0.5 boot framework parent, spring itself appears to have no conflict. ",
                "time": "2018-09-30 18:29:14",
                "index": 55,
                "user": "techzilla"
            },
            {
                "id": "5bb1161abbdc0b2505c695d7",
                "text": "gonna try to lower that",
                "time": "2018-09-30 18:29:46",
                "index": 56,
                "user": "techzilla"
            },
            {
                "id": "5bb118af1c100a4f290ed04d",
                "text": "nope..",
                "time": "2018-09-30 18:40:47",
                "index": 57,
                "user": "techzilla"
            },
            {
                "id": "5bb118b8271506518d98795e",
                "text": "tried it with your exact versions, ",
                "time": "2018-09-30 18:40:56",
                "index": 58,
                "user": "techzilla"
            },
            {
                "id": "5bb118d16e5a401c2df7bda9",
                "text": "Gonna have to investigate deeper it appears",
                "time": "2018-09-30 18:41:21",
                "index": 59,
                "user": "techzilla"
            },
            {
                "id": "5bb11a595331811c2e2c64c9",
                "text": "I see the problem I think",
                "time": "2018-09-30 18:47:53",
                "index": 60,
                "user": "techzilla"
            },
            {
                "id": "5bb11a621c100a4f290edb61",
                "text": "thats odd",
                "time": "2018-09-30 18:48:02",
                "index": 61,
                "user": "hayaticakici"
            },
            {
                "id": "5bb11a625331811c2e2c64e1",
                "text": "it was mvn itself, executing from old JDK ",
                "time": "2018-09-30 18:48:02",
                "index": 62,
                "user": "techzilla"
            },
            {
                "id": "5bb11a7ebbdc0b2505c6aa69",
                "text": "Sorry, should have checked that first",
                "time": "2018-09-30 18:48:30",
                "index": 63,
                "user": "techzilla"
            },
            {
                "id": "5bb11a9e6e5a401c2df7c96f",
                "text": "I just figured fedora packages would be intigrated with their own update-alternatives system",
                "time": "2018-09-30 18:49:02",
                "index": 64,
                "user": "techzilla"
            },
            {
                "id": "5bb11ac4bbdc0b2505c6ac78",
                "text": "great. ",
                "time": "2018-09-30 18:49:40",
                "index": 65,
                "user": "hayaticakici"
            }
        ]
    },
    {
        "id": 315,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d020758c8d21d26064ffb9e",
                "text": "How do I tell spring to use different import sql files for different data sources?",
                "time": "2019-06-13 08:20:40",
                "index": 0,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d020793209ae3263abe9849",
                "text": "mydata.primary.datasource.data=import_local.sql does not work",
                "time": "2019-06-13 08:21:39",
                "index": 1,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d0207b9c12fd52664fc3be0",
                "text": "```    @Primary\n    @Bean\n    @ConfigurationProperties(\"mydata.primary.datasource\")\n    public DataSource primaryDataSource() {\n        return DataSourceBuilder.create().type(HikariDataSource.class).build();\n    }```",
                "time": "2019-06-13 08:22:17",
                "index": 2,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d0207bec12fd52664fc3bf3",
                "text": "there\u2019s no support for multiple datasources, reusing `DataSourceProperties` yourself isn\u2019t magically going to trigger datasource init",
                "time": "2019-06-13 08:22:22",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5d020857c7a8fc263a163f8a",
                "text": "We have a multi datasources sample and adding init there would be useful. Thanks for sharing",
                "time": "2019-06-13 08:24:55",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5d0208c4c7a8fc263a1641f7",
                "text": "I thought I was doing something wrong. Thanks for clearing that up",
                "time": "2019-06-13 08:26:44",
                "index": 5,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d0208d3049bf9263c61dcc1",
                "text": "That code is going to build the datasource only",
                "time": "2019-06-13 08:26:59",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5d0208d772e573260792a75b",
                "text": "Let me see what you can do here",
                "time": "2019-06-13 08:27:03",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5d02091f2d3f89045fb0ec2c",
                "text": "There\u2019s `ResourceDatabasePopulator` and `DatabasePopulatorUtils` if you want to use that. For something more involved, I\u2019d use Flyway or Liquibase",
                "time": "2019-06-13 08:28:15",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5d02094bc7a8fc263a164590",
                "text": "`DataSourceInitializer` in Spring Boot is what\u2019s applying what `DataSourceProperties` hold. It\u2019s package private because we want to improve the API but you should see most of what you need there",
                "time": "2019-06-13 08:28:59",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5d020c74c5386926f6dface1",
                "text": "I am not exactly sure how to use the `ResourceDatabasePopulator` but I did find this code on stackoverflow. It didn't work for me though\n\n```\n    @Bean\n    public DataSourceInitializer dataSourceInitializer() {\n        ResourceDatabasePopulator resourceDatabasePopulator = new ResourceDatabasePopulator();\n        resourceDatabasePopulator.addScript(new ClassPathResource(\"/import_local.sql\"));\n\n        DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();\n        dataSourceInitializer.setDataSource(primaryDataSource());\n        dataSourceInitializer.setDatabasePopulator(resourceDatabasePopulator);\n        return dataSourceInitializer;\n    }\n```",
                "time": "2019-06-13 08:42:28",
                "index": 10,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d020c92c7a8fc263a165f57",
                "text": "If you look at `DataSourceInitializer` as referenced in my last comment, it shows you exactly how",
                "time": "2019-06-13 08:42:58",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5d020ee8c5386926f6dfbb64",
                "text": "Ok. I got it to work by setting  mydata.primary.datasource.initialize=false and naming the `DataSourceInitializer` bean ",
                "time": "2019-06-13 08:52:56",
                "index": 12,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d020f055213b6266378abe0",
                "text": "Thanks @snicoll ",
                "time": "2019-06-13 08:53:25",
                "index": 13,
                "user": "a-mujthaba321"
            },
            {
                "id": "5d0210dcc7a8fc263a16818e",
                "text": "here is my final config\n\n```\n    @Bean(name = \"primaryDatasourceInitializer\")\n    @ConditionalOnProperty(name = \"mydata.primary.datasource.spring.jpa.hibernate.ddl\", havingValue = \"create\")\n    public DataSourceInitializer dataSourceInitializer() {\n        ResourceDatabasePopulator resourceDatabasePopulator = new ResourceDatabasePopulator();\n        resourceDatabasePopulator.addScript(new ClassPathResource(\"/import_local.sql\"));\n\n        DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();\n        dataSourceInitializer.setDataSource(primaryDataSource());\n        dataSourceInitializer.setDatabasePopulator(resourceDatabasePopulator);\n        return dataSourceInitializer;\n    }```",
                "time": "2019-06-13 09:01:16",
                "index": 14,
                "user": "a-mujthaba321"
            }
        ]
    },
    {
        "id": 316,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bd84ae9bbdc0b2505c2cb49",
                "text": "How can I resolve this error when uploading from angular via spring rest ??? org.apache.tomcat.util.http.fileupload.FileUploadException: the request was rejected because no multipart boundary was found",
                "time": "2018-10-30 12:13:29",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd84d3d64cfc273f94b7269",
                "text": "How can I add @Bean(name = \"commonsMultipartResolver\")\npublic MultipartResolver multipartResolver() {\n    return new StandardServletMultipartResolver();\n}",
                "time": "2018-10-30 12:23:25",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd84d6382893a2f3b62b8ee",
                "text": "In application.properties?",
                "time": "2018-10-30 12:24:03",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd84dac069fca52a5b96030",
                "text": "@DoraRajappan That shouldn't be necessary. The error suggests that everything's in place on the server side to support file uploads. The problem appears to be that the client (Angular in this case) hasn't sent a properly formed multipart request.",
                "time": "2018-10-30 12:25:16",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bd84dd1c08b8b30679714ac",
                "text": "oh",
                "time": "2018-10-30 12:25:53",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd84dfc64cfc273f94b7a0d",
                "text": " let formData = new FormData();\n    formData.append(\"file\", userDomain.upload);\n    formData.append(\"userId\" ,String(userDomain.userId));\n\tformData.append(\"domainId\", String(userDomain.domainId)) ;\n\tformData.append(\"update\",userDomain.update);\n\tformData.append(\"externalLink\", userDomain.externalLink);\n    console.log(formData);\n    let headers = new Headers({       \n        'enctype': 'multipart/form-data'\n    });\n    return this.http.post('addMentorUpdates', formData, httpFileOptions ).pipe(\n    tap((userDomain: UserDomain) => {this.log(`mapped user doamin w/ id=${userDomain.userId}`)}),\n    catchError(this.handleError<UserDomain>('mapUserDomain')))\n   ",
                "time": "2018-10-30 12:26:36",
                "index": 6,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd84e41c7bf7c366292c4e5",
                "text": "thanks @wilkinsona ",
                "time": "2018-10-30 12:27:45",
                "index": 8,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd84efeab17df26311384ca",
                "text": "2018-10-30 18:00:14.055 ERROR 2368 --- [io-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Could not parse multipart servlet request; nested exception is java.io.IOException: org.apache.tomcat.util.http.fileupload.FileUploadException: the request was rejected because no multipart boundary was found] with root cause\n",
                "time": "2018-10-30 12:30:54",
                "index": 9,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 317,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dc478e72f8a03435753a3c9",
                "text": "hi! - i setup a fresh sb 2.2.1 app + web - applied the war plugin - ran `./gradlew bootWar` - `mv build/libs/mywar.war ../tomcat/webapps/ROOT.war` - all works as expected. but I noticed i am able to navigate to `localhost:8080/org/springframework/boot/loader/Launcher.class` - i can download class files - is that expected?",
                "time": "2019-11-07 20:04:55",
                "index": 0,
                "user": "erichelgeson"
            },
            {
                "id": "5dc5341eea7d147cb33fd553",
                "text": "@erichelgeson We prevent that when running your war with `java -jar` as we have much more control there. We don't prevent it when deployed to a container. In that case we'd recommend building a \"normal\" war instead. In your case that would be by using the `war` task rather than the `bootWar` task.",
                "time": "2019-11-08 09:23:42",
                "index": 13,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 318,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d24af3717cc7b05ca9c5473",
                "text": "`DataSourcePoolMetrics` -> https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/jdbc/DataSourcePoolMetrics.java#L68",
                "time": "2019-07-09 15:13:59",
                "index": 0,
                "user": "tgeens"
            },
            {
                "id": "5d24af480c8c4114d9fd7034",
                "text": "looks like there is a decision to only monitor `DataSourcePoolMetadata::getActive`",
                "time": "2019-07-09 15:14:16",
                "index": 1,
                "user": "tgeens"
            },
            {
                "id": "5d24af61eab1bd15a82d9147",
                "text": "which is the number of db-connections in use at that moment",
                "time": "2019-07-09 15:14:41",
                "index": 2,
                "user": "tgeens"
            },
            {
                "id": "5d24af7b17cc7b05ca9c580b",
                "text": "Are you replying to someone or is that a question @tgeens?",
                "time": "2019-07-09 15:15:07",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5d24af83f867ec1687dad207",
                "text": "question coming up",
                "time": "2019-07-09 15:15:15",
                "index": 4,
                "user": "tgeens"
            },
            {
                "id": "5d24af8b98934d15a7269c06",
                "text": "adding the number of connections in the db pool (idle) is not monitored right now ?",
                "time": "2019-07-09 15:15:23",
                "index": 5,
                "user": "tgeens"
            },
            {
                "id": "5d24afa8270d2b1bfa682fc7",
                "text": "There\u2019s a min and max thing right below your link",
                "time": "2019-07-09 15:15:52",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5d24afda0c8daa1686b3e6c9",
                "text": "the min/max are the pool size boundaries - but they grow & shrink dynamically, right ?",
                "time": "2019-07-09 15:16:42",
                "index": 7,
                "user": "tgeens"
            },
            {
                "id": "5d24b004bea9f35741240e4d",
                "text": "Javadoc of `getMin`: `Return the minimum number of idle connections in the pool `",
                "time": "2019-07-09 15:17:24",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5d24b019f5dd14574254d9d4",
                "text": "What are you trying to track?",
                "time": "2019-07-09 15:17:45",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5d24b053f867ec1687dad866",
                "text": "how big my pool actually is currently",
                "time": "2019-07-09 15:18:43",
                "index": 10,
                "user": "tgeens"
            },
            {
                "id": "5d24b065acab0914d8d98218",
                "text": "min <= active + idle  <= max",
                "time": "2019-07-09 15:19:01",
                "index": 11,
                "user": "tgeens"
            },
            {
                "id": "5d24b07ccdb70805c966aab5",
                "text": "we're not tracking 'idle' right now",
                "time": "2019-07-09 15:19:24",
                "index": 12,
                "user": "tgeens"
            },
            {
                "id": "5d24b07df827ad6676d7b7f7",
                "text": "I see",
                "time": "2019-07-09 15:19:25",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5d24b0bcf5dd14574254e0c4",
                "text": "It\u2019s not in the abstraction either at the moment",
                "time": "2019-07-09 15:20:28",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5d24b0c498934d15a726a38c",
                "text": "There is a `getUsage` float thing though",
                "time": "2019-07-09 15:20:36",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5d24b0de72d4092b1ab1a231",
                "text": "following the micrometer philosophy, one could maybe expect 2 `.count` metrics, one tagged with `state=active`, one tagged with `state=idle`",
                "time": "2019-07-09 15:21:02",
                "index": 16,
                "user": "tgeens"
            },
            {
                "id": "5d24b0edd0e06b667574eb2e",
                "text": "but I realize that is 1. a breaking change 2. not in the datasource abstraction",
                "time": "2019-07-09 15:21:17",
                "index": 17,
                "user": "tgeens"
            },
            {
                "id": "5d24b0f3eab1bd15a82d9c29",
                "text": "If we can get that information from all datasources we support",
                "time": "2019-07-09 15:21:23",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5d24b0fbf827ad6676d7bbce",
                "text": "Feel free to create an issue and we\u2019ll figure it out. ",
                "time": "2019-07-09 15:21:31",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5d24b16d17cc7b05ca9c65d9",
                "text": "ok, cool",
                "time": "2019-07-09 15:23:25",
                "index": 20,
                "user": "tgeens"
            }
        ]
    },
    {
        "id": 319,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf6b0a4baf43f2b9b57b793",
                "text": "Hi all.. given I have Boot application based on Spring Integration.. how can I stop and start listeners programmatically?\n\n1 way I found I could do it is to implement `ApplicationContextAware` and\n```\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        this.lifecycle = (Lifecycle) applicationContext;\n    }\n```\nand call `start()` and `stop()`\nIs there a better way? ",
                "time": "2018-11-22 13:35:32",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5bf6b1a7baf43f2b9b57bdd3",
                "text": "@pmihalcin I don't think there's anything Boot-specific about that so you'd probably be better asking in spring-projects/spring-integration",
                "time": "2018-11-22 13:39:51",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bf6b1d0d24f9324d236ff1e",
                "text": "@pmihalcin You could use application events. Then the  listeners have to know to act on the event. You could just inject the ApplicationContext where you need it and perform the operations on the beans or relevant type",
                "time": "2018-11-22 13:40:32",
                "index": 6,
                "user": "corneil"
            }
        ]
    },
    {
        "id": 320,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c3caa7e20b78635b6211f15",
                "text": "Is there a gitter room for spring security?",
                "time": "2019-01-14 15:27:58",
                "index": 0,
                "user": "Dinodanio"
            },
            {
                "id": "5c3caabb20b78635b621209c",
                "text": "@Dinodanio yes, https://gitter.im/spring-projects/spring-security",
                "time": "2019-01-14 15:28:59",
                "index": 1,
                "user": "RovoMe"
            },
            {
                "id": "5c3caae91cb70a372ad9697c",
                "text": "@RovoMe Thank you",
                "time": "2019-01-14 15:29:45",
                "index": 2,
                "user": "Dinodanio"
            }
        ]
    },
    {
        "id": 321,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d2c8cf7202bb93f00aa02ab",
                "text": "Hello all,I'm wondering if setting \"server.use-forward-headers=true\" by default in my application is a problem whether it is really behind a proxy or not. Is it a security risk if I set this property but it is not behind a proxy ? I ask because I will not be the one who will install it, and there may be different use case in different locations...",
                "time": "2019-07-15 14:25:59",
                "index": 0,
                "user": "fmarot"
            },
            {
                "id": "5d2c8e2f3596f56f8ce23a4c",
                "text": "@fmarot Potentially, yes. If there's no proxy an incoming request could spoof those headers and misrepresent itself",
                "time": "2019-07-15 14:31:11",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d2c8e663b41924785c39a78",
                "text": "@fmarot\n> Is it a security risk if I set this property but it is not behind a proxy ? \n\nin embedded Tomcat anyway, the servers that are trusted the receive those headers are behind a configurable whitelisted IP range: https://github.com/spring-projects/spring-boot/blob/a3e94f4412639949d09ba33f0dc979efb43ea5b7/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java#L293-L299",
                "time": "2019-07-15 14:32:06",
                "index": 3,
                "user": "phillipuniverse"
            },
            {
                "id": "5d2c8f2a4d750532414d6d0c",
                "text": "although if you're using non-\"native\" mechanism (aka the `ForwardedHeaderFilter`) it does not have this protection: https://github.com/spring-projects/spring-framework/blob/1ff29b0f6b243154832dd02e738085f11e44d980/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java#L66",
                "time": "2019-07-15 14:35:22",
                "index": 4,
                "user": "phillipuniverse"
            },
            {
                "id": "5d2c8f6d3e2c7e39708cd8e8",
                "text": "@wilkinsona @phillipuniverse thank you very much :D",
                "time": "2019-07-15 14:36:29",
                "index": 6,
                "user": "fmarot"
            }
        ]
    },
    {
        "id": 322,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c9ca595e422d1519927fc0c",
                "text": "Hi, simple application which returns fastest result of two `WebClient` requests using `Mono.first()`. The application is failing with `LEAK` error:\n```java\n2019-03-28 10:52:21.203 ERROR 25237 --- [or-http-epoll-4] io.netty.util.ResourceLeakDetector       : LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\n```\nI prepared POC with full error logs: https://github.com/lradziwonowicz/spring-boot-webflux-webclient-netty-leak  Not sure if this is an issue with Spring Boot or Netty. Should I create a bug or my approach is not correct?",
                "time": "2019-03-28 10:44:37",
                "index": 0,
                "user": "lradziwonowicz"
            },
            {
                "id": "5c9cd8827160b422852bc575",
                "text": "@lradziwonowicz Looks like you've fixed your problem by upgrading to Reactor Californium SR6. Boot 2.1.4 will contain that upgrade.",
                "time": "2019-03-28 14:21:54",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5c9cdc9e1f98a87112b568ad",
                "text": "@wilkinsona yes, using Reactor Core 3.2.8 and Reactor Netty 0.8.6 fixed the issue, I updated the sample app with Californium SR6 for now",
                "time": "2019-03-28 14:39:26",
                "index": 5,
                "user": "lradziwonowicz"
            }
        ]
    },
    {
        "id": 323,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0a04e0f5cf1f10bca9e671",
                "text": "Hi, if I use rest controller like this\n```\n@PostMapping(\"/video/test\")\n    public void uploadFile(HttpServletRequest httpRequest){... httpRequest.getInputStream();...} \n```\nand send file like \"application/octet-stream\"\nHow I cat set  request size limit? \n(P.S. server.tomcat.max-swallow-size , server.tomcat.max-http-post-size, spring.servlet.multipart.max-file-size, spring.servlet.multipart.max-request-size - not working I tried)",
                "time": "2019-06-19 09:48:16",
                "index": 0,
                "user": "dudin_dmitry_twitter"
            },
            {
                "id": "5d0a08ebecc6a91b311f1533",
                "text": "@dudin_dmitry_twitter There's nothing in Tomcat to limit the size of a generic POST request. The multipart limits only apply to multipart requests and, as described in https://tomcat.apache.org/tomcat-8.5-doc/config/http.html,  the max post size only applies to `x-www-form-urlencoded` requests.",
                "time": "2019-06-19 10:05:31",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5d0a0cd2e527d95add0cc060",
                "text": "@wilkinsona thanks",
                "time": "2019-06-19 10:22:10",
                "index": 2,
                "user": "dudin_dmitry_twitter"
            }
        ]
    },
    {
        "id": 324,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5beaa37f4e7ca145209ab850",
                "text": "i'm occasionally seeing comments not to use ```@Value```. What should we use instead?",
                "time": "2018-11-13 10:12:15",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5beaa3917326df140efb1935",
                "text": "i can't remember where i saw it but sometimes i come across it",
                "time": "2018-11-13 10:12:33",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5beaa3a76b9822140d222a38",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config-vs-value",
                "time": "2018-11-13 10:12:55",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5beaa3b17326df140efb19f4",
                "text": "thanks",
                "time": "2018-11-13 10:13:05",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5beaa3b462866f7473900aeb",
                "text": "so that's where it is",
                "time": "2018-11-13 10:13:08",
                "index": 4,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 325,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5c8931c2d1e7281f0922228e",
                "text": "Maybe a little note should be added in the 2.2 migration guide, that the jooq autoconfig signature changed slightly. I had to do:\n```\n   @Bean\n-  public RecordListenerProvider[] recordListenerProviders() {\n-    return DefaultRecordListenerProvider.providers(\n-        // InitialValueOnCreateListener.create(\"VERSION\", BigInteger.class, () -> BigInteger.ZERO),\n-        InitialValueOnCreateListener.create(\"CREATED_DT\", LocalDateTime.class, LocalDateTime::now));\n+  public RecordListenerProvider initialValueOnCreateRecordListenerProvider() {\n+    return new DefaultRecordListenerProvider(InitialValueOnCreateListener.create(\"CREATED_DT\", LocalDateTime.class, LocalDateTime::now));\n   }\n```",
                "time": "2019-03-13 16:37:22",
                "index": 0,
                "user": "davidkarlsen"
            },
            {
                "id": "5c8aaf0a3162ec7bc771d8de",
                "text": "@davidkarlsen what JOOQ auto-configuration signature change are you talking about? Auto-configurations are not meant to be extended or called directly",
                "time": "2019-03-14 19:44:10",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5c94e0eca21ce51a20a1ef46",
                "text": "@snicoll look at the code I posted",
                "time": "2019-03-22 13:19:40",
                "index": 173,
                "user": "davidkarlsen"
            },
            {
                "id": "5c94e104d0133e21e5f8427e",
                "text": "the jooq autoconfig used to look for RecordListenerProvider[] - it is now an ObjectProviders which searches for instances of RecordListenerProvider",
                "time": "2019-03-22 13:20:04",
                "index": 174,
                "user": "davidkarlsen"
            },
            {
                "id": "5c94e14e9d9cc8114a025553",
                "text": "which is nicer, but a slight change - so maybe worthwhile a small notice in the migration docs",
                "time": "2019-03-22 13:21:18",
                "index": 175,
                "user": "davidkarlsen"
            },
            {
                "id": "5c988607d0133e21e50f8d53",
                "text": "@davidkarlsen sorry I don\u2019t understand what should be written in the migration docs. Have you noticed a change of behaviour?",
                "time": "2019-03-25 07:40:55",
                "index": 186,
                "user": "snicoll"
            },
            {
                "id": "5c9df6c88df8b02f047cb68e",
                "text": "@snicoll yes, look in `DslContextConfiguration` used to be `ObjectProvider<RecordListenerProvider[]> recordListenerProviders,` now it is `ObjectProvider<RecordListenerProvider> recordListenerProviders`.\n\nHence to get RecordListenerProviders you now have single beans of RecordListenerProvider, while before it was a `@Bean RecordListenerProvider[]`\n\nDo you follow?",
                "time": "2019-03-29 10:43:20",
                "index": 315,
                "user": "davidkarlsen"
            },
            {
                "id": "5ca084fe016a930a453a4c7a",
                "text": "@davidkarlsen no I don\u2019t follow. This `ObjectProvider` is turned into an ordered streams which builds a list as before.",
                "time": "2019-03-31 09:14:38",
                "index": 334,
                "user": "snicoll"
            },
            {
                "id": "5ca08541f851ee043d3887dc",
                "text": "https://github.com/spring-projects/spring-boot/blob/28bd5f5e506b1f295265a11195befb364c398606/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration.java#L119-L120",
                "time": "2019-03-31 09:15:45",
                "index": 335,
                "user": "snicoll"
            },
            {
                "id": "5ca22c87759abc043c4b36e7",
                "text": "@snicoll hm - all I can say is that I had do change my code from returning `RecordListenerProvider[]`to single `RecordListenerProvider`s to get them used by the autoconfig",
                "time": "2019-04-01 15:21:43",
                "index": 364,
                "user": "davidkarlsen"
            },
            {
                "id": "5ca311a78148e555b2353e67",
                "text": "@davidkarlsen returning an array was never meant to work. The injection point was about collecting bean instances from the context, not one bean of type array. This is also clearly described in the doc: https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-jooq",
                "time": "2019-04-02 07:39:19",
                "index": 385,
                "user": "snicoll"
            },
            {
                "id": "5ca311b78148e555b2353ed0",
                "text": "If you need to support a previous version of Spring Boot, move your bean array to several beans of that type",
                "time": "2019-04-02 07:39:35",
                "index": 386,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 326,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5bb4ae14c08b8b3067c732ae",
                "text": "@philwebb is there hope for https://github.com/spring-projects/spring-boot/pull/14353 to land in 2.1.0?",
                "time": "2018-10-03 11:55:00",
                "index": 0,
                "user": "davidkarlsen"
            },
            {
                "id": "5bb4ae39c7bf7c3662ac7eff",
                "text": "@davidkarlsen no need to ping Phil, really. It\u2019s flagged for `2.1.x` so it\u2019s our intention to merge it",
                "time": "2018-10-03 11:55:37",
                "index": 1,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 327,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c594573f04ef00644e0df99",
                "text": "Hello, since boot 2.1.2 upgrade I'm having a weird error: \n```\nThe bean 'com.ignitionone.audience.transfer.starter.configuration.properties.AWSProperties', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.\n```\nThe bean is fairly simple and looks like this: https://gist.github.com/nWidart/cc2aca760ad6dd2ea5b56f636cdf8e20\nI'm not sure what \"defined in null\" means in this case. The suggested action, setting `spring.main.allow-bean-definition-overriding` to true, is already the case.",
                "time": "2019-02-05 08:12:35",
                "index": 0,
                "user": "nWidart"
            },
            {
                "id": "5c594a9f13a2814df62175bd",
                "text": "From the full exception in the log, it seems like it's trying to register that same bean 2 times. One has `scope=singleton` and the other `scope=`\n```\nException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'com.ignitionone.audience.transfer.starter.configuration.properties.AWSProperties' defined in null: Cannot register bean definition [Generic bean: class [com.ignitionone.audience.transfer.starter.configuration.properties.AWSProperties]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'com.ignitionone.audience.transfer.starter.configuration.properties.AWSProperties': There is already [Generic bean: class [com.ignitionone.audience.transfer.starter.configuration.properties.AWSProperties]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.\n```\nNot sure why that is though :/",
                "time": "2019-02-05 08:34:39",
                "index": 1,
                "user": "nWidart"
            },
            {
                "id": "5c5953f89221b9382d19b5b9",
                "text": "@nWidart I can't tell why the same bean is being defined twice just from the Gist. Can you share a complete example? It looks like your configuration of `spring.main.allow-bean-definition-overriding` is not being picked up. That exception would not occur if it was.",
                "time": "2019-02-05 09:14:32",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5c595487454aad4df7f9f14e",
                "text": "By looking at the LoggingFailureAnalysis, I see that one bean is in \"AnnotatedGenericBeanDefinition\" and the other in \"GenericBeanDefinition\" classes. Not sure what this means. ",
                "time": "2019-02-05 09:16:55",
                "index": 8,
                "user": "nWidart"
            },
            {
                "id": "5c59548c41775971a0dcd282",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/TWYu/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/TWYu/image.png)",
                "time": "2019-02-05 09:17:00",
                "index": 9,
                "user": "nWidart"
            },
            {
                "id": "5c595639c2dba5382ee3408c",
                "text": "It's an indication that the beans are being defined using different mechanisms. `AnnotationGenericBeanDefinition` typically means that you have a `@Bean` method defining the bean. As I said above, it's hard to tell exactly what's going on from just the gist. Rather than drip-feeding little bits of information, it would be more efficient if you could share a complete example.",
                "time": "2019-02-05 09:24:09",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5c5956cf41775971a0dce197",
                "text": "I understand but not sure how I can reproduce this since it looks like a specific error to this application",
                "time": "2019-02-05 09:26:39",
                "index": 11,
                "user": "nWidart"
            },
            {
                "id": "5c595831f04ef00644e1567a",
                "text": "I could send you a zip of  the app if that's what you're asking?",
                "time": "2019-02-05 09:32:33",
                "index": 12,
                "user": "nWidart"
            },
            {
                "id": "5c595f1ff46373406a570931",
                "text": "Sorry, but I doubt I'll have time to look through an entire application. Perhaps you could strip your app down to the bare minimum that still doesn't work?",
                "time": "2019-02-05 10:02:07",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5c595fbf54f21a71a1ffc9b6",
                "text": "Yea no worries I understand :smile: I'll try to setup a basic example, _if_ it can be reproduced there",
                "time": "2019-02-05 10:04:47",
                "index": 14,
                "user": "nWidart"
            },
            {
                "id": "5c596d10ca428b06455a4332",
                "text": "Aand of course when I try to reproduce the issue, no error, obviously :cry:  https://github.com/nWidart/spring-boot-bean-overrides",
                "time": "2019-02-05 11:01:36",
                "index": 18,
                "user": "nWidart"
            },
            {
                "id": "5c597d5113a2814df622c911",
                "text": "Think I found the issue, another class has this:\n```\n@EnableConfigurationProperties({\n    AWSProperties.class\n})\n```\nremoving that removes the error above. But now shows a liquibase error. Seems like there were a bunch of changes not mentionned in the changelog (https://github.com/spring-projects/spring-booT/wiki/Spring-Boot-2.1-Release-Notes)",
                "time": "2019-02-05 12:10:57",
                "index": 19,
                "user": "nWidart"
            },
            {
                "id": "5c597dc79221b9382d1ac6e7",
                "text": "Funnely enough, on my simple app example, if I add another class with that annotation, it does *not* produce the error \ud83e\udd14",
                "time": "2019-02-05 12:12:55",
                "index": 20,
                "user": "nWidart"
            },
            {
                "id": "5c597e04975714406b9a7797",
                "text": "> Seems like there were a bunch of changes not mentionned in the changelog\n\nI'm not sure how you've drawn that conclusion. But then I don't have the full picture.",
                "time": "2019-02-05 12:13:56",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5c597e189221b9382d1ac953",
                "text": "Duplicate `@EnableConfigurationProperties(AWSProperties.class)` annotations should not cause the problem you're seeing",
                "time": "2019-02-05 12:14:16",
                "index": 22,
                "user": "wilkinsona"
            },
            {
                "id": "5c597e748aa5ca5abf8a0337",
                "text": "`@EnableConfigurationProperties` only registers beans that have not already been defined: https://github.com/spring-projects/spring-boot/blob/89bf486d0c4b3bf74ac5e7c96429f7a918ed0cd4/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector.java#L91",
                "time": "2019-02-05 12:15:48",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5c597e7a13a2814df622d375",
                "text": "Hm ok strange than, removing that annotation removes the error, but shows\n```\nCannot find changelog location: class path resource [db/changelog/db.changelog-master.yaml] (please add changelog or check your Liquibase configuration)\n```\nConclusion because of `spring.liquibase.change-log=classpath:liquibase/master.xml` in the properties file. I assume property name changed or something.",
                "time": "2019-02-05 12:15:54",
                "index": 24,
                "user": "nWidart"
            },
            {
                "id": "5c597e9378e1ed4103e61391",
                "text": "hm ok well when removing it it doesn't show the error anymore, so not sure what to think :D ",
                "time": "2019-02-05 12:16:19",
                "index": 25,
                "user": "nWidart"
            },
            {
                "id": "5c597edff04ef00644e267e8",
                "text": "The property name hasn't changed. Given that we already know that your configuration of `spring.main.allow-bean-definition-overriding` was having no effect, I think it's more likely that your properties file isn't being picked up",
                "time": "2019-02-05 12:17:35",
                "index": 26,
                "user": "wilkinsona"
            },
            {
                "id": "5c597f088aa5ca5abf8a0735",
                "text": "hmm indeed, strange. It used to work fine though before the boot update",
                "time": "2019-02-05 12:18:16",
                "index": 27,
                "user": "nWidart"
            },
            {
                "id": "5c598080ceb5a2264f99a759",
                "text": "found it, I think, I had the following in the pom file:\n```\n    <resources>\n      <resource>\n        <directory>src/main/resources</directory>\n        <filtering>true</filtering>\n        <includes>\n          <include>scdf.sh</include>\n        </includes>\n      </resource>\n    </resources>\n```\nthis is to be able to use placeholders like `@project.artifactId` in that scdf.sh file (which is used to deploy the app on scdf by ops team). \nBut I guess this removes the 'parsing' of app.properties ",
                "time": "2019-02-05 12:24:32",
                "index": 28,
                "user": "nWidart"
            },
            {
                "id": "5c5981b3f46373406a57ee19",
                "text": "not sure if proper way, but in `includes` I've added app the app-*.properties file as well. Though not ideal, because it also needs all the migrations",
                "time": "2019-02-05 12:29:39",
                "index": 29,
                "user": "nWidart"
            },
            {
                "id": "5c59827b7b68f94102755f83",
                "text": "I can't say as I don't know what's in your `application.properties` file. Generally speaking, there's no need for it to be filtered by Maven at build time",
                "time": "2019-02-05 12:32:59",
                "index": 30,
                "user": "wilkinsona"
            },
            {
                "id": "5c5982e4975714406b9a969f",
                "text": "hm the app.properties has the usual stuff (appname/liquibase/metrics/etc.). \nThis include of scdf.sh with filtering is to be able to use variables inside the .sh file which would be replaced because of this flag. ",
                "time": "2019-02-05 12:34:44",
                "index": 31,
                "user": "nWidart"
            },
            {
                "id": "5c598377f46373406a57fac1",
                "text": "the shell script only contains this, with variables to replace\n```\n#!/usr/bin/env bash\n\napp unregister --name @project.artifactId@ --type task\n\napp register --name @project.artifactId@ --type task --uri docker:registry.docker.example.com/example/@project.artifactId@:@project.version@\n```\ntried without the filtering flag, still excludes the application-*.properties file. Without filtering, variables dont get replaced however.",
                "time": "2019-02-05 12:37:11",
                "index": 32,
                "user": "nWidart"
            },
            {
                "id": "5c5987d778e1ed4103e64b63",
                "text": "Seems like the solution is to take the resources section from spring, and just adding the extra file\n```\n      <resource>\n        <filtering>true</filtering>\n        <directory>${basedir}/src/main/resources</directory>\n        <includes>\n          <include>**/application*.yml</include>\n          <include>**/application*.yaml</include>\n          <include>**/application*.properties</include>\n          <include>scdf.sh</include>\n        </includes>\n      </resource>\n```",
                "time": "2019-02-05 12:55:51",
                "index": 33,
                "user": "nWidart"
            }
        ]
    },
    {
        "id": 328,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e316b4473ddad4acd6e7cbb",
                "text": "Hi booters,\nCould someone explain me the usage of these properties:\n```\nspring.security.filter.dispatcher-types   - Default values:`async, error, request` - Description: `Security filter chain dispatcher types`.\nspring.security.filter.order   - Default values:`-100` - Description: `Security filter chain order`.\n```\nAbout the `spring.security.filter.order `, is it the fallback filter chain? if yes, how can I disable it since the `security.basic.enabled=false` is deprecated.\nThanks",
                "time": "2020-01-29 11:23:48",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5e316c066f9d3d3498fbe71a",
                "text": "you have to define that in your security chain",
                "time": "2020-01-29 11:27:02",
                "index": 1,
                "user": "MOES-Media"
            },
            {
                "id": "5e316c3cf301780b8343eae6",
                "text": "add .anyRequest().permitAll() to your chain to disable security on all requests",
                "time": "2020-01-29 11:27:56",
                "index": 2,
                "user": "MOES-Media"
            },
            {
                "id": "5e316cc43aca1e4c5f407fa5",
                "text": "the order of the property is when your security filter chain gets executed",
                "time": "2020-01-29 11:30:12",
                "index": 3,
                "user": "MOES-Media"
            },
            {
                "id": "5e316cd373ddad4acd6e87a0",
                "text": "to learn more about it https://www.baeldung.com/spring-order",
                "time": "2020-01-29 11:30:27",
                "index": 4,
                "user": "MOES-Media"
            },
            {
                "id": "5e316d8ef301780b8343f4f6",
                "text": "@MOES-Media Thanks but I don\u2019t want it (the fallback chain) to be added to the filter chain list at all. ",
                "time": "2020-01-29 11:33:34",
                "index": 5,
                "user": "akuma8"
            },
            {
                "id": "5e316de01594133558340f05",
                "text": "where did I say anything about a fallback chain?",
                "time": "2020-01-29 11:34:56",
                "index": 6,
                "user": "MOES-Media"
            },
            {
                "id": "5e316df658f02e34973f4e37",
                "text": "it's about the order in which the security filter gets executed",
                "time": "2020-01-29 11:35:18",
                "index": 7,
                "user": "MOES-Media"
            },
            {
                "id": "5e317183159413355834338d",
                "text": "@MOES-Media Oh right, it's the order of `springSecurityFilterChainProxy` in the servlet context? ",
                "time": "2020-01-29 11:50:27",
                "index": 8,
                "user": "akuma8"
            },
            {
                "id": "5e3171b6fe0e6f74e9ddcddc",
                "text": "yes, that's why I included the baeldung article, it gives a little bit more information on how spring handles the execution order for filters",
                "time": "2020-01-29 11:51:18",
                "index": 9,
                "user": "MOES-Media"
            }
        ]
    },
    {
        "id": 329,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5bc054a46e5a401c2d5a7372",
                "text": "Hi, I've just started with WebClient, got no clue on how to use proxy. Any help , please?",
                "time": "2018-10-12 08:00:36",
                "index": 0,
                "user": "sarowar-cse"
            },
            {
                "id": "5bc05718271506518dfb02b8",
                "text": "@sarowar-cse https://stackoverflow.com/questions/46979982/how-can-i-support-an-http-proxy-using-spring-5-webclient",
                "time": "2018-10-12 08:11:04",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5bc05ea4e65a634336c5a39d",
                "text": "Thanks a lot :)",
                "time": "2018-10-12 08:43:16",
                "index": 2,
                "user": "sarowar-cse"
            }
        ]
    },
    {
        "id": 330,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d2c89335fa7895c43064353",
                "text": "Hi, Can i ask you if it is possbile to call a resttemplate.postforObject with the responseType parameter setted with a generic class ? At the moment the result of the postForObject is auto-mapped to an linkedHashMap instead of the type of the parameter of the generic class.",
                "time": "2019-07-15 14:09:55",
                "index": 0,
                "user": "marcozanghi"
            },
            {
                "id": "5d2c8e02eab6cd776372221c",
                "text": "@marcozanghi Yes, that's possible. A `ParameterizedTypeReference` subclass will stop the generic information from being lost.",
                "time": "2019-07-15 14:30:26",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d2c8f4f4f7f9e219cfaa637",
                "text": "@wilkinsona I have tried with a ParameterizedTypeReference and restTemplate.execute with this type ClassA<List<ClassB>>. But in this case i lost the ClassB information and the serializer converts all into LinkedHashMap",
                "time": "2019-07-15 14:35:59",
                "index": 6,
                "user": "marcozanghi"
            },
            {
                "id": "5d2c9acc202bb93f00aa79e4",
                "text": "@marcozanghi Something like `ParameterizedTypeReference<List<ClassB>>  parameterizedTypeReference = \n    new ParameterizedTypeReference<List<ClassB>>(){}` should work, AFAIK",
                "time": "2019-07-15 15:25:00",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5d2c9b2d54d3383937105bb6",
                "text": "See https://stackoverflow.com/questions/36915823/spring-resttemplate-and-generic-types-parameterizedtypereference-collections-lik for a question and answers to a problem that looks very similar to yours",
                "time": "2019-07-15 15:26:37",
                "index": 9,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 331,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5eff60f847fdfd21edffb675",
                "text": "Hi Team, ",
                "time": "2020-07-03 16:46:48",
                "index": 0,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff6104a813c72dcf2749ca",
                "text": "Greetings for the day",
                "time": "2020-07-03 16:47:00",
                "index": 1,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff611c405be935cddb5edd",
                "text": "Is it possible to Work with Spring Boot with Java 1.6 ? ",
                "time": "2020-07-03 16:47:24",
                "index": 2,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff61296c06cd1bf46e787c",
                "text": "Could anybody suggest me ",
                "time": "2020-07-03 16:47:37",
                "index": 3,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff612e613d3b339424965c",
                "text": "Please",
                "time": "2020-07-03 16:47:42",
                "index": 4,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff61ebc223cc536a50847b",
                "text": "Any example link please",
                "time": "2020-07-03 16:50:51",
                "index": 5,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff61faa813c72dcf274cf9",
                "text": "Requesting you to all of you please",
                "time": "2020-07-03 16:51:06",
                "index": 6,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff661fe0e5673398eef1ff",
                "text": "Hello, May I know anybody there ? ",
                "time": "2020-07-03 17:08:47",
                "index": 7,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5eff9acbfa0c9221fc788915",
                "text": "@nareshbangaram2_twitter no, Spring Boot 2 requires java 8. It's all there in the docs, Google will lead you to it.",
                "time": "2020-07-03 20:53:31",
                "index": 10,
                "user": "mickeelm"
            },
            {
                "id": "5f002ff7fa0c9221fc79d728",
                "text": "@mickeelm , spring boot 1.4.3 can work with Java 6 right ",
                "time": "2020-07-04 07:29:59",
                "index": 11,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5f0037cffa0c9221fc79e849",
                "text": "1.5x does too but it is no longer supported.",
                "time": "2020-07-04 08:03:27",
                "index": 12,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 332,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bc4934b82893a2f3be5b8b2",
                "text": "i'm trying to migrate from 1.5 to spring boot 2, but I get this error:\n\n```\njava.lang.NoSuchMethodError: org.springframework.boot.builder.SpringApplicationBuilder.<init>([Ljava/lang/Object;)V\n```",
                "time": "2018-10-15 13:16:59",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5bc4934ef659e67772bd2001",
                "text": "any idea?",
                "time": "2018-10-15 13:17:02",
                "index": 1,
                "user": "ofabricio"
            },
            {
                "id": "5bc493de600c5f6423b251e0",
                "text": "You probably have mixed versions on the classpath, check your build",
                "time": "2018-10-15 13:19:26",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5bc494201c100a4f298d6d9d",
                "text": "you mean both springs 1.5 and 2.0?",
                "time": "2018-10-15 13:20:32",
                "index": 3,
                "user": "ofabricio"
            },
            {
                "id": "5bc49485ef4afc4f2879cd15",
                "text": "i can't find the 1.5 version in the intellij dependency view",
                "time": "2018-10-15 13:22:13",
                "index": 4,
                "user": "ofabricio"
            },
            {
                "id": "5bc4ae3d435c2a518eaf47c6",
                "text": "after change a lot of dependence stuff, there is no error anymore, but my app doesn't start. It just says:\n```\nProcess finished with exit code 1\n```\n:( ",
                "time": "2018-10-15 15:11:57",
                "index": 5,
                "user": "ofabricio"
            },
            {
                "id": "5bc4b2a9e65a634336e1ea23",
                "text": "Exit code 1 would imply something went wrong",
                "time": "2018-10-15 15:30:49",
                "index": 6,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bc4b2d2e65a634336e1eb82",
                "text": "Are you using a build automation tool for your dependency management?",
                "time": "2018-10-15 15:31:30",
                "index": 7,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bc4b4b5e65a634336e1f949",
                "text": "maven",
                "time": "2018-10-15 15:39:33",
                "index": 8,
                "user": "ofabricio"
            },
            {
                "id": "5bc4b538271506518d179cdb",
                "text": "May we see your pom",
                "time": "2018-10-15 15:41:44",
                "index": 9,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bc4b5936e5a401c2d7725da",
                "text": "it has a parent structure, a bit complex",
                "time": "2018-10-15 15:43:15",
                "index": 10,
                "user": "ofabricio"
            },
            {
                "id": "5bc4b5e3600c5f6423b3584f",
                "text": "```\n+ root pom\n---+ service-builder pom\n--------+ service pom\n```",
                "time": "2018-10-15 15:44:35",
                "index": 11,
                "user": "ofabricio"
            },
            {
                "id": "5bc4b87aef4afc4f287ad0bc",
                "text": "ok. I managed to solve that. It was version tag that was missing. But now I have more errors:\n> org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration': Unsatisfied dependency expressed through field 'externalConfigurations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'configurableEnvironmentConfiguration' defined in class path resource [org/springframework/cloud/netflix/archaius/ArchaiusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.archaius.ConfigurableEnvironmentConfiguration]: Factory method 'configurableEnvironmentConfiguration' threw exception; nested exception is java.lang.NoClassDefFoundError: com/netflix/config/DeploymentContext$ContextKey\n",
                "time": "2018-10-15 15:55:38",
                "index": 12,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 333,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cb0194a0aad6350196ce15b",
                "text": "Is there no support for `Pageable` in webflux controllers? With\n```\n@GetMapping\n    fun foo(@PageableDefault pageable: Pageable) {\n        println(pageable)\n    }\n```\nI end up with \n```\n{\n    \"error\": \"Internal Server Error\",\n    \"message\": \"No primary or default constructor found for interface org.springframework.data.domain.Pageable\",\n    \"path\": \"/test\",\n    \"status\": 500,\n    \"timestamp\": \"2019-04-12T04:44:03.413+0000\",\n    \"trace\": \"java.lang.IllegalStateException: No primary or default constructor found for interface org.springframework.data.domain.Pageable\\n\\tat org.springframework.web.reactive.result.method.annotation.ModelAttributeMethodArgumentResolver.createAttribute(ModelAttributeMethodArgumentResolver.java:211)\\n\\tat org\u2026\n```\nor is this some kotlin issue?",
                "time": "2019-04-12 04:51:22",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5cb01ac125686a7dc318746f",
                "text": "ok \u2026 doesn't work with java too. ",
                "time": "2019-04-12 04:57:37",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5cb025a131aec969e890de24",
                "text": "from what i remember i think with `PageableDefault` you have to set some default values, too",
                "time": "2019-04-12 05:44:01",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5cb0280d31aec969e890ee48",
                "text": "@tonisostrat Nope\n```\n    @GetMapping\n    fun foo(@PageableDefault(size = 50, page = 0, sort = [], direction = Sort.Direction.ASC) pageable: Pageable) {\n        println(pageable)\n    }\n```\ndoesn't help either",
                "time": "2019-04-12 05:54:21",
                "index": 3,
                "user": "kschlesselmann"
            },
            {
                "id": "5cb028caf851ee043da3135a",
                "text": "@kschlesselmann, i guess this answers your question: https://jira.spring.io/browse/DATACMNS-1211",
                "time": "2019-04-12 05:57:30",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5cb028e7b34ccd69e7a4fc75",
                "text": "ah, didn't find that. Thanks :-)",
                "time": "2019-04-12 05:57:59",
                "index": 5,
                "user": "kschlesselmann"
            },
            {
                "id": "5cb0296920fbe911ee9feb58",
                "text": "but it's pretty easy to write a custom filter/processor to assemble the pageable object before the method call",
                "time": "2019-04-12 06:00:09",
                "index": 6,
                "user": "tonisostrat"
            },
            {
                "id": "5cb02b38c55bd14d35cf0212",
                "text": "Yeah, I'd have to have a look at that. The other solution would be to construct this by hand from `@RequestParam` \u2026 but that's so much manual work :-/",
                "time": "2019-04-12 06:07:52",
                "index": 7,
                "user": "kschlesselmann"
            },
            {
                "id": "5cb0406f20fbe911eea07e3d",
                "text": "eh, with the multitude of ways Spring's \"SDK\" allows you to do this behind the scenes there's really no plausible explanation to doing this manually.. and technically since the normal web framework already supports the Pageable annotation then you're basically making a short-term patch for code that they will integrate into the framework later anyway",
                "time": "2019-04-12 07:38:23",
                "index": 8,
                "user": "tonisostrat"
            },
            {
                "id": "5cb0422d759abc043caa923c",
                "text": "ACK",
                "time": "2019-04-12 07:45:49",
                "index": 9,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 334,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5bd84080ef4afc4f28f4f172",
                "text": "I see 2.1 has been released! :tada:  Any estimate of its availability in Maven Central?",
                "time": "2018-10-30 11:29:04",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5bd8415aef4afc4f28f4f738",
                "text": "@heruan soon; that step is out of our control so we'll announce it as soon as it's available.",
                "time": "2018-10-30 11:32:42",
                "index": 3,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 335,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5edf85d82cf2f36eae4aeee7",
                "text": "Any spring-framework contributor hanging here? I'd like to get feedback on https://github.com/spring-projects/spring-framework/issues/25059, to me it seems like a serious with DI injecting `null` silently and I was wondering if it was a known issue.",
                "time": "2020-06-09 12:51:36",
                "index": 0,
                "user": "jebeaudet"
            },
            {
                "id": "5edf8b8c7b6da9126a83a68f",
                "text": "@jebeaudet someone has to look to your sample and take the time to review the details you\u2019ve shared. Fields can be `null` in case of complex configuration or when the context is trying to fix a cycle indeed. That said, your sample does not look crazy complex at first sight. ",
                "time": "2020-06-09 13:15:56",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5edf8f35a85de30394019a8c",
                "text": "@snicoll Thanks, I was just wondering if someone would eventually get to my issue and not get drown in the others. I'd expect a `BeanCurrentlyInCreationException` or any kind circular dependency exception in my case.",
                "time": "2020-06-09 13:31:33",
                "index": 3,
                "user": "jebeaudet"
            },
            {
                "id": "5edf908724a3382d5d56e06a",
                "text": "I don\u2019t know why it wasn\u2019t triaged yet",
                "time": "2020-06-09 13:37:11",
                "index": 4,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 336,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ef60f80c223cc536a38df3a",
                "text": "Somewhat related question: When working with Spring-Boot 2.3.x IDE devtools, the embedded Tomcat works as expected from the start. What's required to deploy that same code to another running instance of Tocat? It looks like all the Tomcat dependencies are scoped to 'compile' ",
                "time": "2020-06-26 15:08:48",
                "index": 0,
                "user": "stephenpatten"
            },
            {
                "id": "5ef6f4347ba3965373d05d7e",
                "text": "@stephenpatten There\u2019s a section in the reference documentation on traditional war deployment: https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/htmlsingle/#howto-traditional-deployment",
                "time": "2020-06-27 07:24:36",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 337,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b97cdfd7189ae6fddac0f04",
                "text": "Hi, for `CommonsRequestLoggingFilter`\nI'm logging messages like:\n`CommonsRequestLoggingFilter:47 [qtp1669133551-63] Before request [uri=/services/api/]`\nIs there a way to also append HTTP Method name?\nSomething like:\n`CommonsRequestLoggingFilter:47 [qtp1669133551-63] Before request [GET uri=/services/api/]`",
                "time": "2018-09-11 14:15:25",
                "index": 0,
                "user": "yeralin"
            },
            {
                "id": "5b97cf74f3c26b08f65fcb67",
                "text": "Haven't tested it but this might work:\n\n```java\n   @Bean\n    public CommonsRequestLoggingFilter filter() {\n        CommonsRequestLoggingFilter filter = new CommonsRequestLoggingFilter() {\n            @Override\n            protected void beforeRequest(HttpServletRequest request, String message) {\n                super.beforeRequest(request, request.getMethod() + \" \" + message); //To change body of generated methods, choose Tools | Templates.\n            }\n\n        };\n        return filter;\n    }\n```\n",
                "time": "2018-09-11 14:21:40",
                "index": 1,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97cf8f7ce5f5314f972259",
                "text": "Thank you! I'll give it a try",
                "time": "2018-09-11 14:22:07",
                "index": 2,
                "user": "yeralin"
            }
        ]
    },
    {
        "id": 338,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5d4b10964e17537f52eea06b",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/357G/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/357G/image.png)",
                "time": "2019-08-07 17:55:34",
                "index": 0,
                "user": "anbusampath"
            },
            {
                "id": "5d4b1099029a51607f520e7f",
                "text": "Am I the one still not seeing  the latest Spring boot release 2.2.0M5, 2.1.7, 1.5.22 in start.spring.io or  I missed some communication about it.",
                "time": "2019-08-07 17:55:37",
                "index": 1,
                "user": "anbusampath"
            },
            {
                "id": "5d4b10b9bfd2887f53a97ad0",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/xBwU/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/xBwU/image.png)",
                "time": "2019-08-07 17:56:09",
                "index": 2,
                "user": "spencergibb"
            },
            {
                "id": "5d4b10f14e17537f52eea452",
                "text": "support for 1.5.x has ended so it was removed from initializr",
                "time": "2019-08-07 17:57:05",
                "index": 3,
                "user": "spencergibb"
            },
            {
                "id": "5d4b140253490e334daf26f3",
                "text": "Thanks  @spencergibb it seems browser cache issue.",
                "time": "2019-08-07 18:10:10",
                "index": 4,
                "user": "anbusampath"
            },
            {
                "id": "5d4bca8d1db76d0ffe94cb4c",
                "text": "@anbusampath https://spring.io/blog/2019/08/06/it-is-time-goodbye-spring-boot-1-x and https://github.com/spring-io/start.spring.io/issues/214",
                "time": "2019-08-08 07:09:01",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 339,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5eafa75b22f9c45c2a6a62d2",
                "text": "Hello, after upgrading to latest springboot (2.3.0.RC1 from 2.3.0.M4), one of my tests started to fail. It expects that when registering new user account with already existing email address, registration will fail with certain message. I expect that post request does finish with http status 400 (it does) and it will contain \"Email address already in use.\" in \"message\" field of response body (json formatted). I am throwing `BadRequestException(\"Email address already in use.\")` exception and I expect, its message gets copied to http response. What have changed in new RC?",
                "time": "2020-05-04 05:25:47",
                "index": 0,
                "user": "luvarqpp"
            },
            {
                "id": "5eafa78e3d58de7a38f26a5d",
                "text": "Note, message attribute in returned http body is just empty string. Example response: `{\"timestamp\":\"2020-05-04T05:21:27.138+00:00\",\"status\":400,\"error\":\"Bad Request\",\"message\":\"\",\"path\":\"/auth/signup\"}`",
                "time": "2020-05-04 05:26:38",
                "index": 1,
                "user": "luvarqpp"
            },
            {
                "id": "5eafbed614b48f0698aa5930",
                "text": "to add info to my last question, here is my BadRequestException impl:",
                "time": "2020-05-04 07:05:58",
                "index": 3,
                "user": "luvarqpp"
            },
            {
                "id": "5eafbedcb6dd230697a42f5e",
                "text": "```\n@ResponseStatus(HttpStatus.BAD_REQUEST)\npublic class BadRequestException extends RuntimeException {\n    public BadRequestException(String message) {\n        super(message);\n    }\n}\n```",
                "time": "2020-05-04 07:06:04",
                "index": 4,
                "user": "luvarqpp"
            },
            {
                "id": "5eafc4c514b48f0698aa6996",
                "text": "@luvarqpp does this help? https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3.0-RC1-Release-Notes#changes-to-the-default-error-pages-content",
                "time": "2020-05-04 07:31:17",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5eafd9d131a6d25d7ca9b886",
                "text": "@snicoll thanks, I have just look at release notes and I have not seen it there. https://github.com/spring-projects/spring-boot/releases/tag/v2.3.0.RC1",
                "time": "2020-05-04 09:01:05",
                "index": 8,
                "user": "luvarqpp"
            },
            {
                "id": "5eafda09b6dd230697a4711b",
                "text": "It\u2019s just a summary of the issues, you should really review the release notes",
                "time": "2020-05-04 09:02:01",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5eafda1222f9c45c2a6adb06",
                "text": "As long as it fixes the problem for you I am happy :) ",
                "time": "2020-05-04 09:02:10",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5eafde47f0377f163166ef45",
                "text": "Yes, thankyou. So @luvarqpp the reason is probably because it was mentioned on one of the milestone releases instead.",
                "time": "2020-05-04 09:20:07",
                "index": 20,
                "user": "OrangeDog"
            },
            {
                "id": "5eafde68a9de3d01b1e87609",
                "text": "No, there was an issue but that didn\u2019t catch their eyes which is why you should review the release notes",
                "time": "2020-05-04 09:20:40",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5eafdeb99f0c955d7da242a3",
                "text": "Your question has nothing to do with what @luvarqpp was asking anyway.",
                "time": "2020-05-04 09:22:01",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5eafdf1e7a24ff01b0fe25e4",
                "text": "oh, that didn't link to what I wanted it to...",
                "time": "2020-05-04 09:23:42",
                "index": 23,
                "user": "OrangeDog"
            },
            {
                "id": "5eafdf287975db7ebfe24ef4",
                "text": "nvm, forget about it",
                "time": "2020-05-04 09:23:52",
                "index": 24,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 340,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5def6cf826eeb8518f9884ed",
                "text": "Hello. Is there any update available on when the Boot 2.1.x line will become EOL? In the comments section of the Boot 2.2.0 announcement blog post it was mentioned that the end of Q1 2020 was being targeted. Is that time frame still likely?",
                "time": "2019-12-10 10:01:28",
                "index": 0,
                "user": "georgeharley"
            },
            {
                "id": "5df026625506624598a4ef3b",
                "text": "@georgeharley That question's come up a few times recently so we've just published a blog post about it: https://spring.io/blog/2019/12/10/spring-boot-2-1-x-eol-november-1st-2020",
                "time": "2019-12-10 23:12:34",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 341,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d288587c3740260bb0bdb59",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/q19f/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/q19f/image.png)",
                "time": "2019-07-12 13:05:11",
                "index": 0,
                "user": "wuliuqi666"
            },
            {
                "id": "5d2885b6c3740260bb0bdd71",
                "text": "Why is it always blocked?",
                "time": "2019-07-12 13:05:58",
                "index": 1,
                "user": "wuliuqi666"
            },
            {
                "id": "5d29921c7dbfff32429ca98f",
                "text": "@wuliuqi666 It's not blocked. You're getting a 404 as the page doesn't exist. Looking at the GitHub issue you opened, that page doesn't exist as you have sub-classed WebMvcConfigurationSupport which disables Boot's auto-configuration of Spring MVC, including its static resource handling. You probably want to implement `WebMvcConfigurer` instead.",
                "time": "2019-07-13 08:11:08",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d29a1c54d75053241394be0",
                "text": "@wilkinsona I took a look at the annotations of WebMvcAutoConfiguration, understand, thank you",
                "time": "2019-07-13 09:17:57",
                "index": 6,
                "user": "wuliuqi666"
            }
        ]
    },
    {
        "id": 342,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e845853e3b2dc37cea261f0",
                "text": "Hey guys, we are converting our app to fully Netty Spring Webflux. Almost done, however I currently need to convert our excel download (So we expose an excel file) to reactive types. We store data in a cloud bucket, so we have access to a ByteArrayOutputStream (extends OutputStream). Does someone have an example how to expose a OutputStream with WebFlux?",
                "time": "2020-04-01 09:01:07",
                "index": 0,
                "user": "kvandenbroek"
            },
            {
                "id": "5e8458d7b5496402d8ac98e7",
                "text": "@kvandenbroek  Hi, I think it might benefit you to note that any stream is blocking thus no benefit of using WebFlux netty with it. You can expose it like you would with any other object through ServerWebExchnage but no non-blocking approach will be possible.",
                "time": "2020-04-01 09:03:19",
                "index": 1,
                "user": "haris-zynka"
            },
            {
                "id": "5e8458e51bca0e4c0ec55615",
                "text": "It might get wrapped and so but it will still behave in blocking manner",
                "time": "2020-04-01 09:03:33",
                "index": 2,
                "user": "haris-zynka"
            },
            {
                "id": "5e845926f48d91599ae9bc80",
                "text": "@kvandenbroek if it's an AWS S3 this might help: https://www.baeldung.com/java-aws-s3-reactive",
                "time": "2020-04-01 09:04:38",
                "index": 3,
                "user": "62mkv"
            },
            {
                "id": "5e8459370c2a05136bf90d8a",
                "text": "Its GCP bucket, thanks for the reference though!",
                "time": "2020-04-01 09:04:55",
                "index": 4,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845945f48d91599ae9bcc6",
                "text": "I'll see if I can find something in the aws article that works",
                "time": "2020-04-01 09:05:09",
                "index": 5,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845974c090ce1fde3670d5",
                "text": "@haris-zynka I understand that the stream is blocking, for that I was wondering what the go to way is? I guess we'd download the bytearraystream in a worker thread and expose it when it's ready ?",
                "time": "2020-04-01 09:05:56",
                "index": 6,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845980c6ac331cf3eb69c3",
                "text": "For Azure I used Flow<ByteArray> and it works quite good",
                "time": "2020-04-01 09:06:08",
                "index": 7,
                "user": "haris-zynka"
            },
            {
                "id": "5e84598cf48d91599ae9bd61",
                "text": "I'll try to find the code now",
                "time": "2020-04-01 09:06:20",
                "index": 8,
                "user": "haris-zynka"
            },
            {
                "id": "5e8459bee3b2dc37cea26677",
                "text": "So the Flow from Java9?",
                "time": "2020-04-01 09:07:10",
                "index": 9,
                "user": "kvandenbroek"
            },
            {
                "id": "5e8459d2f2c75e2bc103d462",
                "text": "@kvandenbroek  sorry forgot to tell you I used Kotlin",
                "time": "2020-04-01 09:07:30",
                "index": 10,
                "user": "haris-zynka"
            },
            {
                "id": "5e8459d5f2c75e2bc103d479",
                "text": "currently it does not look like Spring Cloud has reactive support for GCP https://cloud.spring.io/spring-cloud-gcp/reference/html/#google-cloud-storage",
                "time": "2020-04-01 09:07:33",
                "index": 11,
                "user": "62mkv"
            },
            {
                "id": "5e8459deb5496402d8ac9d8d",
                "text": "Flow can be used as Flowable from Rx java or Flux from reactor core",
                "time": "2020-04-01 09:07:42",
                "index": 12,
                "user": "haris-zynka"
            },
            {
                "id": "5e8459dfc090ce1fde367424",
                "text": "but maybe they have something in the works",
                "time": "2020-04-01 09:07:43",
                "index": 13,
                "user": "62mkv"
            },
            {
                "id": "5e845a14e3b2dc37cea2691b",
                "text": "Why would I use Flow<ByreArray> and not Flux<ByteArray>?",
                "time": "2020-04-01 09:08:36",
                "index": 14,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845a1ecf8d521cd7ff1a6a",
                "text": "sample code\n```\nval resolved = filesFacade.getDocument(id)\n        val document = resolved.first\n        val file = resolved.second\n\n        response.headers.set(HttpHeaders.CONTENT_TYPE, file.headers().contentType())\n        response.headers.set(HttpHeaders.CONTENT_LENGTH, file.headers().contentLength().toString())\n        response.headers.set(HttpHeaders.CONTENT_DISPOSITION, \"attachment; filename=\\\"${document.name}\\\"\")\n\n        return file.body(null).map { it.array() }.asFlow() <- this can be without asFlow but I use kotlin; by default Azure uses Flowable from RxJava\n\n```",
                "time": "2020-04-01 09:08:46",
                "index": 15,
                "user": "haris-zynka"
            },
            {
                "id": "5e845a40c5c3c32343bc147b",
                "text": "so Kotlin has Flow which is suspendable it makes it easy to use async/await approach instead of reactive where you have a lot of flatMap or map ",
                "time": "2020-04-01 09:09:20",
                "index": 16,
                "user": "haris-zynka"
            },
            {
                "id": "5e845a45c090ce1fde367690",
                "text": "and for me it looks clean",
                "time": "2020-04-01 09:09:25",
                "index": 17,
                "user": "haris-zynka"
            },
            {
                "id": "5e845a4dcf8d521cd7ff1b9a",
                "text": "bottom line it's a matter of personal preference",
                "time": "2020-04-01 09:09:33",
                "index": 18,
                "user": "haris-zynka"
            },
            {
                "id": "5e845a7cc5c3c32343bc1594",
                "text": "so Flow from kotlin coroutine, Flowable from rxjava, or Flux is the same in this case",
                "time": "2020-04-01 09:10:20",
                "index": 19,
                "user": "haris-zynka"
            },
            {
                "id": "5e845b200c2a05136bf91639",
                "text": "heads up if you use too small chunk size download will be slow so try 8KB at least for array size for me it worked well with 2GB file upload + download",
                "time": "2020-04-01 09:13:04",
                "index": 20,
                "user": "haris-zynka"
            },
            {
                "id": "5e845b4e302cd3685bdeb8da",
                "text": "Yeah sadly we don't use Kotlin on this project yet. If I understand correctly since there is no async support yet I'd look like this in pseudo code:\n\n```\n public ResponseEntity<byte[]> getExport(some params here) {\n        return service.getExportedFile()\n               .map(file -> ReponseEntity.ok(file.bytes).header(x).header(y).header(all the damn excel headers :D )\n}\n\nService:\npublic Mono<byte[]> getExportedFile() {\n          return Mono.fromCallable(() -> {\n                                   x =  blob.getOutputStreamFromGCP()\n                                  return x.toByteArray();\n                       }).subscribeOn(Schedulers.boundedElastic());\n}\n```",
                "time": "2020-04-01 09:13:50",
                "index": 21,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845b70f48d91599ae9c666",
                "text": "something like that if you need to have this outpustream",
                "time": "2020-04-01 09:14:24",
                "index": 22,
                "user": "haris-zynka"
            },
            {
                "id": "5e845b85f2c75e2bc103dcb9",
                "text": "Yeah that's what the gcp lib exposes",
                "time": "2020-04-01 09:14:45",
                "index": 23,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845b8f0c2a05136bf917da",
                "text": "A` blob.downloadTo(OutputStream s)`",
                "time": "2020-04-01 09:14:55",
                "index": 24,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845b970c2a05136bf91843",
                "text": "ohhh",
                "time": "2020-04-01 09:15:03",
                "index": 25,
                "user": "haris-zynka"
            },
            {
                "id": "5e845b98c5c3c32343bc17ce",
                "text": "`public void downloadTo(OutputStream outputStream, Blob.BlobSourceOption... options) `",
                "time": "2020-04-01 09:15:04",
                "index": 26,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845baec5c3c32343bc182b",
                "text": "And since it's not reactive we'd have to schedule it on a worker thread to offload it from main non blocking IO pool",
                "time": "2020-04-01 09:15:26",
                "index": 27,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845bafcf8d521cd7ff2064",
                "text": "right?",
                "time": "2020-04-01 09:15:27",
                "index": 28,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845bb69a1e483f3d37254d",
                "text": "if it's big file you are limited to Integer.MAX_VALUE so try using Flux instead of Mono my suggestion",
                "time": "2020-04-01 09:15:34",
                "index": 29,
                "user": "haris-zynka"
            },
            {
                "id": "5e845bd89a1e483f3d3725b3",
                "text": "So we'd stream chunks of the file, is that even possible with the header from gcp?",
                "time": "2020-04-01 09:16:08",
                "index": 30,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845bf1c5c3c32343bc18c9",
                "text": "not 100% sure but I think there should be a way",
                "time": "2020-04-01 09:16:33",
                "index": 31,
                "user": "haris-zynka"
            },
            {
                "id": "5e845c03c5c3c32343bc18d6",
                "text": "You get the headers before you write to stream ?",
                "time": "2020-04-01 09:16:51",
                "index": 32,
                "user": "haris-zynka"
            },
            {
                "id": "5e845c17cf8d521cd7ff2134",
                "text": "What do you mean with the headers?",
                "time": "2020-04-01 09:17:11",
                "index": 33,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845c32302cd3685bdebac6",
                "text": "```\nsuspend fun download(@PathVariable(\"id\") @NotBlank id: String, response: ServerHttpResponse): Flow<ByteArray> {\n        val resolved = filesFacade.getDocument(id)\n        val document = resolved.first\n        val file = resolved.second\n\n        response.headers.set(HttpHeaders.CONTENT_TYPE, file.headers().contentType())\n        response.headers.set(HttpHeaders.CONTENT_LENGTH, file.headers().contentLength().toString())\n        response.headers.set(HttpHeaders.CONTENT_DISPOSITION, \"attachment; filename=\\\"${document.name}\\\"\")\n\n        return file.body(null).map { it.array() }.asFlow()\n    }```",
                "time": "2020-04-01 09:17:38",
                "index": 34,
                "user": "haris-zynka"
            },
            {
                "id": "5e845c3bf2c75e2bc103df75",
                "text": "We store excel files in a bucket, and want to return it to the user ",
                "time": "2020-04-01 09:17:47",
                "index": 35,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845c4af48d91599ae9c8d0",
                "text": "So we'd set the headers before yes",
                "time": "2020-04-01 09:18:02",
                "index": 36,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845c4bf2c75e2bc103df87",
                "text": "so my filesFacade.getDocument gets headers and stream from Azure",
                "time": "2020-04-01 09:18:03",
                "index": 37,
                "user": "haris-zynka"
            },
            {
                "id": "5e845c60f0f4677566d85561",
                "text": "it does not download anything prior to return",
                "time": "2020-04-01 09:18:24",
                "index": 38,
                "user": "haris-zynka"
            },
            {
                "id": "5e845c759a1e483f3d3726ff",
                "text": "so I set headers beforehand because Azure does send me Content-Length header",
                "time": "2020-04-01 09:18:45",
                "index": 39,
                "user": "haris-zynka"
            },
            {
                "id": "5e845c82f2c75e2bc103dff6",
                "text": "Yeah we'd do it the same way if we offload it to the worker pool",
                "time": "2020-04-01 09:18:58",
                "index": 40,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845ce9c5c3c32343bc1a7b",
                "text": "yeah so only difference is I don't offload anything to worker because I don't need output stream so I have already prepared header + download later in chunks by MS",
                "time": "2020-04-01 09:20:41",
                "index": 41,
                "user": "haris-zynka"
            },
            {
                "id": "5e845d00a61b811a4f74308a",
                "text": "hope that helped in any way",
                "time": "2020-04-01 09:21:04",
                "index": 42,
                "user": "haris-zynka"
            },
            {
                "id": "5e845d18e3b2dc37cea270a4",
                "text": "Yeah it does, I just think that we can't do it in another way as we have to download the outputstream before we can return",
                "time": "2020-04-01 09:21:28",
                "index": 43,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845d25302cd3685bdebce2",
                "text": "I think so too",
                "time": "2020-04-01 09:21:41",
                "index": 44,
                "user": "haris-zynka"
            },
            {
                "id": "5e845d26f0f4677566d85687",
                "text": "Since our source is not async",
                "time": "2020-04-01 09:21:42",
                "index": 45,
                "user": "kvandenbroek"
            },
            {
                "id": "5e845d8cb5496402d8acaa79",
                "text": "if you don't have files bigger than 1.9 GB i think converting stream to array can be used on IO thread and output can be Mono<byte[]> and it should work OK not as good as actually async but good enough",
                "time": "2020-04-01 09:23:24",
                "index": 46,
                "user": "haris-zynka"
            },
            {
                "id": "5e8460d7f2c75e2bc103eb77",
                "text": "@kvandenbroek  just had an idea about how to do it in Java \n```\npublic Mono<byte[]> download(ServerHttpResponse response){\n  ... getting blob headers and setting to response.headers\n\n  return Mono.just(outputstream).map(stream -> {\n    blob.downloadTo(stream)\n    return stream\n  }) // maybe this one can be subscribed to IO thread since it just fills in outputstream\n  .map(x -> x.toByteArray()) // this one maybe subscribe to worker since it converts stream to bytes not sure if usefull at all\n}\n```\ninteresting problem you have just wanted to know if these kind of things could help, I'll stop now with suggestions :)",
                "time": "2020-04-01 09:37:27",
                "index": 47,
                "user": "haris-zynka"
            },
            {
                "id": "5e8477f80c2a05136bf971d2",
                "text": "@haris-zynka What do you mean IO Thread? I'm currently using schedulers.boundedElastic() (40 threads in our case (4 cpu * 10)",
                "time": "2020-04-01 11:16:08",
                "index": 50,
                "user": "kvandenbroek"
            },
            {
                "id": "5e84780768d3005e28302ea3",
                "text": "Going to test my impl now",
                "time": "2020-04-01 11:16:23",
                "index": 51,
                "user": "kvandenbroek"
            },
            {
                "id": "5e84781ec5c3c32343bc6fcf",
                "text": "It's basically fetching the stream, and putting it in byte[] -> which happens on a worker thread ",
                "time": "2020-04-01 11:16:46",
                "index": 52,
                "user": "kvandenbroek"
            },
            {
                "id": "5e84838fa61b811a4f749ea7",
                "text": "Working like a charm :) ",
                "time": "2020-04-01 12:05:35",
                "index": 53,
                "user": "kvandenbroek"
            }
        ]
    },
    {
        "id": 343,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bdadf6dd3442e1972701385",
                "text": "Are there any known issues related to running Spring Boot 2.1+Spring 5.1 on a Tomcat 8.5 standalone server? We're building a war-file that excludes all the tomcat-embed-*.9.0 jar\u2019s. We don\u2019t use any servlet 4.0 \"exclusive api\u2019s\u201d in the applications. Really want to upgrade to 2.1, but operations are stuck on Tomcat 8.5 for at least half a year (happy 2018! :D)",
                "time": "2018-11-01 11:11:41",
                "index": 0,
                "user": "JorgenRingen"
            },
            {
                "id": "5bdadfba5760a73eb41f06bc",
                "text": "@JorgenRingen No. That should work fine. When packaged as a war, Boot 2.1 should work on any Servlet 3.1+ compatible container",
                "time": "2018-11-01 11:12:58",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bdae1de26be6b59794f659c",
                "text": "Thanks @wilkinsona! Btw, is it strictly necessary to exclude the tomcat-embed-*-jar\u2019s from war when deploying to standalone tomcat or does tomcat classloading solve this automatically? Note that tomcat-embed-jar\u2019s and standalone tomcat is different versions. The reason I don\u2019t wan\u2019t to exclude the jar's is to be able to run the war-file with java -jar locally and in some test-environments",
                "time": "2018-11-01 11:22:06",
                "index": 3,
                "user": "JorgenRingen"
            },
            {
                "id": "5bdae36726be6b59794f6e6a",
                "text": "@JorgenRingen As long as you've marked them as provided, you'll be fine. If you've done that, they'll be packaged in `WEB-INF/lib-provided` where Tomcat won't find them, but `jar -jar your-app.war` will.",
                "time": "2018-11-01 11:28:39",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bdae7a75905a9195537ef65",
                "text": "Thanks again, that\u2019s very clever! Just out of curiosity, is it the spring-boot-maven-plugin that creates the `lib-provided` or is it from the maven-shade-plugin? \n(edit: described here: https://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-maven-plugin.html :))",
                "time": "2018-11-01 11:46:47",
                "index": 8,
                "user": "JorgenRingen"
            },
            {
                "id": "5bdae8df995818347b86c129",
                "text": "It's Boot's Maven plugin that does it",
                "time": "2018-11-01 11:51:59",
                "index": 9,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 344,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ea5e99d9a04a259f23483e5",
                "text": "Not sure if this is the correct channel for this. Upgraded from 2.1.6 to 2.2.6 and we're using webflux, and have noticed a difference of how exceptions are logged. We now have a \"checkout\" block in the log. The issue we see is that the checkpoint block is logging the same 9 lines around 30 times, which makes the log insanely long and causes issues with parsing the log in our logging stack. Any reason why the checkpoint section would contain the same information several times? This scenario  seems to occur when doing multiple concurrent api calls to our service. So the log changes depending on the number of concurrent calls in our system.",
                "time": "2020-04-26 20:05:49",
                "index": 0,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5ea5ed3c9a04a259f2348d24",
                "text": "@michaelmcfadyen depending on where the checkpoint operator is (in a Spring Framework class I assume), could you create a Spring Framework issue with a sample application showing the issue? In this case, if it's hard to reproduce the issue a detailed explanation of the type of requests and responses, and complete stacktraces - would help a lot. Note that it might be a change in Reactor Netty as well.",
                "time": "2020-04-26 20:21:16",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5ea5f73a1eb8bd3978f8daa8",
                "text": "@bclozel thanks for the response. Wasn't sure exactly which project the change was in. I assume it's applied as a reactor hook but not 100% sure. I'll try and recreate it in a smaller sample project and create an issue on the spring github project.",
                "time": "2020-04-26 21:03:54",
                "index": 4,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5ea5f77611ffed126837dc72",
                "text": "I've asked in the reactor netty channel and the response was \"Reactor Netty does not have checkpoints.\"",
                "time": "2020-04-26 21:04:54",
                "index": 5,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5ea604a5e5ed621d4de16412",
                "text": "yeah, it's in spring framework. Looking closer at the log I can see the checkpoints are in DefaultWebFilterChain, DefaultWebClient and ExceptionHandlingWebHandler",
                "time": "2020-04-26 22:01:09",
                "index": 6,
                "user": "michaelmcfadyen"
            }
        ]
    },
    {
        "id": 345,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c48c92b9bfa375aab4baea6",
                "text": "In a custom starter, whats the preferred way to set up default properties for other system components (for own properties easiest is using a default in  the very own @ConfigurationProperties)? : EnvironmentPostProcessor that overrides defaultProperties MapPropertySource, SpringApplication.setDefaultProperties somwhere, etc...? ",
                "time": "2019-01-23 20:06:03",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5c48c995831899452438f6b4",
                "text": "A custom `EnvironmentPostProcessor` is the way to go. We have done one in our OSS see [`FlowableDefaultPropertiesEnvironmentPostProcessor`](https://github.com/flowable/flowable-engine/blob/master/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/environment/FlowableDefaultPropertiesEnvironmentPostProcessor.java)",
                "time": "2019-01-23 20:07:49",
                "index": 1,
                "user": "filiphr"
            },
            {
                "id": "5c48c9ac7a0f4d5b19f80399",
                "text": "It basically injects the properties before the Spring `application.properties`",
                "time": "2019-01-23 20:08:12",
                "index": 2,
                "user": "filiphr"
            },
            {
                "id": "5c48c9bb7a0f4d5b19f803ca",
                "text": "Before or after?",
                "time": "2019-01-23 20:08:27",
                "index": 3,
                "user": "nightswimmings"
            },
            {
                "id": "5c48c9f595e17b45259bcbb6",
                "text": "The thing is I need an ultimate default, thats why I dont understand the need of EnvironmentProcessors, which everyone suggests, when I guess there must be a way to introduce the easier SpringApplication.setDefaultProperties",
                "time": "2019-01-23 20:09:25",
                "index": 4,
                "user": "nightswimmings"
            },
            {
                "id": "5c48cacf0a491251e343db9a",
                "text": "Isnt `environment.getPropertySources().addLast(source))`as per your code reference overriden by application.properties? AFAIK I thought addLast meant latest fallback so if application.properties includes the var it should not be triggered, am I mistaken?",
                "time": "2019-01-23 20:13:03",
                "index": 5,
                "user": "nightswimmings"
            },
            {
                "id": "5c48cd80746d4a677afdad6d",
                "text": "Wait, I realized that SpringApplication.setDefaultProperties can only be called oncc, theres no way to mutate the state without reset it",
                "time": "2019-01-23 20:24:32",
                "index": 7,
                "user": "nightswimmings"
            },
            {
                "id": "5c48ceaf7a0f4d5b19f82206",
                "text": "Isn't there a simple and nice way to set a defaultproperty in runtime?",
                "time": "2019-01-23 20:29:35",
                "index": 8,
                "user": "nightswimmings"
            },
            {
                "id": "5c48cece95e17b45259bea0a",
                "text": "iterating property sources, check whether defaultproperties are null, and update the map after 2 castings doesnt seem too convenient",
                "time": "2019-01-23 20:30:06",
                "index": 9,
                "user": "nightswimmings"
            },
            {
                "id": "5c4978379bfa375aab4fe52c",
                "text": "@nightswimmings this is explained in the doc. The first `PropertySource` that has a value for the key wins. So if you add something last it\u2019s not going to override anything",
                "time": "2019-01-24 08:32:55",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c49785ecb47ec3000935321",
                "text": "@nightswimmings as for default value, why don\u2019t you hardcode them in your `@ConfigurationProperties`? That\u2019s what Spring Boot does and it allows those to be documented in the metadata as well",
                "time": "2019-01-24 08:33:34",
                "index": 17,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 346,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cb49213f851ee043dc02ca6",
                "text": "@snicoll I can't get it to work, do I need to add a group ass well? I just have the single property in there now, copied from how it was defined when the field was still on the class.",
                "time": "2019-04-15 14:15:47",
                "index": 0,
                "user": "spockz"
            },
            {
                "id": "5cb4925031aec969e8ad6329",
                "text": "hard to help with \u201ccan\u2019t get it to work\u201d. Try running your build on the command line and check the content of the metadata from there. It might be a refrehs issue or something",
                "time": "2019-04-15 14:16:48",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cb49304b34ccd69e7c17733",
                "text": "Indeed, sorry. I cleaned, added the additional info below, removed the field and compiled again. The field is still gone.\n`src/main/resources/META-INF/additional-spring-configuration-metadata.json`\n```json\n{\n  \"properties\": [\n    {\n      \"sourceType\": \"redacted.TokenProperties\",\n      \"defaultValue\": true,\n      \"name\": \"http-client.token.enabled\",\n      \"description\": \"Defines whether tokens are forwarded by default.\",\n      \"type\": \"java.lang.Boolean\"\n    }\n  ]\n}\n```",
                "time": "2019-04-15 14:19:48",
                "index": 2,
                "user": "spockz"
            },
            {
                "id": "5cb49310016a930a45c3a7d7",
                "text": "Is there a way I can enable debug logging on the processor?",
                "time": "2019-04-15 14:20:00",
                "index": 3,
                "user": "spockz"
            },
            {
                "id": "5cb49338a84e0c501a367a68",
                "text": "what \u201cfield is still gone\u201d means? What\u2019s the content of `target/classes/META-INF/spring-configuration-metadata.json`",
                "time": "2019-04-15 14:20:40",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5cb494301f6e900d5e3927a3",
                "text": "@snicoll the`target/classes/META-INF/spring-configuration-metadata.json` file does not contain the entry in the code block above ",
                "time": "2019-04-15 14:24:48",
                "index": 5,
                "user": "spockz"
            },
            {
                "id": "5cb4944fb34ccd69e7c18119",
                "text": "if you can share that from a mini sample you create from start.spring.io I can have a look for sure",
                "time": "2019-04-15 14:25:19",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5cb49730a0790b29c9bf2882",
                "text": "Found the issue. The additional metadata file needs to be copied to the the `target/classes/META-INF/` directory before running the annotation processor.",
                "time": "2019-04-15 14:37:36",
                "index": 7,
                "user": "spockz"
            },
            {
                "id": "5cb4973dbd70a40d5f53d4bb",
                "text": "are you using Gradle?",
                "time": "2019-04-15 14:37:49",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5cb49740c55bd14d35ec6859",
                "text": "sbt",
                "time": "2019-04-15 14:37:52",
                "index": 9,
                "user": "spockz"
            },
            {
                "id": "5cb4974520fbe911eebcfdc2",
                "text": "wut?",
                "time": "2019-04-15 14:37:57",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5cb4975125686a7dc335d89b",
                "text": "Oh dear :) OK ",
                "time": "2019-04-15 14:38:09",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5cb4975e759abc043cc6d76d",
                "text": "We have a large code base where we also provide some examples and tooling for Spring Boot based apps",
                "time": "2019-04-15 14:38:22",
                "index": 12,
                "user": "spockz"
            },
            {
                "id": "5cb4975ebd70a40d5f53d61d",
                "text": "We don\u2019t have support for SBT in Spring Boot so haven\u2019t tested that",
                "time": "2019-04-15 14:38:22",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5cb4978dc55bd14d35ec6934",
                "text": "The annotation processor works as long as it is on the class path. For properties defined in scala the annotation processor needs to be called separately. But it works",
                "time": "2019-04-15 14:39:09",
                "index": 14,
                "user": "spockz"
            },
            {
                "id": "5cb497b1bd70a40d5f53d7d6",
                "text": "I am surprised the annotation processor works at all with Scala actually",
                "time": "2019-04-15 14:39:45",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5cb498b43ebbdc55b3c0b379",
                "text": "As long as the getters and setters are there and it is just a simple pojo in Scala language flavour it works",
                "time": "2019-04-15 14:44:04",
                "index": 16,
                "user": "spockz"
            },
            {
                "id": "5cb498f193fb4a7dc23319ce",
                "text": "We have to use some compiler internal API to detect default values, that was more my concern",
                "time": "2019-04-15 14:45:05",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5cb499dc0aad6350198a8e28",
                "text": "It may very well be that some corner cases fail",
                "time": "2019-04-15 14:49:00",
                "index": 18,
                "user": "spockz"
            },
            {
                "id": "5cb499efa84e0c501a36a487",
                "text": "But a large part of scala compiles to the same bytecode as when written in plain Java",
                "time": "2019-04-15 14:49:19",
                "index": 19,
                "user": "spockz"
            },
            {
                "id": "5cb499ff759abc043cc6eec6",
                "text": "if you have default values that should work just fine. Annotation processors don\u2019t look at byte code",
                "time": "2019-04-15 14:49:35",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5cb49a07c55bd14d35ec7b51",
                "text": "Anyway, glad you got it sorted!",
                "time": "2019-04-15 14:49:43",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5cb49a0a8148e555b2ac3897",
                "text": "Btw, another reason for wanting to inspect the version in the typed property is so I can use relaxed binding",
                "time": "2019-04-15 14:49:46",
                "index": 22,
                "user": "spockz"
            },
            {
                "id": "5cb49a17c55bd14d35ec7bcb",
                "text": "how do you mean?",
                "time": "2019-04-15 14:49:59",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5cb49a4e016a930a45c3de84",
                "text": "`service-discovery.enabled` maps to the same thing as `serviceDiscovery.enabled` but when using `@ConditionalOnProperty` the property needs to match exactly",
                "time": "2019-04-15 14:50:54",
                "index": 24,
                "user": "spockz"
            },
            {
                "id": "5cb49a601f6e900d5e3954c7",
                "text": "Nothing to do with relaxed binding",
                "time": "2019-04-15 14:51:12",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5cb49a6af851ee043dc067ab",
                "text": "please review the javadoc of `@ConditionalOnProperty`",
                "time": "2019-04-15 14:51:22",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5cb49a9bc55bd14d35ec7f3e",
                "text": "relaxed binding works for that or simple environment calls as long as the input uses the canonical format",
                "time": "2019-04-15 14:52:11",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5cb49b0131aec969e8ad9bdc",
                "text": "aha. Didn't know that. I'll look it up",
                "time": "2019-04-15 14:53:53",
                "index": 28,
                "user": "spockz"
            },
            {
                "id": "5cb49b0aa84e0c501a36ac92",
                "text": "Thanks",
                "time": "2019-04-15 14:54:02",
                "index": 29,
                "user": "spockz"
            },
            {
                "id": "5cb49b320aad6350198a96be",
                "text": "Would you be interested if we extend the metadata annotation processor to also look at `@ConditionalOnProperty` annotations?",
                "time": "2019-04-15 14:54:42",
                "index": 30,
                "user": "spockz"
            },
            {
                "id": "5cb49b4325686a7dc335f410",
                "text": "No, sorry",
                "time": "2019-04-15 14:54:59",
                "index": 31,
                "user": "snicoll"
            },
            {
                "id": "5cb49b4d25686a7dc335f426",
                "text": "That\u2019s using the property, not declaring it",
                "time": "2019-04-15 14:55:09",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5cb49d301f6e900d5e396b8e",
                "text": "Is there another way of declaring properties then?",
                "time": "2019-04-15 15:03:12",
                "index": 33,
                "user": "spockz"
            },
            {
                "id": "5cb49d69a0790b29c9bf57a8",
                "text": "You mean yet another way than the two we\u2019ve discussed? No",
                "time": "2019-04-15 15:04:09",
                "index": 34,
                "user": "snicoll"
            },
            {
                "id": "5cb4a2d6c55bd14d35ecbceb",
                "text": "Okay. Ill just create something for our projects which checks whether we document all properties used in the conditionalonProperty",
                "time": "2019-04-15 15:27:18",
                "index": 35,
                "user": "spockz"
            }
        ]
    },
    {
        "id": 347,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5e3735283aca1e4c5f5d7b9b",
                "text": "Hey Team,\n\nIs there anything on the road map to address the deprecation of com.mongodb.Mongo in the mongo driver? I see that the current auto configuration of the mongo db factory current takes the new client implementation into account, so that's good. My immediate concern is what will happen to the configuration properties that Spring Boot currently relies on. My understanding of the go-forward creation mechanism that the driver team wants us to use only work with a well-formed connection string (com.mongodb.client.MongoClients.) \n\nWriting the boilerplate to piece the connection string together from a MongoProperties instance isn't particularly thorny, but it would really be nice if this was something that fit neatly in with the current offering.",
                "time": "2020-02-02 20:46:32",
                "index": 0,
                "user": "hanserya"
            },
            {
                "id": "5e3750fc594a0517c262a684",
                "text": "Spring Boot 2.3 and Spring Data MongoDB 3.0 switch to the new MongoDB client 4.0 that uses `com.mongodb.client`",
                "time": "2020-02-02 22:45:16",
                "index": 1,
                "user": "mp911de"
            },
            {
                "id": "5e37516dbfe65274ead761ca",
                "text": "Sweetness. Is that release still slated for April of this year?",
                "time": "2020-02-02 22:47:09",
                "index": 2,
                "user": "hanserya"
            },
            {
                "id": "5e37d831e8a838355911bd05",
                "text": "@hanserya that\u2019s the current plan, yes",
                "time": "2020-02-03 08:22:09",
                "index": 6,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 348,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c9fdbcaa0790b29c93474cb",
                "text": "Hey... I was wondering the best way to parse json from a controller method. There seems to be different methods. \n1) `public getRequest(@RequestBody Map<String, Object> json)` - Getting the response from the map?\n2) `public getRequest(@RequestBody JsonNode node)` - Getting the response from json node?\n3) `public getRequest(HttpServletRequest request)` - Getting the response from request.getReader()?\n4) Or should I create my own JSON object parser?",
                "time": "2019-03-30 21:12:42",
                "index": 0,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5c9fdc00016a930a453615ab",
                "text": "One for a scalable project",
                "time": "2019-03-30 21:13:36",
                "index": 1,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5c9feb828148e555b2203d85",
                "text": "Just create your POJO. Jackson the default parser would handle that for you",
                "time": "2019-03-30 22:19:46",
                "index": 2,
                "user": "IEnoobong"
            },
            {
                "id": "5ca0161c7ecbdc29cad34997",
                "text": "@IEnoobong you're right. But say I had a complex or different structure that cannot be modeled using a POJO. e.g., registering a user (firstname, lastname, email, confirm password, password, phone number for 2 factor auth)",
                "time": "2019-03-31 01:21:32",
                "index": 3,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5ca016275a83c30a46e3fe86",
                "text": "I could create a POJO for that and let jackson handle that",
                "time": "2019-03-31 01:21:43",
                "index": 4,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5ca0166725686a7dc3ac615b",
                "text": "But it'd mean I'd probably get into the pattern of creating many POJOs to model different JSOn structures ",
                "time": "2019-03-31 01:22:47",
                "index": 5,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5ca01685bd70a40d5fcc447e",
                "text": "Rather than parsing a json without bounding it to a class - which means I could have more flexibility with the json etc",
                "time": "2019-03-31 01:23:17",
                "index": 6,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5ca0ecd8a0790b29c93b5923",
                "text": "@EmmanuelAdeleke then you can pick any of the methods you listed above but you might need to look into you domain modelling if you regularly need such flexibility IMO in the end it depends on what you're trying to do",
                "time": "2019-03-31 16:37:44",
                "index": 10,
                "user": "IEnoobong"
            },
            {
                "id": "5ca1500f016a930a453fd7e3",
                "text": "Thanks @IEnoobong - Will use map for now",
                "time": "2019-03-31 23:41:03",
                "index": 13,
                "user": "PrinceAdeleke"
            }
        ]
    },
    {
        "id": 349,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cd1d828375bac74707144d7",
                "text": "hi, i have few data.sql files currently being loaded from classpath",
                "time": "2019-05-07 19:10:32",
                "index": 0,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5cd1d83597dcb371d87e251d",
                "text": "can i enable logs to see how booth inserts ",
                "time": "2019-05-07 19:10:45",
                "index": 1,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5cd1d8362e2caa1aa625e1ef",
                "text": "??",
                "time": "2019-05-07 19:10:46",
                "index": 2,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5cd28fdcf52a237516f5c902",
                "text": "@rajjaiswalsaumya Yes. Enable debug level logging for `org.springframework.jdbc.datasource.init.ScriptUtils`",
                "time": "2019-05-08 08:14:20",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 350,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f1e986bd50f2b289a9a817d",
                "text": "Hi All, how to enable/disable  auth security in properties   for management port (actuator) in spring boot 2?   In spring boot 1, seems we can do it with   \"management.security.enabled=false\"",
                "time": "2020-07-27 09:03:39",
                "index": 0,
                "user": "prasanthkumar2392"
            },
            {
                "id": "5f1e9dfcb1409c060f880128",
                "text": "@prasanthkumar2392 I believe this is covered in the migration guide: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#actuator-security",
                "time": "2020-07-27 09:27:24",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5f1ea1bdc1c0090e64a6d49a",
                "text": "@snicoll  Thanks a lot !!",
                "time": "2020-07-27 09:43:25",
                "index": 4,
                "user": "prasanthkumar2392"
            }
        ]
    },
    {
        "id": 351,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c47194d0721b912a5bde37f",
                "text": "Hello everyone,\n\nSometimes when I run my code I got the following error message:\n\n\n\t2019-01-22 09:58:21 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - \n\n\t***************************\n\tAPPLICATION FAILED TO START\n\t***************************\n\n\tDescription:\n\n\tField sessao in br.com.maxxmobi.chat.service.AtendimentoService required a bean of type 'br.com.maxxmobi.chat.model.SessaoChat' that could not be found.\n\n\n\tAction:\n\n\tConsider defining a bean of type 'br.com.maxxmobi.chat.model.SessaoChat' in your configuration.\n\nThe Bean is defined as:\n\n\t@SpringBootApplication(scanBasePackages={\"br.com.maxxmobi.chat\"})\n\t@EnableCaching\n\t@EnableConfigurationProperties({StorageProperties.class})\n\tpublic class ChatApplication  {\n\n\t\t...\n\n\t\t@Bean(name=\"sessao\", autowire=Autowire.BY_NAME)\n\t\t@Primary\n\t\tpublic Map<String, SessaoChat> getSessao() {\n\t\t\treturn new HashMap<String, SessaoChat>();\n\t\t}\n\n\t\t...\n\n\t}\n\nand It's been injected this way:\n\n\t@Service\n\tpublic class EventoWebSocket {\n\n\t\t@Autowired\n\t\tprivate Map<Long, String> idSessao;\n\t\n\t\t@Autowired\n\t\tprivate Map<String, SessaoChat> sessao;\n\t...\n\n        }\n\n\nWhat could I possibly be doing wrong? Is it related to lack of RAM memory??",
                "time": "2019-01-22 13:23:25",
                "index": 0,
                "user": "lamtf"
            },
            {
                "id": "5c471d4f9bfa375aab406d11",
                "text": "coding in a different language than english is really awkward btw :E  Did you check for circular dependencies? Also check the AtendimentoService class",
                "time": "2019-01-22 13:40:31",
                "index": 1,
                "user": "ghost~5b1fc43ed73408ce4f9d0fbf"
            },
            {
                "id": "5c471d5aba355012a47c814f",
                "text": ":D",
                "time": "2019-01-22 13:40:42",
                "index": 2,
                "user": "lamtf"
            },
            {
                "id": "5c471e1820b78635b6647519",
                "text": "well this code works sometimes..",
                "time": "2019-01-22 13:43:52",
                "index": 3,
                "user": "lamtf"
            },
            {
                "id": "5c471ec81cb70a372a1c2d98",
                "text": "I used Portuguese because of my team. The majority wins.. I got no choice :'D",
                "time": "2019-01-22 13:46:48",
                "index": 4,
                "user": "lamtf"
            },
            {
                "id": "5c471f15dab15872ced4b9c5",
                "text": "thanks for the advice about circular dependencies.. i guess it will solve the problem",
                "time": "2019-01-22 13:48:05",
                "index": 5,
                "user": "lamtf"
            },
            {
                "id": "5c472fa21cb70a372a1ca903",
                "text": "@lamtf your `@Bean` method that is `public Map<String, SessaoChat> getSessao()` is defining a bean that is a `Map<String, SessaoChat`rather than a bean that is a `SessaoChat`. The injection failure is happening in `AtendimentoService`. What does it look like?",
                "time": "2019-01-22 14:58:42",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5c4733c035350772cf709872",
                "text": "Now It's something like this:\n\n\t@Service\n\tpublic class AtendimentoService {\n\n\t\t...\n\n\t\t@Autowired\n\t\t@Lazy\n\t\tprivate Map<String, SessaoChat> sessao;\n\n\t\t@Autowired\n\t\tprivate Map<Long, String> idSessao;\n\n\t\t...\n\n\t}\n\n\nIt is still not working everytime, sometimes when I make the build it works, It seems to be related to the building process. I'm using jenkins to automatically build and deploy it. When i do it manually its more likely to work fine, but the command is the same.",
                "time": "2019-01-22 15:16:16",
                "index": 9,
                "user": "lamtf"
            },
            {
                "id": "5c4734018ce4bb25b8f1205d",
                "text": "adding  \"Lazy\" right there didn't work",
                "time": "2019-01-22 15:17:21",
                "index": 10,
                "user": "lamtf"
            },
            {
                "id": "5c47344835350772cf709a59",
                "text": "the object \"SessaoChat\" is create elsewhere when the user connects to the websocket",
                "time": "2019-01-22 15:18:32",
                "index": 11,
                "user": "lamtf"
            },
            {
                "id": "5c4736ca83189945242e5c9d",
                "text": "\t@Component\n\tpublic class ProcessaLoginChatService {\n\n\t\t@Autowired\n\t\t@Lazy\n\t\tprivate Map<String, SessaoChat> sessao;\n\t\t...\n\n\t\tpublic void iniciarSessaoChat(\n\t\t\t\t\t@Payload MensagemDeLogin login,\n\t\t\t\t\tSimpMessageHeaderAccessor headerAccessor,\n\t\t\t\t\tPrincipal principal)\n\t\t\t\t\tthrows Exception {\n\t\t...\n\t\t\tsessao.put(sessaoId, new SessaoChat(...));\n\t\t...\n\t\t}\n\n\t}\n\n\n............................................................................................\n\n\n\t@Controller\n\t@RestController\n\t@CrossOrigin(\"${origens-permitidas}\")\n\tpublic class SessaoController {\n\n\t\tprivate Logger logger = LoggerFactory.getLogger(getClass());\n\n\t\t@Autowired\n\t\tprivate SimpMessageSendingOperations messagingTemplate;\n\n\t\t...\n\n\t\t@Autowired\n\t\tprivate ProcessaLoginChatService processaLoginChatService;\n\n\t\t...\n\t\n\t\t@Autowired\n\t\t@Lazy\n\t\tprivate Map<String, SessaoChat> sessao;\n\t\n\t\t@Autowired\n\t\tprivate Map<Long, String> idSessao;\n\n\t\t@MessageMapping(\"/sessao.iniciar\")\n\t\tpublic void iniciar(\n\t\t\t\t@Payload MensagemDeLogin login,\n\t\t\t\tSimpMessageHeaderAccessor headerAccessor,\n\t\t\t\tPrincipal principal) {\n\t\t\n\t\t\ttry {\n\t\t\t\tprocessaLoginChatService.iniciarSessaoChat(login, headerAccessor, principal);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.error(getClass().getName(), e);\n\t\t\t}\n\n\t\t}\n\n\t\t...\n\n\t}",
                "time": "2019-01-22 15:29:14",
                "index": 12,
                "user": "lamtf"
            },
            {
                "id": "5c48b64ccb47ec30008e9b76",
                "text": "my ugly solution: \n\n\tpublic class SessaoChatMap implements Map<String, SessaoChat> {\n\n\t\tprivate HashMap<String, SessaoChat> map;\n\n\t\t...\n\t}",
                "time": "2019-01-23 18:45:32",
                "index": 63,
                "user": "lamtf"
            },
            {
                "id": "5c48b6acdab15872cedf45bb",
                "text": "At least i think it will work",
                "time": "2019-01-23 18:47:08",
                "index": 64,
                "user": "lamtf"
            }
        ]
    },
    {
        "id": 352,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ebe83d50e8a3131e4c2443c",
                "text": "efined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Invocation of init method failed; nested exception is java.lang.VerifyError: Bad type on operand stack\nException Details:\n  Location:\n    oracle/jdbc/driver/OraclePreparedStatement.isReaderEmpty(Ljava/io/Reader;)Ljava/io/Reader; @22: invokevirtual\n  Reason:\n    Type 'java/lang/Object' (current frame, stack[0]) is not assignable to 'java/io/Reader'\n  Current Frame:\n    bci: @22\n    flags: { }\n    locals: { 'oracle/jdbc/driver/OraclePreparedStatement', 'java/lang/Object' }\n    stack: { 'java/lang/Object', integer }\n  Bytecode:",
                "time": "2020-05-15 11:58:13",
                "index": 0,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe83e290f6db31beea4ee8",
                "text": "i am getting the following error do u have any idea?",
                "time": "2020-05-15 11:58:26",
                "index": 1,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe83eb0e8a3131e4c24450",
                "text": "ojdbc 10 and java 11",
                "time": "2020-05-15 11:58:35",
                "index": 2,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe83eee6f1673175010fd5",
                "text": "tomcat 9",
                "time": "2020-05-15 11:58:38",
                "index": 3,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe83f8aac441316a7d03ee",
                "text": "@Naeemchennai please use code wrapper, your post is unreadable\n```\nsome code here\n```",
                "time": "2020-05-15 11:58:48",
                "index": 4,
                "user": "Bryksin"
            },
            {
                "id": "5ebe844caac441316a7d0498",
                "text": "what is the tag i am new to here",
                "time": "2020-05-15 12:00:12",
                "index": 5,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe848020d9bf305767f6a9",
                "text": "triple backquote to open and triple backquote to close\nsee in input filed icon with M arrow down - thats markdown help",
                "time": "2020-05-15 12:01:04",
                "index": 6,
                "user": "Bryksin"
            },
            {
                "id": "5ebe85e16675d830b1a97770",
                "text": "```\n severity=ERROR logger=\"org.springframework.boot.SpringApplication\" thread=\"localhost-startStop-1\" msg=\"Application run failed\"\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Invocation of init method failed; nested exception is java.lang.VerifyError: Bad type on operand stack\nException Details:\n  Location:\n  Reason:\n    Type 'java/lang/Object' (current frame, stack[0]) is not assignable to 'java/io/Reader'\n  Current Frame:\n    bci: @22\n    flags: { }\n    locals: { 'oracle/jdbc/driver/OraclePreparedStatement', 'java/lang/Object' }\n    stack: { 'java/lang/Object', integer }\n  Bytecode:\n    0000010: 0878 4c2b 100a b608 7b2b b608 7d02 a000\n    0000020: 0501 b02b b608 7e2b b0\n  Stackmap Table:\n    full_frame(@19,{Object[#2],Object[#509]},{})\n    same_frame(@35)\n\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)\n```",
                "time": "2020-05-15 12:06:57",
                "index": 7,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe85f0f3ce603074bddb5d",
                "text": "done :)",
                "time": "2020-05-15 12:07:12",
                "index": 8,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe87fe863019312a5f7cc2",
                "text": "@Naeemchennai That looks like a JVM bug to me",
                "time": "2020-05-15 12:15:58",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5ebe8bc10e8a3131e4c258cc",
                "text": "what should be done to resolve it?",
                "time": "2020-05-15 12:32:01",
                "index": 10,
                "user": "Naeemchennai"
            },
            {
                "id": "5ebe8de713878c30b57f1d0f",
                "text": "update JDK ?",
                "time": "2020-05-15 12:41:11",
                "index": 11,
                "user": "Bryksin"
            }
        ]
    },
    {
        "id": 353,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c37a05ddfe13328202d59bc",
                "text": "I'm hoping someone may have an answer for me ... I have a simple auto configuration class which also uses @EnableConfigurationProperties (which are then autowired into the constructor for the configuration class).  This is similar to how the  CassandraAutoConfiguration class (and many others) work.\n\nhttps://github.com/spring-projects/spring-boot/blob/v2.1.0.RELEASE/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java\n\nI'm also using @ConditionalOnClass.  I'm trying to write a unit test using the ApplicaitonContextRunner as described at https://spring.io/blog/2018/03/07/testing-auto-configurations-with-spring-boot-2-0.\n\nMy test fails with an UnsatisfiedDependencyException saying it cannot find the properties bean to autowire to the constructor for the auto configuration class.  If that is the case, how can the CassandraAutoConfiguration class work correctly?  note that the tests for the CassandraAutoConfiguration class do not test the ConditionalOnClass case.",
                "time": "2019-01-10 19:43:25",
                "index": 0,
                "user": "mikeloll"
            },
            {
                "id": "5c37a2f0783a5553d812faf2",
                "text": "@mikeloll can you post the code you have that is throwing the `UnsatisfiedDependencyException`?",
                "time": "2019-01-10 19:54:24",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5c37a48a8db70e46c4e73106",
                "text": "At the moment I cannot but will as soon as I can.  It is baffling to me.",
                "time": "2019-01-10 20:01:14",
                "index": 2,
                "user": "mikeloll"
            },
            {
                "id": "5c37a53366f3433023a8b0b0",
                "text": "something like this should most likely work\n\n```java\nnew ApplicationContextRunner()\n  .withConfiguration(AutoConfigurations.of(MyAutoConfiguration.class))\n  .run(context -> {\n    assertThat(\u2026)\n  });\n```",
                "time": "2019-01-10 20:04:03",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c37a5b39289cc7aa7526334",
                "text": "and then to test the `@ConditionalOnClass` you\u2019d do something like\n\n```java\nnew ApplicationContextRunner()\n  .withConfiguration(AutoConfigurations.of(MyAutoConfiguration.class))\n  .withClassLoader(new FilteredClassLoader(MyClassToExclude.class))\n  .run(context -> {\n    assertThat(\u2026)\n  });\n```",
                "time": "2019-01-10 20:06:11",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5c37a5f78db70e46c4e73ac4",
                "text": "the only other question i\u2019d ask is the class you have inside `@EnableConfigurationProperties` - does that class have the `@ConfigurationProperties` annotation on it?",
                "time": "2019-01-10 20:07:19",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5c37a6199289cc7aa75265a7",
                "text": "Yes @edeandrea, it does have ConfiguraitonProperties attribute.",
                "time": "2019-01-10 20:07:53",
                "index": 6,
                "user": "mikeloll"
            },
            {
                "id": "5c37a625a57b501bcfe3cab2",
                "text": "And yes, that is exactly what I am doing in my test",
                "time": "2019-01-10 20:08:05",
                "index": 7,
                "user": "mikeloll"
            },
            {
                "id": "5c37a6328db70e46c4e73c1a",
                "text": "All works fine if i autowire the properties into each bean method within the config class",
                "time": "2019-01-10 20:08:18",
                "index": 8,
                "user": "mikeloll"
            },
            {
                "id": "5c37a639e7832c7aa8a588b8",
                "text": "then its probably something stupid :)",
                "time": "2019-01-10 20:08:25",
                "index": 9,
                "user": "edeandrea"
            },
            {
                "id": "5c37a68366f3433023a8b827",
                "text": "I'll put together a sample project tonight and come back.  Maybe a different set of eyes will easily spot it.",
                "time": "2019-01-10 20:09:39",
                "index": 10,
                "user": "mikeloll"
            },
            {
                "id": "5c37a686da98233022eeb03c",
                "text": "need to be able to see the test class along with the auto configuration class to help any further",
                "time": "2019-01-10 20:09:42",
                "index": 11,
                "user": "edeandrea"
            },
            {
                "id": "5c37a68ca57b501bcfe3ce05",
                "text": "I understand.",
                "time": "2019-01-10 20:09:48",
                "index": 12,
                "user": "mikeloll"
            },
            {
                "id": "5c37a6966a394e2821898f34",
                "text": "I appreciate your help so far.  Will come back in a bit.",
                "time": "2019-01-10 20:09:58",
                "index": 13,
                "user": "mikeloll"
            },
            {
                "id": "5c37a6a18db70e46c4e73e03",
                "text": "anytime!",
                "time": "2019-01-10 20:10:09",
                "index": 14,
                "user": "edeandrea"
            },
            {
                "id": "5c37a6dc2e25e453d75f9519",
                "text": "generally when i run into things like this i\u2019ll create a small empty project and just bring in the bare necessities that are causing the problem\u2026once i get it to work there then figure out how my \u201creal\u201d thing is different from what is working",
                "time": "2019-01-10 20:11:08",
                "index": 15,
                "user": "edeandrea"
            },
            {
                "id": "5c37a726dfe13328202d857b",
                "text": "does your auto-configuration class have any other `@ConditionalOn\u2026` annotations? does your properties class have any other annotations other than `@ConfigurationProperties`?",
                "time": "2019-01-10 20:12:22",
                "index": 16,
                "user": "edeandrea"
            },
            {
                "id": "5c37aa06da98233022eec959",
                "text": "@edeandrea That's pretty much what I did.  I'll upload to my github later and link here.  No, it doesn't use any other conditions on the class ... some of the bean methods inside of it do, tho. ",
                "time": "2019-01-10 20:24:38",
                "index": 19,
                "user": "mikeloll"
            },
            {
                "id": "5c37aa4a9289cc7aa7528216",
                "text": "@mikeloll sounds good. I don\u2019t work for Spring or anything so if work is slow tomorrow I can take a peek :)",
                "time": "2019-01-10 20:25:46",
                "index": 20,
                "user": "edeandrea"
            },
            {
                "id": "5c37ce3f5aa04d46c58e37eb",
                "text": "@edeandrea  so I ran another test, not using the class I really want to use ConditionalOnClass with but a random class from a new dependency.  And it works as it should.  So somehow the library I am using in the conditional is getting added to the classpath somehow.",
                "time": "2019-01-10 22:59:11",
                "index": 21,
                "user": "mikeloll"
            },
            {
                "id": "5c37ce55783a5553d814236d",
                "text": "So I've got something to go on.  Thanks for your help earlier.",
                "time": "2019-01-10 22:59:33",
                "index": 22,
                "user": "mikeloll"
            },
            {
                "id": "5c38cbed783a5553d81a9f1a",
                "text": "@edeandrea So following up on that issue I had.  It worked in my example app because I'm using the most recent version of boot.  But for the failing project I'm on 2.0.1 and this is  aknown issue (https://github.com/spring-projects/spring-boot/issues/13319).  So I'll be upgrading.",
                "time": "2019-01-11 17:01:33",
                "index": 45,
                "user": "mikeloll"
            },
            {
                "id": "5c38cc589289cc7aa759ee78",
                "text": "thanks for the follow-up @mikeloll. Glad you were able to find a solution (and not be banging your head against the wall!)",
                "time": "2019-01-11 17:03:20",
                "index": 46,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 354,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ca2331525686a7dc3ba47be",
                "text": "Im making a user registration system, and I want to check if a username and/or email already exists before storing the new user. Is it correct to use exceptions for this ?",
                "time": "2019-04-01 15:49:41",
                "index": 0,
                "user": "cemivb"
            },
            {
                "id": "5ca2334825686a7dc3ba49ee",
                "text": "not usually",
                "time": "2019-04-01 15:50:32",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5ca233b9a0790b29c943f047",
                "text": "So I guess it would be better to implement 2 boolean methods for checking those constraints in the service layer, and then use them in the frontend to decide what messages to show to the user ?3",
                "time": "2019-04-01 15:52:25",
                "index": 2,
                "user": "cemivb"
            },
            {
                "id": "5ca2340893fb4a7dc2b80d59",
                "text": "something like that. i usually do boolean-logic in the service layer and then throw a ConflictException or something similar in the web layer which gets translated to a 409 response, for example",
                "time": "2019-04-01 15:53:44",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5ca234a65a83c30a46f20e9b",
                "text": "I have been checking a couple of guides:  one of them throws an exception from the service layer and then gets captured and handled in the frontend code, and other solution is to implement a User Validator that checks for both username and email in the database",
                "time": "2019-04-01 15:56:22",
                "index": 4,
                "user": "cemivb"
            },
            {
                "id": "5ca234ca7ecbdc29cae15a24",
                "text": "you could throw it from the service, it depends on how thin the web layer is.",
                "time": "2019-04-01 15:56:58",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5ca234ea5a83c30a46f20fa5",
                "text": "My \"front layer\" is Vaadin, which is 100% Java code so its just easy to handle",
                "time": "2019-04-01 15:57:30",
                "index": 6,
                "user": "cemivb"
            },
            {
                "id": "5ca234f7b34ccd69e7495aed",
                "text": "no, i mean the controllers",
                "time": "2019-04-01 15:57:43",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5ca235bef851ee043d441af2",
                "text": "Not using controllers in this project, just Vaadin -> Service -> Models/DAO -> DB",
                "time": "2019-04-01 16:01:02",
                "index": 8,
                "user": "cemivb"
            },
            {
                "id": "5ca2361525686a7dc3ba6119",
                "text": "I guess Vaadin does some of the tasks that controllers would do",
                "time": "2019-04-01 16:02:29",
                "index": 9,
                "user": "cemivb"
            },
            {
                "id": "5ca236258148e555b22f7d30",
                "text": "Like field validation and stuff",
                "time": "2019-04-01 16:02:45",
                "index": 10,
                "user": "cemivb"
            },
            {
                "id": "5ca237127ecbdc29cae16ce4",
                "text": "it comes down to your preference. with vaadin you have pretty tight coupling between the front and back so i would maybe go for a Monad-type thing that's a \"Result/Error\"",
                "time": "2019-04-01 16:06:42",
                "index": 11,
                "user": "tonisostrat"
            },
            {
                "id": "5ca23900b34ccd69e7497aeb",
                "text": "Yeah thats the thing. My initial idea was a service layer with a function that stores the new user and then returns it. Before storing:\n- checks if the username already exists. If It does, I throw a userExistsException (custom made)\n- checks if the email already exists. If It does, I throw a emailExistsException (custom made)\n\nThen, on the front, I have a try catch block that tries to register the new user through the service function, and if one of those exceptions happen, I show error messages to the user depending on which happened. Would be a better practice to use Optional<User> as return type and avoid using exceptions? I dont know anything about Monad, just searched for it and found about it, I guess with the Optional type I cant send multiple messages to the front ?",
                "time": "2019-04-01 16:14:56",
                "index": 12,
                "user": "cemivb"
            }
        ]
    },
    {
        "id": 355,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd64f9de7cce550f595ecd7",
                "text": "Hi Guys,\nPlease help for this issue,\n\nException in thread \"restartedMain\" java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\nCaused by: java.lang.AbstractMethodError: org.springframework.boot.context.config.ConfigFileApplicationListener.supportsSourceType(Ljava/lang/Class;)Z\n\tat org.springframework.context.event.GenericApplicationListenerAdapter.supportsSourceType(GenericApplicationListenerAdapter.java:79)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.supportsEvent(AbstractApplicationEventMulticaster.java:290)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:222)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:193)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76)\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53)\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:308)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)\n",
                "time": "2019-11-21 08:49:33",
                "index": 0,
                "user": "Sivamani180915"
            },
            {
                "id": "5dd66dc0f977187add88daf2",
                "text": "@Sivamani180915   You have mismatched versions of Spring Framework and Spring Boot on the classpath",
                "time": "2019-11-21 10:58:08",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 356,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e04c02b260751301c129996",
                "text": "Hello everyone, after upgrading to spring boot 2.2 I'm getting these errors when the server comes up: \"Bean 'rvice' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\"",
                "time": "2019-12-26 14:14:03",
                "index": 0,
                "user": "erezfirt"
            },
            {
                "id": "5e04c03fc0c8ef301b18cbbd",
                "text": "Does anyone knows what's the problem here?",
                "time": "2019-12-26 14:14:23",
                "index": 1,
                "user": "erezfirt"
            },
            {
                "id": "5e04c08549314a1d45e243bc",
                "text": "This is just an example, the errors are not related just to FeignClientFactoryBean",
                "time": "2019-12-26 14:15:33",
                "index": 2,
                "user": "erezfirt"
            },
            {
                "id": "5e04d5af260751301c1336da",
                "text": "@erezfirt which version of SpringCloudDependecyManagement do you use?",
                "time": "2019-12-26 15:45:51",
                "index": 3,
                "user": "bvn13"
            },
            {
                "id": "5e04eb2cd2dadb3893810d07",
                "text": "@erezfirt worth reporting to Spring Cloud. This basically means a bean was initialiazed too early and won\u2019t be post-processed (proxied) if necessary",
                "time": "2019-12-26 17:17:32",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 357,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c47413a0a491251e3398fa2",
                "text": "Hi, we are using versioned webjars for our assets. This works fine with the help of the `webjars-locator`. Now we want to deliver these webjar assets from a CDN. How can we achieve this?\nExample: The following URL should be rewritten to  `https://assets.mycdn.com/myapp-assets/1.42/favicon/32x32.png`.\n```html\n<link rel=\"icon\" data-th-href=\"@{/webjars/myapp-assets/favicon/32x32.png}\" />\n```\n\nWhat I tried so far: Modify the resource handler:\n```java\n static class WebConfig implements WebMvcConfigurer {\n    @Override\n    void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/webjars/**\")\n                .addResourceLocations(\"https://assets.mycdn.com/\")\n                .resourceChain(false)\n        .addResolver(new WebJarsResourceResolver())\n        .addResolver(new PathResourceResolver())\n    }\n}\n```\nBut this way there's just a lookup to the CDN server if the resource exists there, but the URL is not rewritten.\n\nIt seems to me like I have to modify/replace the `org.springframework.web.servlet.resource.ResourceUrlProvider`, but the bean is always created in `WebMvcConfigurationSupport` and even if not `ResourceUrlProvider#getForLookupPath` is final and I would have to copy the source code which is never a good option.",
                "time": "2019-01-22 16:13:46",
                "index": 0,
                "user": "masooh"
            },
            {
                "id": "5c4742540a491251e339972d",
                "text": "@masooh there was an enhancement request, but it got declined. https://github.com/spring-projects/spring-framework/issues/16488\nCurrently the whole infrastructure relies on changing the path, not the host part. This change would be quite involved since it would require supporting CORS, Forwarded headers amongst other things.",
                "time": "2019-01-22 16:18:28",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5c4744ab0721b912a5bf145b",
                "text": "@bclozel Thank's for the fast answer. If I got it right the only proposed solution is to rewrite my URLs in the build process of the webjar. \nAnother idea which I had is to use [UrlRewriteFilter - Rewrite URL's in Java Web Application Servers](http://tuckey.org/urlrewrite/), but it replaces the URLs without the changes (inserting the version) from the `ResourceUrlEncodingFilter`. Is there a way to combine them?",
                "time": "2019-01-22 16:28:27",
                "index": 2,
                "user": "masooh"
            },
            {
                "id": "5c47456995e17b452591651f",
                "text": "@masooh that first filter, as far as I know, is like mod_rewrite for Apache HTTP. So rewriting incoming request URLs, not rewriting URLs in HTML pages. The `ResourceUrlEncodingFilter` is the filter we're using for the existing resource handling support. I don't think combining them will help.",
                "time": "2019-01-22 16:31:37",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5c47479a35350772cf71315e",
                "text": "@bclozel Yes UrlRewriteFilter is similar to mod_rewrite, but it can also rewrite responses: https://cdn.rawgit.com/paultuckey/urlrewritefilter/master/src/doc/manual/4.0/index.html#outbound-rule. It does this like the `ResourceUrlEncodingFilter` with rewriting the URLs which go through `response.encodeURL()`.",
                "time": "2019-01-22 16:40:58",
                "index": 4,
                "user": "masooh"
            }
        ]
    },
    {
        "id": 358,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5be15b3b7660cf07ca780c7e",
                "text": "i am unable to start a once working service after upgrading to spring boot 2.1.0.RELEASE. I\u2019m using Finchley.SR2 for the spring cloud version. It fails when I enable ZuulProxy",
                "time": "2018-11-06 09:13:31",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15bf0aa58bd16744b545d",
                "text": "You need to use release train Greenwich with Spring Boot 2.1, I think.",
                "time": "2018-11-06 09:16:32",
                "index": 1,
                "user": "shakuzen"
            },
            {
                "id": "5be15c2dde33dd0c96d8ea34",
                "text": "Yes, I have success using org.springframework.cloud:spring-cloud-dependencies:Greenwich.M1",
                "time": "2018-11-06 09:17:33",
                "index": 2,
                "user": "legart"
            },
            {
                "id": "5be15c997660cf07ca781688",
                "text": "but what\u2019s causing it though?",
                "time": "2018-11-06 09:19:21",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15cc1f25a725338fbd8ca",
                "text": "this was the error:\n>***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nAn attempt was made to call the method org.springframework.boot.autoconfigure.web.ServerProperties$Servlet.getServletPrefix()Ljava/lang/String; but it does not exist. Its class, org.springframework.boot.autoconfigure.web.ServerProperties$Servlet, is available from the following locations:\n\n    jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.1.0.RELEASE/8898af6accfab65ac6e232c1535abbc33cfa5fcb/spring-boot-autoconfigure-2.1.0.RELEASE.jar!/org/springframework/boot/autoconfigure/web/ServerProperties$Servlet.class\n\nIt was loaded from the following location:\n\n    file:/Users/user/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.1.0.RELEASE/8898af6accfab65ac6e232c1535abbc33cfa5fcb/spring-boot-autoconfigure-2.1.0.RELEASE.jar\n\n\nAction:\n\nCorrect the classpath of your application so that it contains a single, compatible version of org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
                "time": "2018-11-06 09:20:01",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15ccaf25a725338fbd933",
                "text": "The dependencies needs to match. You can use https://start.spring.io/actuator/info to see which versions can be used together.",
                "time": "2018-11-06 09:20:10",
                "index": 5,
                "user": "legart"
            },
            {
                "id": "5be15d03f25a725338fbdaca",
                "text": "the other services seem to work fine though",
                "time": "2018-11-06 09:21:07",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15d08de33dd0c96d8edb5",
                "text": "nothing has blown up yet xD",
                "time": "2018-11-06 09:21:12",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15d1d9088fe25bc6ade0d",
                "text": "Well, I started getting problems as soon as i enabled spring-cloud-config",
                "time": "2018-11-06 09:21:33",
                "index": 8,
                "user": "legart"
            },
            {
                "id": "5be15f7b7660cf07ca7828c2",
                "text": "cloud config worked fine on my end ",
                "time": "2018-11-06 09:31:39",
                "index": 9,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15f8c73127453372f6279",
                "text": "in fact just added the usual dependencies doesn\u2019t blow it up immediately",
                "time": "2018-11-06 09:31:56",
                "index": 10,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15f9b6200995df1444680",
                "text": "it\u2019s only when i started enabling the annotations did it start going foobared",
                "time": "2018-11-06 09:32:11",
                "index": 11,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15fbdaa58bd16744b6ea4",
                "text": "```\n@EnableDiscoveryClient\n//@EnableZuulProxy\n@EnableFeignClients\npublic class MainApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(MainApplication, args);\n    }\n}\n```",
                "time": "2018-11-06 09:32:45",
                "index": 12,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be15fde6494cd16731dd954",
                "text": "that\u2019s all there is to my app. enabling zuul causes it to fail during startup",
                "time": "2018-11-06 09:33:18",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be16213f25a725338fbfa25",
                "text": "Also with Greenwich.M1",
                "time": "2018-11-06 09:42:43",
                "index": 14,
                "user": "legart"
            },
            {
                "id": "5be162146494cd16731de8ab",
                "text": "?",
                "time": "2018-11-06 09:42:44",
                "index": 15,
                "user": "legart"
            },
            {
                "id": "5be1623eaa56280c971399de",
                "text": "switching to greenwich fixed the problem though. thanks",
                "time": "2018-11-06 09:43:26",
                "index": 16,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be16242aa58bd16744b809f",
                "text": "SR2, no good",
                "time": "2018-11-06 09:43:30",
                "index": 17,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be18688f25a725338fceeae",
                "text": "@chad_d_stud_twitter as already said previously, you\u2019re not supposed to mix and match Spring Boot and Spring Cloud versions. Spring Boot 2.1 requires `Greenwich`",
                "time": "2018-11-06 12:18:16",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5be2827f7326df140ec8a03a",
                "text": "@legart  @snicoll this is weird, now another service won\u2019t start up after switching to 2.1.0 and greenwich m1",
                "time": "2018-11-07 06:13:19",
                "index": 79,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be290bfc0e6da07fee933f4",
                "text": "nevermind, i followed another tutorial that seems to have fixed it",
                "time": "2018-11-07 07:14:07",
                "index": 81,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 359,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc54b4d50010612b27fa897",
                "text": "is it possible to set properties programmatically on an object? (essentially what @ConfigurationProperties does but at runtime). something like `applier.applyProperties(obj, prefix)`",
                "time": "2019-11-08 11:02:37",
                "index": 0,
                "user": "marcguilera"
            },
            {
                "id": "5dc54c8435889012b1cf5f45",
                "text": "All the bits should be in spring-beans. e.g. `PropertyAcessor#setPropertyValues(Map)`",
                "time": "2019-11-08 11:07:48",
                "index": 1,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 360,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d11ed57154d273638db7a96",
                "text": "Hello, is there a simple way to get `LocalTime` from a spring propertie with `@Value({\"${my-propertie}\") LocalTime someTime;` I am struggling with this ",
                "time": "2019-06-25 09:45:59",
                "index": 0,
                "user": "oknozor"
            },
            {
                "id": "5d11edd5aafbc326298106a7",
                "text": "@oknozor you may need a `@DateTimeFormat` on it as well",
                "time": "2019-06-25 09:48:05",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d11eddd492f010bcab92025",
                "text": "tried this ",
                "time": "2019-06-25 09:48:13",
                "index": 2,
                "user": "oknozor"
            },
            {
                "id": "5d11ee02aafbc32629810820",
                "text": "```\n    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE.TIME)\n    @Value(\"${ps2.messages.start-hour}\")\n    private LocalTime sendMessageStartHour;\n```",
                "time": "2019-06-25 09:48:50",
                "index": 3,
                "user": "oknozor"
            },
            {
                "id": "5d11ee265e67ff0bcbe6825c",
                "text": "context failed to load with the following error `java.lang.IllegalArgumentException: Could not resolve placeholder`",
                "time": "2019-06-25 09:49:26",
                "index": 4,
                "user": "oknozor"
            },
            {
                "id": "5d11ee53d010383639cede54",
                "text": "That means it couldn't find the property. It's got nothing to do with converting it to a LocalTime",
                "time": "2019-06-25 09:50:11",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5d11ee68492f010bcab924f7",
                "text": "Change it to String and you should get the same error",
                "time": "2019-06-25 09:50:32",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5d11ee8879a1932628825605",
                "text": "ah yes, my bad, this is due to my test environment not having this prop",
                "time": "2019-06-25 09:51:04",
                "index": 7,
                "user": "oknozor"
            },
            {
                "id": "5d11ee9130cc05479fc15326",
                "text": "thank you! ",
                "time": "2019-06-25 09:51:13",
                "index": 8,
                "user": "oknozor"
            },
            {
                "id": "5d11ef0179a1932628825ab5",
                "text": "Now i have a relevant error \n```",
                "time": "2019-06-25 09:53:05",
                "index": 9,
                "user": "oknozor"
            },
            {
                "id": "5d11ef1b67887347a08561ca",
                "text": "`Caused by: org.springframework.beans.ConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalTime'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.time.LocalTime': no matching editors or conversion strategy found\n`",
                "time": "2019-06-25 09:53:31",
                "index": 10,
                "user": "oknozor"
            },
            {
                "id": "5d11ef3630cc05479fc157b7",
                "text": "the prop value is ` \"10:30\"` ",
                "time": "2019-06-25 09:53:58",
                "index": 11,
                "user": "oknozor"
            },
            {
                "id": "5d11f6595e67ff0bcbe6ce53",
                "text": "You need a configured `ConversionService` bean.",
                "time": "2019-06-25 10:24:25",
                "index": 12,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 361,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c00c177a9b3ca34aebf30f2",
                "text": "can i place the schema of the database in an external repository and use them in the spring boot project with flyway? If anyone has any suggestion on how to externalize the flyway schema files ",
                "time": "2018-11-30 04:49:59",
                "index": 0,
                "user": "deepakmahapatra"
            },
            {
                "id": "5c00ea6448d021555acab5d7",
                "text": "@deepakmahapatra you can configure Flyway to use an alternative source repository so you could theorically have that as a dependency that you unpack somewhere. More a build/flyway question that might get more traffic on StackOverflow than here.",
                "time": "2018-11-30 07:44:36",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 362,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b97b4ea51a02e2a261429d9",
                "text": "is anyone facing \"No bean named 'entityManagerFactory' available\" with SBoot2 test?",
                "time": "2018-09-11 12:28:26",
                "index": 0,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b68bf59e0c1555e09778",
                "text": "it's a WebMvcTest",
                "time": "2018-09-11 12:35:23",
                "index": 3,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b6c7a04db554a70cf49a",
                "text": "WebMvcTest only bootstraps Web related things. ",
                "time": "2018-09-11 12:36:23",
                "index": 4,
                "user": "mdeinum"
            },
            {
                "id": "5b97b6cb45318b2dfe925b11",
                "text": "So no JPA, JDBC etc. ",
                "time": "2018-09-11 12:36:27",
                "index": 5,
                "user": "mdeinum"
            },
            {
                "id": "5b97b6f5cddb292dff5911c8",
                "text": "whatfor do you need a EntityManagerFactory in a WebMvcTest?",
                "time": "2018-09-11 12:37:09",
                "index": 6,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b7097189ae6fddab79b0",
                "text": "@mdeinum exactly, I wonder why it needs an emf",
                "time": "2018-09-11 12:37:29",
                "index": 7,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b719cddb292dff591333",
                "text": "@christianbuerckert use a mock. ",
                "time": "2018-09-11 12:37:45",
                "index": 8,
                "user": "mdeinum"
            },
            {
                "id": "5b97b72ecddb292dff59140d",
                "text": "we are using a classic layer: controller->service->repository",
                "time": "2018-09-11 12:38:06",
                "index": 9,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b79951a02e2a26143af5",
                "text": "If you want to test against all layers you should do something like:\n\n```java\n@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD)\npublic class IntegrationTest {\n\n    @LocalServerPort\n    int randomServerPort;\n```",
                "time": "2018-09-11 12:39:53",
                "index": 13,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b7b8f59e0c1555e09f35",
                "text": "weird thing is that a similar miroservice has the same config and tests fine.",
                "time": "2018-09-11 12:40:24",
                "index": 14,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b7d6550f8808f5934b44",
                "text": "maybe the service itself is missing the @Transactional annotation? I think I had this error once",
                "time": "2018-09-11 12:40:54",
                "index": 15,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b7f651a02e2a26143da8",
                "text": "@christianbuerckert just a specific method is required to be transact",
                "time": "2018-09-11 12:41:26",
                "index": 16,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b83be6e309365e380b58",
                "text": "but like Marten Deinum said, in MvcTest you don't have JPA and co",
                "time": "2018-09-11 12:42:35",
                "index": 17,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b8951e2b442a25f6c6e2",
                "text": "@christianbuerckert not getting what you're goin...",
                "time": "2018-09-11 12:44:05",
                "index": 18,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b8ade6e309365e380e54",
                "text": "so in WebMvc you normally mock the repositories and the entitymanager",
                "time": "2018-09-11 12:44:29",
                "index": 19,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b8eef3c26b08f65f2d7c",
                "text": "so can you be a bit more specific where the entitymanagerfactory is missing? Can you show some code of the class you are testing?",
                "time": "2018-09-11 12:45:34",
                "index": 20,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b96aa2343433d131b70f",
                "text": "we're using starter-data-jpa",
                "time": "2018-09-11 12:47:38",
                "index": 21,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b97b45318b2dfe926c54",
                "text": "controller/service(imp)/jparepository",
                "time": "2018-09-11 12:47:55",
                "index": 22,
                "user": "antpassecabs"
            },
            {
                "id": "5b97b9957189ae6fddab8a04",
                "text": "then in WebMvcTest you need to mock your jparepository",
                "time": "2018-09-11 12:48:21",
                "index": 23,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97b9ba7ce5f5314f968f13",
                "text": "because the bepository will not be created in WebMvcTest ",
                "time": "2018-09-11 12:48:58",
                "index": 25,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97bad70fb4232e38aa1952",
                "text": "``` \n@RunWith(SpringRunner.class)\n@WebMvcTest(AdminController.class)\npublic class AdminControllerTest {\n\n  @Mock UserGroupRepository userGroupRepository;\n  @Autowired private MockMvc mvc;\n\n  @Test\n  public void getMessageUnauthenticated() throws Exception {\n    mvc.perform(get(\"/user_group_privileges\").contentType(MediaType.APPLICATION_JSON))\n        .andExpect(status().is4xxClientError());\n  }\n}\n```",
                "time": "2018-09-11 12:53:43",
                "index": 26,
                "user": "antpassecabs"
            },
            {
                "id": "5b97bb1f550f8808f5935f2e",
                "text": "you are mocking the UserGroupRepository but not calling any mockup methods...",
                "time": "2018-09-11 12:54:55",
                "index": 27,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97bb5451a02e2a261453f7",
                "text": "I guess the get(..) is checking if the user is existent or has a specific group. So inside the get there are calls against the User GroupRepository?",
                "time": "2018-09-11 12:55:48",
                "index": 28,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97bb65a2343433d131c3a0",
                "text": "If so you need to fake the reply the UserGroupRepository gives to the get()",
                "time": "2018-09-11 12:56:05",
                "index": 29,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97bc36728ddf028291336a",
                "text": "```java\n    @MockBean\n    APIFactory factory;\n\n    @Test\n    public void test(){\n    LinkedBlockingQueue<TETest> events = new LinkedBlockingQueue<>();\n     BusListenerService.Client client = new BusListenerService.Client(null) {\n            @Override\n            public void doTest(TETest test) throws TException {\n                events.add(test);\n            }\n\n        };\n\n        Mockito.when(factory.createBusListenerClient()).thenReturn(client);\n}\n```\n\nwe use something like this to check if the factory is called and a specific doTest() operation is called.",
                "time": "2018-09-11 12:59:34",
                "index": 30,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97bc51728ddf0282913408",
                "text": "the key there is `@MockBean` instead of `@Mock`",
                "time": "2018-09-11 13:00:01",
                "index": 31,
                "user": "FA-tvonmoll"
            },
            {
                "id": "5b97bfc9a2343433d131e20b",
                "text": "@christianbuerckert \nthe test is about spring security, since a valid token is required",
                "time": "2018-09-11 13:14:49",
                "index": 32,
                "user": "antpassecabs"
            },
            {
                "id": "5b97bffba04db554a70d3083",
                "text": "@christianbuerckert so actually it never enter the method body",
                "time": "2018-09-11 13:15:39",
                "index": 33,
                "user": "antpassecabs"
            },
            {
                "id": "5b97c01c33ebb72e37fffdf5",
                "text": "then just use MockBean. So that the context will boot up and a bean is registered :)",
                "time": "2018-09-11 13:16:12",
                "index": 34,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c043a04db554a70d32bc",
                "text": "you can also make a @MockBean EntityManagerFactory factory. if you are sure that it will never be called.",
                "time": "2018-09-11 13:16:51",
                "index": 35,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c14ea04db554a70d3c6d",
                "text": "```\nField resourceRepository in ....AdminServiceImpl required a bean named 'entityManagerFactory' that could not be found.\n\n\nAction:\n\nConsider defining a bean named 'entityManagerFactory' in your configuration.\n```",
                "time": "2018-09-11 13:21:18",
                "index": 36,
                "user": "antpassecabs"
            },
            {
                "id": "5b97c178a04db554a70d3ce2",
                "text": "@MockBean EntityManagerfactory entityManagerFactory.   It seems it is registered by name and not by type ;)",
                "time": "2018-09-11 13:22:00",
                "index": 37,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c198cddb292dff59621c",
                "text": "or use @MockBean(name=\"entityManagerFactory\")",
                "time": "2018-09-11 13:22:32",
                "index": 38,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c1fca04db554a70d4080",
                "text": "indeed the attribute name is as required ;)",
                "time": "2018-09-11 13:24:12",
                "index": 39,
                "user": "antpassecabs"
            },
            {
                "id": "5b97c24d0fb4232e38aa4f03",
                "text": "`Field resourceRepository in ....AdminServiceImpl`this class is loaded by your context and requires the entitymanager",
                "time": "2018-09-11 13:25:33",
                "index": 40,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c25633ebb72e37000cda",
                "text": "can you tell us what this is?",
                "time": "2018-09-11 13:25:42",
                "index": 41,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c271a04db554a70d45bc",
                "text": "it looks like you need to mock `resourceRepository`",
                "time": "2018-09-11 13:26:09",
                "index": 42,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c29c33ebb72e37000f6b",
                "text": "a @service implementation, with mapstruct mapper and jparepository autowired.",
                "time": "2018-09-11 13:26:52",
                "index": 43,
                "user": "antpassecabs"
            },
            {
                "id": "5b97c2af728ddf0282915cac",
                "text": "mockbean that jparepository",
                "time": "2018-09-11 13:27:11",
                "index": 44,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c2e251a02e2a261488be",
                "text": "see snippet above please, already mocked B-)",
                "time": "2018-09-11 13:28:02",
                "index": 45,
                "user": "antpassecabs"
            },
            {
                "id": "5b97c2fa51a02e2a26148934",
                "text": "yea but you are using @Mock instead of @MockBean ",
                "time": "2018-09-11 13:28:26",
                "index": 46,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c31d7ce5f5314f96d056",
                "text": "not now @christianbuerckert  :D",
                "time": "2018-09-11 13:29:01",
                "index": 47,
                "user": "antpassecabs"
            },
            {
                "id": "5b97c3b0f3c26b08f65f7cd9",
                "text": "that's strange so the field resourceRepository is a UserGroupRepository ?",
                "time": "2018-09-11 13:31:28",
                "index": 48,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c3c3f59e0c1555e0f120",
                "text": "in this ...AdminServiceImpl class?",
                "time": "2018-09-11 13:31:47",
                "index": 49,
                "user": "christianbuerckert"
            },
            {
                "id": "5b97c8b4a2343433d1321d1f",
                "text": "nope, its a different repo\nindeed now that all the repos are mocked, the error is different\nit's trying to read properties from yaml.\nso the context is required...",
                "time": "2018-09-11 13:52:52",
                "index": 50,
                "user": "antpassecabs"
            }
        ]
    },
    {
        "id": 363,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3f318ff780a1521f1cae26",
                "text": "hello.\nIs there a possible way to configure a `cron job` dynamically ?\nsomething like this :\n```\npublic class DemoExample {\n    public String parameteredAttributeFunction() {\n        return \"0 0 * * * *\" ;          \n}\n\n    @Scheduled(cron = \"parameteredAttributeFunction()\")\n    public void demoServiceMethod()\n    {\n        System.out.println(\"Method executed \");\n    }\n \n}\n```\nIf no, is there an alternative solution ?",
                "time": "2019-01-16 13:28:47",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5c3f31bbf780a1521f1caef3",
                "text": "The problem with doing it with an annotation is that the String value of the annotation has to be defined statically",
                "time": "2019-01-16 13:29:31",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5c3f31ff95e17b45255e9a25",
                "text": "In my use case, I need to get the string value from DB",
                "time": "2019-01-16 13:30:39",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5c3f3245ba5936605bcbf44d",
                "text": "so instead of using the `@Scheduled` annotation, you could instead build your own bean definition that implements the `SchedulingConfig` interface and then programmatically call the methods on the `ScheduledTaskRegistrar`",
                "time": "2019-01-16 13:31:49",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c3f328895e17b45255e9e06",
                "text": "or you can inject the `TaskScheduler` bean into any of your own beans and call methods on it to create your tasks",
                "time": "2019-01-16 13:32:56",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5c3f32a3f780a1521f1cb442",
                "text": "@edeandrea ok thanks for your reply.",
                "time": "2019-01-16 13:33:23",
                "index": 5,
                "user": "amirensit"
            },
            {
                "id": "5c3f32aaf780a1521f1cb44e",
                "text": "@edeandrea Yeah, I once had similar requirements and I had to inject TaskSchedular",
                "time": "2019-01-16 13:33:30",
                "index": 6,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f32b532a8370605deb085",
                "text": "and schedule the task manually",
                "time": "2019-01-16 13:33:41",
                "index": 7,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f32b739596c372beeb395",
                "text": "https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html#scheduling has lots of good information",
                "time": "2019-01-16 13:33:43",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5c3f32cc0999400604fe107a",
                "text": "but I guess there should be something in spring for this ",
                "time": "2019-01-16 13:34:04",
                "index": 9,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f32ebcb47ec300051c617",
                "text": "but in general the annotation-based model can really only be used if your scheduling requirements can be known statically at application compile time",
                "time": "2019-01-16 13:34:35",
                "index": 10,
                "user": "edeandrea"
            },
            {
                "id": "5c3f32fe95e17b45255ea373",
                "text": "since the Java compiler enforces that annotation attribute constants are statically defined",
                "time": "2019-01-16 13:34:54",
                "index": 11,
                "user": "edeandrea"
            },
            {
                "id": "5c3f331f39596c372beeb7d9",
                "text": "@amirensit for your reference inject task schedular and call this \n```",
                "time": "2019-01-16 13:35:27",
                "index": 12,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f332535350772cf3e1ec7",
                "text": "```\nscheduler.schedule(task, new CronTrigger(\"0 15 9-17 * * MON-FRI\"));\n```\n",
                "time": "2019-01-16 13:35:33",
                "index": 13,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f3334c45b986d116d9bb9",
                "text": "@rajjaiswalsaumya  @edeandrea thanks",
                "time": "2019-01-16 13:35:48",
                "index": 14,
                "user": "amirensit"
            },
            {
                "id": "5c3f333e20b78635b631e0dd",
                "text": "inside this you can get the data from repository and do whatever you want",
                "time": "2019-01-16 13:35:58",
                "index": 15,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f33668318994524fba2c6",
                "text": "I will suggest write your own annotation which can fetch info from db and schedule it ",
                "time": "2019-01-16 13:36:38",
                "index": 16,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f337339596c372beeb91f",
                "text": "but i need to look if spring already has something",
                "time": "2019-01-16 13:36:51",
                "index": 17,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f3385ba5936605bcbfc68",
                "text": "https://stackoverflow.com/questions/46974272/spring-boot-add-new-schedule-job-dynamically has a good example as well",
                "time": "2019-01-16 13:37:09",
                "index": 18,
                "user": "edeandrea"
            },
            {
                "id": "5c3f33c80721b912a58c4849",
                "text": "yup, that's the way to do it.",
                "time": "2019-01-16 13:38:16",
                "index": 19,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f375420b78635b631fc1b",
                "text": "just as something to try - you could try doing something like this\n\n```java\n@Scheduled(cron = \u201c#{someBean.someMethodThatReturnsCronExpression}\u201d)\n```",
                "time": "2019-01-16 13:53:24",
                "index": 20,
                "user": "edeandrea"
            },
            {
                "id": "5c3f376cba5936605bcc16dd",
                "text": "@amirensit ```@Scheduled(cron = \"${some.property}\") ``` than use different profiles for different property files. How you can do it from a database, I am a bit unsure",
                "time": "2019-01-16 13:53:48",
                "index": 21,
                "user": "cash1981"
            },
            {
                "id": "5c3f37770999400604fe2f70",
                "text": "looking at `ScheduledAnnotationBeanPostProcessor` it seems there is interpolation that happens on the cron string",
                "time": "2019-01-16 13:53:59",
                "index": 22,
                "user": "edeandrea"
            },
            {
                "id": "5c3f3787ba355012a44a7de4",
                "text": "i\u2019m not sure if its smart enough to evaluate spring expressions",
                "time": "2019-01-16 13:54:15",
                "index": 23,
                "user": "edeandrea"
            },
            {
                "id": "5c3f37c48ce4bb25b8bef0a5",
                "text": "if it is, you could provide your own spring bean with a method that could query your database and return the cron String",
                "time": "2019-01-16 13:55:16",
                "index": 24,
                "user": "edeandrea"
            },
            {
                "id": "5c3f386720b78635b63201ec",
                "text": "i\u2019m actually curious myself as to whether that would work - i\u2019m going to try it",
                "time": "2019-01-16 13:57:59",
                "index": 25,
                "user": "edeandrea"
            },
            {
                "id": "5c3f3869ba355012a44a845d",
                "text": ":)",
                "time": "2019-01-16 13:58:01",
                "index": 26,
                "user": "edeandrea"
            },
            {
                "id": "5c3f392edab15872cea33725",
                "text": "@cash1981 In the database I get the day value.\nSo the method is executed every that day value",
                "time": "2019-01-16 14:01:18",
                "index": 28,
                "user": "amirensit"
            },
            {
                "id": "5c3f3a87ba355012a44a94ac",
                "text": "so i was able to confirm that the `@Scheduled` annotation does take in Spring expressions. I was able to successfully do this:\n\n```java\n@Component\npublic class SchedulingHelper {\n\t/**\n\t * Cron expression for running every 5 seconds\n\t * @return A cron expression for running every 5 seconds\n\t */\n\tpublic String getSchedulingCronExpression() {\n\t\treturn \"*/5 * * * * *\";\n\t}\n}\n```\n\n```java\n@Component\npublic class ScheduledTasks {\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(ScheduledTasks.class);\n\n\t@Scheduled(cron = \"#{schedulingHelper.getSchedulingCronExpression()}\")\n\tpublic void runTask() {\n\t\tLOGGER.info(\"Running task\");\n\t}\n}\n```\n\nWhen I run the app I see the scheduled task run every 5 seconds",
                "time": "2019-01-16 14:07:03",
                "index": 29,
                "user": "edeandrea"
            },
            {
                "id": "5c3f3ac535350772cf3e5674",
                "text": "so you can have your own bean which returns the cron expression and then in that bean do whatever you need to do to build that cron expression",
                "time": "2019-01-16 14:08:05",
                "index": 30,
                "user": "edeandrea"
            },
            {
                "id": "5c3f3b3b32a8370605def260",
                "text": "@edeandrea great work. Thanks",
                "time": "2019-01-16 14:10:03",
                "index": 33,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 364,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5caade9225686a7dc3f41600",
                "text": "In my web application i have separate backend and frontend. I use JWT springboot security for my backend.\nNow my question is : \n1. How can i handle it with my frontend ? How can i create JWT token with form and pass this along headers?\n2.How can i hide save ,delete buttons for general users?\n \nAny expert who can help me out. I am very beginner.",
                "time": "2019-04-08 05:39:30",
                "index": 0,
                "user": "KamrulHasan-Seu"
            },
            {
                "id": "5caaee5593fb4a7dc2f1fbc4",
                "text": "@KamrulHasan-Seu, you don't create a token in the frontend. you post the user's credentials to the backend which creates the token and then sends it back",
                "time": "2019-04-08 06:46:45",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cab1d0da0790b29c97f5a28",
                "text": "@tonisostrat can you provide me a simple demo pls?",
                "time": "2019-04-08 10:06:05",
                "index": 40,
                "user": "KamrulHasan-Seu"
            }
        ]
    },
    {
        "id": 365,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ceefce3ff3f016baa71b6b0",
                "text": "Hi everyone,\n\nwe have a problem with spring boots embedded tomcat and I hope someone here maybe has an Idea:\n\nWe have a third-party `ServletContextListener` which would normally be registered in the servlet context by a `web-fragment.xml`. Because the embedded tomcat doesn't read `web-fragment.xml`s we added a `ServletContextInitializer` which registers the listener instead.\n\nUnfortunately the listener calls `ServletContext.getServletRegistrations()` which is not allowed for listeners registered programatically which causes the following exception:\n\n```\njava.lang.UnsupportedOperationException: Section 4.4 of the Servlet 3.0 specification does not permit this method to be called from a ServletContextListener that was not defined in web.xml, a web-fragment.xml file nor annotated with @WebListener\n\tat org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getServletRegistrations(StandardContext.java:6571) ~[tomcat-embed-core-9.0.19.jar:9.0.19]\n```\n\nMore information can be found here: https://github.com/joinfaces/joinfaces/issues/683",
                "time": "2019-05-29 21:42:59",
                "index": 0,
                "user": "larsgrefer"
            },
            {
                "id": "5cef805d9b50f6393550db0d",
                "text": "@larsgrefer You might be able to use a `TomcatContextCustomizer` that calls `org.apache.catalina.Context.addApplicationListener(String)`",
                "time": "2019-05-30 07:03:57",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cf07b21e41fe15e75e78e84",
                "text": "@wilkinsona Thank you for the tip. It works beautifully: https://github.com/joinfaces/joinfaces/blob/master/joinfaces-autoconfigure/src/main/java/org/joinfaces/autoconfigure/servlet/WebFragmentRegistrationBean.java",
                "time": "2019-05-31 00:53:53",
                "index": 42,
                "user": "larsgrefer"
            }
        ]
    },
    {
        "id": 366,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e84c675987a3333241db26c",
                "text": "Hello, is there any guide which shows the configuration of an OAuth2 Resource Server with the most recent spring boot version? \n\nI am absolutely confused about all the dependencies. I have used `spring-security-oauth2-autoconfigure` in the past but I have seen, during a security audit, that some jackson-asl dependencies have security issues => The reason is that it uses an old oauth2 dependency but in a more recent version of the oauth2 library the affected dependency has been exchanged. But at github of the autoconfig lib it's stated that the library is in maintenance mode (see \"This project is in maintainence mode. Spring\u2019s new support for OAuth is built directly into Spring Security\"), so I wanted to check to setup it correctly. When I am importing `spring-security-oauth2` (version 2.4.0-RELEASE) all the used classes like `@EnableResourceServer`are deprecated but I have no clue why ;)",
                "time": "2020-04-01 16:51:01",
                "index": 0,
                "user": "judomu"
            },
            {
                "id": "5e84c6e21bca0e4c0ec6a283",
                "text": "But this library is deprecated itself, see \"The Spring Security OAuth project is deprecated. The latest OAuth 2.0 support is provided by Spring Security. See the OAuth 2.0 Migration Guide for further details.\". So I guess this one is also the wrong one ;)",
                "time": "2020-04-01 16:52:50",
                "index": 1,
                "user": "judomu"
            },
            {
                "id": "5e84c7eb4ed72e126b896425",
                "text": "If I read https://github.com/spring-projects/spring-security/wiki/OAuth-2.0-Migration-Guide correctly to setup Oauth2 I can't use `@EnableResourceServer` and `ResourceServerConfigurerAdapter` anymore.",
                "time": "2020-04-01 16:57:15",
                "index": 2,
                "user": "judomu"
            },
            {
                "id": "5e84c8d1233ee538f39448cd",
                "text": "@judomu there is a dedicated gitter room for https://gitter.im/spring-projects/spring-security. you\u2019ll have better luck with this question in that room. \n\nthere is a resource server in the spring-security samples repo: https://github.com/spring-projects/spring-security/tree/master/samples/boot/oauth2resourceserver",
                "time": "2020-04-01 17:01:05",
                "index": 3,
                "user": "scottfrederick"
            },
            {
                "id": "5e84c912e26a9452ed3c6655",
                "text": "@scottfrederick thank you",
                "time": "2020-04-01 17:02:10",
                "index": 4,
                "user": "judomu"
            }
        ]
    },
    {
        "id": 367,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5b96680b33ebb72e37f7a72f",
                "text": "What is the diffrence between spring boot and spring roo?",
                "time": "2018-09-10 12:48:11",
                "index": 0,
                "user": "balavenkatesh3322"
            },
            {
                "id": "5b96681d550f8808f58afdf7",
                "text": "I am little bit confused about that",
                "time": "2018-09-10 12:48:29",
                "index": 1,
                "user": "balavenkatesh3322"
            },
            {
                "id": "5b966830f59e0c1555d88ada",
                "text": "Anybody can clarify that?",
                "time": "2018-09-10 12:48:48",
                "index": 2,
                "user": "balavenkatesh3322"
            },
            {
                "id": "5b966a1d728ddf028288f542",
                "text": "@balavenkatesh3322 as far as I know Spring Roo is a scaffolding application. You run some commands on the command line and it will result in working code and configuration. ",
                "time": "2018-09-10 12:57:01",
                "index": 3,
                "user": "jreijn"
            },
            {
                "id": "5b966cb7a04db554a704f9c4",
                "text": "@jreijn  I got some clue. Thanks ",
                "time": "2018-09-10 13:08:07",
                "index": 7,
                "user": "balavenkatesh3322"
            }
        ]
    },
    {
        "id": 368,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5cab1151a84e0c501af63e72",
                "text": "When I launch a project, I get an exception, this exception is factory already defined",
                "time": "2019-04-08 09:16:01",
                "index": 0,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab11670aad63501949dc43",
                "text": "Can someone help me now",
                "time": "2019-04-08 09:16:23",
                "index": 1,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab117d8148e555b26b3a07",
                "text": ":D",
                "time": "2019-04-08 09:16:45",
                "index": 2,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab11af20fbe911ee7d1bdc",
                "text": "https://stackoverflow.com/questions/55568871/when-i-launch-a-project-i-get-an-exception-this-exception-is-factory-already-d",
                "time": "2019-04-08 09:17:35",
                "index": 3,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab12e693fb4a7dc2f3005a",
                "text": "why did you download and compile the source?",
                "time": "2019-04-08 09:22:46",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5cab134a016a930a458251c2",
                "text": "Because I want to learn the spring source code, such as looking at its core calls",
                "time": "2019-04-08 09:24:26",
                "index": 5,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab138e25686a7dc3f581ab",
                "text": "In spring5, it is officially recommended that we use Java code instead of web.xml",
                "time": "2019-04-08 09:25:34",
                "index": 6,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab14e1b34ccd69e782ae46",
                "text": "o.O ",
                "time": "2019-04-08 09:31:13",
                "index": 7,
                "user": "carlmolemans"
            },
            {
                "id": "5cab14e38148e555b26b4ea8",
                "text": "dependencies {\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n    testCompile group: 'junit', name: 'junit', version: '4.12'",
                "time": "2019-04-08 09:31:15",
                "index": 8,
                "user": "carlmolemans"
            },
            {
                "id": "5cab14f48148e555b26b4eb6",
                "text": "why would you deliberately use 2 junit versions? ",
                "time": "2019-04-08 09:31:32",
                "index": 9,
                "user": "carlmolemans"
            },
            {
                "id": "5cab154993fb4a7dc2f3108b",
                "text": "you can still step through the code if it's a proper dependency, the sources are downloaded too by gradle",
                "time": "2019-04-08 09:32:57",
                "index": 10,
                "user": "tonisostrat"
            },
            {
                "id": "5cab158c759abc043c86eed5",
                "text": "Because when I build projects using idea, it automatically USES two versions of Junit",
                "time": "2019-04-08 09:34:04",
                "index": 11,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab15b31f6e900d5efa1ac3",
                "text": "that makes no sense. idea uses whatever's on the compile classpath",
                "time": "2019-04-08 09:34:43",
                "index": 12,
                "user": "tonisostrat"
            },
            {
                "id": "5cab15baf851ee043d7fe7f0",
                "text": "I found that when I started debug, the project could be successfully launched, but the direct launch would report an error. Why",
                "time": "2019-04-08 09:34:50",
                "index": 13,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab161c759abc043c86f35f",
                "text": "Decompilation and source code can be different",
                "time": "2019-04-08 09:36:28",
                "index": 14,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab1622c55bd14d35ab751d",
                "text": "> In spring5, it is officially recommended that we use Java code instead of web.xml\n\nthis means you should **configure** your application in Java code instead of using  xml configuration",
                "time": "2019-04-08 09:36:34",
                "index": 15,
                "user": "tonisostrat"
            },
            {
                "id": "5cab1629f851ee043d7feb3d",
                "text": "@Cameron-Wang : https://github.com/spring-projects/spring-boot/issues/10617 ",
                "time": "2019-04-08 09:36:41",
                "index": 16,
                "user": "carlmolemans"
            },
            {
                "id": "5cab164a8148e555b26b5a06",
                "text": "> In spring5, it is officially recommended that we use Java code instead of web.xml\n\nthis means you should **configure** your application in Java code instead of using  xml configuration",
                "time": "2019-04-08 09:37:13",
                "index": 17,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab164d759abc043c86fc23",
                "text": "yes",
                "time": "2019-04-08 09:37:17",
                "index": 18,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab165f93fb4a7dc2f31853",
                "text": "Thank you. Let me have a look",
                "time": "2019-04-08 09:37:35",
                "index": 19,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab1680b34ccd69e782bd65",
                "text": "This is different from my question",
                "time": "2019-04-08 09:38:08",
                "index": 20,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab168b25686a7dc3f59665",
                "text": "Anyway, thank you",
                "time": "2019-04-08 09:38:19",
                "index": 21,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab168d25686a7dc3f59667",
                "text": "the cause is the same",
                "time": "2019-04-08 09:38:21",
                "index": 22,
                "user": "carlmolemans"
            },
            {
                "id": "5cab169ec55bd14d35ab7929",
                "text": "I found that when I started debug, the project could be successfully launched",
                "time": "2019-04-08 09:38:38",
                "index": 23,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab16ac20fbe911ee7d3fdc",
                "text": "being \"I would recommend looking at its class loading to see if it can be configured so that it doesn't load the same classes multiple times with different class loaders.\"",
                "time": "2019-04-08 09:38:52",
                "index": 24,
                "user": "carlmolemans"
            },
            {
                "id": "5cab16e60aad6350194a05b8",
                "text": "ok,Let me try",
                "time": "2019-04-08 09:39:50",
                "index": 25,
                "user": "Cameron-Wang"
            },
            {
                "id": "5cab16eff851ee043d7ff0a9",
                "text": "if you're compiling the source then there's definitely some JUnit-related dpependencies in the spring code",
                "time": "2019-04-08 09:39:59",
                "index": 26,
                "user": "tonisostrat"
            },
            {
                "id": "5cab1791a0790b29c97f34a6",
                "text": "I don't think this problem has anything to do with Junit",
                "time": "2019-04-08 09:42:41",
                "index": 27,
                "user": "Cameron-Wang"
            }
        ]
    },
    {
        "id": 369,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5ba4b2491043315947c30d36",
                "text": "Hello all, I'm looking for some documentation around adding in oauth2 client to a Spring Boot app. I don't need security for the app itself. I've tried looking in the usual places but finding a lot of contradictory and incomplete examples.",
                "time": "2018-09-21 08:56:41",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5ba4b25bbe4f300626c72c87",
                "text": "What usual places have you looked at?",
                "time": "2018-09-21 08:56:59",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ba4b34be6046343f3947a77",
                "text": "Hi @snicoll https://spring.io and the Spring Boot sample projects",
                "time": "2018-09-21 09:00:59",
                "index": 2,
                "user": "mplanchant"
            },
            {
                "id": "5ba4b35e33da0f649e2ffea0",
                "text": "The main cause of my confusion is over which dependencies I should be using",
                "time": "2018-09-21 09:01:18",
                "index": 3,
                "user": "mplanchant"
            },
            {
                "id": "5ba4b386f7e15806250247b5",
                "text": "Reading the doc should help",
                "time": "2018-09-21 09:01:58",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5ba4b3901043315947c31529",
                "text": "What version of Spring Boot are you using?",
                "time": "2018-09-21 09:02:08",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ba4b64fb4990c30eee8fd3d",
                "text": "I'm using the latest version",
                "time": "2018-09-21 09:13:51",
                "index": 8,
                "user": "mplanchant"
            },
            {
                "id": "5ba4b662b9531f2dfa9bfb30",
                "text": "For example:\n```\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.security.oauth.boot</groupId>\n            <artifactId>spring-security-oauth2-autoconfigure</artifactId>\n            <version>2.0.5.RELEASE</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-oauth2-client</artifactId>\n            <version>5.0.8.RELEASE</version>\n        </dependency>\n```",
                "time": "2018-09-21 09:14:10",
                "index": 10,
                "user": "mplanchant"
            },
            {
                "id": "5ba4b684b9531f2dfa9bfb71",
                "text": "adding version in Spring Boot is usually not recommend unless you really have to.",
                "time": "2018-09-21 09:14:44",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5ba4b6a58909f71f75074bb9",
                "text": "OK",
                "time": "2018-09-21 09:15:17",
                "index": 12,
                "user": "mplanchant"
            },
            {
                "id": "5ba4b6a71043315947c327e4",
                "text": "Have you looked at https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-security-oauth2 ?",
                "time": "2018-09-21 09:15:19",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ba4b6c7e5c2cc56adc04707",
                "text": "We do expose cache metrics already, don\u2019t we?",
                "time": "2018-09-21 09:15:51",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5ba4b6db8909f71f75074c87",
                "text": "Would you like to turn this into a documentation PR?",
                "time": "2018-09-21 09:16:11",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5ba4b70a1043315947c32958",
                "text": "Yes, I've read that. It doesn't seem to cover client_credentials grant type",
                "time": "2018-09-21 09:16:58",
                "index": 16,
                "user": "mplanchant"
            },
            {
                "id": "5ba4bc28d655361f76305efc",
                "text": "@snicoll should I be using `spring-security-oauth2-autoconfigure`?",
                "time": "2018-09-21 09:38:48",
                "index": 40,
                "user": "mplanchant"
            },
            {
                "id": "5ba4c33d5df5194734f045a8",
                "text": "@mplanchant I don\u2019t know what you\u2019re trying to do yet so can\u2019t really say",
                "time": "2018-09-21 10:09:01",
                "index": 47,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 370,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5cc3ef25990feb45180d6eed",
                "text": "any good example for Jasper Report with Spring boot.\nbecause currently i am using JDBC connection separably to communicate with Jasper Report.\nin spite of having Spring DATA JPA auto configured.",
                "time": "2019-04-27 05:56:53",
                "index": 0,
                "user": "janamcroods"
            },
            {
                "id": "5cc3ef973b6cb0686a5e5656",
                "text": "@janamcroods can you please look into this - https://www.stackextend.com/java/generate-pdf-document-using-jasperreports-and-spring-boot/",
                "time": "2019-04-27 05:58:47",
                "index": 1,
                "user": "prog20901"
            }
        ]
    },
    {
        "id": 371,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e307a61594a0517c23eb9f4",
                "text": "Coming from the NodeJS world, I was expecting Profiles to work in a similar manner as NODE_ENV. I know it _can_ but I haven't figured out how to wire it up.",
                "time": "2020-01-28 18:16:01",
                "index": 0,
                "user": "djensen47"
            },
            {
                "id": "5e307b5e15941335582d6fa8",
                "text": "Here's the Profiles setup I'm looking for:\n- application.yaml has all the defaults and is always loaded first\n- default environment is dev; default environment can be overwritten with an environment variable\n- application-ENV.yaml is loaded next (the default is dev)\n- application-local.yaml is always loaded but only if present\n",
                "time": "2020-01-28 18:20:14",
                "index": 1,
                "user": "djensen47"
            },
            {
                "id": "5e307e39f6945f41ef319610",
                "text": "@djensen47 to understand how things work with Spring Boot, there are two simple rules:\n1) property sources are considered from the most specific to the least specific (see ordering here: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config)\n2) you can select active profiles with the `spring.profiles.active` (with, for example a CLI argument or an env variable). \n\nAlso with yml, you don't need to have multiple files as you can write down properties for many profiles in a single file: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-yaml ",
                "time": "2020-01-28 18:32:25",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5e307eb06f9d3d3498f54d03",
                "text": "I guess the first link will be the key difference: properties can be bound from multiple sources, so you don't need to combine/activate environments to bind properties. You can add a bunch of them as env variables and keep the defaults in the yml. ",
                "time": "2020-01-28 18:34:24",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5e307ede3aca1e4c5f39eb70",
                "text": "(We prefer multiple files)",
                "time": "2020-01-28 18:35:10",
                "index": 4,
                "user": "djensen47"
            },
            {
                "id": "5e307f35433e1d40396c5441",
                "text": "What isn't super clear in the docs, what happens if I set `spring.profiles.active=dev,local` I take it the default application.yaml first, then dev overwrites, then local overwrites?",
                "time": "2020-01-28 18:36:37",
                "index": 5,
                "user": "djensen47"
            },
            {
                "id": "5e307f46d9895b17c3a5b92c",
                "text": "And will it complain if dev or local does not exist?",
                "time": "2020-01-28 18:36:54",
                "index": 6,
                "user": "djensen47"
            },
            {
                "id": "5e307f6de8a8383559ed4077",
                "text": "The problem I'm having (in general and with this) is the salad bar of options on how to do things.",
                "time": "2020-01-28 18:37:33",
                "index": 7,
                "user": "djensen47"
            },
            {
                "id": "5e335be3fe0e6f74e9ebb260",
                "text": "@djensen47 I didn't see anyone answer this for you, so excuse me if this is a repeat: \n\nBefore I begin, I would encourage you to look at spring-cloud-config (as this externalizes your configuration from your application code.) Don't let the \"cloud\" deter you, you can use this for \"normal\" boot applications as well. Also, I set this up in our environment in 2016, so things *may* have changed since I did this work and I would recommend looking at the source code around the Spring Environment abstraction.\n\nYou can setup defaults in application.yml (including the default profile(s)): \n\n```\n---\n\nspring:\n  profiles:\n    active: dev\n```\n\nThen you can define environment-specific settings in your `application-dev.yml`, `application-uat.yml`, 'application-prod.yml` etc.\n\nI would treat those as mutually exclusive because if you specify more than one, (like \"dev, local\") then properties in either of those will override the ones in your application.yml file, however, the order of profile-specific files is non-deterministic (well, it might be by something like alpha order) You can use additional profiles for settings that are shared across environments but I would not rely on them to override a property in some other profile-specific file.  You might be able to inject something that orders the profile-specific property sources in some deterministic manner (based on your environmental rules) but I think you would be going down a rabbit hole there.\n\nI hope this helps. \n",
                "time": "2020-01-30 22:42:43",
                "index": 83,
                "user": "tkvangorder"
            },
            {
                "id": "5e335eb4e8a838355901cfce",
                "text": "hah, following this up: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-profile-specific-properties: \n\n\"If several profiles are specified, a last-wins strategy applies. For example, profiles specified by the spring.profiles.active property are added after those configured through the SpringApplication API and therefore take precedence.\"",
                "time": "2020-01-30 22:54:44",
                "index": 84,
                "user": "tkvangorder"
            }
        ]
    },
    {
        "id": 372,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5ba121ff3b7e6c2edd365535",
                "text": "what's the best document to read to learn how to use `WebClient`? specifically I'm not sure how best to serialize the body to json",
                "time": "2018-09-18 16:04:15",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5ba127677dca3065031cae76",
                "text": "@xenoterracide the WebClient documentation (https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-client) would be a good place to start",
                "time": "2018-09-18 16:27:19",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5ba12798913ba7799b0bc46f",
                "text": "or more specifically https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-client-body",
                "time": "2018-09-18 16:28:08",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5ba134d5be4f300626b20c58",
                "text": "@edeandrea thanks, I was looking at various posts, don't know why I didn't think to look at the reference docs",
                "time": "2018-09-18 17:24:37",
                "index": 3,
                "user": "xenoterracide"
            },
            {
                "id": "5ba147e1913ba7799b0c9bd5",
                "text": "```\n Mono<Person> personMono = ... ;\n\n    Mono<Void> result = client.post()\n            .uri(\"/persons/{id}\", id)\n            .contentType(MediaType.APPLICATION_JSON)\n            .body(personMono, Person.class)\n            .retrieve()\n            .bodyToMono(Void.class);\n\n\n    Flux<Person> personFlux = ... ;\n\n    Mono<Void> result = client.post()\n            .uri(\"/persons/{id}\", id)\n            .contentType(MediaType.APPLICATION_STREAM_JSON)\n            .body(personFlux, Person.class)\n            .retrieve()\n            .bodyToMono(Void.class);\n```",
                "time": "2018-09-18 18:45:53",
                "index": 11,
                "user": "xenoterracide"
            }
        ]
    },
    {
        "id": 373,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ee76e7e2cf2f36eae5ea708",
                "text": "Hi, we recently upgraded from Spring Boot 2.2.7 to 2.2.8, running on PCF (Azure). Now we just ran into an issue where the app crashed in the end with \"Too many open files\". \"files\" actually were open TCP sockets, around 1.3 million. As there are quite some other dependency upgrades, it's very hard to figure out where it goes wrong. We actually had 32 instances crashing and reproduced it in another environment pretty easily.",
                "time": "2020-06-15 12:50:06",
                "index": 0,
                "user": "martinvisser"
            },
            {
                "id": "5ee779df035dfa126120a84a",
                "text": "Interesting, same was just reported for 2.3.1\n:point_up: [June 15, 2020 11:06 AM](https://gitter.im/spring-projects/spring-boot?at=5ee748232cf2f36eae5e4884)",
                "time": "2020-06-15 13:38:39",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ee779eb7b6da9126a977f8a",
                "text": "Are you both using Tomcat?",
                "time": "2020-06-15 13:38:51",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5ee779f71e099b0388c9abdb",
                "text": "~~Yes, it's using Tomcat~~ No, it's webflux. There also was an update in the tomcat library, but that's for one of our stubs",
                "time": "2020-06-15 13:39:03",
                "index": 3,
                "user": "martinvisser"
            },
            {
                "id": "5ee77a507a7f8d2d6337cb3e",
                "text": "I'm using Undertow and haven't noticed any issues",
                "time": "2020-06-15 13:40:32",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5ee77b325782a31278fea7bf",
                "text": "I think it has something to do with the OS, because running on my Mac works just fine. However in PCF it's linux",
                "time": "2020-06-15 13:44:18",
                "index": 6,
                "user": "martinvisser"
            },
            {
                "id": "5ee77b392cf2f36eae5ed0f0",
                "text": "Might be the Netty upgrade? They both went to Netty 4.1.50.Final ",
                "time": "2020-06-15 13:44:25",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5ee77be1a85de30394155fd7",
                "text": "Still after a couple of hours it still has all the open sockets. So they really aren't closed.",
                "time": "2020-06-15 13:47:13",
                "index": 8,
                "user": "martinvisser"
            },
            {
                "id": "5ee77bf21e099b0388c9b3d1",
                "text": "netty-transport-native-epoll if it's different on mac?",
                "time": "2020-06-15 13:47:30",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5ee77c6aef5c1c28f0248204",
                "text": "I guess so, because it's for Linux specifically: io.netty:netty-transport-native-epoll:linux-x86_64:4.1.50.Final",
                "time": "2020-06-15 13:49:30",
                "index": 10,
                "user": "martinvisser"
            },
            {
                "id": "5ee78508a85de30394157bf8",
                "text": "Yes, I meant because it hasn't changed on a mac, that dependency may be the culprit",
                "time": "2020-06-15 14:26:16",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5ee7870c7c64f31f11610e43",
                "text": "It's not netty, because I downgraded SB to 2.2.7 and only upgraded netty to 4.1.50 and the sockets do what they're supposed to do: close",
                "time": "2020-06-15 14:34:52",
                "index": 12,
                "user": "martinvisser"
            },
            {
                "id": "5ee7891d7b6da9126a97aaf9",
                "text": "Probably worth a spring-boot issue now then",
                "time": "2020-06-15 14:43:41",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5ee789335782a31278fed401",
                "text": "with all that info",
                "time": "2020-06-15 14:44:03",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5ee78b5030401c1f245a4a3f",
                "text": "Yeah, only then I need a stripped down version of the application which can reproduce it easily",
                "time": "2020-06-15 14:53:04",
                "index": 15,
                "user": "martinvisser"
            },
            {
                "id": "5ee78d707a7f8d2d633802fa",
                "text": "\"need\" is a strong word, especially as there's already someone else with the same problem ;)",
                "time": "2020-06-15 15:02:08",
                "index": 16,
                "user": "OrangeDog"
            },
            {
                "id": "5ee78d8329d8bc28f9fa0e83",
                "text": "don't let @snicoll see I said that",
                "time": "2020-06-15 15:02:27",
                "index": 17,
                "user": "OrangeDog"
            },
            {
                "id": "5ee78d8b1e099b0388c9e51a",
                "text": "haha",
                "time": "2020-06-15 15:02:35",
                "index": 18,
                "user": "martinvisser"
            },
            {
                "id": "5ee792c049260560aa61192c",
                "text": "Yo",
                "time": "2020-06-15 15:24:48",
                "index": 19,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 374,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbf906d1c100a4f296c497c",
                "text": "is it possible to make an annotation that composes/extends another annotation; that doesn't support being applied to annotations",
                "time": "2018-10-11 18:03:25",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5bc049be271506518dfaa0d5",
                "text": "@xenoterracide I don't understand your question. Are you talking about this? https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-meta-annotations",
                "time": "2018-10-12 07:14:06",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5bc4d580f659e67772bef96e",
                "text": "@bclozel yes essentially, but the annotation isn't spring, and doesn't have TYPE as an available application",
                "time": "2018-10-15 17:59:28",
                "index": 86,
                "user": "xenoterracide"
            }
        ]
    },
    {
        "id": 375,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ccada6b5b3f941aa5cb744c",
                "text": "Hi everyone, I'm trying to migrate a service from SpringBoot 1.5.x to 2.1.4. So far so good. My issue at this point is that even when I configure management.server.port=9999 in my config.yaml file, the actuator endpoints are published on server.httpPort=8080. Tomcat is initializing the 9999 port properly, but no endpoint is published there. Any clue?",
                "time": "2019-05-02 11:54:19",
                "index": 0,
                "user": "ctasada"
            },
            {
                "id": "5ccaef4a4b4cb471d9952ad4",
                "text": "@here Still trying to solve the issue, but seems that the actuator endpoints are registered before the port 9999 is started. Could this be related? Is there any way of controlling that order?",
                "time": "2019-05-02 13:23:22",
                "index": 2,
                "user": "ctasada"
            },
            {
                "id": "5ccaf78e6a84d76ed831b963",
                "text": "@ctasada When you set the management port, the endpoints should only be available on that port. Can you share a small sample that shows them being accessible on the main port?",
                "time": "2019-05-02 13:58:38",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5ccaf8d1b489bb6ed7020022",
                "text": "@wilkinsona I'm trying to create a sample service to replicate it. I will share it once I manage to replicate the issue",
                "time": "2019-05-02 14:04:01",
                "index": 4,
                "user": "ctasada"
            }
        ]
    },
    {
        "id": 376,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cf6f3edb76eac527aa37e9e",
                "text": "I have an `application.yaml` with:\n```\napp:\n  test-map:\n    /GaR+sxg78ox3W-0/pl==: 'test@email.com'\n```\nbeing mapping like:\n```\n@ConfigurationProperties(prefix = \"app\")\ndata class MyProperties(\n\tval testMap: Map<String, String>\n)\n```\nthe result is:\n```\nMyProperties(testMap={GaRsxg78ox3W-0pl=test@email.com})\n```\nThe key value was modified.\nIs it an expected result for a string with `+==` characters? is it possible to avoid it? ",
                "time": "2019-06-04 22:42:53",
                "index": 0,
                "user": "laguiar"
            },
            {
                "id": "5cf6f419bf4cbd167c2fbcf1",
                "text": "what if you quote the key aswell?",
                "time": "2019-06-04 22:43:37",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cf6f4526f530d3b613976a2",
                "text": "the same `MyProperties(testMap={GaRsxg78ox3W-0pl=test@email.com})`",
                "time": "2019-06-04 22:44:34",
                "index": 2,
                "user": "laguiar"
            },
            {
                "id": "5cf6f4643dcdab4003eea0a6",
                "text": "```\napp:\n  test-map:\n    '/GaR+sxg78ox3W-0/pl==': 'test@email.com'\n```",
                "time": "2019-06-04 22:44:52",
                "index": 3,
                "user": "laguiar"
            },
            {
                "id": "5cf6f4ce6fc5846bab623696",
                "text": "I didn't find where exactly it can be checked on Boot code",
                "time": "2019-06-04 22:46:38",
                "index": 4,
                "user": "laguiar"
            },
            {
                "id": "5cf6f4e4faac6439343eeb56",
                "text": "this probably has nothing to do with SB but how snakeyaml parses the fiel",
                "time": "2019-06-04 22:47:00",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5cf6f4e6481ef4167bcf033f",
                "text": "file*",
                "time": "2019-06-04 22:47:02",
                "index": 6,
                "user": "tonisostrat"
            },
            {
                "id": "5cf6f7f59b50f63935822da1",
                "text": "@laguiar, check this out\n```\napp:\n  test-map:\n    '[/GaR+sxg78ox3W-0/pl==]': 'test@email.com'\n\n```",
                "time": "2019-06-04 23:00:05",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5cf6f8014dfb4240047e235b",
                "text": "single quotes and brackets work",
                "time": "2019-06-04 23:00:17",
                "index": 8,
                "user": "tonisostrat"
            },
            {
                "id": "5cf6f926cea8295279f30f6d",
                "text": "@tonisostrat yeap... that works, thanks ;)",
                "time": "2019-06-04 23:05:10",
                "index": 9,
                "user": "laguiar"
            },
            {
                "id": "5cf6f971cea8295279f3115a",
                "text": "when I have some time, will check snakeyaml anyway ",
                "time": "2019-06-04 23:06:25",
                "index": 10,
                "user": "laguiar"
            },
            {
                "id": "5cf6f982faac6439343f0f6b",
                "text": "well, it's not snakeyaml specifically but the yaml spec",
                "time": "2019-06-04 23:06:42",
                "index": 11,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 377,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d24eef858c6811bf97da0e5",
                "text": "I'm thrust into a spring-boot website, with minimal knowledge of Spring (or Java for that matter), so excuse the dumb question: I'm looking at profiles, and I see that profiles can be selected by an environment variable, or in the build. Are those fundamentally different where the build variable sets a compile-time change, or is it really just a runtime pre-selection?",
                "time": "2019-07-09 19:46:00",
                "index": 0,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24ef4ab0027d2b19a1b81b",
                "text": "and I've seen about a half dozen ways to set a profile -- how can I check which profile is set, and where the profile came from?",
                "time": "2019-07-09 19:47:22",
                "index": 1,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24efc617cc7b05ca9e14e1",
                "text": "Usually the active profiles are emitted when the application starts up in a line emitted to the logger",
                "time": "2019-07-09 19:49:26",
                "index": 2,
                "user": "glammr1"
            },
            {
                "id": "5d24efd6f5dd14574256acfe",
                "text": "I don't know if there is a way to find out where the profile came from",
                "time": "2019-07-09 19:49:42",
                "index": 3,
                "user": "glammr1"
            },
            {
                "id": "5d24eff817cc7b05ca9e1613",
                "text": "I *think* profile selection is runtime only, but don't quite me on that.",
                "time": "2019-07-09 19:50:16",
                "index": 4,
                "user": "glammr1"
            },
            {
                "id": "5d24f0260c8c4114d9ff4e3e",
                "text": "(It may be possible to set a default list of active profiles in the JAR/WAR packaging that I'm unaware of.)",
                "time": "2019-07-09 19:51:02",
                "index": 5,
                "user": "glammr1"
            },
            {
                "id": "5d24f04358c6811bf97dadc0",
                "text": "Ok, so check the start of the logs to see which profile is selected, and to change it, hope to find a reference to that profile, and change it there",
                "time": "2019-07-09 19:51:31",
                "index": 6,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24f050bea9f3574125e175",
                "text": "yes",
                "time": "2019-07-09 19:51:44",
                "index": 7,
                "user": "glammr1"
            },
            {
                "id": "5d24f05658c6811bf97dadf1",
                "text": "is there such a thing as a \"default\" or \"empty\" profile?",
                "time": "2019-07-09 19:51:50",
                "index": 8,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24f066f5dd14574256b0d2",
                "text": "yes, by default that loads properties from application.properties",
                "time": "2019-07-09 19:52:06",
                "index": 9,
                "user": "glammr1"
            },
            {
                "id": "5d24f06aeab1bd15a82f8139",
                "text": "yes ther is defaul",
                "time": "2019-07-09 19:52:10",
                "index": 10,
                "user": "Bishalj"
            },
            {
                "id": "5d24f06b0c8daa1686b5c77c",
                "text": "profiles are additive",
                "time": "2019-07-09 19:52:11",
                "index": 11,
                "user": "glammr1"
            },
            {
                "id": "5d24f070f827ad6676d983df",
                "text": "default profile",
                "time": "2019-07-09 19:52:16",
                "index": 12,
                "user": "Bishalj"
            },
            {
                "id": "5d24f07ef867ec1687dcadbf",
                "text": " which loads  application.properties",
                "time": "2019-07-09 19:52:30",
                "index": 13,
                "user": "Bishalj"
            },
            {
                "id": "5d24f08c0c8c4114d9ff50d4",
                "text": "Specifying `-Dspring.profiles.active=profile1,profile2,profile3,...` adds those profiles ",
                "time": "2019-07-09 19:52:44",
                "index": 14,
                "user": "glammr1"
            },
            {
                "id": "5d24f0970c8c4114d9ff514f",
                "text": "if running as `java -jar ... `",
                "time": "2019-07-09 19:52:55",
                "index": 15,
                "user": "glammr1"
            },
            {
                "id": "5d24f0bb72d4092b1ab37c4b",
                "text": "and profiles are primarily (only?) about loading properties?",
                "time": "2019-07-09 19:53:31",
                "index": 16,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24f0cbd0e06b667576bebd",
                "text": "that, plus conditional bean instantiation, possibly, if you see `@Profile` annotations",
                "time": "2019-07-09 19:53:47",
                "index": 17,
                "user": "glammr1"
            },
            {
                "id": "5d24f0f50c8daa1686b5c91e",
                "text": "or if you have XML bean config then profiles will select XML files to use.. I think",
                "time": "2019-07-09 19:54:29",
                "index": 18,
                "user": "glammr1"
            },
            {
                "id": "5d24f120f827ad6676d9879c",
                "text": "right, look out for @Profile annotations to find beans that get loaded, and XML bean configs",
                "time": "2019-07-09 19:55:12",
                "index": 19,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24f14372d4092b1ab3807c",
                "text": "That's my best suggestion based on how I've used Spring now and in the past.  There may be more to profiles than I've ever used, so YMMV.",
                "time": "2019-07-09 19:55:47",
                "index": 20,
                "user": "glammr1"
            },
            {
                "id": "5d24f17817cc7b05ca9e1fda",
                "text": "If I can resist the urge to figure out what \"loading a bean\" means and just roll with it, I can probably get forward",
                "time": "2019-07-09 19:56:40",
                "index": 21,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24f17eacab0914d8db5d6c",
                "text": "thanks a lot, it really helps",
                "time": "2019-07-09 19:56:46",
                "index": 22,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d24f193bea9f3574125ee0f",
                "text": "Think of them as lesser cousins to your effect-based algebras",
                "time": "2019-07-09 19:57:07",
                "index": 23,
                "user": "glammr1"
            },
            {
                "id": "5d24f1bceab1bd15a82f8a12",
                "text": "effectively DI autowired singletons assembled by the framework, except for controllers which are instantiated per request",
                "time": "2019-07-09 19:57:48",
                "index": 24,
                "user": "glammr1"
            },
            {
                "id": "5d24f1d3bea9f3574125f03b",
                "text": "uhh... maybe not necessarily true on the last part",
                "time": "2019-07-09 19:58:11",
                "index": 25,
                "user": "glammr1"
            },
            {
                "id": "5d24f2080c8daa1686b5d0c1",
                "text": ":+1:",
                "time": "2019-07-09 19:59:04",
                "index": 26,
                "user": "martijnhoekstra"
            }
        ]
    },
    {
        "id": 378,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ccc6ab9990feb451847a9b3",
                "text": "I'm having a problem with Jolokia in Spring Boot. Everything looks good then the app starts but when accessing /actuator/jolokia it fails to read META-INF/simplifiers-default:\n2019-05-03 17:59:05.237 ERROR 13360 --- [XNIO-2 task-1] i.u.request                              : UT005023: Exception handling request to /actuator/jolokia\n\njava.lang.IllegalStateException: Cannot load service null defined in jar:file:/C:/RuntimeCamel/rise-plini-camel-sample-0.0.1-SNAPSHOT/rise-plini-camel-sample-0.0.1-SNAPSHOT.jar!/BOOT-INF/lib/jolokia-core-1.6.0.jar!/META-INF/simplifiers-default : java.io.FileNotFoundException: JAR entry BOOT-INF/lib/jolokia-core-1.6.0.jar!/META-INF/simplifiers-default not found in C:\\RuntimeCamel\\rise-plini-camel-sample-0.0.1-SNAPSHOT\\rise-plini-camel-sample-0.0.1-SNAPSHOT.jar. Aborting\n\tat org.jolokia.util.ServiceObjectFactory.readServiceDefinitionFromUrl(ServiceObjectFactory.java:109) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.util.ServiceObjectFactory.readServiceDefinitions(ServiceObjectFactory.java:78) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.util.ServiceObjectFactory.createServiceObjects(ServiceObjectFactory.java:63) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.converter.json.ObjectToJsonConverter.addSimplifiers(ObjectToJsonConverter.java:350) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.converter.json.ObjectToJsonConverter.<init>(ObjectToJsonConverter.java:80) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.converter.Converters.<init>(Converters.java:45) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.backend.BackendManager.init(BackendManager.java:326) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.backend.BackendManager.<init>(BackendManager.java:130) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.backend.BackendManager.<init>(BackendManager.java:105) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.http.AgentServlet.init(AgentServlet.java:142) ~[jolokia-core-1.6.0.jar!/:?]\n\tat io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:117) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.core.ManagedServlet$DefaultInstanceStrategy.start(ManagedServlet.java:303) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.core.ManagedServlet.forceInit(ManagedServlet.java:210) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.ServletChain.forceInit(ServletChain.java:130) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:63) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.",
                "time": "2019-05-03 16:22:17",
                "index": 0,
                "user": "heka-pulsen"
            },
            {
                "id": "5ccc6b18a4ef097471429b48",
                "text": "@heka-pulsen please format that properly",
                "time": "2019-05-03 16:23:52",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ccc6fe4990feb451847d4d3",
                "text": "```\n2019-05-03 17:59:05.237 ERROR 13360 --- [XNIO-2 task-1] i.u.request                              : UT005023: Exception handling request to /actuator/jolokia\n\njava.lang.IllegalStateException: Cannot load service null defined in jar:file:/C:/RuntimeCamel/rise-plini-camel-sample-0.0.1-SNAPSHOT/rise-plini-camel-sample-0.0.1-SNAPSHOT.jar!/BOOT-INF/lib/jolokia-core-1.6.0.jar!/META-INF/simplifiers-default : java.io.FileNotFoundException: JAR entry BOOT-INF/lib/jolokia-core-1.6.0.jar!/META-INF/simplifiers-default not found in C:\\RuntimeCamel\\rise-plini-camel-sample-0.0.1-SNAPSHOT\\rise-plini-camel-sample-0.0.1-SNAPSHOT.jar. Aborting\n\tat org.jolokia.util.ServiceObjectFactory.readServiceDefinitionFromUrl(ServiceObjectFactory.java:109) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.util.ServiceObjectFactory.readServiceDefinitions(ServiceObjectFactory.java:78) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.util.ServiceObjectFactory.createServiceObjects(ServiceObjectFactory.java:63) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.converter.json.ObjectToJsonConverter.addSimplifiers(ObjectToJsonConverter.java:350) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.converter.json.ObjectToJsonConverter.<init>(ObjectToJsonConverter.java:80) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.converter.Converters.<init>(Converters.java:45) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.backend.BackendManager.init(BackendManager.java:326) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.backend.BackendManager.<init>(BackendManager.java:130) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.backend.BackendManager.<init>(BackendManager.java:105) ~[jolokia-core-1.6.0.jar!/:?]\n\tat org.jolokia.http.AgentServlet.init(AgentServlet.java:142) ~[jolokia-core-1.6.0.jar!/:?]\n\tat io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:117) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.core.ManagedServlet$DefaultInstanceStrategy.start(ManagedServlet.java:303) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.core.ManagedServlet.forceInit(ManagedServlet.java:210) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.ServletChain.forceInit(ServletChain.java:130) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:63) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77) ~[undertow-servlet-2.0.14.Final.jar!/:2.0.14.Final]\n\tat io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43) ~[undertow-core-2.0.14.Final.jar!/:2.0.14.Final]\n```",
                "time": "2019-05-03 16:44:20",
                "index": 2,
                "user": "heka-pulsen"
            },
            {
                "id": "5ccc723e1cd0b8307db84fc4",
                "text": "> java.io.FileNotFoundException: JAR entry BOOT-INF/lib/jolokia-core-1.6.0.jar!/META-INF/simplifiers-default",
                "time": "2019-05-03 16:54:22",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5ccc73ade416b8451924750c",
                "text": "Yes, but the file exists. The problem seams to be that it\u2019s a file in a jar in a jar. ",
                "time": "2019-05-03 17:00:29",
                "index": 4,
                "user": "heka-pulsen"
            },
            {
                "id": "5ccc948c990feb451848e253",
                "text": "If I don\u2019t run the app as a fat jar the file is found and jolokia works as expected. So it must be a classloader issue then runing the app as a fat jar...",
                "time": "2019-05-03 19:20:44",
                "index": 5,
                "user": "heka-pulsen"
            }
        ]
    },
    {
        "id": 379,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e843617e0c6ca4b2e0582aa",
                "text": "@wilkinsona I have two related problems, Liquibase -related is rather exotic one. We want to split the persistence into 2 separate \"areas\": one for transaction data (T), and the other for configuration (C). we'll have 2 apps, app O (operational) will write to T, and read from C, while app U (user interface) will read from T and write to C. \n\nin the actual databases, corresponding users with necessary permissions against each other schemas are already defined, so of course I will not need the \"other\" Liquibase there, but when the app is run locally against H2 database, only in the \"dev\" profile I have a `SpringLiquibase` bean to bootstrap the C database structure. and now the problem is - as the \"main\" Liquibase bean of this app (which is O) is provided by SB AC, as soon as I try to define \"the other\" Liquibase bean, the \"main\" one just falls off! hence, I have to \"manually\" apply it again, which is quite clumsy.. I think what I'd want to have is SB being able to construct some beans as long as there're necessary properties defined in configuration. \n\nthe second problem is to be able to define a `DatabaseClient` for Spring Data R2DBC to use the same properties as the default one, but use a different DB Schema name.. ",
                "time": "2020-04-01 06:35:03",
                "index": 0,
                "user": "62mkv"
            },
            {
                "id": "5e843651e0c6ca4b2e058364",
                "text": "which hopefully could be resolved on Spring Data level, but I am not quite there yet, so currently it's also abusing auto-configuration.. ",
                "time": "2020-04-01 06:36:01",
                "index": 1,
                "user": "62mkv"
            },
            {
                "id": "5e8451ce68d3005e282fbf3c",
                "text": "That was almost exactly my case too, but for JDBC/JPA. I think there's some dev work ongoing for multiple db support.",
                "time": "2020-04-01 08:33:18",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5e845214c5c3c32343bbfe22",
                "text": "@OrangeDog I wish I could like messages here, as one can on Mattermost :) ",
                "time": "2020-04-01 08:34:28",
                "index": 3,
                "user": "62mkv"
            },
            {
                "id": "5e845245302cd3685bde9cf5",
                "text": "@62mkv You could write your own auto-configuration with `@AutoConfigureAfter(LiquibaseAutoConfiguration.class)`. That would allow it to define a second `SpringLiquibase` bean.",
                "time": "2020-04-01 08:35:17",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5e84524d68d3005e282fc000",
                "text": "The specific class I cracked open was `DataSourceInitializerInvoker`",
                "time": "2020-04-01 08:35:25",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5e84525561967448380d7493",
                "text": "So I could have two of them",
                "time": "2020-04-01 08:35:33",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5e84529bc090ce1fde365f4a",
                "text": "@wilkinsona thanks, will look at that! hopefully baeldung will have quick guide :laughing: ",
                "time": "2020-04-01 08:36:43",
                "index": 7,
                "user": "62mkv"
            },
            {
                "id": "5e8452e8c090ce1fde365fad",
                "text": "You may hit a complication, because the default beans won't have any qualifiers on them.",
                "time": "2020-04-01 08:38:00",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5e845429a61b811a4f741604",
                "text": "I can think of an unpleasant way to deal with that (untested)\n```java\n@Bean\n@Qualifier1 \npublic SpringLiquibase lb1(Collection<SpringLiquibase> all, @Qualifier2 SpringLiquibase lb2) {\n  return all.stream().anyMatch(lb -> !lb.equals(lb2)).get();\n}\n```",
                "time": "2020-04-01 08:43:21",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5e8455d768d3005e282fc8a5",
                "text": "Actually, probably cleaner (and more likely to work) if you hardcode the name of the default bean instead",
                "time": "2020-04-01 08:50:31",
                "index": 10,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 380,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5de170c326eeb8518f3c0f82",
                "text": "Hi. Do you recommend setting annotation processors explicitly using maven-compiler-plugin <annotationProcessorPaths> configuration for spring boot project (things like spring-boot-configuration-processor, lombok etc.)? It seems more correct but also more cumbersome. Some projects ([mapstruct](https://mapstruct.org/documentation/stable/reference/html/#_apache_maven)) favor explicit configuration.",
                "time": "2019-11-29 19:25:55",
                "index": 0,
                "user": "pmartycz"
            },
            {
                "id": "5de174d9d64a052fb6875342",
                "text": "Also is there any specific reason you don't specify`<spring-boot.version>${revision}</spring-boot.version>` in  [spring-boot-dependencies](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-dependencies/pom.xml)? Seems useful for places that cannot use version management (like above plugin configuration) ",
                "time": "2019-11-29 19:43:21",
                "index": 1,
                "user": "pmartycz"
            },
            {
                "id": "5de17899d64a052fb6876d2c",
                "text": "@pmartycz We don't make a recommendation about annotation processor paths. Just do whatever works best for you.",
                "time": "2019-11-29 19:59:21",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5de178cef65fec1c8e91d9a0",
                "text": "There's no property for the Spring Boot version as we don't want it to be configurable. I guess we could define the property and then not use it anywhere ourselves but I think that would lead to confusion about what it does.",
                "time": "2019-11-29 20:00:14",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5de17c881659720ca8cce1d4",
                "text": "Somewhat, but it's the only place where it can be set since one cannot create it and use it in <parent> declaration at the same time.",
                "time": "2019-11-29 20:16:08",
                "index": 4,
                "user": "pmartycz"
            }
        ]
    },
    {
        "id": 381,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b96053df3c26b08f654819a",
                "text": "@snicoll Just wondering if adding JNDI support for `TaskExecutor` / `TaskScheduler` along the lines of JNDI support for looking up a `DataSource` would make sense. This would be nice when deploying to a JEE container and reusing a pre-defined `ExecutorService` from JNDI. ",
                "time": "2018-09-10 05:46:37",
                "index": 0,
                "user": "mdeinum"
            },
            {
                "id": "5b960afe33ebb72e37f569f9",
                "text": "@mdeinum you don't need to add extra support. It already works. When running in WebSphere Liberty Profile the executor and scheduler can be looked up using JNDI. We have @Bean annotated config method that uses JndiTemplate to perform lookup.",
                "time": "2018-09-10 06:11:10",
                "index": 1,
                "user": "corneil"
            },
            {
                "id": "5b960b41728ddf028286bb35",
                "text": "Yes I know that you can do it like that... But as Spring Boot 2.1 now has a pre-configured `TaskExecutor` and `TaskScheduler` it might be nice to add support to do a lookup instead of creating a `ThreadPoolTaskExececutor`. ",
                "time": "2018-09-10 06:12:17",
                "index": 2,
                "user": "mdeinum"
            },
            {
                "id": "5b960b6b33ebb72e37f56cad",
                "text": "Also you should probably be using the `DefaultManagedTaskExecutor` which does the lookup for you instead of doing a manual lookup. ",
                "time": "2018-09-10 06:12:59",
                "index": 3,
                "user": "mdeinum"
            }
        ]
    },
    {
        "id": 382,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5dbbd0ce2a6494729c78586f",
                "text": "hi all nice to meeting you",
                "time": "2019-11-01 06:29:34",
                "index": 0,
                "user": "sajimymoon"
            },
            {
                "id": "5dbbd0f2e1c5e9150810b546",
                "text": "i am a java develper ,,,,  from india , i  want start to study spring boot ",
                "time": "2019-11-01 06:30:10",
                "index": 1,
                "user": "sajimymoon"
            },
            {
                "id": "5dbbd127f26ea4729d32bf18",
                "text": "can u give me a fresh and better way to startup , becoz the spring boot lote of stuff ",
                "time": "2019-11-01 06:31:03",
                "index": 2,
                "user": "sajimymoon"
            },
            {
                "id": "5dbbd12d9825bd6bac063fd8",
                "text": "and clearyl confused ",
                "time": "2019-11-01 06:31:09",
                "index": 3,
                "user": "sajimymoon"
            },
            {
                "id": "5dbbd17014d55a3785b2c893",
                "text": "i think a got a well start with u peoples should be guide me a little please ",
                "time": "2019-11-01 06:32:16",
                "index": 4,
                "user": "sajimymoon"
            },
            {
                "id": "5dbbfb92e1c5e9150811dd5d",
                "text": "@sajimymoon I'd recommend picking a small problem that you'd like to solve and then learning how to do it. https://spring.io/guides should help.",
                "time": "2019-11-01 09:32:02",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5dbc00222a6494729c79b51d",
                "text": "hi",
                "time": "2019-11-01 09:51:30",
                "index": 12,
                "user": "sajimymoon"
            },
            {
                "id": "5dbc03a99c39821509c1e5aa",
                "text": "@wilkinsona , thanks sir, lot of stuff there , that why i was clearly confused from where start this...",
                "time": "2019-11-01 10:06:33",
                "index": 13,
                "user": "sajimymoon"
            },
            {
                "id": "5dbc0f159825bd6bac08108d",
                "text": "@sajimymoon It depends on what you want to do of course. But the first listed guide there, https://spring.io/guides/gs/rest-service/, is about writing a simple Hello World-web service. I think that's a good place to start.",
                "time": "2019-11-01 10:55:17",
                "index": 14,
                "user": "mickeelm"
            },
            {
                "id": "5dbd2c572f8a0343571f289a",
                "text": "@sajimymoon You can read my e-book that guides you into creating a REST API with Spring Boot: https://www.infoq.com/minibooks/spring-boot-building-api-backend/",
                "time": "2019-11-02 07:12:23",
                "index": 27,
                "user": "wimdeblauwe"
            }
        ]
    },
    {
        "id": 383,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b966465e481f854a698d824",
                "text": "Hi ! can I use @PropertySource in the main  class of Spring boot application? because I have used it to read from a properties file different from application-properties but it give me an error while in test class I could use it and read the properties file values.",
                "time": "2018-09-10 12:32:37",
                "index": 0,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b966496a2343433d12962d9",
                "text": "and the other question, in spring boot can I have a properties file not in class path of my project?",
                "time": "2018-09-10 12:33:26",
                "index": 1,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b96669a550f8808f58af612",
                "text": "@ninja_java_twitter yes you can. In my current project we use \n```\n@PropertySource({\n        \"classpath:default.properties\",\n        \"file:///${APP_ENV:/opt/tomcat-cms/conf}/environment.properties\"\n        // The second properties file overrides properties of the first.\n})\n```",
                "time": "2018-09-10 12:42:02",
                "index": 2,
                "user": "jreijn"
            },
            {
                "id": "5b9666ddf59e0c1555d87ed4",
                "text": "This works also for tests. In our test class have defined this:\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = TestApplication.class)\n@AutoConfigureMockMvc\npublic class DevControllerTest {\n\u2026.\n}\n```",
                "time": "2018-09-10 12:43:09",
                "index": 3,
                "user": "jreijn"
            },
            {
                "id": "5b96672e33ebb72e37f7a27a",
                "text": "where the test application looks like this:\n```\n@SpringBootApplication\n//exclude real Application class to prevent the loading of not reachable properties\n@ComponentScan(\n        excludeFilters = {\n                @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = Application.class)})\n@PropertySource({\n        \"classpath:default.properties\",\n        \"classpath:test-environment.properties\"\n})\npublic class TestApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(TestApplication.class, args);\n    }\n\n}\n```\n",
                "time": "2018-09-10 12:44:30",
                "index": 4,
                "user": "jreijn"
            },
            {
                "id": "5b966767f3c26b08f656e908",
                "text": "@jreijn  thank you very much",
                "time": "2018-09-10 12:45:27",
                "index": 5,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b966bac45318b2dfe8a4360",
                "text": "@jreijn       I'm using wildfly, could you say me what is the path for environment.properties  in wildfly instead of  file:///${APP_ENV:/opt/tomcat-cms/conf}/environment.properties\" ? thank you",
                "time": "2018-09-10 13:03:40",
                "index": 12,
                "user": "ninja_java_twitter"
            },
            {
                "id": "5b96b93e1e2b442a25f0de0f",
                "text": "@ninja_java_twitter the ${APP_EN} variable in my case was set in tomcats setenv.sh (environment variable, but you can also point it to a physical location.  In my situation it was the location of tomcat, but you can point it to any path you want.",
                "time": "2018-09-10 18:34:38",
                "index": 17,
                "user": "jreijn"
            }
        ]
    },
    {
        "id": 384,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ca3564a31aec969e83d442d",
                "text": "Hello for All,\n\nI've been migrating my Spring application, to Spring Boot. But I notice a slow down when it's many users simultanious (350~500 users).\nIt uses Struts 2 with JSP for the UI, I notice when is the first execution of each action, it's slow too.\nAre you know one tool or method to monitorate it and to decect what is slowing the application? ",
                "time": "2019-04-02 12:32:10",
                "index": 0,
                "user": "hdutra"
            },
            {
                "id": "5ca35c871f6e900d5ec6d4ea",
                "text": "@hdutra not really spring specific, but a profiler might help. JVisualVM is free (and it used to be packaged with the JDK). The sampler usually already gives a good indication what might be slow. ",
                "time": "2019-04-02 12:58:47",
                "index": 1,
                "user": "TomRauchenwald"
            },
            {
                "id": "5ca362018148e555b237730e",
                "text": "@hdutra you're moving from an external Tomcat to embedded? Have you changed the defaults (connection pool etc.) to match your old deployment?",
                "time": "2019-04-02 13:22:09",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5ca3645025686a7dc3c26621",
                "text": "@OrangeDog Yes, I'm using Tomcat 8 in old version and Embedded Tomcat 9 in Spring Boot version. I've changed version of somethings but all defaults are the same. I'm using C3P0 to connection pool, Hibernate 5, JBoss ModCluster, EhCache 2 with JMS replication(I've been thinking about JCache or Redis, but I need resolve this problem first) and Hibernate second level cache. Other things like Jersey, ActiveMQ and JAX-WS(Apache CFX) I'm using the spring-boot-starter ",
                "time": "2019-04-02 13:32:00",
                "index": 3,
                "user": "hdutra"
            },
            {
                "id": "5ca364bd8148e555b23784ce",
                "text": "@TomRauchenwald  I tried find It with VisualVM, but I didn't find anything.  Do you have any suggestion to use in profile to boost it?",
                "time": "2019-04-02 13:33:49",
                "index": 4,
                "user": "hdutra"
            }
        ]
    },
    {
        "id": 385,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bc75c24ae7be94016716609",
                "text": "hello",
                "time": "2018-10-17 15:58:28",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5bc75c3364cfc273f9e048ca",
                "text": "I am creating a customed `hibernate interceptor`",
                "time": "2018-10-17 15:58:43",
                "index": 1,
                "user": "amirensit"
            },
            {
                "id": "5bc75c421c100a4f299f2e30",
                "text": "extending `EmptyInterceptor`",
                "time": "2018-10-17 15:58:58",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5bc75c5264cfc273f9e04991",
                "text": "Dependency injection does not work inside that class",
                "time": "2018-10-17 15:59:14",
                "index": 3,
                "user": "amirensit"
            },
            {
                "id": "5bc75c6564cfc273f9e04a07",
                "text": "@autowired does not work either",
                "time": "2018-10-17 15:59:33",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5bc75c6d6e5a401c2d8867ab",
                "text": "any idea how to deal with that",
                "time": "2018-10-17 15:59:41",
                "index": 5,
                "user": "amirensit"
            },
            {
                "id": "5bc75c7864cfc273f9e04a96",
                "text": "Hibernate creates the class, not Spring ",
                "time": "2018-10-17 15:59:52",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bc75c833844923661549322",
                "text": "There is a new `BeanContainer` API in Hibernate that we use",
                "time": "2018-10-17 16:00:03",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5bc75c8dc08b8b30672c9474",
                "text": "If you upgrade to `2.1.0.RC1` that got released a few minutes ago, it should work",
                "time": "2018-10-17 16:00:13",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5bc75ca0f659e67772cf4c61",
                "text": "a few minutes ago !! hh",
                "time": "2018-10-17 16:00:32",
                "index": 9,
                "user": "amirensit"
            },
            {
                "id": "5bc75cac271506518d28d59c",
                "text": "Good timing, what can I say?",
                "time": "2018-10-17 16:00:44",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5bc75cb3f659e67772cf4d71",
                "text": "I don't think I am able to migrate",
                "time": "2018-10-17 16:00:51",
                "index": 11,
                "user": "amirensit"
            },
            {
                "id": "5bc75cc21c100a4f299f325f",
                "text": "You could try if that fixes your issue so that we can validate we talk about the same thing",
                "time": "2018-10-17 16:01:06",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bc75cca1e23486b93d4c820",
                "text": "You can\u2019t expect Hibernate to know about Spring really",
                "time": "2018-10-17 16:01:14",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5bc75ced435c2a518ec08e30",
                "text": "ok. thanks  @snicoll \nI need to avoid DI in hibernate",
                "time": "2018-10-17 16:01:49",
                "index": 14,
                "user": "amirensit"
            },
            {
                "id": "5bc76057f659e67772cf6af3",
                "text": ":+1: ",
                "time": "2018-10-17 16:16:23",
                "index": 15,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 386,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d36d39abe916e76e2205d64",
                "text": "Please what is the best YouTube channel for spring tutorial, and can anyone highlight the best learning path for any spring framework?",
                "time": "2019-07-23 09:30:02",
                "index": 0,
                "user": "Emoruwa"
            },
            {
                "id": "5d36d6e3808425671cd282d8",
                "text": "@Emoruwa search for some presentation from Josh Long (starbuxman)",
                "time": "2019-07-23 09:44:03",
                "index": 1,
                "user": "tgeens"
            },
            {
                "id": "5d36d726e2d1aa6688f464da",
                "text": "if you want to understand how Spring *Boot* works: @snicoll and @wilkinsona have this awesome presentation -> https://www.youtube.com/watch?v=N39hpGAT43s&t=333s",
                "time": "2019-07-23 09:45:10",
                "index": 2,
                "user": "tgeens"
            }
        ]
    },
    {
        "id": 387,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c6a5f92d1e3093ab53cfcf7",
                "text": "@all can anyone please help me solve the following issue",
                "time": "2019-02-18 07:32:34",
                "index": 0,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            },
            {
                "id": "5c6a5f94adf6cb0b2cd9b441",
                "text": "Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class demo.core.process.messages.CollectorProcessInfo! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes.",
                "time": "2019-02-18 07:32:36",
                "index": 1,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            },
            {
                "id": "5c6a5faf16e4682259c01ff0",
                "text": "tried the following solution but still same error",
                "time": "2019-02-18 07:33:03",
                "index": 2,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            },
            {
                "id": "5c6a5fc2ecef85660bc4dcd9",
                "text": "https://stackoverflow.com/questions/36619432/springboot-activemq-how-to-set-trusted-packages",
                "time": "2019-02-18 07:33:22",
                "index": 3,
                "user": "ghost~5b08154ed73408ce4f9ab57b"
            },
            {
                "id": "5c6aa05bef98455ea45656e1",
                "text": "https://stackoverflow.com/questions/43105859/serializable-class-not-available-to-broker-java-lang-classnotfoundexception-whi",
                "time": "2019-02-18 12:08:59",
                "index": 4,
                "user": "Raghav2211"
            },
            {
                "id": "5c6aa062126af75debc73b4d",
                "text": "Please see the second comment ",
                "time": "2019-02-18 12:09:06",
                "index": 5,
                "user": "Raghav2211"
            },
            {
                "id": "5c6aa07cdc3f0523ccd62a63",
                "text": "I\u2019ve solved this issue via adding class in classpath of broker ",
                "time": "2019-02-18 12:09:32",
                "index": 6,
                "user": "Raghav2211"
            }
        ]
    },
    {
        "id": 388,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bbc654fef4afc4f28415990",
                "text": "Hello everybody",
                "time": "2018-10-09 08:22:39",
                "index": 0,
                "user": "zak905"
            },
            {
                "id": "5bbc659bc7bf7c3662dcc44e",
                "text": "my project is running  spring boot 2.0.1 on Java 8, is it safe to migrate to java 11 or maybe I should wait until 2.1 is GA ? ",
                "time": "2018-10-09 08:23:55",
                "index": 1,
                "user": "zak905"
            },
            {
                "id": "5bbc6eab600c5f6423791bab",
                "text": "Please review system requirements: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-with-Java-9-and-above",
                "time": "2018-10-09 09:02:35",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5bbc7f85c08b8b3067f2b7fd",
                "text": "thanks @snicoll ",
                "time": "2018-10-09 10:14:29",
                "index": 16,
                "user": "zak905"
            }
        ]
    },
    {
        "id": 389,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dcaf61e4adf071a84197eec",
                "text": "just migrated spring boot to v 2.2.0 and noticed that behaviour of the annotations scan has been changed. In our case we define @SpringBootApplication in the base abstract class and then multiple concrete applications extends this class (no annotations are defined in the concrete class). It works fine in the v 2.1.x, but in 2.2 attempt to run the app causes the error \"java.lang.IllegalArgumentException: No auto-configuration attributes found. Is com.xxx.Application annotated with EnableAutoConfiguration\"",
                "time": "2019-11-12 18:12:46",
                "index": 0,
                "user": "amrynsky"
            },
            {
                "id": "5dcafdb6fd6fe41fc0713158",
                "text": "@amrynsky That sounds like a bug, although it may well be in Spring Framework rather than Boot itself. Can you please open a Spring Boot issue with a small sample that reproduces the problem so that we can investigate? We can transfer the issue to Framework if needed once we've figured out where the problem is.",
                "time": "2019-11-12 18:45:10",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dcb0f83ca778c1fbfef8afd",
                "text": "@wilkinsona probably you are right. From what I see there was a change in org.springframework.core.type.getAnnotationAttributes called from org.springframework.boot.autoconfigure.getAttributes and it produce different result in v2.2 and v2.1. Will try to create an example and open an issue",
                "time": "2019-11-12 20:01:07",
                "index": 5,
                "user": "amrynsky"
            }
        ]
    },
    {
        "id": 390,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5f01f3fcbb149531edef2bc2",
                "text": "Hi Team, ",
                "time": "2020-07-05 15:38:36",
                "index": 0,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5f01f4426c06cd1bf474c1e7",
                "text": "I have developed a sample Spring boot Rest API and SSL enabled with keystores. I have deployed that war file in Websphere. So my question is, SSL still work or not ? ",
                "time": "2020-07-05 15:39:46",
                "index": 1,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5f01f44dfa0c9221fc7e10f7",
                "text": "Anybody help me please",
                "time": "2020-07-05 15:39:57",
                "index": 2,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5f01f6c6fa0c9221fc7e1a0e",
                "text": "Team, please clarify me ",
                "time": "2020-07-05 15:50:30",
                "index": 3,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5f021ca854d7862dc4cc320b",
                "text": "@nareshbangaram2_twitter If you've deployed your application to WebSphere, you will need to configure WebSphere  to use SSL. Spring Boot's `server.ssl.*` settings only apply when using an embedded web server.",
                "time": "2020-07-05 18:32:08",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5f02881c3a0d3931fad56543",
                "text": "@wilkinsona , understand and noted. Is there any way to over ride Application server SSL security with Spring Boot ? ",
                "time": "2020-07-06 02:10:36",
                "index": 10,
                "user": "nareshbangaram2_twitter"
            },
            {
                "id": "5f02e617613d3b33942d207b",
                "text": "Hi Team, How to provide SSL authentication with client certificate in Spring security. Not Spring Boot",
                "time": "2020-07-06 08:51:35",
                "index": 11,
                "user": "nareshbangaram2_twitter"
            }
        ]
    },
    {
        "id": 391,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f0137217ba3965373ea1690",
                "text": "Hello room, I am learning spring nowadays. Wanted to create login and signup apis for react native frontend with MySQL database. I am stuck ",
                "time": "2020-07-05 02:12:49",
                "index": 0,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f01373bbb149531eded7e92",
                "text": "```\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  8.877 s\n[INFO] Finished at: 2020-07-05T07:38:36+05:30\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:2.2.3.RELEASE:run (default-cli) on project springboot-registration-login: Application finished with exit code: 1 -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n\n\n```",
                "time": "2020-07-05 02:13:15",
                "index": 1,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f013745405be935cddfc876",
                "text": "i am getting this error",
                "time": "2020-07-05 02:13:25",
                "index": 2,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0176093a0d3931fad2d0b9",
                "text": "@Sidharth-Bansal That output shows that your application failed to run but does not show why it failed. Hopefully, that information will have been output earlier on. Is there anything about a failure above the output that you have shared?",
                "time": "2020-07-05 06:41:13",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5f017a77d65a3b0292cc5751",
                "text": "nothing else is shared",
                "time": "2020-07-05 07:00:07",
                "index": 7,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f017ab1c223cc536a5578b5",
                "text": "basically i have to create login + signup using spring and MySQL from scratch without using any JWT etc ",
                "time": "2020-07-05 07:01:05",
                "index": 8,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f017ac1fa0c9221fc7cf423",
                "text": "It will really helpful if you can share any beginner friendly tutorials",
                "time": "2020-07-05 07:01:21",
                "index": 9,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f017acb7ba3965373eaa262",
                "text": "I have created frontend in the react",
                "time": "2020-07-05 07:01:31",
                "index": 10,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f017adbd65a3b0292cc5853",
                "text": "I also don't know how to connect these two pieces together",
                "time": "2020-07-05 07:01:47",
                "index": 11,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f017e0a47fdfd21ed04d5dc",
                "text": "@Sidharth-Bansal  It is not clear why the application does not start. The reason for this is given a few lines above or can be seen in the log file. Share the error messages here. Surely you've already studied this? https://spring.io/guides/tutorials/spring-boot-oauth2/  -- Sorry, english is not my language.",
                "time": "2020-07-05 07:15:22",
                "index": 12,
                "user": "torsten-liermann"
            },
            {
                "id": "5f0184b5613d3b339429b6b3",
                "text": "@torsten-liermann I don't have to use OAuth nor JWT",
                "time": "2020-07-05 07:43:49",
                "index": 15,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0184c1b8152d3484825cdd",
                "text": "Task is to complete from scratch",
                "time": "2020-07-05 07:44:01",
                "index": 16,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0184cdd65a3b0292cc71a8",
                "text": "I was thinking of doing this",
                "time": "2020-07-05 07:44:13",
                "index": 17,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0184ce405be935cde067e5",
                "text": "https://hellokoding.com/registration-and-login-example-with-spring-security-spring-boot-spring-data-jpa-hsql-jsp/#properties",
                "time": "2020-07-05 07:44:14",
                "index": 18,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0184d9c223cc536a558ced",
                "text": "but it is giving me errors ",
                "time": "2020-07-05 07:44:25",
                "index": 19,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0184e66c06cd1bf473a174",
                "text": "Also, as I am new to spring it is tough. ",
                "time": "2020-07-05 07:44:38",
                "index": 20,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f01853054d7862dc4cac06e",
                "text": "```\n$SiddharthBansalMacBookPro authenticationAppBackend % mvn spring-boot run\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ----------------< com.example:authenticationAppBackend >----------------\n[INFO] Building authenticationAppBackend 0.0.1-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.223 s\n[INFO] Finished at: 2020-07-05T13:15:20+05:30\n[INFO] ------------------------------------------------------------------------\n[ERROR] Unknown lifecycle phase \"spring-boot\". You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/LifecyclePhaseNotFoundException\n```",
                "time": "2020-07-05 07:45:52",
                "index": 21,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f018535405be935cde06845",
                "text": "entire log",
                "time": "2020-07-05 07:45:57",
                "index": 22,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0185936c06cd1bf473a379",
                "text": "mvn spring-boot:run     (spring-boot colon run)",
                "time": "2020-07-05 07:47:31",
                "index": 23,
                "user": "torsten-liermann"
            },
            {
                "id": "5f018627d65a3b0292cc7505",
                "text": "zip me your code",
                "time": "2020-07-05 07:49:59",
                "index": 24,
                "user": "torsten-liermann"
            },
            {
                "id": "5f018a6eb8152d3484826786",
                "text": "https://github.com/hellokoding/hellokoding-courses/tree/master/springboot-examples/springboot-registration-login",
                "time": "2020-07-05 08:08:14",
                "index": 25,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f018a88e0e5673398f41026",
                "text": "I was trying to run this",
                "time": "2020-07-05 08:08:40",
                "index": 26,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f019022fa0c9221fc7d21e7",
                "text": "with same command as you mentioned",
                "time": "2020-07-05 08:32:34",
                "index": 27,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0191b0fa0c9221fc7d25d8",
                "text": "I am currently looking at the setup. A mysql instance makes the demo unnecessarily complex.",
                "time": "2020-07-05 08:39:12",
                "index": 28,
                "user": "torsten-liermann"
            },
            {
                "id": "5f0192566c06cd1bf473becb",
                "text": "run      mvn spring-boot:run     ",
                "time": "2020-07-05 08:41:58",
                "index": 29,
                "user": "torsten-liermann"
            },
            {
                "id": "5f019260b8152d3484827a2c",
                "text": "ran",
                "time": "2020-07-05 08:42:08",
                "index": 30,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f01927ad65a3b0292cc8e7b",
                "text": "i need to use mysql only as per my given task",
                "time": "2020-07-05 08:42:34",
                "index": 31,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f019296b8152d3484827a9d",
                "text": "i got the above error on running `mvn spring-boot:run`",
                "time": "2020-07-05 08:43:02",
                "index": 32,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f01929dfa0c9221fc7d27b4",
                "text": "... and post the output below the line [INFO] --- spring-boot-maven-plugin:2.2.3.RELEASE:run (default-cli) @ springboot-registration-login ---\n[INFO] Attaching agents: []",
                "time": "2020-07-05 08:43:09",
                "index": 33,
                "user": "torsten-liermann"
            },
            {
                "id": "5f01995347fdfd21ed0512ac",
                "text": "I have not checked the code whether it is suitable, nor have I read the blog.\n\nIf you have entered the password for mysql in the file application.properties and mysql can be reached via localhost and port 3306 and you have created a database called 'test', the demo starts.",
                "time": "2020-07-05 09:11:47",
                "index": 34,
                "user": "torsten-liermann"
            },
            {
                "id": "5f01d136c223cc536a56400f",
                "text": "@torsten-liermann  ok letme do as you mentioned",
                "time": "2020-07-05 13:10:14",
                "index": 35,
                "user": "Sidharth-Bansal"
            }
        ]
    },
    {
        "id": 392,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5cfae2b6b76eac527abe9243",
                "text": "Hi @here \nI don't know if I can ask here this very simple question---> Can someone point me to the Gitter channel for Spring Cloud?",
                "time": "2019-06-07 22:18:30",
                "index": 0,
                "user": "cortizqgithub"
            },
            {
                "id": "5cfb5ac865392c3b60dc85c9",
                "text": "@cortizqgithub here you go https://gitter.im/spring-cloud/spring-cloud",
                "time": "2019-06-08 06:50:48",
                "index": 1,
                "user": "void4291"
            },
            {
                "id": "5cfbde3b3dcdab4003102561",
                "text": "@WajahatRahman Thanks! \n\n",
                "time": "2019-06-08 16:11:39",
                "index": 5,
                "user": "cortizqgithub"
            }
        ]
    },
    {
        "id": 393,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f04127a8342f46274fb8f0f",
                "text": "Hi, I am new to spring i am getting this error ",
                "time": "2020-07-07 06:13:14",
                "index": 0,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0412856e1b8050c3d9e886",
                "text": "```\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project spring-boot: Compilation failure\n[ERROR] /Users/gameskraft/Documents/FINAL/spring-boot/src/main/java/com/example/springboot/Application.java:[36,56] cannot find symbol\n[ERROR]   symbol:   class JpaRepository\n[ERROR]   location: class com.example.springboot.Application\n\n\n```",
                "time": "2020-07-07 06:13:25",
                "index": 1,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f04128d8b72655b55568a47",
                "text": "on running `mvn install`",
                "time": "2020-07-07 06:13:33",
                "index": 2,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f04129edbf01050ab5aa763",
                "text": "and on running `mvn spring-boot run` i am getting",
                "time": "2020-07-07 06:13:50",
                "index": 3,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0412b2a9378637e8b0cc59",
                "text": "```\nERROR] Unknown lifecycle phase \"spring-boot\". You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/LifecyclePhaseNotFoundException\n\n```",
                "time": "2020-07-07 06:14:10",
                "index": 4,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0412d27455046699e17ea1",
                "text": "My pom file is \n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.3.1.RELEASE</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>com.example</groupId>\n\t<artifactId>spring-boot</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>spring-boot</name>\n\t<description>Demo project for Spring Boot</description>\n\n\t<properties>\n\t\t<java.version>1.8</java.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>javax.validation</groupId>\n\t\t\t<artifactId>validation-api</artifactId>\n\t\t\t<version>1.0.0.GA</version>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate-validator</artifactId>\n\t\t\t<version>4.0.2.GA</version>\n\t\t</dependency>\n\t\t<!-- JPA Provider (Hibernate) -->\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate-entitymanager</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>mysql</groupId>\n\t\t\t<artifactId>mysql-connector-java</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\n\t\t<!-- Spring Data JPA -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.data</groupId>\n\t\t\t<artifactId>spring-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>javax.inject</groupId>\n\t\t\t<artifactId>javax.inject</artifactId>\n\t\t\t<version>1</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>javax.annotation</groupId>\n\t\t\t<artifactId>javax.annotation-api</artifactId>\n\t\t\t<version>1.2</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.junit.vintage</groupId>\n\t\t\t\t\t<artifactId>junit-vintage-engine</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t</dependencies>\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>repackage</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<classifier>exec</classifier>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n```",
                "time": "2020-07-07 06:14:42",
                "index": 5,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0412f17a4e99049ef3c518",
                "text": "and application.properties as",
                "time": "2020-07-07 06:15:13",
                "index": 6,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0412f73c217837fd80d307",
                "text": "```\n\nserver.port=9090\n\n## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)\nspring.datasource.url = jdbc:mysql://localhost:3306/user\nspring.datasource.username = root\nspring.datasource.password = root\n## Hibernate Properties\n# The SQL dialect makes Hibernate generate better SQL for the chosen database\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect\n# Hibernate ddl auto (create, create-drop, validate, update)\nspring.jpa.hibernate.ddl-auto = update\n\n\n```",
                "time": "2020-07-07 06:15:19",
                "index": 7,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f04133bc7d15f7d0f772627",
                "text": "application is ",
                "time": "2020-07-07 06:16:27",
                "index": 8,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f041343bd3edf666fb3a422",
                "text": "```\npackage com.example.springboot;\n\nimport java.util.Arrays;\n\nimport com.example.springboot.model.User;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.stereotype.Repository;\n\n@SpringBootApplication\npublic class Application {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n\n\t@Bean\n\tpublic CommandLineRunner commandLineRunner(ApplicationContext ctx) {\n\t\treturn args -> {\n\n\t\t\tSystem.out.println(\"Let's inspect the beans provided by Spring Boot:\");\n\n\t\t\tString[] beanNames = ctx.getBeanDefinitionNames();\n\t\t\tArrays.sort(beanNames);\n\t\t\tfor (String beanName : beanNames) {\n\t\t\t\tSystem.out.println(beanName);\n\t\t\t}\n\n\t\t};\n\t}\n\n\t@Repository\n\tpublic static interface UserRepository extends JpaRepository<User, Long> {\n\t}\n}\n\n\n```",
                "time": "2020-07-07 06:16:35",
                "index": 9,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0413533c217837fd80d3c9",
                "text": "I am just trying to create user registration API",
                "time": "2020-07-07 06:16:51",
                "index": 10,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0413d4a9378637e8b0cfaf",
                "text": "kindly help i am stuck from two days",
                "time": "2020-07-07 06:19:00",
                "index": 11,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0413de8342f46274fb9380",
                "text": "i tried many stack overflow",
                "time": "2020-07-07 06:19:10",
                "index": 12,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0413e1f6b741628419e64f",
                "text": "results",
                "time": "2020-07-07 06:19:13",
                "index": 13,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0414f2dbf01050ab5aac82",
                "text": "also, i am not able to connect MySQL with spring application",
                "time": "2020-07-07 06:23:46",
                "index": 14,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0414f8bd3edf666fb3a86c",
                "text": "please help ",
                "time": "2020-07-07 06:23:52",
                "index": 15,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0416fd3c217837fd80dec7",
                "text": "@Sidharth-Bansal The compilation error is telling you that the compiler can\u2019t find `JpaRepository`. Looking at the top of your class, there is no import for `JpaRepository` so the compiler doesn\u2019t know where to look. You should add the following to your`Application.java` file:",
                "time": "2020-07-07 06:32:29",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5f04171c86ccb45b598ca994",
                "text": "`import org.springframework.data.jpa.repository.JpaRepository;`",
                "time": "2020-07-07 06:33:00",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5f0417667a4e99049ef3d3d7",
                "text": "@Sidharth-Bansal Word of advice: Get an IDE like Intellij IDEA. It will point out those errors immediately and will provide suggestions on how to fix this.",
                "time": "2020-07-07 06:34:14",
                "index": 18,
                "user": "kschlesselmann"
            },
            {
                "id": "5f0417903e4a827d19ac02b5",
                "text": "I think someone else already pointed out the problem with `mvn spring-boot run` a few days ago. The command should be `mvn spring-boot:run`. Note the `:` between `spring-boot` and `run`.",
                "time": "2020-07-07 06:34:56",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5f0417db8b72655b55569ab5",
                "text": "```\n[ERROR] Errors:\n[ERROR]   ApplicationTests \u00bb IllegalState Found multiple @SpringBootConfiguration annota...\n[INFO]\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  20.935 s\n[INFO] Finished at: 2020-07-07T12:04:12+05:30\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2:test (default-test) on project spring-boot: There are test failures.\n[ERROR]\n[ERROR] Please refer to /Users/gameskraft/Documents/FINAL/spring-boot/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n```",
                "time": "2020-07-07 06:36:11",
                "index": 20,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0417e186ccb45b598cad5d",
                "text": "now this error is coming",
                "time": "2020-07-07 06:36:17",
                "index": 21,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0417fda5ab931e4f6d4c7e",
                "text": "@kschlesselmann I have intellij but it is my first time using it",
                "time": "2020-07-07 06:36:45",
                "index": 22,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f04180764ef9d04b2986d03",
                "text": "so not able to use it fully",
                "time": "2020-07-07 06:36:55",
                "index": 23,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0418498b72655b55569b8b",
                "text": "I have not written any JUnit tests so why is it running tests?",
                "time": "2020-07-07 06:38:01",
                "index": 24,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f041cc2f6b741628419ff76",
                "text": "@Sidharth-Bansal  Every beginning is difficult. Hold on! As I wrote to you a few days ago: If you check the application.properties and create the database by hand (create database ...), your example will work. I tried it myself. Then learn to work with an IDE and try to understand the example etc. Find a colleague to learn together, e.g. on udemy, present your experiments on github ....",
                "time": "2020-07-07 06:57:06",
                "index": 25,
                "user": "torsten-liermann"
            },
            {
                "id": "5f04207f64ef9d04b298837c",
                "text": "ok",
                "time": "2020-07-07 07:13:03",
                "index": 26,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f0420c6f6b74162841a0aaa",
                "text": "I created the database but it is linking together don't know why",
                "time": "2020-07-07 07:14:14",
                "index": 27,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f04257b64ef9d04b2988ddb",
                "text": "@Sidharth-Bansal If you used start.spring.io to create the project, it will have generated a single test to make sure that your application starts up. I would guess that it is that test that is failing.",
                "time": "2020-07-07 07:34:19",
                "index": 28,
                "user": "wilkinsona"
            },
            {
                "id": "5f0425a5dbf01050ab5ade0f",
                "text": "@Sidharth-Bansal  all information about the database connection can be found in the file application.properties if a setting is incorrect, e.g. because you chose a different name for the database, the application will not be able to connect to the database.",
                "time": "2020-07-07 07:35:01",
                "index": 29,
                "user": "torsten-liermann"
            },
            {
                "id": "5f044a26f6b74162841a8578",
                "text": "Hi @torsten-liermann the code which i sent today is not as per yesterday's repository link. I was creating repo on my own",
                "time": "2020-07-07 10:10:46",
                "index": 33,
                "user": "Sidharth-Bansal"
            },
            {
                "id": "5f044ba43c217837fd816a9f",
                "text": "Thanks for the help all of you",
                "time": "2020-07-07 10:17:08",
                "index": 34,
                "user": "Sidharth-Bansal"
            }
        ]
    },
    {
        "id": 394,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5ce5c3d9879f4478c7c52dbc",
                "text": "Is this an appropriate place to ask high level questions concerning spring boot?",
                "time": "2019-05-22 21:49:13",
                "index": 0,
                "user": "tatumalenko"
            },
            {
                "id": "5ce642cb9404bf2aed940b77",
                "text": "@tatumalenko Yes",
                "time": "2019-05-23 06:50:51",
                "index": 9,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 395,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5de8df65c3d6795b9f28a08d",
                "text": "I'm having what it looks like a dependency problem.\nI've upgraded my spring boot project from 2.1.6.RELEASE to 2.2.1.RELEASE and now some of my tests are failing with the following exception:\n```\njava.lang.NoClassDefFoundError: org/springframework/core/annotation/MergedAnnotations$SearchStrategy\n        at org.springframework.boot.test.context.ImportsContextCustomizerFactory.createContextCustomizer(ImportsContextCustomizerFactory.java:44)\n        at org.springframework.test.context.support.AbstractTestContextBootstrapper.getContextCustomizers(AbstractTestContextBootstrapper.java:404)\n        at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:376)\n        at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:294)\n        at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildTestContext(AbstractTestContextBootstrapper.java:108)\n        at org.springframework.test.context.TestContextManager.<init>(TestContextManager.java:139)\n        at org.springframework.test.context.TestContextManager.<init>(TestContextManager.java:124)\n        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTestContextManager(SpringJUnit4ClassRunner.java:151)\n        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:142)\n        [...]\n ```\nIt looks like ```org.springframework.boot.test.context.ImportsContextCustomizerFactory``` depends on ```org.springframework.core.annotation.MergedAnnotations``` which is not in spring-core:5.1.7.RELEASE\nAny idea?",
                "time": "2019-12-05 10:43:49",
                "index": 0,
                "user": "Melozzola"
            },
            {
                "id": "5de8e1a908d0c961b7f4d5c2",
                "text": "@Melozzola Spring Boot 2.2.1.RELEASE depends on Spring Framework 5.2.1.RELEASE; it seems you've got a dependency management problem. Are you overriding the Spring Framework version?",
                "time": "2019-12-05 10:53:29",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5de8e21005eec2433dd9b234",
                "text": "@bclozel no I\u2019m not overriding it, but the ```mvn dependency:tree``` output gives:\n```\n[INFO] +- org.springframework.boot:spring-boot-starter:jar:2.2.1.RELEASE:compile\n[INFO] |  +- org.springframework.boot:spring-boot:jar:2.2.1.RELEASE:compile\n[INFO] |  +- org.springframework.boot:spring-boot-autoconfigure:jar:2.2.1.RELEASE:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter-logging:jar:2.2.1.RELEASE:compile\n[INFO] |  |  +- ch.qos.logback:logback-classic:jar:1.2.3:compile\n[INFO] |  |  |  \\- ch.qos.logback:logback-core:jar:1.2.3:compile\n[INFO] |  |  +- org.apache.logging.log4j:log4j-to-slf4j:jar:2.12.1:compile\n[INFO] |  |  |  \\- org.apache.logging.log4j:log4j-api:jar:2.11.2:compile\n[INFO] |  |  \\- org.slf4j:jul-to-slf4j:jar:1.7.29:compile\n[INFO] |  +- jakarta.annotation:jakarta.annotation-api:jar:1.3.5:compile\n[INFO] |  +- org.springframework:spring-core:jar:5.1.7.RELEASE:compile\n[INFO] |  |  \\- org.springframework:spring-jcl:jar:5.1.7.RELEASE:compile\n[INFO] |  \\- org.yaml:snakeyaml:jar:1.25:runtime\n```\n",
                "time": "2019-12-05 10:55:12",
                "index": 5,
                "user": "Melozzola"
            },
            {
                "id": "5de8e24af65fec1c8ec70626",
                "text": "From the poms I would expect 5.2.1.RELEASE though",
                "time": "2019-12-05 10:56:10",
                "index": 6,
                "user": "Melozzola"
            },
            {
                "id": "5de8e2871659720ca8019613",
                "text": "@Melozzola something is overriding that version then; can you look into parent poms, or properties defined in poms (is something defining `<spring-framework.version>`) ?",
                "time": "2019-12-05 10:57:11",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5de8e2cf8e906a1c8d72dc50",
                "text": "Ok, let me dig into it. ",
                "time": "2019-12-05 10:58:23",
                "index": 8,
                "user": "Melozzola"
            },
            {
                "id": "5de8f376f65fec1c8ec78d54",
                "text": "@bclozel Found the issue. There was indeed a dependecy problem.  mvn dependency:tree and mvn dependency:tree -Dverbose didn\u2019t show the dependency override, probably because it is not reliable in maven 3",
                "time": "2019-12-05 12:09:26",
                "index": 9,
                "user": "Melozzola"
            },
            {
                "id": "5de8fefcf65fec1c8ec7e528",
                "text": "@Melozzola I'm glad you found the issue",
                "time": "2019-12-05 12:58:36",
                "index": 10,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 396,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dca90a66ba2347d2d7ceb0f",
                "text": "Hi, I recon that spring devtools configured like \nval developmentOnly = configurations.create(\"developmentOnly\")\nconfigurations.runtimeClasspath.get().extendsFrom(developmentOnly)\ndevelopmentOnly(\"org.springframework.boot:spring-boot-devtools:2.1.6.RELEASE\")\n\nand running like this \n\n  java/current/bin/java  -classpath some jars\nnot disabling itself on production. Can anyone help me with this ? I use kotlin/gradle. ",
                "time": "2019-11-12 10:59:50",
                "index": 0,
                "user": "dkubicki"
            },
            {
                "id": "5dca90f6eeb63e1a839c50c4",
                "text": "@dkubicki Sounds like you must have included DevTools in the \"some jars\" that you're passing into `-classpath`",
                "time": "2019-11-12 11:01:10",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dca9e3b68ad1c4a0fb1a517",
                "text": "@wilkinsona many thanks this is it. I will try exclude from distZip task attached devtools. ",
                "time": "2019-11-12 11:57:47",
                "index": 6,
                "user": "dkubicki"
            }
        ]
    },
    {
        "id": 397,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd596ffbebeec417b9a8a04",
                "text": "Curious if someone might be able to point me in the right direction.  I\u2019m in the process of upgrading a large project to spring boot 2.2.1.  On startup, I\u2019m seeing the message ```\nNo CacheResolver specified, and no bean of type CacheManager found. Register a CacheManager bean or remove the @EnableCaching annotation from your configuration\n```\nMy codebase contains no instance of `@EnableCaching`.  I\u2019m not entirely sure where to start looking to figure out what\u2019s triggering this.  i\u2019ve excluded `org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration` from auto config, but no luck.",
                "time": "2019-11-20 19:41:51",
                "index": 0,
                "user": "joshfix"
            },
            {
                "id": "5dd6576a1bf5192e6679b65f",
                "text": "@joshfix I don\u2019t see how that would be related to the upgrade, we haven\u2019t been doing much in that area. You could check the auto-configuration report to see what\u2019s going on. The caching support is only triggered by `@EnableCaching`",
                "time": "2019-11-21 09:22:50",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 398,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d3fbbec8aab922429e59296",
                "text": "What different between generationType identity, auto ... ?",
                "time": "2019-07-30 03:39:24",
                "index": 0,
                "user": "robatipoor"
            },
            {
                "id": "5d3fec047e00fc4ace747ea7",
                "text": "@robatipoor You can read more about that [here](https://en.wikibooks.org/wiki/Java_Persistence/Identity_and_Sequencing).",
                "time": "2019-07-30 07:04:36",
                "index": 4,
                "user": "tomicarsk6"
            }
        ]
    },
    {
        "id": 399,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c615c24adf6cb0b2c9ce144",
                "text": "hmm got a prob with multipart again :D I'm on WebFlux stack and got this method:\n```\n   @RequestMapping(method = RequestMethod.POST, value = \"/upload\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\n   public Mono<ServerResponse> progressUpload(@RequestPart(value = \"files\") Flux<FilePart> files,\n         @RequestPart(value = \"uploadAdditionals\") Flux<Part> uploadAdditionals) {\n```\nand i get this exception:\n```\n12:26:32.205 ERROR [c.e.b.a.b.r.JobRestController] :  \norg.springframework.core.codec.CodecException: Type definition error: [simple type, class org.springframework.web.reactive.function.server.DefaultServerResponseBuilder$BodyInserterResponse]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.springframework.web.reactive.function.server.DefaultServerResponseBuilder$BodyInserterResponse and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)\n```\n\nAny idea whats wrong? And yes i setted already fail on empty beans to false ... and i dont want that he is parsing JSON?? Yes they are JSON's parts in uploadAdditionals",
                "time": "2019-02-11 11:27:32",
                "index": 0,
                "user": "awilhelmer"
            },
            {
                "id": "5c61648cadf6cb0b2c9d1ea2",
                "text": "@awilhelmer it seems you're trying to serialize the response itself and not its body",
                "time": "2019-02-11 12:03:24",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5c6173d74003460b2d30fb9a",
                "text": "@bclozel  thats the stacktrace: https://pastebin.com/MVJkeMrc ... I don't see any  self coded related things ... ",
                "time": "2019-02-11 13:08:39",
                "index": 2,
                "user": "awilhelmer"
            },
            {
                "id": "5c6174a8604f233ab6ef4b26",
                "text": "ah ups now i see :D ",
                "time": "2019-02-11 13:12:08",
                "index": 3,
                "user": "awilhelmer"
            },
            {
                "id": "5c617700604f233ab6ef5cff",
                "text": "But when i use \n```\n @RequestMapping(method = RequestMethod.POST, value = \"/upload\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\n   public Mono<ServerResponse> progressUpload(@RequestPart(value = \"files\") Flux<FilePart> files,\n         @RequestPart(value = \"uploadAdditionals\") Flux<UploadAdditionals> uploadAdditionals) {\n```\n\nI get \n```\n14:19:02.132 ERROR [c.e.b.a.b.r.JobRestController] :  \norg.springframework.web.server.ServerWebInputException: 400 BAD_REQUEST \"Failed to read HTTP message\"; nested exception is org.springframework.core.codec.DecodingException: JSON decoding error: Cannot deserialize instance of `com.test.UploadAdditionals` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `com.test.UploadAdditionals` out of START_ARRAY token\n at [Source: UNKNOWN; line: -1, column: -1]\n```",
                "time": "2019-02-11 13:22:08",
                "index": 4,
                "user": "awilhelmer"
            },
            {
                "id": "5c6177c74003460b2d311744",
                "text": "ah i see, the part is going through synchronoss too :D hmmm thats a little bit ... fail? :P",
                "time": "2019-02-11 13:25:27",
                "index": 5,
                "user": "awilhelmer"
            },
            {
                "id": "5c6179cf28c89123cbae497f",
                "text": "@awilhelmer in those cases, it's often useful to try and break down the problem. Can you write something that deserializes the JSON string into that object just using `ObjectMapper`?",
                "time": "2019-02-11 13:34:07",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5c6179eb28c89123cbae4a11",
                "text": "Here, it looks like Jackson is asking for a JSON object (wrapped by `{}`) whereas here it's just an array",
                "time": "2019-02-11 13:34:35",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c618c255095f6660cd6b8de",
                "text": "IDENTITY should be a Long ",
                "time": "2019-02-11 14:52:21",
                "index": 9,
                "user": "awilhelmer"
            },
            {
                "id": "5c618c3b7502282258dafebe",
                "text": "or you have to define a GenerationSequence that generates strings ",
                "time": "2019-02-11 14:52:43",
                "index": 10,
                "user": "awilhelmer"
            }
        ]
    },
    {
        "id": 400,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dc5788d4adf071a84f2b8ff",
                "text": "Hmm, trying to use an earlier starter doesn't seem to work, though I can't see where in the poms the issue is.\ne.g. `spring-boot-starter-parent:2.2.1.RELEASE` with `spring-boot-starter-data-redis:2.2.0.RELEASE` still depends on `spring-data-redis:2.2.1.RELEASE`",
                "time": "2019-11-08 14:15:41",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5dc5822deeb63e1a8379904c",
                "text": "@OrangeDog Boot imports Spring Data's bom which controls the version for all Spring Data modules and keeps them in sync. You can either set a `<spring-data-releasetrain.version>` property or you could manually override the version of spring-data-redis by declaring your own dependency management for it",
                "time": "2019-11-08 14:56:45",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dc5823fca778c1fbfc88003",
                "text": "aha, thanks",
                "time": "2019-11-08 14:57:03",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5dc5825bea7d147cb3420978",
                "text": "If you do the former, you'll want `Moore-RELEASE`",
                "time": "2019-11-08 14:57:31",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5dc58284b95ae413dca04c4f",
                "text": "Nothing broken in JPA yet, so I'm just downgrading redis",
                "time": "2019-11-08 14:58:12",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5dc58d50b95ae413dca09ff9",
                "text": "it looks like you cannot use the `logging.level` properties if the logger has a space in the name?",
                "time": "2019-11-08 15:44:16",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5dc5a0f45a979223c398f3b2",
                "text": "@OrangeDog As long as you escape the space as needed for wherever you're specifying the property, I can't think why that wouldn't work",
                "time": "2019-11-08 17:08:04",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5dc5a11b35889012b1d1f3a3",
                "text": "in application.yaml it looks like it removed the space before the logger got configured",
                "time": "2019-11-08 17:08:43",
                "index": 22,
                "user": "OrangeDog"
            },
            {
                "id": "5dc5a1ceadd5717a88d1147f",
                "text": "I'd misremembered. You'll need some extra syntax to avoid that. Scroll down a bit from https://docs.spring.io/spring-boot/docs/2.2.x/reference/htmlsingle/#boot-features-external-config-relaxed-binding to learn more",
                "time": "2019-11-08 17:11:42",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5dc5a206fd6fe41fc04b53a9",
                "text": "ah, need `[]`",
                "time": "2019-11-08 17:12:38",
                "index": 24,
                "user": "OrangeDog"
            },
            {
                "id": "5dc5a21d35889012b1d1fa28",
                "text": "Yep. Something like:\n\n```\nlogging:\n  level:\n    \"[logger name]\": debug\n```",
                "time": "2019-11-08 17:13:01",
                "index": 25,
                "user": "wilkinsona"
            },
            {
                "id": "5dc5a2affd6fe41fc04b573e",
                "text": "Looks like that works.",
                "time": "2019-11-08 17:15:27",
                "index": 26,
                "user": "OrangeDog"
            },
            {
                "id": "5dc5a2e0ea7d147cb34304f6",
                "text": "Evilly, it appears hibernate-types logs direct to stdout instead if you've disabled the logger. There is fortunately a separate system property that will stop it.",
                "time": "2019-11-08 17:16:16",
                "index": 27,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 401,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b9e3978b4990c30eec27f56",
                "text": "@chsi13 so can you help me to fix this issue with spring data jpa : with spring data jpa, how to resolve the cycle refererences between entities (person -> list cars, each car -> person) without break the ref in both of relationships (car (ref person) != null)",
                "time": "2018-09-16 11:07:36",
                "index": 0,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e433afcba1254fac391a9",
                "text": "Non blocking. Your example is about a oneToMany classic sc\u00e9nario. I don't understand your problem. And what are you trying To show here? That we have to use Mongo instead jpa on Sql databases? ",
                "time": "2018-09-16 11:49:14",
                "index": 1,
                "user": "chsi13"
            },
            {
                "id": "5b9e44e21ee2ca65022480bc",
                "text": "@chsi13 ex: i talk about spring data jpa(with mongo its work fine) : Person entity : @OneToMany List<Car> cars,  Car entity: @ManyToOne Person person, so when you try to save person (with list cars) on server (data is passed on json format from client side) an exception is appear : cycle reference between cars and person ",
                "time": "2018-09-16 11:56:18",
                "index": 2,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e46a6e5c2cc56ad999bed",
                "text": "@halimpuckjava Spring data jpa is just a facilitator layer on the jpa spec. I used your example many times in my app and it works without problems. Bidirectionnal relations are completely supported in jpa. What's the stack?",
                "time": "2018-09-16 12:03:50",
                "index": 3,
                "user": "chsi13"
            },
            {
                "id": "5b9e47731ee2ca6502248e92",
                "text": "@chsi13 yes its work fine when client integrate spring data jpa in owner side but i speack about client (angular client for exemple or netty reactor) send data to spring boot (with data jpa)  ",
                "time": "2018-09-16 12:07:15",
                "index": 4,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e49c33b7e6c2edd258712",
                "text": "@halim don't see the relation between spring data and angular app sending data. Either you use spring data and you sending data to a rest api that Will use jpa entities and persist them via a spring data repository or you use spring data rest and spring Will automatically creates controllers that you call from your frontend.",
                "time": "2018-09-16 12:17:07",
                "index": 5,
                "user": "chsi13"
            },
            {
                "id": "5b9e4ac50cfe7f30f1a13b89",
                "text": "@chsi13 spring data on server side (spring boot) not for client side, client is independent from spring data, just send data (on json) in spring boot (handle request client by rest controller and save data using spring data) son my question how to fix cycle reference from client ",
                "time": "2018-09-16 12:21:25",
                "index": 6,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e4d31f08bc22dfb65b01e",
                "text": "Your problem is independent of the client. Client just send json.  Spring data has nothing To do with that",
                "time": "2018-09-16 12:31:45",
                "index": 7,
                "user": "chsi13"
            },
            {
                "id": "5b9e4dd0be4f300626a0cc33",
                "text": "@chsi13 i know that, spring data just processing data with database ,  but how resole this in client side (exemple person -> car) ",
                "time": "2018-09-16 12:34:24",
                "index": 8,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e4fbf7dca3065030c16dd",
                "text": "Humm.. you point out the problem from spring data and you try  solving something on client side....  so you have a problem but it doesn't come from spring data jpa",
                "time": "2018-09-16 12:42:39",
                "index": 9,
                "user": "chsi13"
            },
            {
                "id": "5b9e528be5c2cc56ad99e88d",
                "text": "@chsi13 i talk about spring data because it responsable for processing data in database but how fix my issue ??",
                "time": "2018-09-16 12:54:35",
                "index": 10,
                "user": "halimpuckjava"
            },
            {
                "id": "5b9e5589f7e1580625dc2444",
                "text": "As the problem is on client side I could only suggest you To ask your question on concerned gitter room (angular for e.g). If i understand well your problem spring boot aren't directly concern\u00e9s",
                "time": "2018-09-16 13:07:21",
                "index": 11,
                "user": "chsi13"
            }
        ]
    },
    {
        "id": 402,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3fd4b339596c372bf3030f",
                "text": "I have an expensive database operation that I want to perform before executing a bunch of tests, and I'd like to perform it only once",
                "time": "2019-01-17 01:04:51",
                "index": 0,
                "user": "josiahhaswell"
            },
            {
                "id": "5c3fd4ce8318994524ffeeeb",
                "text": "But then I'd like to roll it back after the test suite is complete",
                "time": "2019-01-17 01:05:18",
                "index": 1,
                "user": "josiahhaswell"
            },
            {
                "id": "5c3fd4f0c45b986d1171e34d",
                "text": "I'm not quite sure how to go about that, though",
                "time": "2019-01-17 01:05:52",
                "index": 2,
                "user": "josiahhaswell"
            },
            {
                "id": "5c3fd6148ce4bb25b8c33656",
                "text": "I suppose I'm looking for a Spring feature that starts an outer transaction before the test executes, executes each of the test methods in an inner transaction, rolls them back after they're complete, then rolls back the outer transaction",
                "time": "2019-01-17 01:10:44",
                "index": 3,
                "user": "josiahhaswell"
            },
            {
                "id": "5c40142095e17b4525644b4a",
                "text": "@josiahhaswell sounds like you want to setup test data before you run the suite.  I am not sure you want a long running transaction, then pause, resume, and rollback.  For integration testing, that sounds far outside what normal might be?  You want to be as close to production like as possible.  Maybe you should describe the problem you are trying to solve and why you are looking at the solution you described?",
                "time": "2019-01-17 05:35:28",
                "index": 4,
                "user": "DavidDLucas_twitter"
            },
            {
                "id": "5c402f8a39596c372bf5227c",
                "text": "Well, the exact issue is that there's a data set whose size is part of a given test (~2k elements), it only takes about a second to load the data, but amortized over the few dozen individual tests it adds up.  The tests run very quickly if the data is inserted before the tests are run, but I don't want the data polluting other tests",
                "time": "2019-01-17 07:32:26",
                "index": 7,
                "user": "josiahhaswell"
            }
        ]
    },
    {
        "id": 403,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d3d1eccecf3bf7b1a4d36e0",
                "text": "I am using spring-boot. What dependency should I include to make WebServiceTemplate work?",
                "time": "2019-07-28 04:04:28",
                "index": 0,
                "user": "t0920008899"
            },
            {
                "id": "5d3d5071b2f4075cb8167e39",
                "text": "@t0920008899 there is a starter for web services. you can bootstrap an app on start.spring.io and select \u201cSpring Web Services\"",
                "time": "2019-07-28 07:36:17",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5d3d5b583e51d77b1b81091a",
                "text": "@snicoll Thanks a lot. may I know which dependency should I include to use xpath api?",
                "time": "2019-07-28 08:22:48",
                "index": 2,
                "user": "t0920008899"
            }
        ]
    },
    {
        "id": 404,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bbcd8df435c2a518e796d0f",
                "text": "@snicoll about #11107 I saw the `CamelCaseEndpoint`  but if I add e.g. `@ReadOperation` I get the error `Canonical names should be kebab-case \u2026`. Thanks ",
                "time": "2018-10-09 16:35:43",
                "index": 0,
                "user": "jfgosselin"
            },
            {
                "id": "5bbdae68e65a634336b1fa89",
                "text": "@jfgosselin can\u2019t really help with half an exception. Can you please provide a bit more detail?",
                "time": "2018-10-10 07:46:48",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bbdf6231e23486b93ac6426",
                "text": "@snicoll here\u2019s an example : \n\n```\n@Component\n@Endpoint(id = \"PascalCase\")\npublic class CamelCaseEndpoint {\n\n  @ReadOperation\n  public String hello() {\n    return \"hello\";\n  }\n}\n```\n```\nConfiguration property name 'management.endpoint.PascalCase.cache.time-to-live' is not valid:\n\n    Invalid characters: 'P', 'C'\n    Bean: jmxMBeanExporter\n    Reason: Canonical names should be kebab-case ('-' separated), lowercase alpha-numeric characters and must start with a letter\n\nAction:\n\nModify 'management.endpoint.PascalCase.cache.time-to-live' so that it conforms to the canonical names requirements.\n```",
                "time": "2018-10-10 12:52:51",
                "index": 32,
                "user": "jfgosselin"
            },
            {
                "id": "5bbdf63c271506518de9b38e",
                "text": "That\u2019s not camel case there, is it? ",
                "time": "2018-10-10 12:53:16",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5bbdf641ef4afc4f284ca9f1",
                "text": "What does `pascalCase` does?",
                "time": "2018-10-10 12:53:21",
                "index": 34,
                "user": "snicoll"
            },
            {
                "id": "5bbdf656435c2a518e8152ec",
                "text": "@snicoll based on your test case :)",
                "time": "2018-10-10 12:53:42",
                "index": 38,
                "user": "jfgosselin"
            },
            {
                "id": "5bbdf691ae7be94016317dfe",
                "text": "@snicoll same issue with ```@Endpoint(id = \"camelCase\u201d)```",
                "time": "2018-10-10 12:54:41",
                "index": 40,
                "user": "jfgosselin"
            },
            {
                "id": "5bbdf69c82893a2f3bc4863e",
                "text": "Oh well something has changed then",
                "time": "2018-10-10 12:54:52",
                "index": 41,
                "user": "snicoll"
            },
            {
                "id": "5bbdf6ab6e5a401c2d4935fe",
                "text": "Which version is that?",
                "time": "2018-10-10 12:55:07",
                "index": 42,
                "user": "snicoll"
            },
            {
                "id": "5bbdf6c7435c2a518e815604",
                "text": "2.1.0.M4 but same issue with 2.0.5",
                "time": "2018-10-10 12:55:35",
                "index": 44,
                "user": "jfgosselin"
            },
            {
                "id": "5bbdf6f382893a2f3bc48747",
                "text": "You get the error when you add e.g. ```@ReadOperation```",
                "time": "2018-10-10 12:56:19",
                "index": 47,
                "user": "jfgosselin"
            },
            {
                "id": "5bbdf7a36e5a401c2d493ce0",
                "text": "@jfgosselin that\u2019s interesting, thank you. Could you please open an issue in the tracker? It fails when you add an operation because that\u2019s what triggers the creation of the property",
                "time": "2018-10-10 12:59:15",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5bbdf7c0ef4afc4f284cb522",
                "text": "I thought I had that fixed but for some reason I didn\u2019t fix it properly or something else happened in the meantime",
                "time": "2018-10-10 12:59:44",
                "index": 57,
                "user": "snicoll"
            },
            {
                "id": "5bbdf7cb6e5a401c2d493e8b",
                "text": "ok thanks",
                "time": "2018-10-10 12:59:55",
                "index": 58,
                "user": "jfgosselin"
            }
        ]
    },
    {
        "id": 405,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dbbc9952a6494729c782d77",
                "text": "Hello.. We have implemented actuators in our spring boot application, which has dependencies on RabbitMQ.\n\nIf RabbitMQ node is UP, the actuator/health endpoint, returns the response as follows:\n```\n{\n    \"status\": \"UP\",\n    \"details\": {\n        \"rabbit\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"defaultExchangeRabbitTemplate\": {\n                    \"status\": \"UP\",\n                    \"details\": {\n                        \"version\": \"3.7.15\"\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nThe expected behavior should be, if RabbitMQ node is down, the actuator/health endpoint should return the response as below. I want to show the overall application health status as UP, even if RabbitMQ health is DOWN.\n```\n{\n    \"status\": \"UP\",\n    \"details\": {\n        \"rabbit\": {\n            \"status\": \"DOWN\",\n            \"details\": {\n                \"defaultExchangeRabbitTemplate\": {\n                    \"status\": \"DOWN\"\n                }\n            }\n        }\n    }\n}\n```\n\nCurrently, the overall application health status also shows as DOWN, if rabbitmq node is unavailable.\n```\n{\n    \"status\": \"DOWN\",\n    \"details\": {\n        \"rabbit\": {\n            \"status\": \"DOWN\",\n            \"details\": {\n                \"defaultExchangeRabbitTemplate\": {\n                    \"status\": \"DOWN\"\n                }\n            }\n        }\n    }\n}\n```\nIs there any way to de-couple the overall application health from downstream health checks. I could not find anything specific in Spring documentation for this scenario. We are using spring boot 2.1.4.RELEASE for our project.",
                "time": "2019-11-01 05:58:45",
                "index": 0,
                "user": "shashank-gupta017"
            },
            {
                "id": "5dbbfd69a03ae1584f48fa66",
                "text": "@shashank-gupta017 No, that's not possible. If you don't care if Rabbit is up our down, you should consider not including it in the application's health checks. Alternatively, you could use Boot 2.2 and move the Rabbit health indicator into a separate group of non-critical health indicators. You could then ignore the overall status and HTTP response code when querying this group's health.",
                "time": "2019-11-01 09:39:53",
                "index": 11,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 406,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf401d380e46b4266decfbc",
                "text": "When service is Down actuator should return \"Down \" message but I am not getting any thing",
                "time": "2018-11-20 12:45:07",
                "index": 0,
                "user": "Srini555"
            },
            {
                "id": "5bf4021180652945c38fb29b",
                "text": "Remember, if the app itself is down the actuator endpoint is also down and will not be able to report anything...",
                "time": "2018-11-20 12:46:09",
                "index": 1,
                "user": "legart"
            },
            {
                "id": "5bf402284720c11e0e971935",
                "text": "Only dependency healthchecks like the database, diskspace etc will be reported down",
                "time": "2018-11-20 12:46:32",
                "index": 2,
                "user": "legart"
            },
            {
                "id": "5bf40467b86c70503f5dda3c",
                "text": "If app is down I want see status down. To see status down what should I do part of app",
                "time": "2018-11-20 12:56:07",
                "index": 3,
                "user": "Srini555"
            },
            {
                "id": "5bf40495f9993b42673bed0b",
                "text": "If the app is down, it can't services requests",
                "time": "2018-11-20 12:56:53",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bf404a12ef5b06e4096a612",
                "text": "Well. Your monitor would not be able to print \"DOWN\" if you turned it off either, its the same with the app",
                "time": "2018-11-20 12:57:05",
                "index": 5,
                "user": "legart"
            },
            {
                "id": "5bf405074720c11e0e972ca0",
                "text": "Yes, if we use eureka server we can see down or up. Bcoz our request is pointing to eureka not actual api. Is it correct ",
                "time": "2018-11-20 12:58:47",
                "index": 6,
                "user": "Srini555"
            },
            {
                "id": "5bf407e62735965dfe05a9e3",
                "text": "My assumption is if we use eureka server as central registry we can see even if service is down also.",
                "time": "2018-11-20 13:11:02",
                "index": 7,
                "user": "Srini555"
            },
            {
                "id": "5bf4080380652945c38fdf92",
                "text": "Yes, correct",
                "time": "2018-11-20 13:11:31",
                "index": 8,
                "user": "legart"
            },
            {
                "id": "5bf410ae1665691e0fd2c867",
                "text": "Thank you Michael Legart",
                "time": "2018-11-20 13:48:30",
                "index": 12,
                "user": "Srini555"
            }
        ]
    },
    {
        "id": 407,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5dc1150eef84ab3786fb5251",
                "text": "Hi , I want to push docker images to Nexus repository (self hosted), anyone has any idea how to do it ? because with dockerhub its straight forward but with self hosted repo it is not working.Thanks",
                "time": "2019-11-05 06:22:06",
                "index": 0,
                "user": "rg-repo"
            },
            {
                "id": "5dc115452f8a0343573ae9e2",
                "text": "run a container -> open nexus oss docker repository support -> create account -> push image",
                "time": "2019-11-05 06:23:01",
                "index": 1,
                "user": "timbotetsu_twitter"
            },
            {
                "id": "5dc11608f26ea4729d589c82",
                "text": "@timbotetsu_twitter I didn\u2019t open nexus oss docker support just configured the connector on HTTP and it was giving me the error on specific port, maybe I should give it a try by doing that. Thanks",
                "time": "2019-11-05 06:26:16",
                "index": 2,
                "user": "rg-repo"
            }
        ]
    },
    {
        "id": 408,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5dcc875cfd6fe41fc07c90bc",
                "text": "Hi I would like to pass spring professional certification  could anyone tell  me where  could I have some free training? ",
                "time": "2019-11-13 22:44:44",
                "index": 0,
                "user": "Elfn"
            },
            {
                "id": "5dcc8784e75b2d5a19c9a2ca",
                "text": "And some advices from those already certified",
                "time": "2019-11-13 22:45:24",
                "index": 1,
                "user": "Elfn"
            },
            {
                "id": "5dcc886292a84f79fe60d333",
                "text": "@Elfn Spring In Action  book is helpful",
                "time": "2019-11-13 22:49:06",
                "index": 3,
                "user": "bhgitgit"
            },
            {
                "id": "5dcc8899fd6fe41fc07c985e",
                "text": "@bhgitgit thanks ",
                "time": "2019-11-13 22:50:01",
                "index": 4,
                "user": "Elfn"
            },
            {
                "id": "5dcc88bbea7d147cb3745a3b",
                "text": "@Elfn welcome! May I ask the reason you planning to do this certification?",
                "time": "2019-11-13 22:50:35",
                "index": 5,
                "user": "bhgitgit"
            },
            {
                "id": "5dcc8afce75b2d5a19c9be0c",
                "text": "@bhgitgit  great thanks",
                "time": "2019-11-13 23:00:12",
                "index": 8,
                "user": "Elfn"
            },
            {
                "id": "5dcc8b5852b73c7cb2124be9",
                "text": "@bhgitgit I just want to certified my knowledge and increase my chances to become Java architect",
                "time": "2019-11-13 23:01:44",
                "index": 9,
                "user": "Elfn"
            },
            {
                "id": "5dcc8b6c50010612b2b33e95",
                "text": "Software architect sorry",
                "time": "2019-11-13 23:02:04",
                "index": 10,
                "user": "Elfn"
            },
            {
                "id": "5dcc8bbbea7d147cb3746d6a",
                "text": "I Am also preparing Java OCP I want to pass it before spring ",
                "time": "2019-11-13 23:03:23",
                "index": 11,
                "user": "Elfn"
            },
            {
                "id": "5dcc8c4e52b73c7cb212509e",
                "text": "@bhgitgit  why this question ? ",
                "time": "2019-11-13 23:05:50",
                "index": 12,
                "user": "Elfn"
            },
            {
                "id": "5dcc8c73ea7d147cb37472f2",
                "text": "@Elfn nice, All the best:) Please check if these certifications really help as some recruiters have opinion that they prove  theoretical knowledge",
                "time": "2019-11-13 23:06:27",
                "index": 13,
                "user": "bhgitgit"
            },
            {
                "id": "5dcc8cafea7d147cb374751b",
                "text": "doing good projects might help you  ",
                "time": "2019-11-13 23:07:27",
                "index": 14,
                "user": "bhgitgit"
            },
            {
                "id": "5dcc8d774adf071a842530e0",
                "text": "Yes just get out of university so my wish is to have a job through which I could practice a greater lot to achieve significant level and Java cert could help to make recruiters pay attention on my profile",
                "time": "2019-11-13 23:10:47",
                "index": 15,
                "user": "Elfn"
            },
            {
                "id": "5dcc8e31eeb63e1a83aaed6a",
                "text": "I have some online courses to make me practice but not enough as Whether I was realizing entreprise projects",
                "time": "2019-11-13 23:13:53",
                "index": 16,
                "user": "Elfn"
            },
            {
                "id": "5dcc9319ca778c1fbffa6ae1",
                "text": "In my service impl , instead of autowiring RestTemplate, due to limitations on mockBean on setters, I have to inject the resttemplate into the method(pass it as method parameter) in my serviceimpl class. Could you please let me know if it's a good practise to replace a Autowired RestTemplate with a method parameter(which helps in unit test). Appreciate if someone who has experienced this can respond",
                "time": "2019-11-13 23:34:49",
                "index": 17,
                "user": "bhgitgit"
            },
            {
                "id": "5dcc932ceeb63e1a83ab12a8",
                "text": "@Elfn ok ",
                "time": "2019-11-13 23:35:08",
                "index": 18,
                "user": "bhgitgit"
            },
            {
                "id": "5dcc948452b73c7cb21287b2",
                "text": "@bhgitgit Ok thanks",
                "time": "2019-11-13 23:40:52",
                "index": 19,
                "user": "Elfn"
            }
        ]
    },
    {
        "id": 409,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be2c5f42138723405cb9c00",
                "text": "Hey, so I made this project with Spring Boot Starter, and I've been writing it for quite some time now, running it from my IDE never gave me any issues, but when I build a jar and try to run it I get this.\n`\nNov 07 10:56:43 lumpenproletariat java[17077]: Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'javax.persistence.EntityManagerFactory' available`",
                "time": "2018-11-07 11:01:08",
                "index": 0,
                "user": "fp-alice"
            },
            {
                "id": "5be2c6086b9822140df164de",
                "text": "Would anyone happen to know how to fix this? I've been banging my head against the wall trying to fix this for 3 hours",
                "time": "2018-11-07 11:01:28",
                "index": 1,
                "user": "fp-alice"
            },
            {
                "id": "5be2c6474e7ca1452069c125",
                "text": "@antflga   The EntityManager interface belongs to JPA and is implemented by JPA providers (such as Eclipse), not Spring, and it has its own injection annotation: @PersistenceContext. EntityManager objects are transaction-scoped and should not be exposed as beans as you're doing. Instead, either use the JPA annotation to inject the EntityManager:\n\n@PersistenceContext\nEntityManager em;\nor, since it looks like you're trying to use Spring repositories, inject the repository instead:\n\n@Autowired\nPersonRepository pr;",
                "time": "2018-11-07 11:02:31",
                "index": 3,
                "user": "errazki1995"
            },
            {
                "id": "5be2c64892b7d117214f2775",
                "text": "@antflga you can run with `\u2014debug` (or `-Ddebug`) to display the auto-configuration report and understand why that bean is not created.",
                "time": "2018-11-07 11:02:32",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5be2c7a4e8add80e63b4faa1",
                "text": "For some context, here is one of the classes where I used entityManager.\n```\n    @PersistenceContext\n    private EntityManager entityManager;\n\n    private QImage qimage = QImage.image;\n\n    @Autowired\n    public ImageRepositoryImpl() {\n        super(Image.class);\n    }\n\n    @Transactional\n    public Image findImageByUrl(String url) {\n        JPAQueryFactory queryFactory = new JPAQueryFactory(entityManager);\n        return queryFactory.selectFrom(qimage).where(qimage.url.eq(url)).fetchOne();\n    }\n\n    public List<Image> findAllForUser(User user) {\n        if (user == null) return null;\n        JPAQueryFactory queryFactory = new JPAQueryFactory(entityManager);\n        return queryFactory.selectFrom(qimage).where(qimage.user.eq(user)).orderBy(qimage.createdAt.desc()).fetch();\n    }\n```\n\nI am definitely using @PersistenceContext",
                "time": "2018-11-07 11:08:20",
                "index": 5,
                "user": "fp-alice"
            },
            {
                "id": "5be2c7cb47217e07ffe4f139",
                "text": "The entire source of the app is available at https://github.com/antflga/voke-backend",
                "time": "2018-11-07 11:08:59",
                "index": 6,
                "user": "fp-alice"
            },
            {
                "id": "5be2c7d27326df140eca6c73",
                "text": "And I'll try running with debug enabled",
                "time": "2018-11-07 11:09:06",
                "index": 7,
                "user": "fp-alice"
            },
            {
                "id": "5be2c8372138723405cbab67",
                "text": "Here's the entire log with -Ddebug",
                "time": "2018-11-07 11:10:47",
                "index": 8,
                "user": "fp-alice"
            },
            {
                "id": "5be2c838d001b91720216b24",
                "text": "https://hastebin.com/yoyivujene.rb",
                "time": "2018-11-07 11:10:48",
                "index": 9,
                "user": "fp-alice"
            },
            {
                "id": "5be2c8ab92b7d117214f35d3",
                "text": "Actually just kidding, I messed up that command, the output with --debug is too big to copy 0.0",
                "time": "2018-11-07 11:12:43",
                "index": 10,
                "user": "fp-alice"
            },
            {
                "id": "5be2c90a92b7d117214f3849",
                "text": "I did see this though",
                "time": "2018-11-07 11:14:18",
                "index": 11,
                "user": "fp-alice"
            },
            {
                "id": "5be2c90b47217e07ffe4f848",
                "text": "https://hastebin.com/mohaqevamu.cs",
                "time": "2018-11-07 11:14:19",
                "index": 12,
                "user": "fp-alice"
            },
            {
                "id": "5be2c912f1b87534048ada37",
                "text": "I don't know if that means anything to you",
                "time": "2018-11-07 11:14:26",
                "index": 13,
                "user": "fp-alice"
            },
            {
                "id": "5be2c91ad001b917202170e9",
                "text": "@antflga  did you change the  PersistenceUnitName  ? ",
                "time": "2018-11-07 11:14:34",
                "index": 14,
                "user": "errazki1995"
            },
            {
                "id": "5be2c9257a36913a9a051558",
                "text": "How? Is that something I have to do?",
                "time": "2018-11-07 11:14:45",
                "index": 15,
                "user": "fp-alice"
            },
            {
                "id": "5be2c97c6b9822140df17bcd",
                "text": "@antflga  Yes You Should  Provide a persistentUnitName and make sure it is unique.",
                "time": "2018-11-07 11:16:12",
                "index": 16,
                "user": "errazki1995"
            },
            {
                "id": "5be2c9fd4e7ca1452069d7e1",
                "text": "Aha! That changed it",
                "time": "2018-11-07 11:18:21",
                "index": 17,
                "user": "fp-alice"
            },
            {
                "id": "5be2ca15bb887874748f3c8e",
                "text": "@antflga Fixed the problem ? ",
                "time": "2018-11-07 11:18:45",
                "index": 18,
                "user": "errazki1995"
            },
            {
                "id": "5be2ca217a36913a9a051cf7",
                "text": "```\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 0 of constructor in wtf.shekels.alice.voke.repositories.users.UserRepositoryImpl required a bean named 'roles' that could not be found.\n\n\nAction:\n\nConsider defining a bean named 'roles' in your configuration.\n```\n\nI assume this means the bean that provides the entitymanager named 'roles'",
                "time": "2018-11-07 11:18:57",
                "index": 19,
                "user": "fp-alice"
            },
            {
                "id": "5be2ca25bb06d73a9937d254",
                "text": "No did not",
                "time": "2018-11-07 11:19:01",
                "index": 20,
                "user": "fp-alice"
            },
            {
                "id": "5be2ca2a2138723405cbb8ee",
                "text": "but gave me a more descriptive error",
                "time": "2018-11-07 11:19:06",
                "index": 21,
                "user": "fp-alice"
            },
            {
                "id": "5be2ca46e8add80e63b50ae1",
                "text": "it wants a bean for my RoleRepository, do those need to have beans even? That never gave me a problem in development",
                "time": "2018-11-07 11:19:34",
                "index": 22,
                "user": "fp-alice"
            },
            {
                "id": "5be2ca6ed001b91720217941",
                "text": "Yeah, it's angry at argument one here \n```\n    @Autowired\n    public UserRepositoryImpl(RoleRepositoryImpl roleRepository,\n                              ImageRepository imageRepository) {\n        super(User.class);\n        this.roleRepository = roleRepository;\n        this.imageRepository = imageRepository;\n    }\n```",
                "time": "2018-11-07 11:20:14",
                "index": 23,
                "user": "fp-alice"
            },
            {
                "id": "5be2cafa92b7d117214f443c",
                "text": "Try cleaning your ~/.m2 directory and running it again. ?",
                "time": "2018-11-07 11:22:34",
                "index": 24,
                "user": "errazki1995"
            },
            {
                "id": "5be2cb3c4e7ca1452069deb2",
                "text": "~/ as in /home/username? or project root or what",
                "time": "2018-11-07 11:23:40",
                "index": 25,
                "user": "fp-alice"
            },
            {
                "id": "5be2cb4f47217e07ffe504dd",
                "text": "try cleanning the project and run again ",
                "time": "2018-11-07 11:23:59",
                "index": 26,
                "user": "errazki1995"
            },
            {
                "id": "5be2cb85c0e6da07feeab5ae",
                "text": "Same error",
                "time": "2018-11-07 11:24:53",
                "index": 27,
                "user": "fp-alice"
            },
            {
                "id": "5be2cc539600d10e6470ff73",
                "text": "add a bean with roles name ",
                "time": "2018-11-07 11:28:19",
                "index": 28,
                "user": "errazki1995"
            },
            {
                "id": "5be2cc5dbb887874748f4be9",
                "text": "But what does it return",
                "time": "2018-11-07 11:28:29",
                "index": 29,
                "user": "fp-alice"
            },
            {
                "id": "5be2cc66f1b87534048af244",
                "text": "a new instance of the role repository?",
                "time": "2018-11-07 11:28:38",
                "index": 30,
                "user": "fp-alice"
            },
            {
                "id": "5be2cc7fbb06d73a9937e0f1",
                "text": "try that one ",
                "time": "2018-11-07 11:29:03",
                "index": 31,
                "user": "errazki1995"
            },
            {
                "id": "5be2cc81c0e6da07feeabc11",
                "text": "yes",
                "time": "2018-11-07 11:29:05",
                "index": 32,
                "user": "errazki1995"
            },
            {
                "id": "5be2cc8c3102f14521634899",
                "text": "and don't forget to clean ",
                "time": "2018-11-07 11:29:16",
                "index": 33,
                "user": "errazki1995"
            },
            {
                "id": "5be2cc9fe8add80e63b519a9",
                "text": "so just ```    @Bean\n    public RoleRepositoryImpl roles() {\n        return new RoleRepositoryImpl();\n    }```",
                "time": "2018-11-07 11:29:35",
                "index": 34,
                "user": "fp-alice"
            },
            {
                "id": "5be2ccaa92b7d117214f4e0c",
                "text": "yes",
                "time": "2018-11-07 11:29:46",
                "index": 35,
                "user": "errazki1995"
            },
            {
                "id": "5be2ccb862866f74735fbc53",
                "text": "ok maven clean + package now",
                "time": "2018-11-07 11:30:00",
                "index": 36,
                "user": "fp-alice"
            },
            {
                "id": "5be2cce29600d10e64710291",
                "text": "```\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 0 of constructor in wtf.shekels.alice.voke.repositories.users.UserRepositoryImpl required a single bean, but 2 were found:\n        - roles: defined by method 'roles' in wtf.shekels.alice.voke.VokeApplication\n        - roleRepositoryImpl: defined in URL [jar:file:/home/alice/dev/java/voke/target/voke-0.0.1-SNAPSHOT.jar!/BOOT-INF/classes!/wtf/shekels/alice/voke/repositories/roles/RoleRepositoryImpl.class]\n\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\n```\n",
                "time": "2018-11-07 11:30:42",
                "index": 37,
                "user": "fp-alice"
            },
            {
                "id": "5be2cd55f1b87534048afa5f",
                "text": "can you do the action mark the first one as primary  and try again ? if the problem persists then it's a bit weird having 2 beans and not recognizing any one ",
                "time": "2018-11-07 11:32:37",
                "index": 38,
                "user": "errazki1995"
            },
            {
                "id": "5be2cd947a36913a9a0533fe",
                "text": "https://hastebin.com/badebukezi.py",
                "time": "2018-11-07 11:33:40",
                "index": 39,
                "user": "fp-alice"
            },
            {
                "id": "5be2ce032138723405cbd2ab",
                "text": "did you mark one as primary and leave the roles bean both ?",
                "time": "2018-11-07 11:35:31",
                "index": 40,
                "user": "errazki1995"
            },
            {
                "id": "5be2ce0df1b87534048afd3c",
                "text": "yes",
                "time": "2018-11-07 11:35:41",
                "index": 41,
                "user": "fp-alice"
            },
            {
                "id": "5be2ce2992b7d117214f5830",
                "text": "it turns out it's not the problem tho , just undo that solution ",
                "time": "2018-11-07 11:36:09",
                "index": 42,
                "user": "errazki1995"
            },
            {
                "id": "5be2ce386b9822140df19e85",
                "text": "Alright",
                "time": "2018-11-07 11:36:24",
                "index": 43,
                "user": "fp-alice"
            },
            {
                "id": "5be2cf3a47217e07ffe51bdc",
                "text": "did you add the bean in xml as well ?",
                "time": "2018-11-07 11:40:42",
                "index": 44,
                "user": "errazki1995"
            },
            {
                "id": "5be2cf3c47217e07ffe51c0c",
                "text": "before",
                "time": "2018-11-07 11:40:44",
                "index": 45,
                "user": "errazki1995"
            },
            {
                "id": "5be2cf45e8add80e63b52831",
                "text": "I have no xml",
                "time": "2018-11-07 11:40:53",
                "index": 46,
                "user": "fp-alice"
            },
            {
                "id": "5be2cf4ec0e6da07feeacd10",
                "text": "all programmatically?",
                "time": "2018-11-07 11:41:02",
                "index": 47,
                "user": "errazki1995"
            },
            {
                "id": "5be2cf56bb06d73a9937f0df",
                "text": "Yeah",
                "time": "2018-11-07 11:41:10",
                "index": 48,
                "user": "fp-alice"
            },
            {
                "id": "5be2cf5b92b7d117214f610f",
                "text": "I sent the github link if you wanna go investigate",
                "time": "2018-11-07 11:41:15",
                "index": 49,
                "user": "fp-alice"
            },
            {
                "id": "5be2cf757a36913a9a0540ae",
                "text": "sure , but i'm into a pure java trouble , i would have to fix it and get back to you ",
                "time": "2018-11-07 11:41:41",
                "index": 50,
                "user": "errazki1995"
            },
            {
                "id": "5be2cf812138723405cbdcf8",
                "text": "np",
                "time": "2018-11-07 11:41:53",
                "index": 51,
                "user": "fp-alice"
            },
            {
                "id": "5be2cfa3c0e6da07feeacf5f",
                "text": "maybe i can ask you about java in private  and faster the procedure?",
                "time": "2018-11-07 11:42:27",
                "index": 52,
                "user": "errazki1995"
            },
            {
                "id": "5be2cfaf7a36913a9a05437a",
                "text": "sure",
                "time": "2018-11-07 11:42:39",
                "index": 53,
                "user": "fp-alice"
            },
            {
                "id": "5be2cfb94e7ca1452069f9da",
                "text": "Thanks tho",
                "time": "2018-11-07 11:42:49",
                "index": 54,
                "user": "errazki1995"
            },
            {
                "id": "5be2cfc63102f14521635eea",
                "text": "np",
                "time": "2018-11-07 11:43:02",
                "index": 55,
                "user": "fp-alice"
            }
        ]
    },
    {
        "id": 410,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3fb666dab15872cea6a073",
                "text": "Hi All, the kabob case only works for spring boot 2 config?\nIf I use third party lib, whose config is using camelCase, then that should work?",
                "time": "2019-01-16 22:55:34",
                "index": 0,
                "user": "xin-au"
            },
            {
                "id": "5c3fb6a172cef52f6469c10d",
                "text": "the config yml can be `camelCase`, but while using it within spring boot `@Configuration` classes just use them as `camel-case`",
                "time": "2019-01-16 22:56:33",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb6a4ba59f75dcbee5ca6",
                "text": "this should work",
                "time": "2019-01-16 22:56:36",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb6c86f95c01983b7c2b7",
                "text": "e.g. `@Value(${third-party-camel-case})`",
                "time": "2019-01-16 22:57:12",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb6f48ce4bb25b8c27afa",
                "text": "Oh, so I need to look at the third party code to check if they are using `@Configuration`, if yes, then change then to kabob case? ",
                "time": "2019-01-16 22:57:56",
                "index": 4,
                "user": "xin-au"
            },
            {
                "id": "5c3fb711ba59f75dcbee5ca8",
                "text": "try that...",
                "time": "2019-01-16 22:58:25",
                "index": 5,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb71cac60091fe575e516",
                "text": "change kabob case where?",
                "time": "2019-01-16 22:58:36",
                "index": 6,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb72c95e17b4525623bfd",
                "text": "in application.yaml",
                "time": "2019-01-16 22:58:52",
                "index": 7,
                "user": "xin-au"
            },
            {
                "id": "5c3fb75495e17b4525623d7c",
                "text": "for example, key cloak is not under spring namespace, it is using `tokenUrl`",
                "time": "2019-01-16 22:59:32",
                "index": 8,
                "user": "xin-au"
            },
            {
                "id": "5c3fb76610ea9922120092aa",
                "text": "in `@Configuration`?",
                "time": "2019-01-16 22:59:50",
                "index": 9,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb7690721b912a58fe01e",
                "text": "So I am wondering should I use token-url or tokenUrl",
                "time": "2019-01-16 22:59:53",
                "index": 10,
                "user": "xin-au"
            },
            {
                "id": "5c3fb77972cef52f6469c10f",
                "text": "i think it wont work at all",
                "time": "2019-01-16 23:00:09",
                "index": 11,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb78c8318994524ff3dd9",
                "text": "I am not sure, I need to check the source code ",
                "time": "2019-01-16 23:00:28",
                "index": 12,
                "user": "xin-au"
            },
            {
                "id": "5c3fb78e87c14a706e12feef",
                "text": "you have to look property migrator util from spring boot team",
                "time": "2019-01-16 23:00:30",
                "index": 13,
                "user": "nnanda2016"
            },
            {
                "id": "5c3fb7a195e17b4525623eb8",
                "text": "Yes,",
                "time": "2019-01-16 23:00:49",
                "index": 14,
                "user": "xin-au"
            },
            {
                "id": "5c3fb7a639596c372bf25840",
                "text": "Thanks!",
                "time": "2019-01-16 23:00:54",
                "index": 15,
                "user": "xin-au"
            }
        ]
    },
    {
        "id": 411,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ba68225f4bd1056ac9fbe49",
                "text": "@snicoll to continue from #14576\n1) Wouldn't it be possible to collect the cacheNames from all `@CacheConfig` annotations?\n2) Is there currently some way to tell the  `CacheMetricsRegistrar` the cacheNames via explicit configuration if the `CacheManager` doesn't do it at startup time? As far as I can see it would be possible to call `CacheMetricsRegistrar#bindCacheToRegistry` from my application config. I wonder If this shouldn't be added to the `spring-boot-sample-cache`",
                "time": "2018-09-22 17:55:49",
                "index": 0,
                "user": "joshiste"
            },
            {
                "id": "5ba6823d913ba7799b2b4af7",
                "text": "The problem has nothing to do with cache names",
                "time": "2018-09-22 17:56:13",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ba6826f1043315947cd7426",
                "text": "Ok then I misunderstood the problem...",
                "time": "2018-09-22 17:57:03",
                "index": 2,
                "user": "joshiste"
            },
            {
                "id": "5ba682851043315947cd74c8",
                "text": "You need to have a `Cache` handle to register a `CacheMeter` to it",
                "time": "2018-09-22 17:57:25",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ba682971ee2ca6502550f41",
                "text": "if the cache is created on the fly (i.e. not available on startup) then you won\u2019t automatically get metrics to it",
                "time": "2018-09-22 17:57:43",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5ba682ab1ee2ca6502550fac",
                "text": "The sample has no particular problem as far as I can see. All caches \u201chave a name\u201d (otherwise it wouldn\u2019t work) ",
                "time": "2018-09-22 17:58:03",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ba682c11ee2ca6502550fd4",
                "text": "You don\u2019t get cache metrics because the default implementation of the sample is using the fallback in memory hashmap and there is no meter for that",
                "time": "2018-09-22 17:58:25",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5ba682f4913ba7799b2b4f1b",
                "text": "But I also don't get meters using the JCache, ehcache, hazelcast, ...",
                "time": "2018-09-22 17:59:16",
                "index": 7,
                "user": "joshiste"
            },
            {
                "id": "5ba683381043315947cd79ae",
                "text": "We have tests for all of those so I am not sure what could be wrong",
                "time": "2018-09-22 18:00:24",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5ba684b80cfe7f30f1d246ab",
                "text": "@joshiste I just tried with JCache on the sample on master and it works",
                "time": "2018-09-22 18:06:48",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5ba684bfe6046343f39eca32",
                "text": "(i.e. http://localhost:8080/actuator/metrics/cache.gets returns me data)",
                "time": "2018-09-22 18:06:55",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5ba68540913ba7799b2b5ca1",
                "text": "`mvn spring-boot:run -Pjcache` right?",
                "time": "2018-09-22 18:09:04",
                "index": 11,
                "user": "joshiste"
            },
            {
                "id": "5ba6856f1043315947cd850a",
                "text": "No",
                "time": "2018-09-22 18:09:51",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5ba685e5be4f300626d1a46b",
                "text": "https://github.com/spring-projects/spring-boot/issues/14584",
                "time": "2018-09-22 18:11:49",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ba6869fb4990c30eef36a52",
                "text": "also the ehcache profile gives me errors:\n```\nava.lang.IllegalArgumentException: Cannot find cache named 'countries' for Builder[public sample.cache.Country sample.cache.CountryRepository.findByCode(java.lang.String)] caches=[countries] | key='' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'\n\tat org.springframework.cache.interceptor.AbstractCacheResolver.resolveCaches(AbstractCacheResolver.java:92) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cache.interceptor.CacheAspectSupport.getCaches(CacheAspectSupport.java:252) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext.<init>(CacheAspectSupport.java:707) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cache.interceptor.CacheAspectSupport.getOperationContext(CacheAspectSupport.java:265) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContexts.<init>(CacheAspectSupport.java:598) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat sample.cache.CountryRepository$$EnhancerBySpringCGLIB$$7a5e30a5.findByCode(<generated>) ~[classes/:na]\n\tat sample.cache.SampleClient.retrieveCountry(SampleClient.java:66) ~[classes/:na]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_171]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_171]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_171]\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_171]\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_171]\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_171]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_171]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_171]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_171]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_171]\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_171]\n```",
                "time": "2018-09-22 18:14:54",
                "index": 14,
                "user": "joshiste"
            },
            {
                "id": "5ba686af7dca3065033c911a",
                "text": "you haven\u2019t uncommented the config",
                "time": "2018-09-22 18:15:11",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5ba686e07dca3065033c9156",
                "text": "In insight it should probably uncommented by default",
                "time": "2018-09-22 18:16:00",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5ba68703d655361f763ac568",
                "text": "Uncommenting is even worse\n```\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.cache.CacheManager]: Factory method 'jCacheCacheManager' threw exception; nested exception is java.lang.IllegalArgumentException: Cache configuration does not exist 'ServletContext resource [/ehcache3.xml]'\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:620) ~[spring-beans-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\t... 126 common frames omitted\nCaused by: java.lang.IllegalArgumentException: Cache configuration does not exist 'ServletContext resource [/ehcache3.xml]'\n\tat org.springframework.util.Assert.isTrue(Assert.java:136) ~[spring-core-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.boot.autoconfigure.cache.CacheProperties.resolveConfigLocation(CacheProperties.java:110) ~[spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar:2.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration.createCacheManager(JCacheCacheConfiguration.java:120) ~[spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar:2.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration.jCacheCacheManager(JCacheCacheConfiguration.java:104) ~[spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar:2.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$$EnhancerBySpringCGLIB$$95e6f0c3.CGLIB$jCacheCacheManager$2(<generated>) ~[spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar:2.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$$EnhancerBySpringCGLIB$$95e6f0c3$$FastClassBySpringCGLIB$$cf90fe7c.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar:2.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\tat org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration$$EnhancerBySpringCGLIB$$95e6f0c3.jCacheCacheManager(<generated>) ~[spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar:2.1.0.BUILD-SNAPSHOT]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_171]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_171]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_171]\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_171]\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.0.BUILD-SNAPSHOT.jar:5.1.0.BUILD-SNAPSHOT]\n\t... 127 common frames omitted\n```",
                "time": "2018-09-22 18:16:35",
                "index": 17,
                "user": "joshiste"
            },
            {
                "id": "5ba68728e6046343f39ed85e",
                "text": "I am trying to find out what the problem is. In any case, not having metrics is simply because you were still using the in memory one",
                "time": "2018-09-22 18:17:12",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5ba689111ee2ca65025535de",
                "text": "@joshiste update and follow the readme",
                "time": "2018-09-22 18:25:21",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5ba68b8833da0f649e3aac12",
                "text": "@snicoll Thanks a lot! And sorry for the inconvenience..",
                "time": "2018-09-22 18:35:52",
                "index": 20,
                "user": "joshiste"
            },
            {
                "id": "5ba68b99e6046343f39ef1d9",
                "text": "No worries, found something wrong in the sample in the end so all good :)",
                "time": "2018-09-22 18:36:09",
                "index": 21,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 412,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c6e872aa7d733509da09df1",
                "text": "hi I have a clarification on the spring bean docs. I actually just encountered it by accident",
                "time": "2019-02-21 11:10:34",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c6e8751c776985d8f2b9043",
                "text": "on the spring 3.1.x version it says this\n> The Spring team generally advocates setter injection, because large numbers of constructor arguments can get unwieldy, especially when properties are optional. Setter methods also make objects of that class amenable to reconfiguration or re-injection later. Management through JMX MBeans is a compelling use case.\n\nbut on the current version it says this:\n> The Spring team generally advocates constructor injection, as it lets you implement application components as immutable objects and ensures that required dependencies are not null. Furthermore, constructor-injected components are always returned to the client (calling) code in a fully initialized state. As a side note, a large number of constructor arguments is a bad code smell, implying that the class likely has too many responsibilities and should be refactored to better address proper separation of concerns.",
                "time": "2019-02-21 11:11:13",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c6e87637667931e2fd86363",
                "text": "it's a switch of advocating constructor vs setter",
                "time": "2019-02-21 11:11:31",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c6e877ec776985d8f2b919a",
                "text": "why the switch?",
                "time": "2019-02-21 11:11:58",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c6e887eddaa310c89c812c0",
                "text": "The documentation already answers that, doesn't it?",
                "time": "2019-02-21 11:16:14",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c6e88ec9e430b3086a14587",
                "text": "- Constructor injection allows components to be immutable (final fields)\n- Required dependencies will not be null (as they can be with setter injection)\n- Once constructed, the object's fully initialised (no interim period before setters are called where it's in a half-initialised state)",
                "time": "2019-02-21 11:18:04",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5c6e9260ddaa310c89c8525e",
                "text": "The documentation answers it within the context of that version. But I'm trying to understand the switch from the older one. They both make good arguments",
                "time": "2019-02-21 11:58:24",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c6e92aeddaa310c89c8540d",
                "text": "Because, iirc, setter injection is for the optional dependencies.",
                "time": "2019-02-21 11:59:42",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c6e94c77667931e2fd8bf3d",
                "text": "That's covered in the next paragraph of the current documentation:\n\n> Setter injection should primarily only be used for optional dependencies that can be assigned reasonable default values within the class. Otherwise, not-null checks must be performed everywhere the code uses the dependency. One benefit of setter injection is that setter methods make objects of that class amenable to reconfiguration or re-injection later. Management through JMX MBeans is therefore a compelling use case for setter injection.",
                "time": "2019-02-21 12:08:39",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5c6e9524a7d733509da0f569",
                "text": "I'm not sure what more it could say. It explains why constructor injection is preferred and also explains the situations where you may still want to use setter injection.",
                "time": "2019-02-21 12:10:12",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5c6e99a3b6c74f1e2e89aaf4",
                "text": "ok",
                "time": "2019-02-21 12:29:23",
                "index": 10,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 413,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d3eee4e7e00fc4ace6d3878",
                "text": "hello all.\nI have a confusion about two annotations: `@Repository` vs  `@EnableJpaRepositories`. \nAny brief explanation what is the difference between them ?",
                "time": "2019-07-29 13:02:06",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5d3eefd7c356af25e04bfdfb",
                "text": "`@Repository` is for annotating a specific class is a repository to be picked up during component scan, `@EnableJpaRepositories` is to tell you application to scan for any JPA repositories within the class package and any sub packages (so if it's declared on your Application class then it will scan all packages that sit below that level for JPA repositories)",
                "time": "2019-07-29 13:08:39",
                "index": 1,
                "user": "Contract16"
            },
            {
                "id": "5d3ef07ef0ff3e2bba8adc96",
                "text": "@Contract16 thanks for your response, so what is then the difference between \n> being picked up during component scan\n \nand \n\n> tell the application to scan for jpa repositories \n\n?\n",
                "time": "2019-07-29 13:11:26",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5d3ef1078aab922429dfa9bf",
                "text": "`@EnableJpaRepositories` makes Spring Boot search for classes annotated with `@Repository`",
                "time": "2019-07-29 13:13:43",
                "index": 3,
                "user": "tgeens"
            },
            {
                "id": "5d3ef195bdfdb22bbb663bea",
                "text": "^",
                "time": "2019-07-29 13:16:05",
                "index": 4,
                "user": "Contract16"
            },
            {
                "id": "5d3ef24cbdfdb22bbb6643ce",
                "text": "@tgeens I think `@Repository` is a streotype that make the classes picked up as spring bean. Not sure if `@EnableJpaRepositories` is the one who makes Spring Boot search for classes annotated with `@Repository`",
                "time": "2019-07-29 13:19:08",
                "index": 5,
                "user": "amirensit"
            },
            {
                "id": "5d3ef3b2a9200c24281ae466",
                "text": "yes, that's probably correct - if you know better, why are you asking ? ;-0",
                "time": "2019-07-29 13:25:06",
                "index": 6,
                "user": "tgeens"
            },
            {
                "id": "5d3ef3dd3e51d77b1b8c0beb",
                "text": ":smile: \nJust I am confused about the difference between them and when to use each one.",
                "time": "2019-07-29 13:25:49",
                "index": 7,
                "user": "amirensit"
            },
            {
                "id": "5d3ef4042136933a870fe874",
                "text": "maybe this answer in SO is the correct one ",
                "time": "2019-07-29 13:26:28",
                "index": 8,
                "user": "amirensit"
            },
            {
                "id": "5d3ef404bdfdb22bbb66526a",
                "text": "https://stackoverflow.com/a/32288196/6717287",
                "time": "2019-07-29 13:26:28",
                "index": 9,
                "user": "amirensit"
            },
            {
                "id": "5d3ef409d254cf27df9c4210",
                "text": ":thumbsup: ",
                "time": "2019-07-29 13:26:33",
                "index": 10,
                "user": "amirensit"
            },
            {
                "id": "5d3ef6dd071bb025df0ff50a",
                "text": "Yes that answer is correct",
                "time": "2019-07-29 13:38:37",
                "index": 11,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 414,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5ced8197481ef4167b90e08a",
                "text": "Hello all, I've recently submitted a prq (https://github.com/spring-projects/spring-boot/pull/16972), which got the label \"merge-with-amendments\". However, there have been no suggested amendments, should I fix something or implement it differently?",
                "time": "2019-05-28 18:44:39",
                "index": 0,
                "user": "kstrijbos"
            },
            {
                "id": "5ced8cafcea8295279b4a6e3",
                "text": "@kstrijbos it means we'll get to it and we'll deal with improvements if needed. The PR is scheduled for 2.2.x for now, so no strong commitment to a particular milestone (besides in the 2.2.x line). We're doing our best to prioritize and include big changes as early as possible in the milestone phase.",
                "time": "2019-05-28 19:31:59",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5ced9251ff3f016baa682d2b",
                "text": "@kstrijbos that label is a reminder that we\u2019d like to give a second pass to your proposal and we\u2019re likely to make changes to it. We can\u2019t give you a suggestion without making up our mind about it and that part takes time. As Brian said, there is a milestone for it and it\u2019s assigned to someone.",
                "time": "2019-05-28 19:56:01",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ced92d96f530d3b61fb00f5",
                "text": "@kstrijbos I added that label mainly to remind myself to look at something in the PR",
                "time": "2019-05-28 19:58:17",
                "index": 4,
                "user": "philwebb"
            },
            {
                "id": "5ced92e5f3a60a79a416ef9f",
                "text": "Specifically this line https://github.com/spring-projects/spring-boot/pull/16972/files#diff-ed45909036d2facdbfa954ab873a7f40R712 which uses reflection",
                "time": "2019-05-28 19:58:29",
                "index": 5,
                "user": "philwebb"
            },
            {
                "id": "5ced9300e41fe15e75d43e7b",
                "text": "I was wondering if we might be better only supporting specific subclasses and calling methods directly",
                "time": "2019-05-28 19:58:56",
                "index": 6,
                "user": "philwebb"
            },
            {
                "id": "5ced9316f3a60a79a416f15a",
                "text": "I didn't give that feedback on the issue because I wanted to take a look in an IDE first",
                "time": "2019-05-28 19:59:18",
                "index": 7,
                "user": "philwebb"
            },
            {
                "id": "5ced9a34faac643934015805",
                "text": "Ah alright,makes sense. Thanks for the explanation  :) I've also thought of adding a subclass/interface but decided it was outside of the scope of the issue.",
                "time": "2019-05-28 20:29:40",
                "index": 8,
                "user": "kstrijbos"
            }
        ]
    },
    {
        "id": 415,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b8e572ecff55e5617a57af7",
                "text": "Hi All, I update my project from spring boot 1.5.2 (which works well) to spring boot 2.0.4, after updating, the initialized sql statements defined in data.sql will not be executed any more. Does anyone know how to fix it? I found a solution on https://github.com/spring-cloud/spring-cloud-security/issues/143, which said remove HikariCP will fix it. But after I did, many strange error occurred during startup, such as some Repository bean cannot be found. I add @EnableJpaRepositories(...) on configuration class and fix it, but EntityManageFactory bean not defined exception occur. So any help about the initialization data.sql file not imported by spring boot 2 is welcomed.",
                "time": "2018-09-04 09:58:06",
                "index": 0,
                "user": "jason279"
            },
            {
                "id": "5b8e582f11227d711d12d128",
                "text": "This may help: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#database-initialization",
                "time": "2018-09-04 10:02:23",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5b8e587d94f8164c17db0d6b",
                "text": "hi @wilkinsona , I have spring.datasource.initialization-mode=always and spring.datasource.continue-on-error=true on properties file, not work.",
                "time": "2018-09-04 10:03:41",
                "index": 2,
                "user": "jason279"
            },
            {
                "id": "5b8e5ce0ac25fd11b5db76c5",
                "text": "@jason279 That should work. Can you share a project that shows the behaviour you have described?",
                "time": "2018-09-04 10:22:24",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5b8e5e1b60f9ee7aa4d6967e",
                "text": "@wilkinsona After remove spring.datasource.continue-on-error=true, I found the error. I'm using mysql with \"auto\" id generator strategy. After upgrade to 2.X, spring use table not identity for the default auto strategy with mysql, and my statements in data.sql doesn't insert id. It worked in spring boot 1.X but not 2.X.  The error is \"Field 'id' doesn't have a default value\":(. Trying to fix the bug now, but thank you anyway.",
                "time": "2018-09-04 10:27:39",
                "index": 13,
                "user": "jason279"
            },
            {
                "id": "5b8e603d1d3a5711b6e16e42",
                "text": "@wilkinsona I changed the strategy from auto to identity on my entity and recreate the db schema and it works well now. Thank you very much.",
                "time": "2018-09-04 10:36:45",
                "index": 14,
                "user": "jason279"
            }
        ]
    },
    {
        "id": 416,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c6434c4dc3f0523ccabb47c",
                "text": "Hi, I'm looking at spring boot metrics and specifically using a whitelist of metrics rather than having a list of restrictions. I've applied the property 'management.metrics.enable.root=false'\n and this doesn't seem to have an affect. All metrics are still listed. Someone on the guide page has commented it does not work for them either and there is also a stackoverflow question stating similar. Is there a know issue with this setting not working please? ",
                "time": "2019-02-13 15:16:20",
                "index": 0,
                "user": "craigblackman2"
            },
            {
                "id": "5c6441d3253c2b5ea3075d80",
                "text": "@craigblackman2 Where did you see the suggestion to use `root`? Assuming I have understood your question, I think you want to use `all` rather than `root`.",
                "time": "2019-02-13 16:12:03",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c6441ececef85660b9c8b20",
                "text": "From the documentation:\n\n```\nmanagement.metrics.enable.*= # Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.\n```",
                "time": "2019-02-13 16:12:28",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5c6445a88328315decead18a",
                "text": "@wilkinsona https://spring.io/blog/2018/03/16/micrometer-spring-boot-2-s-new-application-metrics-collector#meter-filters where it says 'You can flip enablement of metrics entirely at the root to generate a whitelist for just a handful of metrics you want. '",
                "time": "2019-02-13 16:28:24",
                "index": 4,
                "user": "craigblackman2"
            },
            {
                "id": "5c64460fdc3f0523ccac3567",
                "text": "Thanks, I'll see about editing the post. It should be `all` rather than `root`. That changed after the post was written. Generally speaking, the documentation is more likely to be up-to-date than a blog post from 11 months ago.",
                "time": "2019-02-13 16:30:07",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5c644998126af75deb9de5ec",
                "text": "@wilkinsona thank you, that works. I take your point about the documentation would most probably be more up to date. I had not found that section of the documentation yet (probably not looked hard enough). Thank you again",
                "time": "2019-02-13 16:45:12",
                "index": 6,
                "user": "craigblackman2"
            }
        ]
    },
    {
        "id": 417,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5cf7a433cea8295279f75e5e",
                "text": "i am unble to build a war\n\n~~~\n Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:1.5.14.RELEASE:repackage (default) on project demo: invalid entry size (expected 1 but got 0 bytes) -> [Help 1]\n~~~",
                "time": "2019-06-05 11:14:59",
                "index": 0,
                "user": "SubhamAshish"
            },
            {
                "id": "5cf7a4429b50f6393586694f",
                "text": "does anybody know how to resolve this",
                "time": "2019-06-05 11:15:14",
                "index": 1,
                "user": "SubhamAshish"
            },
            {
                "id": "5cf7ac60ff3f016baaab12a3",
                "text": "@SubhamAshish Can you share the full stack trace of the repackaging failure please?",
                "time": "2019-06-05 11:49:52",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 418,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cf7a891b76eac527aa7ff9a",
                "text": "good morning! \n\nI have an api that has an upload page. But, my application that makes requests does not need authentication. How do I get the authentication to only stay on the upload page?",
                "time": "2019-06-05 11:33:37",
                "index": 0,
                "user": "OlivlfilipeOliveira"
            },
            {
                "id": "5cf7afe7ff3f016baaab2f6b",
                "text": "@OlivlfilipeOliveira Assuming that you are using Spring Security, your question is better suited to https://gitter.im/spring-projects/spring-security",
                "time": "2019-06-05 12:04:55",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 419,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5cd30d9ee7f42160fa554331",
                "text": "when is spring framework 5.17 or Spring Boot 2.15 supposed to be released",
                "time": "2019-05-08 17:10:54",
                "index": 0,
                "user": "dave-fl"
            },
            {
                "id": "5cd31affb149ca509858a634",
                "text": "https://github.com/spring-projects/spring-boot/milestones",
                "time": "2019-05-08 18:07:59",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cd31b105a1d435d46092d37",
                "text": "https://github.com/spring-projects/spring-framework/milestones",
                "time": "2019-05-08 18:08:16",
                "index": 2,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 420,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5bc40261271506518d13229e",
                "text": "hi everyone,i am a spring boot 1.x developer. but when i read spring boot 2.0 's official articles,i can not understand very well ,why must wrap the response with flux and mono and what problem the flux and mono sovled. anybody who can give me some advice. thanks. ",
                "time": "2018-10-15 02:58:41",
                "index": 0,
                "user": "jiangwenqiang"
            },
            {
                "id": "5bc438776e5a401c2d73d6ea",
                "text": "@jiangwenqiang You might want to check out this talk https://www.youtube.com/watch?v=Dp_aJh-akkU\nShort version: you don't need to use reactive with Spring Boot 2.0, this is just a new choice offered to you.",
                "time": "2018-10-15 06:49:27",
                "index": 3,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 421,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ed8ff89b101510b20391374",
                "text": "Hi all. When using the `build-image` option is there a way of specifying the base-image of my choice, for instance `docker.io/oracle/graalvm-ce:20.1.0-java11` while still using the buildpacks and getting all of their benefits such as memory calculation etc. (or are they not mutually exclusive?). Thank you",
                "time": "2020-06-04 14:04:57",
                "index": 0,
                "user": "AndersClausen"
            },
            {
                "id": "5edb651822dd44422400f2c7",
                "text": "> Hi all. When using the `build-image` option is there a way of specifying the base-image of my choice, for instance `docker.io/oracle/graalvm-ce:20.1.0-java11` while still using the buildpacks and getting all of their benefits such as memory calculation etc. (or are they not mutually exclusive?). Thank you\n\nJust a little bump to see if anybody has had any luck specifying a specific base-image when creating a docker image with spring-boot-maven-plugin?",
                "time": "2020-06-06 09:42:48",
                "index": 20,
                "user": "AndersClausen"
            },
            {
                "id": "5edbfcd6a91f120a6ce9a5e0",
                "text": "@AndersClausen The base image is determined by the builder that you\u2019re using. If you want a different base image, you\u2019ll need to use/create a different builder. https://slack.paketo.io/ is a good place to get help with that.",
                "time": "2020-06-06 20:30:14",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5edc00eb22dd444224026c2c",
                "text": "That's excellent @wilkinsona - many thanks for that",
                "time": "2020-06-06 20:47:39",
                "index": 24,
                "user": "AndersClausen"
            }
        ]
    },
    {
        "id": 422,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d1727ab490abf627a3d4bdb",
                "text": "in which impl springboot species commandlinerunner to invoke ?",
                "time": "2019-06-29 08:56:11",
                "index": 0,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d17296ba8b20942baa2bfde",
                "text": "Also, it seems like commandline runner does not follow @Order ",
                "time": "2019-06-29 09:03:39",
                "index": 1,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d172988ddd2c007c72796da",
                "text": "It prints\n1\n2\n3",
                "time": "2019-06-29 09:04:08",
                "index": 3,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d1729a603d62b4d28a9e13b",
                "text": "which is incorrect. Is it following order of bean definition and not actual @Order definition",
                "time": "2019-06-29 09:04:38",
                "index": 4,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5d1730279cbde24b2f3b9b22",
                "text": "@rajjaiswalsaumya could you create an issue for that please? This is supposed to be supported",
                "time": "2019-06-29 09:32:23",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5d173c6e79f6d94a8ef3319d",
                "text": "It'll work for now if you implement `Ordered` or place `@Order` on the class rather than on the `@Bean` method",
                "time": "2019-06-29 10:24:46",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 423,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bb323cce65a6343366eeb65",
                "text": "Hi guys,\n\nI'm trying to issue http DELETE with payload in request body using `WebClient` and obviously it doesn't works - neither the rest controller doesn't see the body, nor Fiddler shows the body. Is this not allowed for WebClient or I'm doing something wrong?\n```\nreturn webClient\n        .method(HttpMethod.DELETE)\n        .uri(\"/entity/\")\n        .contentType(APPLICATION_JSON_UTF8)\n        .accept(APPLICATION_JSON_UTF8)\n        .body(BodyInserters.fromObject(request))\n        .retrieve()\n        .bodyToMono(MULTIPLE);\n```",
                "time": "2018-10-02 07:52:44",
                "index": 0,
                "user": "phoenix-ua"
            },
            {
                "id": "5bb358a7c08b8b3067bec54e",
                "text": "@phoenix-ua A `DELETE` call has neither a request body nor a response body",
                "time": "2018-10-02 11:38:15",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5bb35900bbdc0b2505d444c0",
                "text": "https://tools.ietf.org/html/rfc7231.html#section-4.3.5",
                "time": "2018-10-02 11:39:44",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5bb359afc08b8b3067becd7d",
                "text": "The spec doesn\u2019t explicitly forbid it, but many of the tools/libraries/frameworks out there just assume as a best practice that you shouldn\u2019t do it. For example, Spring\u2019s`RestOperations` only provides a `delete` method whose return is `void`, which does not allow you to set a request body nor receive a response body.",
                "time": "2018-10-02 11:42:39",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5bb35a70ae7be94016ed0cc7",
                "text": "@edeandrea  Thank you! Obviously, Spring WebClient is among those libraries/tools/framework that don't allow passing body in DELETE request",
                "time": "2018-10-02 11:45:52",
                "index": 6,
                "user": "phoenix-ua"
            },
            {
                "id": "5bb35a9e435c2a518e3d6835",
                "text": "If you google around you\u2019ll find for lots of technology frameworks/libraries/tools (Angular, Apigee, etc) that there isn\u2019t support for it even though the spec does not explicitly forbid it.",
                "time": "2018-10-02 11:46:38",
                "index": 7,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 424,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e186333a74ac8537785b596",
                "text": "Hey,\n\nIt seems like the `WebSocketMessageBrokerConfigurer` doesn't play nice with `spring.main.lazy-initialization=true` in Spring Boot 2.2. The clients get stuck on the `CONNECT`-phase, and does not retrieve a `CONNECTED` message.\n\nI have added `@Lazy(false)` in our `WebSocketMessageBrokerConfigurer` bean, but it didn't do any difference. \n\nDoes anyone have any pointers?",
                "time": "2020-01-10 11:42:43",
                "index": 0,
                "user": "NicklasWallgren"
            },
            {
                "id": "5e186366c3950349027592a9",
                "text": "Found this stackoverflow topic with the same issue, https://stackoverflow.com/questions/58775792/websocket-cannot-connect-to-endpoint-when-running-spring-boot-2-2-with-lazy-bean",
                "time": "2020-01-10 11:43:34",
                "index": 1,
                "user": "NicklasWallgren"
            },
            {
                "id": "5e188c2f821b826f5a99c7cd",
                "text": "@NicklasWallgren It sounds like one or more beans need to be made eager. You can do that with a `org.springframework.boot.LazyInitializationExcludeFilter` bean. I'd need to dig a bit more to know which bean or beans it is that need to be eager.",
                "time": "2020-01-10 14:37:35",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5e1997fec6897e1bc6138105",
                "text": "@wilkinsona Alright, I will look into it. Thanks",
                "time": "2020-01-11 09:40:14",
                "index": 18,
                "user": "NicklasWallgren"
            }
        ]
    },
    {
        "id": 425,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5dd439f7ca778c1fbf324982",
                "text": "Hi. I am new but I would like to become an active contributor to the Spring Boot codebase. Does anyone have any advice as to the most efficient way to familiarize myself with the codebase and start making contributions?",
                "time": "2019-11-19 18:52:39",
                "index": 0,
                "user": "JohnReedLOL"
            },
            {
                "id": "5dd51104e7cce550f58d1671",
                "text": "@JohnReedLOL Thanks very much for your interest in contributing. It's hard to offer specific advice as everyone learns in different ways. If it were me, I'd find a bug that I'd like to fix or an enhancement that I'd like to make to give me an area of the code to focus on. I'd then look at the code and its tests to start to get a feel for how things work.",
                "time": "2019-11-20 10:10:12",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 426,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5ba8a67f1bb7b80b4ebda160",
                "text": "Hello room. Is 2.1.0.M4 released? I see the due date is today but the milestone is yet to close. I am assuming \u201cclose\u201d is based on MST? ",
                "time": "2018-09-24 08:55:27",
                "index": 0,
                "user": "mmoayyed"
            },
            {
                "id": "5ba8a991e5c2cc56add634e1",
                "text": "@mmoayyed not yet; the release process should start in the afternoon (EDT) ",
                "time": "2018-09-24 09:08:33",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5ba8a9a01bb7b80b4ebda183",
                "text": "Very good. Thank you. ",
                "time": "2018-09-24 09:08:48",
                "index": 2,
                "user": "mmoayyed"
            }
        ]
    },
    {
        "id": 427,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d0ca5efcedb297a818d1f51",
                "text": "Hi, can someone explain this to me  about architecture of spring mvc :\n```\nThe traditional implementation of the MVC architectural pattern in GUI implementation  involves actions being taken, after which controllers update the model, with the changes being\npushed back to the view, which updates itself (through for example the Observer pattern). Such an ideal\nimplementation is not feasible for web applications because of the limitations of HTTP. Typically, a user\nissues a request, allowing the server to update the view, which is then sent back to the user's browser. It's\nimpossible to propagate changes back to the client in between requests. This forces us to use an\napproach where instead of the model pushing changes to the view, on every request, the view pulls the\nrelevant data from the model in order to display it in tables, lists, forms, or whatever user interface\nelements are required.\n```\n",
                "time": "2019-06-21 09:39:59",
                "index": 0,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5d0ca663d16b28559f5cbff0",
                "text": "@HamzaOuni17_twitter what specifically do you need explaining?",
                "time": "2019-06-21 09:41:55",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d0ca6edd35d4162a8714aa5",
                "text": "@OrangeDog  what is pull approach and how it is different from push approach (if this terms are right)",
                "time": "2019-06-21 09:44:13",
                "index": 2,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5d0ca758bc834f76a4b4eb9a",
                "text": "In HTTP the server cannot send anything to the client unless the client first requests it",
                "time": "2019-06-21 09:46:00",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5d0ca781e7267a62a9148239",
                "text": "This is more complicated now, because in HTTP/2  you sort of can, and you could also use websockets.",
                "time": "2019-06-21 09:46:41",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5d0ca7eb1e35ef14b68dddb8",
                "text": "In a normal application GUI system (like Swing), the view can monitor the model independently of the controller. In a plain HTTP application (like Spring MVC) the view can only access the model if the controller provides it directly.",
                "time": "2019-06-21 09:48:27",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5d0ca82f1e35ef14b68de004",
                "text": "It's also more complicated because implementation of the \"view\" is split between the server and client.",
                "time": "2019-06-21 09:49:35",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5d0ca9b31e35ef14b68def87",
                "text": "@OrangeDog  thank you sir",
                "time": "2019-06-21 09:56:03",
                "index": 7,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5d0cb089007cff7a82eddf73",
                "text": "@OrangeDog to confirm my informations if i understand you right ,the first approach (In a normal application GUI system) when the model state changes he notify the view registered with .\nBut the second approach (spring mvc)  the controller is the link between the model and the view ,the controller makes changes on the model and then sends the model to the view. ",
                "time": "2019-06-21 10:25:13",
                "index": 8,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5d0cb1034b0b7b477b3225b6",
                "text": "Yes. A GUI system is usually based on events, wheras Spring MVC is based on request-response.",
                "time": "2019-06-21 10:27:15",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5d0cb18b7456db0bb8285a5d",
                "text": "very cool , thank you very much sir.",
                "time": "2019-06-21 10:29:31",
                "index": 10,
                "user": "HamzaOuni17_twitter"
            }
        ]
    },
    {
        "id": 428,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d03f142bc56c731f8bbc879",
                "text": "Is there a way to simulate the behaviour of how the autoconfigurations are chosen/loaded when running a `@RunWith(SpringRunner.class)` test but instead by using `ApplicationContextRunner`? Right now I am using `ApplicationContextRunner` with a custom `ApplicationContextInitializer` that calls `postProcessEnvironment` to update the environment within the context, however, I would like to use the `withConfiguration` method option but without having to load all the autoconfiguration classes  one by one that would be invoked if I were to use SpringRunner. Any ideas?",
                "time": "2019-06-14 19:10:58",
                "index": 0,
                "user": "tatumalenko"
            },
            {
                "id": "5d03f288bb789747fb0562a5",
                "text": "BTW, the reason for why I would like to achieve this is because I need to test a wide variety of difference `.withProperties()` scenarios such that the application context will need to be unique every test, but using SpringRunner seems just to heavyweight for simply testing those various environment and which auto config loaded",
                "time": "2019-06-14 19:16:24",
                "index": 1,
                "user": "tatumalenko"
            },
            {
                "id": "5d04be6ed100e447fc1ac90c",
                "text": "@tatumalenko A user configuration annotated with `@EnableAutoConfiguration` should do what you want I think",
                "time": "2019-06-15 09:46:22",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 429,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d2830ae01621760bc9d489a",
                "text": "I\u2019m writing a `WebFilter` for use with WebFlux. What\u2019s the best way to return a 404 using Spring\u2019s built in 404 response support, so the response bodies are the same?",
                "time": "2019-07-12 07:03:10",
                "index": 0,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d2852cc3e2c7e39706f6f45",
                "text": "@peterluttrell_twitter assuming you're talking about the default error messages in Spring Boot + the missing context support in WebFlux: unlike servlet, there is no standard error pages at the server level. We've got error handlers which are tied to the dispatcher handler. The filters are applied before/after that in the chain and they don't know about the whole codecs+error handling infrastructure.\nYou could technically achieve that, but you'd have to replicate quite a lot of infrastructure of the Spring Boot error handling.",
                "time": "2019-07-12 09:28:44",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5d2853697dbfff324293ed45",
                "text": "\n@bclozel Indeed I was trying to figure out how to trigger the same 404 handling that happens by default. I\u2019m assuming that you\u2019ve seen my post on https://github.com/spring-projects/spring-boot/issues/10129, where I found `ResponseStatusException(HttpStatus.NOT_FOUND)` seamed to work in my tests.",
                "time": "2019-07-12 09:31:21",
                "index": 7,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d2853aac3740260bb0a78ec",
                "text": "with that workaround you're getting the formatted spring Boot error response?",
                "time": "2019-07-12 09:32:26",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5d2853b94d750532413058f6",
                "text": "Yes.",
                "time": "2019-07-12 09:32:41",
                "index": 9,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d2853d8f4fe943971f3f0b0",
                "text": "And I think `@Order(Ordered.HIGHEST_PRECEDENCE)`should enforce the near first filter.",
                "time": "2019-07-12 09:33:12",
                "index": 10,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d2853fb096dec3f019bc104",
                "text": "BTW, my use case is REST only, so we don\u2019t need the standard error pages.",
                "time": "2019-07-12 09:33:47",
                "index": 11,
                "user": "peterluttrell_twitter"
            },
            {
                "id": "5d285468570ac36f8d0e24c4",
                "text": "ok, I didn't think it would - I thought you'd only get a 404, and not the JSON error response. Cool!",
                "time": "2019-07-12 09:35:36",
                "index": 12,
                "user": "bclozel"
            },
            {
                "id": "5d2854757dbfff324293f2cf",
                "text": "This seems like a reasonable workaround in the meantime",
                "time": "2019-07-12 09:35:49",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5d285480570ac36f8d0e261e",
                "text": "Perfect.",
                "time": "2019-07-12 09:36:00",
                "index": 14,
                "user": "peterluttrell_twitter"
            }
        ]
    },
    {
        "id": 430,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5eafdc275cd4fe50a3eacfab",
                "text": "Are the RC1 GitHub release notes the changes since 2.2.6.RELEASE or 2.3.0.M4?",
                "time": "2020-05-04 09:11:03",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5eafdc8c7975db7ebfe24948",
                "text": "We create an issue for forward merge so yes",
                "time": "2020-05-04 09:12:44",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5eafdce531a6d25d7ca9bf88",
                "text": "it wasn't a yes/no question...",
                "time": "2020-05-04 09:14:13",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5eafdd205cd4fe50a3ead253",
                "text": "It really depends when 2.2.6 was released and my answer should answer your question I think",
                "time": "2020-05-04 09:15:12",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5eafddd35cd4fe50a3ead3ae",
                "text": "I do not have enough knowledge to synthesise an answer. If I asked whether it's 2.2.x or 2.3.0.M4 is that easier to answer?",
                "time": "2020-05-04 09:18:11",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5eafddde347bd6163053c524",
                "text": "No",
                "time": "2020-05-04 09:18:22",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5eafde1122f9c45c2a6ae4f7",
                "text": "The list of resolved issues for RC1 contains everything that was done between M4 and RC1. And that includes any forward merge from maintenance branches that was done in that period. Better?",
                "time": "2020-05-04 09:19:13",
                "index": 6,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 431,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5c797a9153efa9120398410b",
                "text": "Hi,\nA while back I opened an GH issue to request an enhancement. \nhttps://github.com/spring-projects/spring-boot/issues/15897\n\nHow do I figure out what Release version that fix will be part of? The milestone was removed after the PR got merged.\n",
                "time": "2019-03-01 18:31:45",
                "index": 0,
                "user": "shqie"
            },
            {
                "id": "5c7cd8abc1cab53d6f7134e2",
                "text": "@shqie the last comment mentions the PR that implements this issue. This was merged as of the upcoming `2.2.0.M1` see https://github.com/spring-projects/spring-boot/pull/15954",
                "time": "2019-03-04 07:50:03",
                "index": 10,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 432,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df2291ff1cc6c27ea377e81",
                "text": "@wilkinsona would a JDK-activated profile not work?",
                "time": "2019-12-12 11:48:47",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5df2a89455d9392300fd4967",
                "text": "@OrangeDog There's nowhere for us to put one for Liquibase. There's no starter for it as it's a single dependency.",
                "time": "2019-12-12 20:52:36",
                "index": 10,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 433,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bf69e2cbaf43f2b9b574107",
                "text": "Hey! I am having a problem with spring auto configuration ",
                "time": "2018-11-22 12:16:44",
                "index": 0,
                "user": "mehmetekici"
            },
            {
                "id": "5bf69e51c6cf4524d15c4ef4",
                "text": "I have provided ",
                "time": "2018-11-22 12:17:21",
                "index": 1,
                "user": "mehmetekici"
            },
            {
                "id": "5bf69e53ed6bcf1ef8418aed",
                "text": "SPRING_DATASOURCE_URL=\nSPRING_DATASOURCE_USER =\nSPRING_DATASOURCE_PASSWORD=\nSPRING_DATASOURCE_DIRVER-CLASS-NAME=",
                "time": "2018-11-22 12:17:23",
                "index": 2,
                "user": "mehmetekici"
            },
            {
                "id": "5bf69e7ab6c07010526d1029",
                "text": "these environment varialbles but spring boot does not create datasource object and complains",
                "time": "2018-11-22 12:18:02",
                "index": 3,
                "user": "mehmetekici"
            },
            {
                "id": "5bf69e9087c4b86bccfc7ab3",
                "text": "required a bean of type 'javax.sql.DataSource' that could not be found.\n\t- Bean method 'dataSource' not loaded because @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name'\n\t- Bean method 'dataSource' not loaded because @ConditionalOnBean (types: org.springframework.boot.jta.XADataSourceWrapper; SearchStrategy: all) did not find any beans",
                "time": "2018-11-22 12:18:24",
                "index": 4,
                "user": "mehmetekici"
            },
            {
                "id": "5bf69e96baf43f2b9b574322",
                "text": "any ideas ?",
                "time": "2018-11-22 12:18:30",
                "index": 5,
                "user": "mehmetekici"
            },
            {
                "id": "5bf6a065ced7003fe16a614b",
                "text": "check the auto-configuration report",
                "time": "2018-11-22 12:26:13",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bf6aa64c6cf4524d15c9ae9",
                "text": "that is the auto-configuration report I have pasted is not that ?\n",
                "time": "2018-11-22 13:08:52",
                "index": 7,
                "user": "mehmetekici"
            },
            {
                "id": "5bf6abf397a8982b9a486758",
                "text": "@mehmetekici There should be much more DataSource-related output in the report than that",
                "time": "2018-11-22 13:15:31",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5bf6b3af958fc53895d0dea7",
                "text": "@wilkinsona @snicoll  thanks guys I found the problem was exclusion of the datasource",
                "time": "2018-11-22 13:48:31",
                "index": 29,
                "user": "mehmetekici"
            }
        ]
    },
    {
        "id": 434,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e0fd00a865af87363b453c5",
                "text": "What is the appropriate way to kick off a periodic task which makes a Webclient Call if using Reactor/Webflux.",
                "time": "2020-01-03 23:36:42",
                "index": 0,
                "user": "dave-fl"
            },
            {
                "id": "5e10c4eb6dda2430fecb49b0",
                "text": " @dave-fl you can use Flux.interval()",
                "time": "2020-01-04 17:01:31",
                "index": 1,
                "user": "michaelmcfadyen"
            }
        ]
    },
    {
        "id": 435,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e85d2a4fc996c4a3b8b1bf4",
                "text": "We're seeing actuator /health (simple) occasionally take over 10 seconds to respond. JRE 11, inside docker on EC2, test environment so barely being used. When it times out (1 second) I'm immediately logging the result of 'top' and some jattach commands. Top shows CPU is quiet, all 126 JVM threads are in 'sleeping' state. The EC2 instance's RAM is all allocated (0.2% available) but output from GC.heap_info says 'garbage-first heap total 199680K, used 135453K' - 64MB ought to be enough for actuator's simple /health to respond?\nAny suggestions, or what else could I look at please?",
                "time": "2020-04-02 11:55:16",
                "index": 0,
                "user": "molexx"
            },
            {
                "id": "5e85d34dcce9e155f43fb14c",
                "text": "@molexx it depends on what health indicators are being performed. It might be an external check being slow? Could you get the detailed version of the check that lists all indicators?",
                "time": "2020-04-02 11:58:05",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5e85d57dc60b1855f5f1554a",
                "text": "Thanks, it's set to `when-authorized` and this call isn't authed. I'll change that and re test, thanks. When it responds will it tell me which component caused the delay? I'll try and turn on actuator logging too...",
                "time": "2020-04-02 12:07:25",
                "index": 2,
                "user": "molexx"
            }
        ]
    },
    {
        "id": 436,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0119242d3f89045faa20cb",
                "text": "What's the best way to use a `TestExecutionListener` but you don't need any other Spring stuff?",
                "time": "2019-06-12 15:24:20",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5d011981c7a8fc263a0f7f41",
                "text": "Is it simply `@RunWith(SpringRunner.class)`?",
                "time": "2019-06-12 15:25:53",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d011a97049bf9263c5b3174",
                "text": "If you don't need any other Spring stuff, I doubt you want to use its runner. Why not use JUnit's standard callbacks?",
                "time": "2019-06-12 15:30:31",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d011ab9c8d21d2606493adf",
                "text": "If you used JUnit 5, its myriad extension points will give you a `TestExecutionListener` equivalent",
                "time": "2019-06-12 15:31:05",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5d011d4472e57326078bf7f9",
                "text": "because it's Spring's `TestExecutionListener`s that I want to use",
                "time": "2019-06-12 15:41:56",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5d0122f7c2e5ba268ce61d4f",
                "text": "You can't use a `TestExecutionListener` without any other Spring stuff. The `TestContext` that is passed to the various `TestExecutionListener` callback methods provides access to an `ApplicationContext`.",
                "time": "2019-06-12 16:06:15",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d012344c5386926f6d92bbd",
                "text": "But will that give me an empty application context, or will it start scanning my code for beans and such?",
                "time": "2019-06-12 16:07:32",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5d012612049bf9263c5b9779",
                "text": "That's up to you. IIRC, it'll fail unless you give it some configuration. That configuration will allow you to control what do and does not get scanned.",
                "time": "2019-06-12 16:19:30",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 437,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbb1995435c2a518e6c625e",
                "text": "I'm attempting to configure a proxy for a `RestTemplate` following the approach described in the docs (https://docs.spring.io/spring-boot/docs/current/reference/html/howto-http-clients.html). I like the idea of the `RestTemplateCustomizer` as I only want the proxy to be used for certain Spring profiles so I can use annotations to determine if the `RestTemplateCustomizer` is initialised.",
                "time": "2018-10-08 08:47:17",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5bbb19c6ef4afc4f2837d260",
                "text": "I'm currently creating my `RestTemplate` as follows:\n```\n    @Bean\n    public OAuth2RestTemplate restTemplate() {\n        return new OAuth2RestTemplate(clientCredentialsResourceDetails());\n    }\n```",
                "time": "2018-10-08 08:48:06",
                "index": 1,
                "user": "mplanchant"
            },
            {
                "id": "5bbb19f2435c2a518e6c655a",
                "text": "Does this mean that the `RestTemplateCustomizer` approach is not going to work? Do I need to create my `RestTemplate` using `RestTemplateBuilder`?",
                "time": "2018-10-08 08:48:50",
                "index": 2,
                "user": "mplanchant"
            },
            {
                "id": "5bbb1c25c08b8b3067ed05fa",
                "text": "Yes",
                "time": "2018-10-08 08:58:13",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bbb1c3eef4afc4f2837e669",
                "text": "Customizers are detected by the auto-configured builder and only applied if you build a `RestTemplate` with the builder",
                "time": "2018-10-08 08:58:38",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bbb1c59ae7be940161c3157",
                "text": "You can also add customizers or your own copy of the builder if you want it to only apply to certain rest templates (each invocation on the builder return an immutable copy)",
                "time": "2018-10-08 08:59:05",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5bbb1f99ae7be940161c4a8a",
                "text": "As far as I can see, I can't use `RestTemplateBuilder` to build a `OAuth2RestTemplate`. Am I behind the curve here? What's the recommended was of doing this for Spring Boot > 2.0?",
                "time": "2018-10-08 09:12:57",
                "index": 6,
                "user": "mplanchant"
            },
            {
                "id": "5bbb1fa8c08b8b3067ed1325",
                "text": "> As far as I can see,",
                "time": "2018-10-08 09:13:12",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5bbb1fa95331811c2e6974b8",
                "text": "Meaning?",
                "time": "2018-10-08 09:13:13",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5bbb1fd0bbdc0b250503d51c",
                "text": "Is it possible to build a `OAuth2RestTemplate` using `RestTemplateBuilder`? I can't see how.",
                "time": "2018-10-08 09:13:52",
                "index": 9,
                "user": "mplanchant"
            },
            {
                "id": "5bbb1fe4ae7be940161c4b97",
                "text": "https://github.com/spring-projects/spring-boot/blob/7da33965551f4d2019a2b3083cbd1bf4fad2e7da/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java#L545",
                "time": "2018-10-08 09:14:12",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5bbb22b2384492366100d1ab",
                "text": "@snicoll thanks, I wasn't aware of that functionality.\n\nSo somethig like ->\n```\n    @Bean\n    public OAuth2RestTemplate restTemplate() {\n        return restTemplateBuilder.configure(new OAuth2RestTemplate(clientCredentialsResourceDetails()));\n    }\n```\nshould do the trick?",
                "time": "2018-10-08 09:26:10",
                "index": 11,
                "user": "mplanchant"
            },
            {
                "id": "5bbb36dec08b8b3067ed6581",
                "text": "@snicoll thanks for your help with the `OAuth2RestTemplate` works a treat. Out of interest, I notice that `restTemplateBuilder.configure` also sets an error handler on the rest template. How would I make an error handler available to be added by this method?",
                "time": "2018-10-08 10:52:14",
                "index": 15,
                "user": "mplanchant"
            },
            {
                "id": "5bbb39fdbbdc0b25050493fd",
                "text": "Looks like ->\n```\n    @Bean\n    public OAuth2RestTemplate restTemplate() {\n        return restTemplateBuilder\n                .errorHandler(myErrorHandler)\n                .configure(new OAuth2RestTemplate(clientCredentialsResourceDetails()));\n    }\n```\ndid the job.",
                "time": "2018-10-08 11:05:33",
                "index": 16,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 438,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5cc83e9d3b6cb0686a7b7d38",
                "text": "Is JUnit 5 going to be standard in Spring Boot 2.2?",
                "time": "2019-04-30 12:25:01",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5cc84535b489bb6ed7eeffd4",
                "text": "Hopefully, yes. We're blocked by a Surefire bug at the moment, but it's looking increasingly likely that will be fixed in a forthcoming maintenance release",
                "time": "2019-04-30 12:53:09",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cc84565b489bb6ed7ef012a",
                "text": "If that happens, we'll be able to upgrade to JUnit 5 while providing the Vintage Engine so that users' tests written using the JUnit 4 API will run unmodified. That way we can provide a smooth migration path to the new Jupiter API.",
                "time": "2019-04-30 12:53:57",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cc84ca28790b0307e29581e",
                "text": "Thanks @wilkinsona ",
                "time": "2019-04-30 13:24:50",
                "index": 3,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 439,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cd0de034b4cb471d9bd88c1",
                "text": "hi all, i am using spring-jms cachingConnectionfactory on top IBM MQConnectionFactory with session cache size of 2",
                "time": "2019-05-07 01:23:15",
                "index": 0,
                "user": "aim4pole"
            },
            {
                "id": "5cd0de388446a6023edac925",
                "text": "we have 2 active-gateways. so load goes through both the gateways. ",
                "time": "2019-05-07 01:24:08",
                "index": 1,
                "user": "aim4pole"
            },
            {
                "id": "5cd0e1e21cd0b8307dd5daa8",
                "text": " I have seen that singleConnectionFactory closes and reinitializes the connection every time we call get connection. I read some blog creating connection everytime we send a message is anti pattern. Then why does spring-jms do that? ",
                "time": "2019-05-07 01:39:46",
                "index": 2,
                "user": "aim4pole"
            },
            {
                "id": "5cd0e1fb3b6cb0686ab6a353",
                "text": "I have MQConnection count to remain constant 2, but internal WMQConnection count fluctuates based on load because of the above behavior by spring-jms.",
                "time": "2019-05-07 01:40:11",
                "index": 3,
                "user": "aim4pole"
            },
            {
                "id": "5cd0e2afe416b84519422de0",
                "text": "@philwebb @wilkinsona , can you please look into my query. Direct me to the right person",
                "time": "2019-05-07 01:43:11",
                "index": 5,
                "user": "aim4pole"
            },
            {
                "id": "5cd16a54375bac74706e1332",
                "text": "@aim4pole What you've described is the exact opposite of what `SingleConnectionFactory` is intended to do. It should create a single shared connection. Note that it does wrap the shared connection to suppress calls to close and you'll get a new wrapper each time you ask the factory to create a connection. The actual underlying connection will be shared though.",
                "time": "2019-05-07 11:21:56",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5cd17ba197dcb371d87b5f87",
                "text": "@wilkinsona Thanks for reply. please refer the images with object map state. [sprong-jms call stack]https://imgur.com/a/qjobnym",
                "time": "2019-05-07 12:35:45",
                "index": 13,
                "user": "aim4pole"
            },
            {
                "id": "5cd17c133b6cb0686aba94f2",
                "text": "@wilkinsona if you see init Connection(javadoc # comment says exactly what I have describerd) that invokes docreateConnection. ",
                "time": "2019-05-07 12:37:39",
                "index": 14,
                "user": "aim4pole"
            },
            {
                "id": "5cd17c744b4cb471d9c1a89f",
                "text": "doCreateConnection actually creates WMConnection class every time a new connection is request. please advise @wilkinsona ",
                "time": "2019-05-07 12:39:16",
                "index": 15,
                "user": "aim4pole"
            },
            {
                "id": "5cd1853cb4700e023d390eaa",
                "text": "Right, but you should not be calling `initConnection()`. If you stick to the `ConnectionFactory` API and call `createConnection()` a single, shared connection will be used.",
                "time": "2019-05-07 13:16:44",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5cd1857c1cd0b8307dda1fa0",
                "text": "@aim4pole If something's calling `initConnection()` repeatedly then that's where the problem lies as it's not using `SingleConnectionFactory` as intended.",
                "time": "2019-05-07 13:17:48",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5cd1a995990feb45186b36c3",
                "text": "@wilkinsona I am using cachingFactory.createConnection() in the try-with-resources block. Is this wrong usage?",
                "time": "2019-05-07 15:51:49",
                "index": 24,
                "user": "aim4pole"
            },
            {
                "id": "5cd1b04c8790b0307e69dcbe",
                "text": "@aim4pole No, that should be fine. You should see the underlying connection being initialised on first request and then reused thereafter",
                "time": "2019-05-07 16:20:28",
                "index": 27,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 440,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d10b6be67887347a07a64ca",
                "text": "What's the recommended way to not ship spring-boot-configuration-processor in BOOT-INF/libs? Using Maven, so no `compileOnly` scope.",
                "time": "2019-06-24 11:40:46",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5d10d428aafbc32629772555",
                "text": "@OrangeDog ```<optional>true</optional>```",
                "time": "2019-06-24 13:46:16",
                "index": 1,
                "user": "thackel"
            },
            {
                "id": "5d10d44ed010383639c52df1",
                "text": "@thackel optional dependencies aren't excluded",
                "time": "2019-06-24 13:46:54",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5d10d46c30cc05479fb78ad7",
                "text": "https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html",
                "time": "2019-06-24 13:47:24",
                "index": 3,
                "user": "thackel"
            },
            {
                "id": "5d10d4975e67ff0bcbdccd72",
                "text": "\"They prevent problematic jars that violate a license agreement or cause classpath issues from being bundled into a WAR, EAR, fat jar, or the like.\"",
                "time": "2019-06-24 13:48:07",
                "index": 4,
                "user": "thackel"
            },
            {
                "id": "5d10d62980f91e2d3e824f7f",
                "text": "@thackel yeah, but that's not what `spring-boot-maven-plugin` does",
                "time": "2019-06-24 13:54:49",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5d10d6a130cc05479fb79e04",
                "text": "@OrangeDog i checked it here. my boot projects are repackaged again and there is works. (dep A has optional config-processor and is being used in dep B which is packaged by boot-maven plugin). so this is a different scenario than yours",
                "time": "2019-06-24 13:56:49",
                "index": 6,
                "user": "thackel"
            },
            {
                "id": "5d11353a79a19326287c245c",
                "text": "@OrangeDog https://github.com/spring-projects/spring-boot/issues/10539",
                "time": "2019-06-24 20:40:26",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5d11355595efec2d3dff9e6d",
                "text": "You can use [`<exclude>` on the plugin's configuration](https://docs.spring.io/spring-boot/docs/current/maven-plugin/examples/exclude-dependency.html) until we have something better.",
                "time": "2019-06-24 20:40:53",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5d11e701d010383639ce983d",
                "text": "@wilkinsona thanks. I was looking at Maven lists and they say you should use compile-only dependencies as plugins instead. I'm guessing there's a reason that won't work?",
                "time": "2019-06-25 09:18:57",
                "index": 19,
                "user": "OrangeDog"
            },
            {
                "id": "5d11e9d979a193262882287d",
                "text": "I don't know if it'll work. That's the first time that I've heard that recommendation.",
                "time": "2019-06-25 09:31:05",
                "index": 20,
                "user": "wilkinsona"
            },
            {
                "id": "5d11eab7d010383639cebccd",
                "text": "I'll give that a go, and annotationProcessorPaths as well",
                "time": "2019-06-25 09:34:47",
                "index": 21,
                "user": "OrangeDog"
            },
            {
                "id": "5d11f95d0edb7a3a7261e15c",
                "text": "@wilkinsona so, it does work specifying them on the maven-compiler-plugin, either as dependencies or annotationProcessingPath, however dependency management doesn't work there.",
                "time": "2019-06-25 10:37:17",
                "index": 35,
                "user": "OrangeDog"
            },
            {
                "id": "5d1213efaafbc32629825c2b",
                "text": "Ah, except then lombok doesn't work (for `onX`). And if you add lombok to annotationProcessingPath it completely fails.",
                "time": "2019-06-25 12:30:39",
                "index": 36,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 441,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5bff78c7f59704348e1f1e6c",
                "text": "is this a realistic use case for reactive webflux? service01 -> service02 -> service 03",
                "time": "2018-11-29 05:27:35",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bff78d1d24f9324d26df465",
                "text": "each call to each service is using webclient",
                "time": "2018-11-29 05:27:45",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bff86b3ced7003fe1a1f0ea",
                "text": "You can do this, sure. It's a use case for webflux, but not really specific to it. Any more details on your question?",
                "time": "2018-11-29 06:26:59",
                "index": 2,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5bff9471d24f9324d26e931f",
                "text": "@styx_hcr_twitter well i was wondering if the calls are async wouldn't service01 return a blank result to the frontend since the calls are not completed yet?",
                "time": "2018-11-29 07:25:37",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bff9491e25cc274055e7599",
                "text": "Hi can anyone help me to know what is \"maven revision\" ?",
                "time": "2018-11-29 07:26:09",
                "index": 4,
                "user": "rishavroy1264bitmesra"
            },
            {
                "id": "5bff9497cfa682348da0776d",
                "text": "say, if service03 is not yet done ",
                "time": "2018-11-29 07:26:15",
                "index": 5,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bff97ced24f9324d26ead4d",
                "text": "well that depends. if you want to keep things simple and just send the full response, you have to synchronize prior to sending the final response. if that's not desirable you'd need to build your application in such a way that you can stream in the results that might come later. There exist examples on how to do this with Thymeleaf.",
                "time": "2018-11-29 07:39:58",
                "index": 6,
                "user": "styx_hcr_twitter"
            }
        ]
    },
    {
        "id": 442,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbc8193271506518ddefbe9",
                "text": "Hi All,\nI am using using redis cluster for my caching which is working fine for me  I have configure few propeties in  my appliction.properties which is \nspring.redis.cluster.nodes=cluster-001-amazonaws.com:6379,cluster-002-amazonaws.com:6379\n\nI am looking for a solution in case in future if i have to  increase the numbere of nodes how can i avoid without adding new nodes in my appliction.properties. Defining all my nodes inside my application makes it very titly couple.\n\nIs there is any workaround for this ?\n\n",
                "time": "2018-10-09 10:23:15",
                "index": 0,
                "user": "tikoosuraj_twitter"
            },
            {
                "id": "5bbcba5e6e5a401c2d40444c",
                "text": "@tikoosuraj_twitter please refer to the documentation. `application.properties`is just one location of many where the property (or any property) can be specified. You can pass that externally via system properties, env variables or command line switches",
                "time": "2018-10-09 14:25:34",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5bbcc46e5331811c2e75a933",
                "text": "@snicoll  Thanks for your answer. I know that is possible through environment variable but for that still a deployment is needed which i don't want for my use case when my load is increased . I am looking for a solution is there is any way to by pass nodes for redis",
                "time": "2018-10-09 15:08:30",
                "index": 13,
                "user": "tikoosuraj_twitter"
            },
            {
                "id": "5bbcc4ab38449236610cfc6d",
                "text": "Sorry I don\u2019t understand the question then",
                "time": "2018-10-09 15:09:31",
                "index": 14,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 443,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5e9dd8d563e7b73a5ff0e75e",
                "text": "Hello, I am using spring-data-r2dbc in my project and the latest spring boot version it supports is >=2.3.0 which is in M4 release as of April 3rd. Do we have a timeline for the RELEASE build for spring-boot which supports spring-data-r2dbc?",
                "time": "2020-04-20 17:16:05",
                "index": 0,
                "user": "kalaria_dhruv_twitter"
            },
            {
                "id": "5e9ddadca1284c4f20a73a7a",
                "text": "@kalaria_dhruv_twitter this might give you some hint https://github.com/spring-projects/spring-boot/milestones",
                "time": "2020-04-20 17:24:44",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5e9ddaeb8e987f3a5e3178f6",
                "text": "not sure if dates are accurate there though",
                "time": "2020-04-20 17:24:59",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5e9ddc1785b01628f065d418",
                "text": "@boda2004 thank you that helps!",
                "time": "2020-04-20 17:29:59",
                "index": 3,
                "user": "kalaria_dhruv_twitter"
            }
        ]
    },
    {
        "id": 444,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bff9e82cb32736b29aeb137",
                "text": "how to access spring service in a non spring project",
                "time": "2018-11-29 08:08:34",
                "index": 0,
                "user": "srivanigorthi"
            },
            {
                "id": "5bff9e88e25cc274055eaf3d",
                "text": "can anyone please help",
                "time": "2018-11-29 08:08:40",
                "index": 1,
                "user": "srivanigorthi"
            },
            {
                "id": "5bff9eae7074b90368721a6e",
                "text": "one option which I came across is to get using applicationcontext but it is not working",
                "time": "2018-11-29 08:09:18",
                "index": 2,
                "user": "srivanigorthi"
            },
            {
                "id": "5bff9ec69c77613d876dd96d",
                "text": "ApplicationContextAware ",
                "time": "2018-11-29 08:09:42",
                "index": 3,
                "user": "alonWang"
            },
            {
                "id": "5bff9ec9cfa682348da0bb08",
                "text": "dependencies in attached jar are not visible in the project",
                "time": "2018-11-29 08:09:45",
                "index": 4,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffa475ced7003fe1a29a9d",
                "text": "@srivanigorthi I'm not sure that I understand what you are trying to do, but it sounds like https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-an-additional-executable-jar may be relevant",
                "time": "2018-11-29 08:33:57",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb051b6c0701052a63e01",
                "text": "\nHi\nMY scenario is I have created spring boot standalone application, which I have exported as jar\nNow I have to use the jar in non-spring application to call some method(inside jar).\nWhile trying to access that, it(non spring application) is unable to find the required ApplicationContext. \nAny idea about how to get access for required method from non spring application?",
                "time": "2018-11-29 09:24:33",
                "index": 6,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb05a6621313894377ab6",
                "text": "Any help would be appreciated ",
                "time": "2018-11-29 09:24:42",
                "index": 7,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb16d958fc5389509087d",
                "text": "It depends on the particular method that you want to call. If it's a static method, you should be able to call it as you would any other static method. If it's an instance method, you'll need to create an instance to be able to call the method. If that requires lots of dependencies, then you'll have to inject those somehow.",
                "time": "2018-11-29 09:29:17",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb24e7074b90368729bcc",
                "text": "As there are some autowired objects used in the method which I want to call making it static would make the values null.  I was sending the ApplicationContext object through a separate class and trying to get the object of my required service using applicationContext object.getBean(service.class) method",
                "time": "2018-11-29 09:33:02",
                "index": 9,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb2bcf59704348e207505",
                "text": "Application context is setup by spring at the time of application project.",
                "time": "2018-11-29 09:34:52",
                "index": 10,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb2c4e25cc274055f3585",
                "text": "How to proceed with this scenario?",
                "time": "2018-11-29 09:35:00",
                "index": 11,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb548a115c91ef7ae81af",
                "text": "Where are you getting the application context from?",
                "time": "2018-11-29 09:45:44",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb5e6662131389437a4de",
                "text": "from my spring boot standalone application jar",
                "time": "2018-11-29 09:48:22",
                "index": 13,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb5f6ced7003fe1a30252",
                "text": "I am returning it through a method inside the jar",
                "time": "2018-11-29 09:48:38",
                "index": 14,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb61ccb32736b29af3b4a",
                "text": "And how is that method creating the application context?",
                "time": "2018-11-29 09:49:16",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb82bb6c0701052a66f05",
                "text": "class is implementing ApplicationContextAware and I have overridden the setContext method ",
                "time": "2018-11-29 09:58:03",
                "index": 16,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb8708dffd748dbfe26f5",
                "text": "I have tried concept specified in this url",
                "time": "2018-11-29 09:59:12",
                "index": 17,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb871f59704348e2099ec",
                "text": "https://codippa.com/how-to-autowire-objects-in-non-spring-classes/",
                "time": "2018-11-29 09:59:13",
                "index": 18,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb874662131389437b3ad",
                "text": "But if nothing is creating the application context, there'll be nothing to inject the context into that class",
                "time": "2018-11-29 09:59:16",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb8b3f849b222e0c03739",
                "text": "As per site which I have gone through setApplicationContext method is called at the time of spring startup",
                "time": "2018-11-29 10:00:19",
                "index": 20,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb8eacfa682348da16afb",
                "text": "Ok. So if that's working, I don't think I've understood your problem. What isn't working as you'd like?",
                "time": "2018-11-29 10:01:14",
                "index": 21,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb93c662131389437b9a4",
                "text": "\"I require a spring boot application service to be accessed in non spring project(plain java project) \"",
                "time": "2018-11-29 10:02:36",
                "index": 22,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb9547d26db1e8313663b",
                "text": "I have added spring boot application as jar in my non spring project",
                "time": "2018-11-29 10:03:00",
                "index": 23,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb985b6c0701052a676cb",
                "text": "That's what you said earlier. It tells me what your goal is and what you have done. It doesn't tell me what isn't working as you'd like.",
                "time": "2018-11-29 10:03:49",
                "index": 24,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb9a17d26db1e831367cd",
                "text": "sorry, applicationcontext is being returned as null",
                "time": "2018-11-29 10:04:17",
                "index": 25,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffb9cfed6bcf1ef87abaef",
                "text": "As I said above, \"if nothing is creating the application context, there'll be nothing to inject the context into that class\"",
                "time": "2018-11-29 10:05:03",
                "index": 26,
                "user": "wilkinsona"
            },
            {
                "id": "5bffb9f4f59704348e20a3e3",
                "text": "For `setApplicationContext` to be called, and for your static method that provides access to the context to return a non-null value, you'll have to have called something that creates and refreshes the application context.",
                "time": "2018-11-29 10:05:40",
                "index": 27,
                "user": "wilkinsona"
            },
            {
                "id": "5bffba1be25cc274055f61db",
                "text": "Yes",
                "time": "2018-11-29 10:06:19",
                "index": 28,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffba2ee25cc274055f6233",
                "text": "I am unable to understand how to proceed ",
                "time": "2018-11-29 10:06:38",
                "index": 29,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffba38a115c91ef7ae9e0e",
                "text": "If I were you, I think I'd take a step back and take a different approach to the problem. I would move the code that you want to use both in your Spring application and in your non Spring application out into a separate module.",
                "time": "2018-11-29 10:06:48",
                "index": 30,
                "user": "wilkinsona"
            },
            {
                "id": "5bffba697074b9036872d17a",
                "text": "That module should have no dependencies on Spring. Rather than using `@Autowired` and field injection (if that's what you're using), change to constructor injection",
                "time": "2018-11-29 10:07:37",
                "index": 31,
                "user": "wilkinsona"
            },
            {
                "id": "5bffba9c7074b9036872d28a",
                "text": "That should allow you to use the code in your Spring application (where you can create one or more `@Bean` methods to make the functionality available) and in your non Spring application where you can just call the relevant constructors",
                "time": "2018-11-29 10:08:28",
                "index": 32,
                "user": "wilkinsona"
            },
            {
                "id": "5bffbaab7d26db1e83136f50",
                "text": "ok",
                "time": "2018-11-29 10:08:43",
                "index": 33,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffbad9cfa682348da17abe",
                "text": "Even adding spring application as jar, would work right",
                "time": "2018-11-29 10:09:29",
                "index": 34,
                "user": "srivanigorthi"
            },
            {
                "id": "5bffbb7bced7003fe1a32627",
                "text": "If you follow the link I shared above, and weren't relying on field injection then, yes, that could be made to work",
                "time": "2018-11-29 10:12:11",
                "index": 35,
                "user": "wilkinsona"
            },
            {
                "id": "5bffbc96f849b222e0c04fe3",
                "text": "ok, I will give it a try and get back to you. Thank you so much for your help",
                "time": "2018-11-29 10:16:54",
                "index": 36,
                "user": "srivanigorthi"
            }
        ]
    },
    {
        "id": 445,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5cf4d07d9b50f63935734fdd",
                "text": "Hi guys, i'd like to design my application using microservice approach with springboot. As the various microservices share the same datamodel and talk with the same model entity, i'd like to create a library that contains the db entities, repositories and connection management as well as the REST error management. I ask you for an expert advice to how achieve this. I would be grateful of you suggest the correct approach using springboot even with some sample code or inspiration project. Many thanks. Sergio.",
                "time": "2019-06-03 07:47:09",
                "index": 0,
                "user": "sergiopanico"
            },
            {
                "id": "5cf4d0e665392c3b60af1550",
                "text": "TBH, if you share the data model and even the database this is a very strong hint to not choose a microservice architecture.",
                "time": "2019-06-03 07:48:54",
                "index": 1,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5cf4d1396f530d3b612a95fb",
                "text": "You might find https://speakerdeck.com/olivergierke/building-better-monoliths-modulithic-applications-with-spring-boot-cd16e6ec-d334-497d-b9f6-3f92d5db035a interesting",
                "time": "2019-06-03 07:50:17",
                "index": 2,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5cf4d1bafaac64393430657e",
                "text": "Hi Andreas many thanks. I read the article you shared and let you know for some other doubt! Thx",
                "time": "2019-06-03 07:52:26",
                "index": 3,
                "user": "sergiopanico"
            }
        ]
    },
    {
        "id": 446,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf5d41e6621313894f98b9c",
                "text": "We just spew our questions here?",
                "time": "2018-11-21 21:54:38",
                "index": 0,
                "user": "tom-gorillavpn_gitlab"
            },
            {
                "id": "5bf5d6d0f59704348ee27151",
                "text": "If I manually create ConfigurationProperties using org.springframework.boot.context.properties.bind.Binder validation doesn't happen with JSR-303. Any way to trigger this?",
                "time": "2018-11-21 22:06:08",
                "index": 1,
                "user": "tom-gorillavpn_gitlab"
            },
            {
                "id": "5bf67b6897a8982b9a471bec",
                "text": "@tom-gorillavpn_gitlab You need to configure your `Binder` with a `ValidationBindHandler`",
                "time": "2018-11-22 09:48:24",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5bf68373958fc53895cf9700",
                "text": "@wilkinsona  thank you , appreciated",
                "time": "2018-11-22 10:22:43",
                "index": 23,
                "user": "tom-gorillavpn_gitlab"
            }
        ]
    },
    {
        "id": 447,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc54463ea7d147cb3404387",
                "text": "Good morning, we are just having the case that we need to forward some requests which are hitting one of our services. We for example want to forward '/custom/api' to '/api'. We started to implement a simple controller which maps a path and forward to the corresponding path. But this solution is not working for all cases (request parameters and so on). Therefore we currently believe that it is not the correct solution to do such forwards. Therefore we would like to ask how it is meant to be implemented in the Spring Boot world. Should we implement a Servlet filter? Should we use a ViewResolver? Is there another possibility on WebMvcConfigurer we don't see at the moment? Would be really nice if someone could point us into the correct direction! :)",
                "time": "2019-11-08 10:33:07",
                "index": 0,
                "user": "ingogriebsch"
            },
            {
                "id": "5dc91f71ea7d147cb35af168",
                "text": "> Good morning, we are just having the case that we need to forward some requests which are hitting one of our services. We for example want to forward '/custom/api' to '/api'. We started to implement a simple controller which maps...\n\n@wilkinsona or anybody else... Any hint for us? Or do we ask in the wrong way and/or forum?\n",
                "time": "2019-11-11 08:44:33",
                "index": 63,
                "user": "ingogriebsch"
            },
            {
                "id": "5dc927405eb2e813db03b8ab",
                "text": "@ingogriebsch What problem did you have with request parameters? You can use the query string of the  `forward:` URL to specify request parameters. Any parameters in the original request with the same name should be overridden.",
                "time": "2019-11-11 09:17:51",
                "index": 66,
                "user": "wilkinsona"
            },
            {
                "id": "5dc92c8e50010612b29a2578",
                "text": "@wilkinsona Request parameters are only one part. How about request headers or body? Therefore I would like to understand what would be the 'best way' to implement forwards. Are we on a good way if we are using a controller? Or should we move to another layer (filter, resolver, interceptor etc) to implement/configure a mechnism to forward?",
                "time": "2019-11-11 09:40:30",
                "index": 68,
                "user": "ingogriebsch"
            },
            {
                "id": "5dc92d6850010612b29a2d72",
                "text": "A controller is a fine option. It maps down onto the servlet `RequestDispatcher` API and a call to `forward`",
                "time": "2019-11-11 09:44:08",
                "index": 69,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 448,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5cbc7e6b2e2caa1aa695c43e",
                "text": "Hello, I have an idea for improving the Flyway actuator, and before I open a ticket I'd like to see what the other people think. Right now if you go to `/flyway` then you see all the migrations that have been applied, and also the pending ones. It would be really nice if you could migrate to a certain pending migration. For example you see migration `V1.2__added_a_column.sql` and you make a POST request to `/actuator/flyway` with `id=V1.2__added_a_column.sql` and then flyway applied the migration. What do you think?",
                "time": "2019-04-21 14:30:03",
                "index": 0,
                "user": "ptahchiev"
            },
            {
                "id": "5cbd3b78a4ef097471dad4e6",
                "text": "sounds like a very niche scenario that can also introduce *a lot* of security problems as you're basically exposing your DB migration steps to the http layer.\n\nalso, what would the exact usecase for this be?",
                "time": "2019-04-22 03:56:40",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cbd710ea4ef097471dc3f96",
                "text": "well, the actuators are security protected, and you can always disable this feature if you feat it might be hacked. ",
                "time": "2019-04-22 07:45:18",
                "index": 2,
                "user": "ptahchiev"
            },
            {
                "id": "5cbd71252e2caa1aa69bd1d0",
                "text": "also remember there is a /shutdown actuator - that actually stops your website",
                "time": "2019-04-22 07:45:41",
                "index": 3,
                "user": "ptahchiev"
            },
            {
                "id": "5cbd713c375bac7470e563ce",
                "text": "the use case would be to easily migrate your schema to a newer version",
                "time": "2019-04-22 07:46:04",
                "index": 4,
                "user": "ptahchiev"
            },
            {
                "id": "5cbeebbd375bac7470ef87cb",
                "text": "@ptahchiev Can you describe a scenario where you need to apply the migration on demand rather than just doing it during startup?",
                "time": "2019-04-23 10:41:01",
                "index": 24,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 449,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df0d89ce72656230125c170",
                "text": "Hi everyone could you please tell me how to use USE KEYS in Couchbase to get complex data from nested elements????",
                "time": "2019-12-11 11:53:00",
                "index": 0,
                "user": "RajputDeepaksingh"
            },
            {
                "id": "5df0d8db072446515d898ce1",
                "text": "Or either if you have any idea how to get data from Couchbase without using indexes in Couchbase then tell me how to implement it with spring boot",
                "time": "2019-12-11 11:54:03",
                "index": 1,
                "user": "RajputDeepaksingh"
            },
            {
                "id": "5df104622cc1b31e34febd79",
                "text": "@RajputDeepaksingh Assuming you're using Spring Data Couchbase, https://gitter.im/spring-projects/spring-data is a better place to ask that one",
                "time": "2019-12-11 14:59:46",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5df13a06c6ce6027eba3c20a",
                "text": "@wilkinsona  sure",
                "time": "2019-12-11 18:48:38",
                "index": 12,
                "user": "RajputDeepaksingh"
            }
        ]
    },
    {
        "id": 450,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ee722a22cf2f36eae5debf1",
                "text": "Hey all.. does any of you know how to programmatically call a certain `BeanPostProcessor`?",
                "time": "2020-06-15 07:26:26",
                "index": 0,
                "user": "ptahchiev"
            },
            {
                "id": "5ee723af013105125a36e659",
                "text": "The contract is part of a specific point in the lifecycle so calling it yourself does not make much sense. Perhaps sharing what you\u2019re trying to do would  be more effective here?",
                "time": "2020-06-15 07:30:55",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ee7242c7b6da9126a96a468",
                "text": "here's my situation. I want to create a spring-boot project with hibernate and multi-tenant. I want to define my properties in `application.properties` and the url to my db like so: \n```\nspring.datasource.url=jdbc:mysql://localhost:3306/%TENANT_ID%samplestore\n```\nand I will be replacing the `%TENANT_ID%` at runtime depending on the tenant being used. So to achieve this I define my own `AbstractRoutingDataSource` like this:\n```\n    @Override\n    protected DataSource determineTargetDataSource() {\n\n        String key = Optional.ofNullable((String) determineCurrentLookupKey()).orElse(\"\");\n\n        DataSource result = dataSourceMap.get(key);\n        if (result != null) {\n            return result;\n        }\n\n        if (dataSourceProperties.getUrl() != null) {\n            dataSourceProperties.setUrl(StringUtils.replace(dataSourceProperties.getUrl(), \"%TENANT_ID%\", key));\n        }\n\n        result = dataSourceProperties.initializeDataSourceBuilder().type(HikariDataSource.class).build();\n        dataSourceMap.put(key, result);\n        return result;\n    }\n```\nHowever, now I see that the datasource that is created has no `dataSourceProperties` set. And I figured out that in spring-boot there's a `ConfigurationPropertiesBindingPostProcessor` that kicks in and binds the properties from `application.properties`. However in my case since i'm creating the data source programatically it doesn't set the properties so I get errors like this:\n```\nCaused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value 'EEST' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.\n```\neven though I have the correct property set:\n```\nspring.datasource.hikari.data-source-properties.serverTimezone=UTC\n```",
                "time": "2020-06-15 07:33:00",
                "index": 2,
                "user": "ptahchiev"
            },
            {
                "id": "5ee72adf1e099b0388c8e735",
                "text": "Thanks. How is calling a BPP going to fix that? `spring.datasource` is not meant to be used with multiple datasources, I am not sure I am following what you are expecting",
                "time": "2020-06-15 08:01:35",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ee72b4a7a7f8d2d633705fa",
                "text": "I guess what you want to do is calling the binder programmatically, isn\u2019t it?",
                "time": "2020-06-15 08:03:22",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5ee72b5d2cf2f36eae5e0478",
                "text": "I thought the `ConfigurationPropertiesBindingPostProcessor` is calling the binder",
                "time": "2020-06-15 08:03:41",
                "index": 5,
                "user": "ptahchiev"
            },
            {
                "id": "5ee72b6fef5c1c28f023b2de",
                "text": "It does but you shouldn\u2019t be doing that",
                "time": "2020-06-15 08:03:59",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5ee72b7a5dcbb760b6ee3d1f",
                "text": "and yes, I want the binder to set the `dataSourceProperties`",
                "time": "2020-06-15 08:04:10",
                "index": 7,
                "user": "ptahchiev"
            },
            {
                "id": "5ee72bed30401c1f24594eb5",
                "text": "`Binder.get(environment).bind(\u201cspring.datasource.hikari\u201d, Bindable.ofInstance(result)`",
                "time": "2020-06-15 08:06:05",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5ee72c347a7f8d2d63370842",
                "text": "I will try it",
                "time": "2020-06-15 08:07:16",
                "index": 9,
                "user": "ptahchiev"
            },
            {
                "id": "5ee72c401e099b0388c8eac0",
                "text": "You\u2019re welcome",
                "time": "2020-06-15 08:07:28",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5ee73c1e5782a31278fe027a",
                "text": "Thanks @snicoll I think it works fine now. I used `        result = Binder.get(environment).bind(\"spring.datasource.hikari\", Bindable.ofInstance(result)).get();`",
                "time": "2020-06-15 09:15:10",
                "index": 16,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73c547b6da9126a96dd6d",
                "text": "but this gets me wondered two things 1) I'm kind of now stuck with hikari dataSource 2) did I miss any other post processor",
                "time": "2020-06-15 09:16:04",
                "index": 17,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73c87013105125a3720d0",
                "text": "in my best scenario I would use the dataSource created by Spring Boot.. however spring boot backs off and does not create a dataSource as soon as I declare my `AbstractRoutingDataSource`",
                "time": "2020-06-15 09:16:55",
                "index": 18,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73cc65dcbb760b6ee65f6",
                "text": "would be a good feature if we had an application property (for example `spring.datasource.multi-tenant=true/false`) and thus spring boot creates the `AbstractRoutingDataSource` but allows the customer to specify which database name to use at runtime?",
                "time": "2020-06-15 09:17:58",
                "index": 19,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73ccd7a7f8d2d63372fa7",
                "text": "`AbstractRoutingDataSource` is a `DataSource`, nothing surprising about that. If you are creating your own `DataSource` you are in control and should not expect the auto-configuration to do something about it. I don\u2019t know what you mean by \u201cmiss any other post processor\u201d. Those aren\u2019t relevant if you create your own bean.",
                "time": "2020-06-15 09:18:05",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5ee73d167b6da9126a96df73",
                "text": "I mean - because I'm creating the dataSource programatically it didn't have the postprocessors executed",
                "time": "2020-06-15 09:19:18",
                "index": 21,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73d237a7f8d2d63373026",
                "text": "so it is not the same as if I were to create it as bean",
                "time": "2020-06-15 09:19:31",
                "index": 22,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73d322cf2f36eae5e3175",
                "text": "I know what you mean but if you are creating your own bean, you are 100% in control",
                "time": "2020-06-15 09:19:46",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5ee73d337b6da9126a96dfb2",
                "text": "now I added the binder, but did i miss any other post-processor?",
                "time": "2020-06-15 09:19:47",
                "index": 24,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73d6124a3382d5d69df36",
                "text": "yeah.. still it would be nice if spring-boot had better support for multi tenant databases",
                "time": "2020-06-15 09:20:33",
                "index": 25,
                "user": "ptahchiev"
            },
            {
                "id": "5ee73d715782a31278fe064d",
                "text": "if you think so too I can work on a PR",
                "time": "2020-06-15 09:20:49",
                "index": 26,
                "user": "ptahchiev"
            }
        ]
    },
    {
        "id": 451,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c53cc7c41775971a0b94f45",
                "text": "Hello everyone, I am using Netty in Apache camel and spring boot, and I am trying to connect to a device using tcp but it is giving a no response error regardless of what the ssl configurations are, when I connect to other devices I have no problem and no errors.\nAny idea what can cause the tcp connection to fail before a handshake ?",
                "time": "2019-02-01 04:35:08",
                "index": 0,
                "user": "NourasHamwi"
            },
            {
                "id": "5c53cd7d78e1ed4103c1d291",
                "text": "@NourasHamwi You sure the device is responding?  Also, check your firewall rules on both ends",
                "time": "2019-02-01 04:39:25",
                "index": 1,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53cdc6ca428b0645365cea",
                "text": "@josiahhaswell I can OpenSSL connect to the device using same computer. ",
                "time": "2019-02-01 04:40:38",
                "index": 2,
                "user": "NourasHamwi"
            },
            {
                "id": "5c53ce58ceb5a2264f74e219",
                "text": "When I sniff the data on that ip I can see the handshake is not even happening. ",
                "time": "2019-02-01 04:43:04",
                "index": 3,
                "user": "NourasHamwi"
            },
            {
                "id": "5c53cea454f21a71a1dc32c9",
                "text": "@NourasHamwi Have you tried opening a URL connection from Java from a simple test?",
                "time": "2019-02-01 04:44:20",
                "index": 4,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53cfd678e1ed4103c1de77",
                "text": "@josiahhaswell I have and it works fine on 3 different devices,I tried both as consumer and producer, but when it comes to this devise I always get error no response ",
                "time": "2019-02-01 04:49:26",
                "index": 5,
                "user": "NourasHamwi"
            },
            {
                "id": "5c53d0edf04ef00644bdd957",
                "text": "@josiahhaswell I also suspect it could be packet wrap/unwrap so I switch to nativeTransport but same error. ",
                "time": "2019-02-01 04:54:05",
                "index": 7,
                "user": "NourasHamwi"
            }
        ]
    },
    {
        "id": 452,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c7592c78a7def0752df683f",
                "text": "Hi Spring Booters,\nA question about this code:\n\n```\n@Service\npublic class SecurityUserDetailsService implements UserDetailsService {\n    @Lazy\n    @Autowired\n    private SecurityUserDetailsService userDetailsService;\n\n     @Override\n    public UserDetails loadUserByUsername( String username ) throws UsernameNotFoundException {\n       \n       userDetailsService.warnChicowaServiceForNewChicoweur( loadedOwnerCredentials.isPresent(), username );\n\n        return ....;\n    }\n\n    // ==================================================================================\n    // ==================================================================================\n    @Async\n    public void warnChicowaServiceForNewChicoweur( .... ) {\n      .......\n     }\n}\n```\nUsing `@Async` raises this exception after the user login:\n\n```\njava.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.\n\tat org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(RequestContextHolder.java:131)\n\tat org.springframework.web.context.support.WebApplicationContextUtils.currentRequestAttributes(WebApplicationContextUtils.java:312)\n\tat org.springframework.web.context.support.WebApplicationContextUtils.access$400(WebApplicationContextUtils.java:65)\n\tat org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory.getObject(WebApplicationContextUtils.java:328)\n\tat org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory.getObject(WebApplicationContextUtils.java:323)\n\tat org.springframework.beans.factory.support.AutowireUtils$ObjectFactoryDelegatingInvocationHandler.invoke(AutowireUtils.java:301)\n\tat com.sun.proxy.$Proxy225.getHeader(Unknown Source)\n```\nI added this bean but the error remains: \n\n```\n    @Bean\n    public RequestContextListener requestContextListener() {\n        return new RequestContextListener();\n    }\n`` `\n\nThanks\n",
                "time": "2019-02-26 19:25:59",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5c7593efd2d62067b70f269f",
                "text": "Async process runs in a new thread so thread context will be lost. It is recommanded to use not request scoped beans in service layer restrict it to web module. ",
                "time": "2019-02-26 19:30:55",
                "index": 1,
                "user": "mohanaraosv"
            },
            {
                "id": "5c75a9d565ffa019ea5598e6",
                "text": "@mohanaraosv I know but I need to execute this particular method in another thread ",
                "time": "2019-02-26 21:04:21",
                "index": 3,
                "user": "akuma8"
            },
            {
                "id": "5c75aa71c1cab53d6f43315c",
                "text": "That method is a long running process that is why I want to execute it away to speed up the login process",
                "time": "2019-02-26 21:06:57",
                "index": 4,
                "user": "akuma8"
            }
        ]
    },
    {
        "id": 453,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dc90f936ba2347d2d71dfaf",
                "text": "Hi, Can someone help me here please? I'm newbie to Spring-Security and just for warm-up I decided to do a little example. The problem in the code below is that, when I'm trying to pass the \"right username and password\" to the login page, it direct me to a page which says `access forbidden code 403` .\nHere is the code: \n```\n@org.springframework.context.annotation.Configuration\n@EnableWebSecurity\npublic class Configuration extends WebSecurityConfigurerAdapter {\n\n    @Override\n    public  void configure (AuthenticationManagerBuilder auth) throws Exception {\n        PasswordEncoder encoder = PasswordEncoderFactories.createDelegatingPasswordEncoder();\n        auth.inMemoryAuthentication()\n                .withUser(\"Ian\").roles(\"user\").password(encoder.encode(\"password\"))\n                .and()\n                .withUser(\"Charlize\").password(encoder.encode(\"password\")).roles(\"admin\",\"user\");\n    }\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception{\n        http.authorizeRequests()\n                .antMatchers(\"/dir\",\"/dir/*\").access(\"hasRole('user')\")\n                .antMatchers(\"/\",\"/*\").permitAll()\n                .and().formLogin().loginPage(\"/login/form\").permitAll()\n                .loginProcessingUrl(\"/login\")\n                .usernameParameter(\"userParam\")\n                .passwordParameter(\"passParam\");\n    }\n\n}\n```",
                "time": "2019-11-11 07:36:51",
                "index": 0,
                "user": "odchan1_twitter"
            },
            {
                "id": "5dc90fa5091dd14a0e9c37b9",
                "text": "Does anyone know what is the problem please?",
                "time": "2019-11-11 07:37:09",
                "index": 1,
                "user": "odchan1_twitter"
            },
            {
                "id": "5dc90fcdadd5717a88e83a0e",
                "text": "this happens when I'm using a custom made login page, not when I use the default login page. ",
                "time": "2019-11-11 07:37:49",
                "index": 2,
                "user": "odchan1_twitter"
            },
            {
                "id": "5dc9100952b73c7cb2f8c41a",
                "text": "Also I set the `action` of the form page to \"/login\" ",
                "time": "2019-11-11 07:38:49",
                "index": 3,
                "user": "odchan1_twitter"
            },
            {
                "id": "5dc91327b95ae413dcb91ccd",
                "text": "This is how the form looks like: \n```\n<form method=\"post\" action=\"/login\" >\n    Username:<br>\n    <input type=\"text\" name=\"userParam\" id=\"userParam\" value=\"Mickey\">\n    <br>\n    Password:<br>\n    <input type=\"password\" name=\"passParam\" id=\"passParam\" value=\"Mouse\">\n    <br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n```",
                "time": "2019-11-11 07:52:07",
                "index": 4,
                "user": "odchan1_twitter"
            },
            {
                "id": "5dc9256968ad1c4a0fa6c4a9",
                "text": "@odchan1_twitter https://gitter.im/spring-projects/spring-security is a better place to chat about Spring Security",
                "time": "2019-11-11 09:10:01",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5dc925cbea7d147cb35b1e07",
                "text": "@wilkinsona Thank you :)",
                "time": "2019-11-11 09:11:39",
                "index": 7,
                "user": "odchan1_twitter"
            }
        ]
    },
    {
        "id": 454,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb3de4f3844923661d53cf5",
                "text": "General question about securing apis. Generally I like to use the `@PreAuthorize` annotations to secure apis directly, however it's difficult to do this with endpoints that are created automagically by spring boot (e.g. actuator). Is there a way to use `@PreAuthorize` on these type of auto-created endpoints, instead of relying on the global security configuration?",
                "time": "2018-10-02 21:08:31",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5bb3e43f1c100a4f291fd8b6",
                "text": "For actuator you have a bunch of security auto config, you can probably just play with that ",
                "time": "2018-10-02 21:33:51",
                "index": 1,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb46dd7a9be136b94eabaae",
                "text": "@springroll12 there\u2019s no dedicated security auto-configuration for the actuator anymore in 2.x and you can configure that easily in your security config using `EndpointRequest`",
                "time": "2018-10-03 07:20:55",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bb47a93c08b8b3067c5dad6",
                "text": "oops, sorry for the  misinformation @springroll12 ",
                "time": "2018-10-03 08:15:15",
                "index": 5,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb47abc1e23486b937ee514",
                "text": "No problem marcos, they didn\u2019t really specify which Spring Boot versions they are using",
                "time": "2018-10-03 08:15:56",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bb47ae4c08b8b3067c5dcc7",
                "text": "looking at the bright side, I like you :smiley: ",
                "time": "2018-10-03 08:16:36",
                "index": 7,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb4e1b8ae7be94016f6a9a7",
                "text": "@snicoll Regarding securing the actuator endpoints. Is there no way to do this per-endpoint with the annotation method (`@PreAuthorize` or similar) ? I would really like to not rely on the global security configuration as much as possible.",
                "time": "2018-10-03 15:35:20",
                "index": 30,
                "user": "springroll12"
            },
            {
                "id": "5bb4e1d55af485306855d298",
                "text": "you can\u2019t really annotate something you don\u2019t own, do you?",
                "time": "2018-10-03 15:35:49",
                "index": 31,
                "user": "snicoll"
            },
            {
                "id": "5bb4e2ea600c5f64234a2af7",
                "text": "I think putting this information in several places will be confusing. We used to do that in 1.5.x and stopped in 2.x",
                "time": "2018-10-03 15:40:26",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5bb4e33e6e5a401c2d0f261e",
                "text": "what do you mean by putting this information in several places? It makes sense to me that all endpoints that are defined should use *one* mechanism for security (either annotations or globals)",
                "time": "2018-10-03 15:41:50",
                "index": 33,
                "user": "springroll12"
            },
            {
                "id": "5bb4e35f1c100a4f2925f0b5",
                "text": "What annotations are you talking about exactly. If we\u2019d use that, you\u2019d have no way to customize it",
                "time": "2018-10-03 15:42:23",
                "index": 34,
                "user": "snicoll"
            },
            {
                "id": "5bb4e3745af485306855df64",
                "text": "I mean `@PreAuthorize`",
                "time": "2018-10-03 15:42:44",
                "index": 35,
                "user": "springroll12"
            },
            {
                "id": "5bb4e3791c100a4f2925f1e8",
                "text": "or post or whatever.",
                "time": "2018-10-03 15:42:49",
                "index": 36,
                "user": "springroll12"
            },
            {
                "id": "5bb4e392ae7be94016f6b54f",
                "text": "I got that. If we used that with an hardcoded value for our actuator endpoints, I don\u2019t see how that would make you happy",
                "time": "2018-10-03 15:43:14",
                "index": 37,
                "user": "snicoll"
            },
            {
                "id": "5bb4e41b435c2a518e474402",
                "text": "Oh sorry, that's not what I'm trying to suggest. I mean that I would like to extend the actuator endpoint controller somehow to use `@PreAuthorize` instead of the global config. I'm not trying to suggest that you guys change your project (which is awesome)",
                "time": "2018-10-03 15:45:31",
                "index": 38,
                "user": "springroll12"
            },
            {
                "id": "5bb4e44fae7be94016f6bbd8",
                "text": "I feel like I'm repeating myself though, so maybe I'm whooshing on something",
                "time": "2018-10-03 15:46:23",
                "index": 39,
                "user": "springroll12"
            },
            {
                "id": "5bb4e464c7bf7c3662adf738",
                "text": "Me too",
                "time": "2018-10-03 15:46:44",
                "index": 40,
                "user": "snicoll"
            },
            {
                "id": "5bb4e479271506518dafbc2b",
                "text": "Putting security information in multiple places (in your overrides in that suggestion) is not something we recommend to do",
                "time": "2018-10-03 15:47:05",
                "index": 41,
                "user": "snicoll"
            },
            {
                "id": "5bb4e4906e5a401c2d0f31bd",
                "text": "Rather, security config should be centralised. We provide utilities to make that easy. Have you looked at that yet",
                "time": "2018-10-03 15:47:28",
                "index": 42,
                "user": "snicoll"
            },
            {
                "id": "5bb4e4e3ae7be94016f6c0ac",
                "text": "Here is an example that showcases what I mean: https://github.com/bclozel/initializr-stats/blob/cbb0e5b7bb2d59390630ec9f844956aa30664ecd/dashboard/src/main/java/io/spring/sample/dashboard/SecurityConfig.java#L19-L28",
                "time": "2018-10-03 15:48:51",
                "index": 43,
                "user": "snicoll"
            },
            {
                "id": "5bb4e4e6ef4afc4f28127727",
                "text": "Are there new mechanisms for this in 2.x? If so, maybe I've missed them. But I sort of disagree that the security rules should be centralized. To me it makes sense to have that information codified right next to the endpoint.",
                "time": "2018-10-03 15:48:54",
                "index": 44,
                "user": "springroll12"
            },
            {
                "id": "5bb4e4f5bbdc0b2505de3a60",
                "text": "IMO, it\u2019s much better than you having to extend a bunch of classes and hard-code a role in there",
                "time": "2018-10-03 15:49:09",
                "index": 45,
                "user": "snicoll"
            },
            {
                "id": "5bb4e5256e5a401c2d0f3501",
                "text": "What have you read? I\u2019d like to understand how you\u2019ve missed that if you searched for it",
                "time": "2018-10-03 15:49:57",
                "index": 46,
                "user": "snicoll"
            },
            {
                "id": "5bb4e5a45af485306855edc4",
                "text": "I guess I have seen it. This is the same global config that I'm trying to avoid, but I wasn't aware of some of the newer mechanisms like EndpointRequest and the static resources example.",
                "time": "2018-10-03 15:52:04",
                "index": 47,
                "user": "springroll12"
            },
            {
                "id": "5bb4e5b8600c5f64234a3c2e",
                "text": "Why are you trying to avoid that? ",
                "time": "2018-10-03 15:52:24",
                "index": 48,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6486e5a401c2d0f3c97",
                "text": "Because we are using `@PreAuthorize` annotations in most of our controllers and it just makes sense to have the rules there, rather than bunched up in one super long chain in the global config. If there isn't a great way to do this for actuator and other \"generated\" endpoints, we would have to set all security rules in the global config (with pathmatchers and so on *per method*) in order for the security rules to be applied with one mechanism (global or annotations)",
                "time": "2018-10-03 15:54:48",
                "index": 49,
                "user": "springroll12"
            },
            {
                "id": "5bb4e66a1c100a4f2926059a",
                "text": "Well you\u2019ve seen there it\u2019s not per method. We don\u2019t support per method security on actuator endpoints either",
                "time": "2018-10-03 15:55:22",
                "index": 50,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6921e23486b9381c3d5",
                "text": "so those classes are controllers for sets of endpoints?",
                "time": "2018-10-03 15:56:02",
                "index": 51,
                "user": "springroll12"
            },
            {
                "id": "5bb4e698bbdc0b2505de461a",
                "text": "I don\u2019t expect your actuator security to be very complex either",
                "time": "2018-10-03 15:56:08",
                "index": 52,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6b3ef4afc4f281281da",
                "text": "\u201cthose classes\u201d?",
                "time": "2018-10-03 15:56:35",
                "index": 53,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6ca3844923661db7025",
                "text": "Actuator is tech agnostic, there is no notion of controller like in Spring MVC.",
                "time": "2018-10-03 15:56:58",
                "index": 54,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6d4bbdc0b2505de473a",
                "text": "sorry, I meant the `InfoEndpoint.class, HealthEndpoint.class`",
                "time": "2018-10-03 15:57:08",
                "index": 55,
                "user": "springroll12"
            },
            {
                "id": "5bb4e6d65331811c2e43eae5",
                "text": "(it\u2019s an implementation detail)",
                "time": "2018-10-03 15:57:10",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6e6c08b8b3067c8b35e",
                "text": "We don\u2019t support per-operation security on those",
                "time": "2018-10-03 15:57:26",
                "index": 57,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6ede65a6343367a08f9",
                "text": "Can we take a step back please? ",
                "time": "2018-10-03 15:57:33",
                "index": 58,
                "user": "snicoll"
            },
            {
                "id": "5bb4e6fc3844923661db71d8",
                "text": "Are you having a 1.5 -> 2.0 upgrade problem? If so, I\u2019d very much hear more about that than a theroical problem",
                "time": "2018-10-03 15:57:48",
                "index": 59,
                "user": "snicoll"
            },
            {
                "id": "5bb4e7085331811c2e43ecff",
                "text": "No I'm not. This is something new I'm trying to do.",
                "time": "2018-10-03 15:58:00",
                "index": 60,
                "user": "springroll12"
            },
            {
                "id": "5bb4e715c08b8b3067c8b44d",
                "text": "What are you trying to do?",
                "time": "2018-10-03 15:58:13",
                "index": 61,
                "user": "snicoll"
            },
            {
                "id": "5bb4e72e1e23486b9381c7a8",
                "text": "enable actuator endpoints and fit them into our security model essentially.",
                "time": "2018-10-03 15:58:38",
                "index": 62,
                "user": "springroll12"
            },
            {
                "id": "5bb4e72fbbdc0b2505de4b3f",
                "text": "@springroll12 How would you handle this then for other actuator endpoints that are \u201cinjected\u201d by other 3rd party libraries? Actuator endpoints don\u2019t all necessarily come from core spring boot libraries",
                "time": "2018-10-03 15:58:39",
                "index": 63,
                "user": "edeandrea"
            },
            {
                "id": "5bb4e7791e23486b9381c91a",
                "text": "@edeandrea you're right, and this is the essence of the question. Lots of spring modules add extra endpoints as well, and I'm not sure how to properly secure them via method security.",
                "time": "2018-10-03 15:59:53",
                "index": 65,
                "user": "springroll12"
            },
            {
                "id": "5bb4e786a9be136b94edd62d",
                "text": "Well what I am trying to tell you is that we don\u2019t support per method security. So I don\u2019t think the \u201cfit argument\u201d applies",
                "time": "2018-10-03 16:00:06",
                "index": 66,
                "user": "snicoll"
            },
            {
                "id": "5bb4e796c7bf7c3662ae0b8f",
                "text": "You\u2019ve used the fact it is complicated as an argument. I don\u2019t think configuring actuator security is. ",
                "time": "2018-10-03 16:00:22",
                "index": 67,
                "user": "snicoll"
            },
            {
                "id": "5bb4e7c71e23486b9381cb09",
                "text": "You would secure them in your global config. Or if you want them all to have the same permissions, you can apply global permissions to /actuator/*, since as of Boot 2.x all endpoints are all grouped",
                "time": "2018-10-03 16:01:11",
                "index": 68,
                "user": "edeandrea"
            },
            {
                "id": "5bb4e7e0c08b8b3067c8baf6",
                "text": "There is \u201ctoAnyEndpoint\u201d for that that is used as a fallback. It\u2019s used in the sample above I\u2019ve linked",
                "time": "2018-10-03 16:01:36",
                "index": 69,
                "user": "snicoll"
            },
            {
                "id": "5bb4e7ea1c100a4f29260df9",
                "text": "There is no need to hardcode any path either with the new API",
                "time": "2018-10-03 16:01:46",
                "index": 70,
                "user": "snicoll"
            },
            {
                "id": "5bb4e7f5ae7be94016f6d553",
                "text": "@snicoll that is true - forgot about that!",
                "time": "2018-10-03 16:01:57",
                "index": 71,
                "user": "edeandrea"
            },
            {
                "id": "5bb4e8235331811c2e43f7c9",
                "text": "@springroll12 if you can showcase an example where configuring the actuator is problematic, we can certainly work on that. But I haven\u2019t really seen a compelling argument so far",
                "time": "2018-10-03 16:02:43",
                "index": 72,
                "user": "snicoll"
            },
            {
                "id": "5bb4e8355af48530685600d5",
                "text": "@snicoll Sorry if I seem confrontational. It's not my intent. I understand now that actuator endpoints will not support method security so using `@PreAuthorize` is not possible.",
                "time": "2018-10-03 16:03:01",
                "index": 73,
                "user": "springroll12"
            },
            {
                "id": "5bb4e874bbdc0b2505de55d9",
                "text": "@snicoll I'm not trying to claim that it's complicated, but I would just like to use method security for all the endpoints exposed by a particular spring boot service, since to me it is much much clearer.",
                "time": "2018-10-03 16:04:04",
                "index": 74,
                "user": "springroll12"
            },
            {
                "id": "5bb4e8a5271506518dafdd8f",
                "text": "Oh you were not :)",
                "time": "2018-10-03 16:04:53",
                "index": 75,
                "user": "snicoll"
            },
            {
                "id": "5bb4e8b81c100a4f29261441",
                "text": "I was just trying to understand the reason why you want to do this. I still haven\u2019t :) (IMO that\u2019s not clearer)",
                "time": "2018-10-03 16:05:12",
                "index": 76,
                "user": "snicoll"
            },
            {
                "id": "5bb4e8d35af4853068560559",
                "text": "Using `@PreAuthorize` on features you don\u2019t own is not a very scalable model IMO",
                "time": "2018-10-03 16:05:39",
                "index": 77,
                "user": "snicoll"
            },
            {
                "id": "5bb4e92dc7bf7c3662ae15f1",
                "text": "I agree, but I would also argue that combining `@PreAuthorize` with global configuration is messy. I would also argue that path matching all your endpoints in a single long chain call in securityConfig is not optimal.",
                "time": "2018-10-03 16:07:09",
                "index": 78,
                "user": "springroll12"
            },
            {
                "id": "5bb4e9391e23486b9381d59d",
                "text": "but I guess that is the only way to unify all the security config",
                "time": "2018-10-03 16:07:21",
                "index": 79,
                "user": "springroll12"
            },
            {
                "id": "5bb4e973600c5f64234a5a7b",
                "text": "Neither of that happens with Actuator security. If you decide to use `@PreAuthorize` you don\u2019t really have a choice of combining that with securing code you don\u2019t own. ",
                "time": "2018-10-03 16:08:19",
                "index": 80,
                "user": "snicoll"
            },
            {
                "id": "5bb4e9a11e23486b9381d900",
                "text": "Trying to extend code you don\u2019t own so that it fits with your preferred approach doesn\u2019t sound like a good idea to me. But I guess there\u2019s not much else to be said on this topic now.",
                "time": "2018-10-03 16:09:05",
                "index": 81,
                "user": "snicoll"
            },
            {
                "id": "5bb4e9b53844923661db7fcc",
                "text": "What I mean is that if I use `@PreAuthorize` for securing code I do own, and using the global config for endpoints that are owned by other projects is messy.",
                "time": "2018-10-03 16:09:25",
                "index": 82,
                "user": "springroll12"
            },
            {
                "id": "5bb4e9d6bbdc0b2505de60f9",
                "text": "How else would you do it? As @snicoll mentions you can\u2019t annotate methods on code you do not own",
                "time": "2018-10-03 16:09:58",
                "index": 83,
                "user": "edeandrea"
            },
            {
                "id": "5bb4e9dcef4afc4f281297ae",
                "text": "What Eric said",
                "time": "2018-10-03 16:10:04",
                "index": 84,
                "user": "snicoll"
            },
            {
                "id": "5bb4e9e01e23486b9381da2c",
                "text": "I'm not suggesting extending actuator endpoints anymore, just that since method security is not available, it would make sense to convert my existing `@PreAuthorize` usage to the global config.",
                "time": "2018-10-03 16:10:08",
                "index": 85,
                "user": "springroll12"
            },
            {
                "id": "5bb4ea015331811c2e440459",
                "text": "Actuator endpoint is one example of many where you can\u2019t use @Preauthorize",
                "time": "2018-10-03 16:10:41",
                "index": 86,
                "user": "snicoll"
            },
            {
                "id": "5bb4ea0eae7be94016f6e376",
                "text": "i think its perfectly fine to do however makes sense for you. We mix them - we annotate within our own codr that we own and use global config for things we don\u2019t own",
                "time": "2018-10-03 16:10:54",
                "index": 87,
                "user": "edeandrea"
            },
            {
                "id": "5bb4ea531e23486b9381de4e",
                "text": "@edeandrea  It just seems like a logical duplication of concerns to me somehow, but this is a nitpick obviously.",
                "time": "2018-10-03 16:12:03",
                "index": 88,
                "user": "springroll12"
            },
            {
                "id": "5bb4ea9a271506518dafeaf6",
                "text": "Also I always worry that some rule from the global config will interact with the annotated rules in some strange hidden way.",
                "time": "2018-10-03 16:13:14",
                "index": 89,
                "user": "springroll12"
            },
            {
                "id": "5bb4eab7a9be136b94edeecc",
                "text": "(aka more possibility for me to set it up incorrectly)",
                "time": "2018-10-03 16:13:43",
                "index": 90,
                "user": "springroll12"
            },
            {
                "id": "5bb4eac8bbdc0b2505de6838",
                "text": "anyway, sorry for monopolizing so much of your time, it seems like my options are clear now. Thanks for the help :)",
                "time": "2018-10-03 16:14:00",
                "index": 91,
                "user": "springroll12"
            },
            {
                "id": "5bb4eb02c7bf7c3662ae23e4",
                "text": "I don\u2019t think so. You don\u2019t define your entire security configuration in the annotations do you? You are just defining the fine-grained access control for accessing a particular operation. You set up global config which defines how to authenticate and any coarse-grained authorizations\u2026then you can narrow it down by operation. For me `@PreAuthorize` is used more than just in your controller layer to provide coarse-grained authorization on uri endpoints. `@PreAuthorize` is also used for finer-grained authorization within other layers of your application (i.e. service facade operations)",
                "time": "2018-10-03 16:14:58",
                "index": 92,
                "user": "edeandrea"
            },
            {
                "id": "5bb4eb5bc08b8b3067c8d0fe",
                "text": "If you need to provide a coarse-grained access control to _ALL_ endpoints, you would do that in the global config (i.e. user needs to have ROLE_A in order to access any endpoint). I wouldn\u2019t spread that around on each and every controller method. Thats more prone to someone introducing a new endpoint & forgetting to add it",
                "time": "2018-10-03 16:16:27",
                "index": 93,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 455,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c45adbc8ce4bb25b8e7325a",
                "text": "I just realized when migrating from Boot 1.x to 2.x a difference with big impact on properties binding",
                "time": "2019-01-21 11:32:12",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5c45ae9c0a491251e32f6252",
                "text": "When defining properties with lists from a YAML like:\n```\n\t@Bean\n\t@ConfigurationProperties(prefix = \"flyway\")\n\tpublic Properties flywayProperties() {\n\t\treturn new java.util.Properties();\n\t}\n  ```\n \n**Binding in Spring Boot 1.X is**:\n  \n Internal properties' Hashtable:\n```\n      \"locations\" -> LinkedHashMap  \n                         \"0\"  -> \"classpath:db/migration\"\n                         \"1\"  -> \"classpath:db/dev\"\n       \"enabled\"  -> false\n ```\n\n**Spring Boot 2.X**\n     \n Internal properties' Hashtable\n```\n       \"locations.0\" -> \"classpath:db/migration\"\n       \"locations.1\" -> \"classpath:db/dev\"\n       \"enabled\"     -> false\n ```\n\nIs this on purpose or a bug?",
                "time": "2019-01-21 11:35:56",
                "index": 1,
                "user": "nightswimmings"
            },
            {
                "id": "5c45b561f780a1521f45945e",
                "text": "@nightswimmings binding to Properties is really unusual and quite unexpected to be honest. The purpose of `@ConfigurationProperties` is to bind to a type structure (a POJO) not a generic type like this. ",
                "time": "2019-01-21 12:04:49",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c45b58335350772cf66c7b0",
                "text": "Binding to `Properties` is abusing the contract so getting that kind of changes can happen when you rely on low-level stuff like this",
                "time": "2019-01-21 12:05:23",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5c45cf3d35350772cf677fdd",
                "text": "I totally understand, its not a code of mine, I was just wondering whether this particular change was intended",
                "time": "2019-01-21 13:55:09",
                "index": 4,
                "user": "nightswimmings"
            },
            {
                "id": "5c45cf91cb47ec30007b55bd",
                "text": "It\u2019s an internal change of the binder. We\u2019ve harmonized how stuff are processed in 2.0 so I wouldn\u2019t call that an intended change but this looks more consistent to do that with regards to what we do with `.properties`",
                "time": "2019-01-21 13:56:33",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5c45cf9f1cb70a372a13a62b",
                "text": "(the properties format, not what you\u2019re binding to)",
                "time": "2019-01-21 13:56:47",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c45d19e9bfa375aab37f847",
                "text": "ok cool! then well adapt the codee",
                "time": "2019-01-21 14:05:18",
                "index": 7,
                "user": "nightswimmings"
            },
            {
                "id": "5c45d1a0dab15872cecc5356",
                "text": "thankss",
                "time": "2019-01-21 14:05:20",
                "index": 8,
                "user": "nightswimmings"
            },
            {
                "id": "5c45f7ff20b78635b65d007b",
                "text": "@nightswimmings by adapting the code, do you mean stopping binding to `Properties` ?",
                "time": "2019-01-21 16:49:03",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5c46098f831899452426b9c5",
                "text": "ill try that, but its an external library",
                "time": "2019-01-21 18:03:59",
                "index": 11,
                "user": "nightswimmings"
            },
            {
                "id": "5c4609977a0f4d5b19e5d7b7",
                "text": "I understand its the proper way",
                "time": "2019-01-21 18:04:07",
                "index": 12,
                "user": "nightswimmings"
            },
            {
                "id": "5c4609b1cb47ec30007ce2f2",
                "text": "Another issue I found migrating to boot 2.x is this:\n```\nrequired a single bean, but 2 were found:\n\t- org.springframework.jms.config.internalJmsListenerEndpointRegistry: defined by method 'defaultJmsListenerEndpointRegistry' in class path resource [org/springframework/jms/annotation/JmsBootstrapConfiguration.class]\n\t- tracingJmsListenerEndpointRegistry: defined by method 'tracingJmsListenerEndpointRegistry' in class path resource [org/springframework/cloud/sleuth/instrument/messaging/TraceMessagingAutoConfiguration$SleuthJmsConfiguration.class]\n```",
                "time": "2019-01-21 18:04:33",
                "index": 13,
                "user": "nightswimmings"
            },
            {
                "id": "5c460e55c45b986d1198dd9d",
                "text": "But I am not sure using @Qualifier(JmsListenerConfigUtils.JMS_LISTENER_ENDPOINT_REGISTRY_BEAN_NAME) for my dependency is a good practice or I should expect a single listener endpoint registry",
                "time": "2019-01-21 18:24:21",
                "index": 14,
                "user": "nightswimmings"
            },
            {
                "id": "5c46e3927a0f4d5b19eb29de",
                "text": "@nightswimmings that\u2019s a sleuth change in `Finchley` I guess. Weird they have created their own registry",
                "time": "2019-01-22 09:34:10",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5c46e66c0721b912a5bc8f0f",
                "text": "@nightswimmings I\u2019ve asked internally why they need a registry. I\u2019ll report here",
                "time": "2019-01-22 09:46:20",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5c46f418cb47ec3000829907",
                "text": "> @nightswimmings that\u2019s a sleuth change in `Finchley` I guess. Weird they have created their own registry\nI used Greenwich since I am migrating to Boot 2.1.2",
                "time": "2019-01-22 10:44:40",
                "index": 52,
                "user": "nightswimmings"
            },
            {
                "id": "5c46f42ef780a1521f4da0e1",
                "text": "Yeah sorry I mixed up the release train names",
                "time": "2019-01-22 10:45:02",
                "index": 53,
                "user": "snicoll"
            },
            {
                "id": "5c46f445f780a1521f4da159",
                "text": "No problem! Thanks for caring either way! Spring Boot is the best thing that ever happened to Java, and you guys do an amazing job ",
                "time": "2019-01-22 10:45:25",
                "index": 54,
                "user": "nightswimmings"
            },
            {
                "id": "5c46f45bf780a1521f4da1c0",
                "text": "Thanks for the heads up, this is important stuff to be aware of",
                "time": "2019-01-22 10:45:47",
                "index": 55,
                "user": "snicoll"
            },
            {
                "id": "5c46f58a7a0f4d5b19ebac90",
                "text": "@nightswimmings confirmed as being an issue. Could you please fill an issue https://github.com/spring-cloud/spring-cloud-sleuth - If you have a short sample that would be nice or at least a description of what you'redoing",
                "time": "2019-01-22 10:50:50",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5c46f9fd1cb70a372a1b2ef8",
                "text": "done! https://github.com/spring-cloud/spring-cloud-sleuth/issues/1189",
                "time": "2019-01-22 11:09:49",
                "index": 63,
                "user": "nightswimmings"
            },
            {
                "id": "5c46fa21746d4a677af19d0f",
                "text": "Thank you very much",
                "time": "2019-01-22 11:10:25",
                "index": 64,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 456,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be2c591bb06d73a9937b111",
                "text": "I\u2019m getting an error in the new ReactorClientHttpConnector after updating to spring boot 2.1.0\n\n\n```\n@Bean\n\tpublic WebClient createWebClient() throws SSLException {\n\t    SslContext sslContext = SslContextBuilder\n\t            .forClient()\n\t            .trustManager(InsecureTrustManagerFactory.INSTANCE)\n\t            .build();\n\n\t    ClientHttpConnector httpConnector = new ReactorClientHttpConnector(opt -> opt.sslContext(sslContext));\n\t    return WebClient.builder().clientConnector(httpConnector).build();\n\t}\n```",
                "time": "2018-11-07 10:59:29",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2c59a7a36913a9a04ffd1",
                "text": "is this deprecated?",
                "time": "2018-11-07 10:59:38",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2e535bb887874748ff54c",
                "text": "Brian",
                "time": "2018-11-07 13:14:29",
                "index": 142,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2e54fe8add80e63b5bafa",
                "text": "@bclozel it claims that the constrictor does not exist",
                "time": "2018-11-07 13:14:55",
                "index": 144,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2e598e8add80e63b5bce1",
                "text": "*constructor",
                "time": "2018-11-07 13:16:08",
                "index": 146,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2e5af7a36913a9a05db8d",
                "text": "@chad_d_stud_twitter that other constructor has been removed indeed, since it wasn't possible anymore with reactor netty's API",
                "time": "2018-11-07 13:16:31",
                "index": 148,
                "user": "bclozel"
            },
            {
                "id": "5be2e5d3f1b87534048ba459",
                "text": "I'm crafting the new version of your code snippet, hang on a minute",
                "time": "2018-11-07 13:17:07",
                "index": 149,
                "user": "bclozel"
            },
            {
                "id": "5be2e646e8add80e63b5c1a9",
                "text": "Thanks @bclozel",
                "time": "2018-11-07 13:19:02",
                "index": 159,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2e69f6b9822140df24386",
                "text": "@chad_d_stud_twitter \n```\n\t@Bean\n\tpublic WebClient createWebClient() throws SSLException {\n\t\tfinal SslContext sslContext = SslContextBuilder\n\t\t\t\t.forClient()\n\t\t\t\t.trustManager(InsecureTrustManagerFactory.INSTANCE)\n\t\t\t\t.build();\n\t\tHttpClient httpClient = HttpClient.create()\n\t\t\t\t.tcpConfiguration(tcp -> tcp.secure(ssl -> ssl.sslContext(sslContext)));\n\t\tClientHttpConnector httpConnector = new ReactorClientHttpConnector(httpClient);\n\t\treturn WebClient.builder().clientConnector(httpConnector).build();\n\t}\n```",
                "time": "2018-11-07 13:20:31",
                "index": 161,
                "user": "bclozel"
            },
            {
                "id": "5be2e6db7a36913a9a05e570",
                "text": "Oh. So the client object contains those details in the new version",
                "time": "2018-11-07 13:21:31",
                "index": 162,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be2e70a9600d10e6471b732",
                "text": "yeah from now on, reactor netty does not provide a builder anymore, and that's what we were relying on before. From now on, you need to provide your own `HttpClient` instance",
                "time": "2018-11-07 13:22:18",
                "index": 163,
                "user": "bclozel"
            },
            {
                "id": "5be2efc047217e07ffe5feee",
                "text": "Thanks",
                "time": "2018-11-07 13:59:28",
                "index": 164,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 457,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bc6d109ef4afc4f2887e8da",
                "text": "Hi. what\u2019s the best practice for the following scenario:\n\nwe have something like so /subcategory/{sub_id}\n\nHowever, how do we do a lookup of subcategories by main category id without running into the following  ambiguous /subcategory/{cat_id}?",
                "time": "2018-10-17 06:04:57",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bc6d2866e5a401c2d848126",
                "text": "If sub  at is the same Entity than cat than it should Not be a Problem",
                "time": "2018-10-17 06:11:18",
                "index": 1,
                "user": "gigo1980"
            },
            {
                "id": "5bc6d29782893a2f3bf43286",
                "text": "You can Show Child Elements there",
                "time": "2018-10-17 06:11:35",
                "index": 2,
                "user": "gigo1980"
            },
            {
                "id": "5bc6d2d3384492366150cf69",
                "text": "Read about \u201e Nested Sets\u201c from the Data structure and you can solve all tree Problems",
                "time": "2018-10-17 06:12:35",
                "index": 3,
                "user": "gigo1980"
            },
            {
                "id": "5bc6d32882893a2f3bf435db",
                "text": "If subscategory is the right Name, i am Not sure. You can solve this also with only /category/{entryID}",
                "time": "2018-10-17 06:14:00",
                "index": 4,
                "user": "gigo1980"
            },
            {
                "id": "5bc6d56af659e67772cb9e1d",
                "text": "/category/{entryID} returns all categories only but not sub catgories",
                "time": "2018-10-17 06:23:38",
                "index": 5,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bc6da2b1c100a4f299bab14",
                "text": "sadly sub category is in a separate table",
                "time": "2018-10-17 06:43:55",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bc6da3c6e5a401c2d84b457",
                "text": "doens\u2019t make sense why they want this since they\u2019ve implemented a tag feature in it too -_-",
                "time": "2018-10-17 06:44:12",
                "index": 7,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 458,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5cab2fc1c55bd14d35ac33dc",
                "text": "Hi, is it ok to disable maven exclusions support in spring-dependency-management plugin configuration? I'm not using dependency management exclusions myself, but I don't know if spring itself does.\nThe reason I'm asking is that with\n```\ndependencyManagement {\n    applyMavenExclusions = false\n    imports {\n        mavenBom \"io.spring.platform:platform-bom:${libs.spring_platform_version}\"\n    }\n}\n```\nproject refresh in IntelliJ is twice as fast, which on our huge project equates to a several minutes faster turnaround on a build script change.",
                "time": "2019-04-08 11:25:53",
                "index": 0,
                "user": "AlexCzar"
            },
            {
                "id": "5cab307cc55bd14d35ac396d",
                "text": "On a related note, if there are any suggestions on any other methods to improve the performance of gradle dependency resolution in IntelliJ with Spring Boot, I would be delighted to hear them :)",
                "time": "2019-04-08 11:29:00",
                "index": 1,
                "user": "AlexCzar"
            },
            {
                "id": "5cab3682a84e0c501af73721",
                "text": "Okay, since there is no answer to the previous question.\nCan gradle's own BOM support be used instead of spring-dependency-management plugin? I remember that there is some difference as to how gradle processes BOMs compared to maven or Spring's plugin.\nQuestion is if those differences are important enough to avoid using gradle's support for BOMs?",
                "time": "2019-04-08 11:54:42",
                "index": 3,
                "user": "AlexCzar"
            },
            {
                "id": "5cab3c5620fbe911ee7e3e97",
                "text": "@AlexCzar If I'm not mistaken, the platform BOM and the Spring Boot BOM both have exclusions. Disabling them will... disable them. This might not cause issues in your case, it all depends on which dependencies you rely on.",
                "time": "2019-04-08 12:19:34",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5cab3cbd93fb4a7dc2f42edf",
                "text": "@AlexCzar Again not a specialist, but I think Maven and Gradle define versions in different ways. One favors the version definition that's closest to the current POM, the other more parameters and favors more recent versions when possible ",
                "time": "2019-04-08 12:21:17",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5cab3cef016a930a45837dd4",
                "text": "Darn it :( I fear in the end I'll just have to manually resolve all dependencies spring bom provides and put them into a generated map to be used by our apps. It'll be less time-consuming long term than wasting several minutes each time a gradle config chagnes :(",
                "time": "2019-04-08 12:22:07",
                "index": 6,
                "user": "AlexCzar"
            },
            {
                "id": "5cab3dd6016a930a45838205",
                "text": "if you've got something that qualifies as a sample, then submitting that as a performance issue would be a good idea. Again, I'm not super familiar with that part so I don't know if we have much space for optimizations there.",
                "time": "2019-04-08 12:25:58",
                "index": 7,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 459,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cdda442d522695bba5448b2",
                "text": "Hi, I'm having problems with Websockets (SockJS + STOMP) after I deployed on a Kubernetes cluster. I can send my CONNECT command but when I try to send a Query (SEND command) I'm having `org.springframework.messaging.simp.annotation.support.MissingSessionUserException: No \"user\" header in message` \nThe same code works on local environment.",
                "time": "2019-05-16 17:56:18",
                "index": 0,
                "user": "wathek"
            },
            {
                "id": "5cdda4800ac9852a95eb2e61",
                "text": "any help with that ?",
                "time": "2019-05-16 17:57:20",
                "index": 1,
                "user": "wathek"
            },
            {
                "id": "5cddbf1775d9a575a6f25e18",
                "text": "@wathek Hey kubernetes load balancer has a timeout of 30s by default. You need to update this in the LoadBalancer. GKE has a thread on this you can find on google website... look more into it. Honestly i dropped Websockets on Kubernetes because of this issue. As increasing the Timeout will have some repercussions",
                "time": "2019-05-16 19:50:47",
                "index": 2,
                "user": "rshibley"
            },
            {
                "id": "5cdeac779404bf2aed608841",
                "text": "@rshibley oh! Actually I'm using OpenShift which is basically Kubernetes. And according to their documentation Websockets are supported. But I'm having that exception and I don't know where to look",
                "time": "2019-05-17 12:43:35",
                "index": 20,
                "user": "wathek"
            }
        ]
    },
    {
        "id": 460,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5ce4232e9d64e537bce8f2b3",
                "text": "Hi guys, how spring boot internally work,\n\ncan any one exaplain..??",
                "time": "2019-05-21 16:11:26",
                "index": 0,
                "user": "arifk2"
            },
            {
                "id": "5ce42a50d22ba766a2d6f71a",
                "text": "@arifk2 https://spring.io/guides",
                "time": "2019-05-21 16:41:52",
                "index": 1,
                "user": "jjstreet"
            },
            {
                "id": "5ce43b259d64e537bce9a8e6",
                "text": "@jjstreet \n\nI know this link , but as in spring framework,\n\nrequest-> handlermapping-->intercepter->controller-> return view object to view resolver-> then view render.\n\n\nLike this i want to know how spring-boot works internally.",
                "time": "2019-05-21 17:53:41",
                "index": 2,
                "user": "arifk2"
            },
            {
                "id": "5ce4498cecdf942b4c20cd34",
                "text": "@arifk2, what you described is just the `web` part of Spring. which is what also Spring Boot utilizes behind the scenes to create a web-based application.",
                "time": "2019-05-21 18:55:08",
                "index": 4,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 461,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e2041137148837898844e6b",
                "text": "WTF http://repo.spring.io/libs-snapshot/ro/isdc/wro4j/gradle/wro4j-gradle-plugin/1.8.0.Beta4/wro4j-gradle-plugin-1.8.0.Beta4.jar cannot import Projects anymore!?",
                "time": "2020-01-16 10:55:15",
                "index": 0,
                "user": "awilhelmer"
            },
            {
                "id": "5e20412e71488378988450b8",
                "text": "20min ago it worked ... ",
                "time": "2020-01-16 10:55:42",
                "index": 1,
                "user": "awilhelmer"
            },
            {
                "id": "5e2045d20dbd9379ed45e4a8",
                "text": "use https?",
                "time": "2020-01-16 11:15:30",
                "index": 2,
                "user": "IEnoobong"
            },
            {
                "id": "5e2049aa20d0f078a6896cf5",
                "text": "apply plugin: 'wro4j' <--- how? ",
                "time": "2020-01-16 11:31:54",
                "index": 3,
                "user": "awilhelmer"
            },
            {
                "id": "5e205992ea55e3623e63f556",
                "text": "@awilhelmer nothing to do with the plugin but rather the repositories you\u2019ve defined in your build. Check the Gradle forum for more help on that",
                "time": "2020-01-16 12:39:46",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5e2059a93ea53f0f6633525f",
                "text": "repo.spring.io does not service requests on `http` anymore",
                "time": "2020-01-16 12:40:09",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 462,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d4a9123c87a0963e72938c9",
                "text": "Hi, can annotations like Service, Component be annotated on interfaces and classes which implement those interfaces be automatically registered?",
                "time": "2019-08-07 08:51:47",
                "index": 0,
                "user": "t0920008899"
            },
            {
                "id": "5d4a914d2612bb718c24722e",
                "text": "@t0920008899 Yes, but you should annotate implementations.",
                "time": "2019-08-07 08:52:29",
                "index": 1,
                "user": "Puspendert"
            },
            {
                "id": "5d4a9173950718247795a885",
                "text": "So I need to annotate both interface and implementation class?",
                "time": "2019-08-07 08:53:07",
                "index": 2,
                "user": "t0920008899"
            },
            {
                "id": "5d4a91892612bb718c2473b2",
                "text": "No, only the implementation",
                "time": "2019-08-07 08:53:29",
                "index": 3,
                "user": "Puspendert"
            },
            {
                "id": "5d4a91a11db76d0ffe8c13f6",
                "text": "Ok, Thanks a lot.",
                "time": "2019-08-07 08:53:53",
                "index": 4,
                "user": "t0920008899"
            },
            {
                "id": "5d4a91abbeba830fff4cd098",
                "text": "np",
                "time": "2019-08-07 08:54:03",
                "index": 5,
                "user": "Puspendert"
            }
        ]
    },
    {
        "id": 463,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eabd16cadb0ec5c2bda12d0",
                "text": "`@Component class Foo: Bar, Bar2` - can I exclude `Bar2` from list of interfaces spring would autowire this bean for? Is there an annotation for it?",
                "time": "2020-05-01 07:36:12",
                "index": 0,
                "user": "jtheuer"
            },
            {
                "id": "5eabe0555cd4fe50a3e1ed76",
                "text": "@jtheuer I don't think so. You'd need to qualify either the bean you do want to be used, or the autowire site",
                "time": "2020-05-01 08:39:49",
                "index": 2,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 464,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c6f324185b7eb45690de175",
                "text": "Good Night for All,\n\nI'm migrating my project Spring to Spring Boot. But I'm faced with a problem, we have a reverse proxy using apache and mod_cluster. In actual version we declare a Listerner in the server.xml.\n\n<Listener className=\"org.jboss.modcluster.container.catalina.standalone.ModClusterListener\" advertise=\"false\" proxyList=\"${proxyList}\" />\n\nI put it like a Spring boot application.\n\n\n    private Connector ajpConnector() {\n        Connector connector = new Connector(\"AJP/1.3\");\n        connector.setPort(8009);\n        connector.setRedirectPort(8443);\n        return connector;\n    }\n\n\n    private ModClusterListener modCluster() {\n        ModClusterListener modClusterListener = new ModClusterListener();\n        modClusterListener.setAdvertise(false);\n        modClusterListener.addProxy(\"10.1.1.34\", 6666);\n        modClusterListener.setProxyURL(proxyUrl);\n\n        return modClusterListener;\n    }\n\n    @Bean\n    public WebServerFactoryCustomizer<TomcatServletWebServerFactory> servletContainer() {\n        return server -> {\n            if (server != null) {\n                server.addContextLifecycleListeners(modCluster());\n                server.addAdditionalTomcatConnectors(ajpConnector());\n            }\n        };\n    }\n\nBut it don't work, the ModClusterListener want a LifecycleEvent of type Sever, but it never happen. Can anyone help me?",
                "time": "2019-02-21 23:20:33",
                "index": 0,
                "user": "hdutra"
            },
            {
                "id": "5c6fe2cbc4da4a11f5989b97",
                "text": "@hdutra From what you've said, it sounds like `ModClusterListener` needs to be added to Tomcat's `Server` but the method you've used will add it to the `Context`. You could use a context customizer and navigate up from the `Context` till you find the `Server` or you could use a `TomcatServletWebServerFactory` sub-class instead:\n\n```\n\t@Bean\n\tpublic TomcatServletWebServerFactory tomcatFactory() {\n\t\treturn new TomcatServletWebServerFactory() {\n\n\t\t\t@Override\n\t\t\tprotected TomcatWebServer getTomcatWebServer(Tomcat tomcat) {\n\t\t\t\ttomcat.getServer().addLifecycleListener(modCluster());\n\t\t\t\treturn new TomcatWebServer(tomcat);\n\t\t\t}\n\n\t\t};\n\t}\n```",
                "time": "2019-02-22 11:53:47",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5c6fef9cb6c74f1e2e92ca8e",
                "text": "@wilkinsona  It worked! Thank you a lot!",
                "time": "2019-02-22 12:48:28",
                "index": 5,
                "user": "hdutra"
            }
        ]
    },
    {
        "id": 465,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e271bd79797b560f2c5aa2c",
                "text": "Hey @everyone I truly need help with this simple code sample that I cannot see a problem with.",
                "time": "2020-01-21 15:42:15",
                "index": 0,
                "user": "sonAndrew"
            },
            {
                "id": "5e271bd73b40ea043c791da7",
                "text": "[![Screen Shot 2020-01-21 at 10.30.58 AM.png](https://files.gitter.im/spring-projects/spring-boot/C7Y2/thumb/Screen-Shot-2020-01-21-at-10.30.58-AM.png)](https://files.gitter.im/spring-projects/spring-boot/C7Y2/Screen-Shot-2020-01-21-at-10.30.58-AM.png)",
                "time": "2020-01-21 15:42:15",
                "index": 1,
                "user": "sonAndrew"
            },
            {
                "id": "5e271be6075a19397ce08aab",
                "text": "I got this error",
                "time": "2020-01-21 15:42:30",
                "index": 2,
                "user": "sonAndrew"
            },
            {
                "id": "5e271beb62d24d60f1fdaa6f",
                "text": "[![Screen Shot 2020-01-21 at 10.30.44 AM.png](https://files.gitter.im/spring-projects/spring-boot/lMCk/thumb/Screen-Shot-2020-01-21-at-10.30.44-AM.png)](https://files.gitter.im/spring-projects/spring-boot/lMCk/Screen-Shot-2020-01-21-at-10.30.44-AM.png)",
                "time": "2020-01-21 15:42:35",
                "index": 3,
                "user": "sonAndrew"
            },
            {
                "id": "5e271d693b40ea043c792900",
                "text": "@sonAndrew can you try replacing conversion `d` with `f` and probably change `howMany` type from int to float/double?",
                "time": "2020-01-21 15:48:57",
                "index": 4,
                "user": "boda2004"
            },
            {
                "id": "5e271d856b64bc54d128094e",
                "text": "also i suppose it's about java in general and not spring-boot specific :)",
                "time": "2020-01-21 15:49:25",
                "index": 5,
                "user": "boda2004"
            },
            {
                "id": "5e271ded075a19397ce09aca",
                "text": "Hey @boda2004  the variable howMany is supposed to only hold an integer",
                "time": "2020-01-21 15:51:09",
                "index": 6,
                "user": "sonAndrew"
            },
            {
                "id": "5e271e16342e1054d05bcef3",
                "text": "but why you try to format integer with two digits after dot?",
                "time": "2020-01-21 15:51:50",
                "index": 7,
                "user": "boda2004"
            },
            {
                "id": "5e271e519797b560f2c5bdf9",
                "text": "LMFAO!!! THANK YOU SO MUCH!!!",
                "time": "2020-01-21 15:52:49",
                "index": 8,
                "user": "sonAndrew"
            },
            {
                "id": "5e271e6a6b64bc54d1280f85",
                "text": "That was the problem I didn't realize it was their.",
                "time": "2020-01-21 15:53:14",
                "index": 9,
                "user": "sonAndrew"
            },
            {
                "id": "5e271e7169a7b51d4d58fc72",
                "text": "A second pair of eyes can help a lot.",
                "time": "2020-01-21 15:53:21",
                "index": 10,
                "user": "miva2"
            },
            {
                "id": "5e271f6a62d24d60f1fdc618",
                "text": "Yes and I thank you kind Sir. \u3042\u308a\u304c\u3068\u3054\u3055\u3044\u307e\u3059",
                "time": "2020-01-21 15:57:30",
                "index": 11,
                "user": "sonAndrew"
            }
        ]
    },
    {
        "id": 466,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c48210a0a491251e33f3c80",
                "text": "Hi guys, had a pretty basic question. I have a few different Configuration classes, is it okay if I specify the same three @PropertySource() on all of them? One's a default .props file, and the other two override certain values. (Not sure in which order Spring initializes Configs, and wanted to ensure no matter which order values from all three configs are populated in the environment)",
                "time": "2019-01-23 08:08:42",
                "index": 0,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c48214f0721b912a5c4a68a",
                "text": "Using `@PropertySource` is not really recommended with Spring Boot",
                "time": "2019-01-23 08:09:51",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5c48216e0721b912a5c4a749",
                "text": "oh!",
                "time": "2019-01-23 08:10:22",
                "index": 4,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c482176cb47ec30008a72f6",
                "text": "Then what do you recommend? Is it documented somewhere?",
                "time": "2019-01-23 08:10:30",
                "index": 5,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c48219d83189945243462ab",
                "text": "Both the order in which config is initialized and the recommended way are documented",
                "time": "2019-01-23 08:11:09",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c4821ea20b78635b66b2ac2",
                "text": "I do see the order here: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html",
                "time": "2019-01-23 08:12:26",
                "index": 11,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c4821f1c45b986d11a66cf2",
                "text": "But nothing recommending against its use?",
                "time": "2019-01-23 08:12:33",
                "index": 12,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c48221595e17b4525972b96",
                "text": "You are correct, we can be a bit more loud about that there",
                "time": "2019-01-23 08:13:09",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5c4822309bfa375aab4733fa",
                "text": "So what would you recommend I use?",
                "time": "2019-01-23 08:13:36",
                "index": 14,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c48223a0a491251e33f41cd",
                "text": "s/I/we",
                "time": "2019-01-23 08:13:46",
                "index": 15,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c4822428ce4bb25b8f744e3",
                "text": "I was looking for the link. Here it is: https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-customize-the-environment-or-application-context",
                "time": "2019-01-23 08:13:54",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c48225ddab15872cedb672f",
                "text": "> While using @PropertySource on your @SpringBootApplication may seem to be a convenient and easy way to load a custom resource in the Environment, we do not recommend it, because Spring Boot prepares the Environment before the ApplicationContext is refreshed. Any key defined with @PropertySource is loaded too late to have any effect on auto-configuration.",
                "time": "2019-01-23 08:14:21",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5c4823c120b78635b66b36f3",
                "text": "ohk",
                "time": "2019-01-23 08:20:17",
                "index": 18,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c4823de35350772cf76ae74",
                "text": "My use case is basically just loading a bunch of key value pairs from those props files, and no auto-configuration depends on those loaded values",
                "time": "2019-01-23 08:20:46",
                "index": 19,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c4823eadab15872cedb6fa0",
                "text": "Wouldn't @PropertySource suffice for my case?",
                "time": "2019-01-23 08:20:58",
                "index": 20,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c48240620b78635b66b37e6",
                "text": "There are a bunch of things that will not stick. It works but it\u2019s not well integrated",
                "time": "2019-01-23 08:21:26",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5c4824251cb70a372a22e932",
                "text": "For instance we fire an `EnvironmmentPreparedEvent` once we\u2019ve prepared the environment and before creating the context. Your keys won\u2019t be there so anything relying on the event will not see them",
                "time": "2019-01-23 08:21:57",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5c48243fdab15872cedb7122",
                "text": "Again, not recommended but supported. As long as you\u2019re aware of this, you\u2019re free to use this mechanism. We don\u2019t recommend it because it can lead to subtle problems",
                "time": "2019-01-23 08:22:23",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5c482645c45b986d11a68c48",
                "text": "@snicoll cool, thank you so much!",
                "time": "2019-01-23 08:31:01",
                "index": 27,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c482a82f780a1521f559fa0",
                "text": "@snicoll One last question, sorry to bother you. I wanted to select certain properties files based on variables I passed in via the command line. Like `env=prod, server=us-w`. Can I access these in the `EnvironmentPostProcessor`? Like with @PropertySource I was planning something like:`@PropertySource('classpath:config/${env}/${server}/config.properties')`",
                "time": "2019-01-23 08:49:06",
                "index": 29,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c482a9adab15872cedb9a1b",
                "text": "Yes",
                "time": "2019-01-23 08:49:30",
                "index": 30,
                "user": "snicoll"
            },
            {
                "id": "5c482c40f780a1521f55aa80",
                "text": "cool, thanks again",
                "time": "2019-01-23 08:56:32",
                "index": 31,
                "user": "Anmol78840097_twitter"
            },
            {
                "id": "5c482dee35350772cf76eec8",
                "text": "You didn\u2019t bother me btw",
                "time": "2019-01-23 09:03:42",
                "index": 32,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 467,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c793c162ca5ec54745d1238",
                "text": "Where can I find Springs default logback config?",
                "time": "2019-03-01 14:05:10",
                "index": 0,
                "user": "hochas"
            },
            {
                "id": "5c793cbbb1503b3d7061df29",
                "text": "https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot/src/main/resources/org/springframework/boot/logging/logback",
                "time": "2019-03-01 14:07:55",
                "index": 1,
                "user": "nbenjamin"
            },
            {
                "id": "5c793e01e8ea1437379554b6",
                "text": "@nbenjamin thank you!",
                "time": "2019-03-01 14:13:21",
                "index": 2,
                "user": "hochas"
            }
        ]
    },
    {
        "id": 468,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8f781b11227d711d19e5b5",
                "text": "Hey guys, I am wondering if it possible to configure a read/connection timeout for the Ldap health check that is automatically setup when configuing an LDAP context source via configuration properties",
                "time": "2018-09-05 06:30:51",
                "index": 0,
                "user": "dsteegen"
            },
            {
                "id": "5b8f7833ac25fd11b5e24efe",
                "text": "I checked the documentation but could not find a property for specifying a timeout value",
                "time": "2018-09-05 06:31:15",
                "index": 1,
                "user": "dsteegen"
            },
            {
                "id": "5b8f786760f9ee7aa4dd8c43",
                "text": "Currently we are experiencing some issues with out authorization server as the LDAP we are connecting to is sometimes not so responsive",
                "time": "2018-09-05 06:32:07",
                "index": 2,
                "user": "dsteegen"
            },
            {
                "id": "5b8f7873c9500b4bab84ad13",
                "text": "therefor we want to increase the read/connection timeout of the ldap connection",
                "time": "2018-09-05 06:32:19",
                "index": 3,
                "user": "dsteegen"
            },
            {
                "id": "5b8f7892ac25fd11b5e250eb",
                "text": "If someone could point me in the correct direction, that would be nice :)",
                "time": "2018-09-05 06:32:50",
                "index": 4,
                "user": "dsteegen"
            },
            {
                "id": "5b8f79bf11227d711d19ee15",
                "text": "are you using xml config or java",
                "time": "2018-09-05 06:37:51",
                "index": 5,
                "user": "onlysolace"
            },
            {
                "id": "5b8f7a18e5b40332ab487d7d",
                "text": "@dsteegen you can write your own health check indicator using spring boot for custom checks , can follow this link https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#_writing_custom_healthindicators",
                "time": "2018-09-05 06:39:20",
                "index": 6,
                "user": "abecedarius"
            },
            {
                "id": "5b8f7aefc9500b4bab84be14",
                "text": "I was about to say you could configure your own `LdapTemplate` but setting a timeout there doesn\u2019t seem straightforward either",
                "time": "2018-09-05 06:42:55",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5b8f7b1860f9ee7aa4dd9c7f",
                "text": "@onlysolace I am using the standard spring boot properties for configuring an `LdapContextSource` which I then use in an `LdapTemplate`",
                "time": "2018-09-05 06:43:36",
                "index": 10,
                "user": "dsteegen"
            },
            {
                "id": "5b8f7b2af5402f32aaddac27",
                "text": "There is a #spring-ldap channel, I\u2019d ask that",
                "time": "2018-09-05 06:43:54",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5b8f7b38f5402f32aaddac7f",
                "text": "the bottom line is whatever `LdapTemplate` configured in the context will be used by the health indicator",
                "time": "2018-09-05 06:44:08",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5b8f7b5411b41f69dbc1d25b",
                "text": "Perhaps you should reconsider that part of the health check as well if the service isn\u2019t reliable",
                "time": "2018-09-05 06:44:36",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5b8f7b8711227d711d19f8b3",
                "text": "alright, thanks for the suggestions",
                "time": "2018-09-05 06:45:27",
                "index": 14,
                "user": "dsteegen"
            },
            {
                "id": "5b8f7b9360f9ee7aa4dd9e47",
                "text": "I will also check in the ldap related channel",
                "time": "2018-09-05 06:45:39",
                "index": 15,
                "user": "dsteegen"
            },
            {
                "id": "5b8f8e8d60f9ee7aa4de1928",
                "text": "fyi, regarding my question about ldap connection timeouts; it can be configured by adding the following to your yaml config file\n```\nspring:\n  ldap:\n    urls: enter-your-ldap-url-here\n    username: enter-ldap-username-here\n    password: enter-ldap-password-here\n    base-environment:\n      com.sun.jndi.ldap.connect.timeout: 30000\n      com.sun.jndi.ldap.read.timeout: 30000\n```",
                "time": "2018-09-05 08:06:37",
                "index": 23,
                "user": "dsteegen"
            },
            {
                "id": "5b8f8eebf5402f32aade28cc",
                "text": ":+1: ",
                "time": "2018-09-05 08:08:11",
                "index": 24,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 469,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df39440c6ce6027ebb449a5",
                "text": "HI Everyone\n\nI wonder if this is the right channel.\nThis has to do with the Spring WebFlux.\nI want to build a reactive app in which\n\nI define an Endpoint to get Regions in a controller, one app.\nI define an Endpoint to get Countries from a Region in a controller, one app.\n\nThen I would like to build another app in which\nRead all Countries and with each one of them extracts its associated region name.\n\nI need guidance here.\n\n\n\n\n\n\n\n",
                "time": "2019-12-13 13:38:08",
                "index": 0,
                "user": "cortizqgithub"
            },
            {
                "id": "5df394be7d382b523f6e5215",
                "text": " @cortizqgithub Sounds more like a reactor problem in general \u2026 but yes. What's your problem?",
                "time": "2019-12-13 13:40:14",
                "index": 4,
                "user": "kschlesselmann"
            },
            {
                "id": "5df40712e7265623013c7a81",
                "text": "@kschlesselmann It is not kind of  a problem, it is kind of learning/knowing how to do so?",
                "time": "2019-12-13 21:48:02",
                "index": 10,
                "user": "cortizqgithub"
            },
            {
                "id": "5df60ca1ac14cc652c88d2a3",
                "text": "@cortizqgithub OK \u2026 if it's another service calling both endpoints have a look at `WebClient` and `bodyToFlux`. Then you'd call both endpoints using `application/stream+json` to fetch the response as a stream. Depending on your desired output you'd then to something along `countryClient.fetchAll().flatMap { regionClient.forCountry(it) }` or maybe combine each country with its region using `zipWith`. It really depends then ;-)",
                "time": "2019-12-15 10:36:17",
                "index": 20,
                "user": "kschlesselmann"
            },
            {
                "id": "5df60ce1e47fb31eb7b65732",
                "text": "@cortizqgithub Oh, and I'm using kotlin syntax here. If you're using Java you have to adjust that :-)",
                "time": "2019-12-15 10:37:21",
                "index": 21,
                "user": "kschlesselmann"
            },
            {
                "id": "5df60d080616d6515e418462",
                "text": "@cortizqgithub And in order to request as a stream your country service has to respond with `Flux<Country>` from the controller ;-)",
                "time": "2019-12-15 10:38:00",
                "index": 22,
                "user": "kschlesselmann"
            },
            {
                "id": "5df78438e47fb31eb7c0728a",
                "text": "@kschlesselmann  Thanks. This will help me to locate the right operators to do in my Region/Country Study  topic.... but you mention it has to be application/stream+json.... but what if those were existing endpoints(legacy)....",
                "time": "2019-12-16 13:18:48",
                "index": 58,
                "user": "cortizqgithub"
            },
            {
                "id": "5df87be1dbf24d0bec037abe",
                "text": "@cortizqgithub If so you'd have to take what's there (no fancy streaming of responses instead more traditional GET and then start from a `List<Country>` in your `WebClient`)",
                "time": "2019-12-17 06:55:29",
                "index": 67,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 470,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ec181c613878c30b585c0cc",
                "text": "Hi booters,\nA basic question about dynamic beans creation. I have these beans:\n```\n    @Bean\n    public DirectChannel updateProfileChannel() {\n        return MessageChannels\n                .direct( UPDATE_PROFILE_CHANNEL )\n                .get();\n    }\n\n    @Bean\n    public DirectChannel mailingChannel() {\n        return MessageChannels\n                .direct( MAILING_CHANNEL )\n                .get();\n    }\n\n    @Bean\n    public DirectChannel notificationChannel() {\n        return MessageChannels\n                .direct( NOTIFICATION_CHANNEL )\n                .get();\n    }\n    // many other beans of same type\n```\nWhat's the simplest way to create those beans dynamically? Something like:\n```\n public ... createDirectChannelBeans(List<String> channelNames){\n       for each channelName create a DirectChannel  bean\n}\n```\nThanks",
                "time": "2020-05-17 18:26:14",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5ec257af347a503172f9e26a",
                "text": "@akuma8 `BeanDefinitionRegistryPostProcessor`",
                "time": "2020-05-18 09:38:55",
                "index": 1,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 471,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e04dcba44e1fb33f630484f",
                "text": "hello all! Could you explain to me a mechanism of resolving application.(properties|yaml) when application is divided into modules (java 8, gradle). My issue is that main (runnable) module misses all properties from module it depends.",
                "time": "2019-12-26 16:15:54",
                "index": 0,
                "user": "bvn13"
            },
            {
                "id": "5e04eb55d2dadb3893810f3f",
                "text": "@bvn13 modules shouldn\u2019t have configuration. In particular, do note we don\u2019t merge multiple `application.properties` so that\u2019s probably what you\u2019re seeing. What is the use case?",
                "time": "2019-12-26 17:18:13",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5e04edab260751301c13da7e",
                "text": "@snicoll my use case is: several core modules and several applications. Core modules are intended to be independent to others. They must encapsulate processing properties.",
                "time": "2019-12-26 17:28:11",
                "index": 4,
                "user": "bvn13"
            },
            {
                "id": "5e04f85ed2dadb389381608c",
                "text": "@snicoll another case is about i18n. Each module may have each own modulename-messages_XX.properties to translate text messages contained into it. But runnable module may have its own ones. And where to specify spring.messages.basename? I understand I can create a ResourseBundleMessageSource bean and populate its basename property correctly. And I also can specify all basenames of dependent modules into application.property of runnable app... But it seems to be a dirty approach... Don't you think that?",
                "time": "2019-12-26 18:13:50",
                "index": 5,
                "user": "bvn13"
            },
            {
                "id": "5e05bca7833c373f4d64b9b3",
                "text": "I don\u2019t think hardcoding properties in a module is a good idea. If you really need to do that, use an `EnvironmentPostProcessor` (see the doc)",
                "time": "2019-12-27 08:11:19",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5e05c1b807a1a67d1d6884e7",
                "text": "@snicoll I've found an article about the ways to use modules' properties http://coders-kitchen.com/2016/11/01/spring-boot-multi-module-projects-adding-module-specific-property-files/ - how do you think about it? The author have mentioned the main reason to place properties right inside modules - the easier to separate the module into microservice.",
                "time": "2019-12-27 08:32:56",
                "index": 7,
                "user": "bvn13"
            },
            {
                "id": "5e05c22cb4ed68096ee72e95",
                "text": "a module that participates in an application should not provide application-level configuration IMO but each case can be different. Using `@PropertySource` is not really recommended either, see the doc. I\u2019ve already shared a link to a way to tune the environment",
                "time": "2019-12-27 08:34:52",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5e05c3ccd31dba03fdb211e3",
                "text": "@snicoll Could you explain your opinion of not to use `@PropertySource`? Seems I overlooked it...",
                "time": "2019-12-27 08:41:48",
                "index": 9,
                "user": "bvn13"
            },
            {
                "id": "5e05c405833c373f4d64ec12",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config",
                "time": "2019-12-27 08:42:45",
                "index": 10,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 472,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e9768035706b414e1cb9b43",
                "text": "I have a quick question about JSR-303 validations with JPA entities. Is this something that one can expect to happen by default when persisting an entity? Or is this there something that needs to be done explicitly to enable it? I am trying to do this in a `@DataJpaTest` and the validations don't seem to be kicking in. I am using boot version `2.2.6.RELEASE`",
                "time": "2020-04-15 20:01:07",
                "index": 0,
                "user": "premanandc"
            },
            {
                "id": "5e9768828e987f3a5e1a08c5",
                "text": "This happens by default on controller arguments in spring MVC",
                "time": "2020-04-15 20:03:14",
                "index": 1,
                "user": "premanandc"
            },
            {
                "id": "5e98413da9ca1862063d4126",
                "text": "My comment above about enforcing JSR-303 validations in a `@DataJpaTest` does work as expected when I replace it with the `@SpringBootTest` annotation. So I guess this is as designed?",
                "time": "2020-04-16 11:27:57",
                "index": 6,
                "user": "premanandc"
            },
            {
                "id": "5e9846a4a1284c4f2092a953",
                "text": "No `ValidationAutoConfiguration` with `@DataJpaTest` indeed. I am not 100% sure that\u2019s by design",
                "time": "2020-04-16 11:51:00",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5e984916a412254f218b2172",
                "text": "The JSR-303 validations are applied when attempting to commit the transaction. Since transactions are rolled back by default in a `@DataJpaTest` these validations aren't applied",
                "time": "2020-04-16 12:01:26",
                "index": 8,
                "user": "premanandc"
            },
            {
                "id": "5e9849340480c128efbfa378",
                "text": "Ah there\u2019s that too for sure",
                "time": "2020-04-16 12:01:56",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5e9849455706b414e1ce84cd",
                "text": "That\u2019s  why you need to use `TestEntityManager` for testing that stuff",
                "time": "2020-04-16 12:02:13",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5e98495263e7b73a5fdcb1c6",
                "text": "Looking how to override transaction rollback behavior for an individual test case in a class annotated with `@DtaJpaTest` now :)",
                "time": "2020-04-16 12:02:26",
                "index": 11,
                "user": "premanandc"
            },
            {
                "id": "5e984953d240da2433764b6e",
                "text": "But I don\u2019t see the validation auto-config in the list so I am a bit confused right now",
                "time": "2020-04-16 12:02:27",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5e98496d2ff88975b4231d6b",
                "text": "`@Rollback`",
                "time": "2020-04-16 12:02:53",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5e9849c5a9ca1862063d616a",
                "text": "That did it! Adding `@Rollback(false)` worked with `@DataJpaTest`",
                "time": "2020-04-16 12:04:21",
                "index": 14,
                "user": "premanandc"
            },
            {
                "id": "5e984aa4a1284c4f2092b672",
                "text": "Well... spoke too soon.. the commit call only happens during teardown. So my test still fails :)\n```\n@DataJpaTest\npublic class CityTests {\n    @Autowired\n    private CityRepository repository;\n\n    @Test\n    @Rollback(false)\n    void shouldNotSave() {\n        City city = new City(\"Test\");\n        assertThrows(TransactionSystemException.class, () -> repository.save(city));\n    }\n}\n```",
                "time": "2020-04-16 12:08:04",
                "index": 15,
                "user": "premanandc"
            },
            {
                "id": "5e984ae88e987f3a5e1d0062",
                "text": "As I\u2019ve indicated already, you need to use `TestEntityManager` for that",
                "time": "2020-04-16 12:09:12",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5e984b1bd65bcf75b5c55be3",
                "text": "You mean I should call `testEntityManager.persist(...)` instead of `respository.save(...)`?",
                "time": "2020-04-16 12:10:03",
                "index": 17,
                "user": "premanandc"
            },
            {
                "id": "5e984b1da9ca1862063d66ac",
                "text": "or a requires new  transaction if you really want to go through the repo",
                "time": "2020-04-16 12:10:05",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5e98ada3e920022432ac36c0",
                "text": "@snicoll I got it to work. One way is to use the `TestEntityManager` and the flush methods on it (like you mentioned). Another way is to extend from `JpaRepository` which has a `saveAndFlush` method. The JSR-303 validations are checked before flushing to the DB. So both ways work. I used the `TestEntityManager` method here because I am not testing persistence right now. Thanks for your pointer!",
                "time": "2020-04-16 19:10:27",
                "index": 44,
                "user": "premanandc"
            },
            {
                "id": "5e99600074bfed5a1b411bf8",
                "text": "Sweet, thanks for letting us know :) ",
                "time": "2020-04-17 07:51:28",
                "index": 45,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 473,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dfa43add2dadb38933ae112",
                "text": "anyone have any suggestions on why tomcat may not startup when app is running in docker in kubernetes env?",
                "time": "2019-12-18 15:20:13",
                "index": 0,
                "user": "nguyennv84"
            },
            {
                "id": "5dfa43f744e1fb33f6ea87ae",
                "text": "@nguyennv84 can you provide some details (logs, errors...)",
                "time": "2019-12-18 15:21:27",
                "index": 1,
                "user": "emont01"
            },
            {
                "id": "5dfa44f949314a1d459d506c",
                "text": "@emont01 : Basically you see the same logs when running locally and running on Kubernetes except that when I run it locally the TomcatEmbeddedServletContainer would log that tomcat is initialised and stareted, whereas in Kubernetes it doesn\u2019t show this. The pod shows as running but nothing is accessible as tomcat hasn\u2019t started up.",
                "time": "2019-12-18 15:25:45",
                "index": 2,
                "user": "nguyennv84"
            },
            {
                "id": "5dfa456bc62fdf33f7131852",
                "text": "It\u2019s to do with an issue with a dependency jar that was added to project but trying to figure out what could cause this issue of tomcat not starting up to try and resolve it in that dependency jar. ",
                "time": "2019-12-18 15:27:39",
                "index": 3,
                "user": "nguyennv84"
            },
            {
                "id": "5dfa458dcf771f7708ed5848",
                "text": "it\u2019s hard to debug as it runs fine locally and only has an issue once deployed on kubernetes",
                "time": "2019-12-18 15:28:13",
                "index": 4,
                "user": "nguyennv84"
            },
            {
                "id": "5dfa4669c62fdf33f7131e17",
                "text": "Without more details I can suggest a few things: change the default port in case there is a conflict and/or check if the pod is configured to allow the connections",
                "time": "2019-12-18 15:31:53",
                "index": 5,
                "user": "emont01"
            },
            {
                "id": "5dfa4aa4260751301ccdbd31",
                "text": "I understand, I have a feeling it\u2019s a conflict in one of the libraries, but not sure what\u2019s causing it. Comparing dependency trees between a working service using the library and this service.",
                "time": "2019-12-18 15:49:56",
                "index": 6,
                "user": "nguyennv84"
            }
        ]
    },
    {
        "id": 474,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5eba8ffea631562f52a62f26",
                "text": "anyone got some good rss feed for spring-boot?",
                "time": "2020-05-12 12:01:02",
                "index": 0,
                "user": "mbrg_gitlab"
            },
            {
                "id": "5eba989810d5ec031a00f9ea",
                "text": "What does that mean? Like https://spring.io/blog.atom?",
                "time": "2020-05-12 12:37:44",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5eba98c03f5b010319436eae",
                "text": "or github.com/spring-projects/spring-boot/releases.atom",
                "time": "2020-05-12 12:38:24",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5eba99243f5b01031943707b",
                "text": "I guess specific blog feed for spring-boot related posts",
                "time": "2020-05-12 12:40:04",
                "index": 3,
                "user": "mabgr_gitlab"
            },
            {
                "id": "5eba997610d5ec031a00fcc7",
                "text": "There's no category/tag for it, so no",
                "time": "2020-05-12 12:41:26",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5eba99a7c210aa6c75e3b72d",
                "text": "Thanks!",
                "time": "2020-05-12 12:42:15",
                "index": 5,
                "user": "mabgr_gitlab"
            }
        ]
    },
    {
        "id": 475,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c58435b54f21a71a1f8864f",
                "text": "Hello@all! Is Spring Boot v2.1.2 broken when i use WebFlux + Security + Oauth2 ??? \nI get: ",
                "time": "2019-02-04 13:51:23",
                "index": 0,
                "user": "awilhelmer"
            },
            {
                "id": "5c58435e93fe7d5ac04013c8",
                "text": "Error:(68, 21) java: cannot access javax.servlet.Filter\n  class file for javax.servlet.Filter not found",
                "time": "2019-02-04 13:51:26",
                "index": 1,
                "user": "awilhelmer"
            },
            {
                "id": "5c584490975714406b9267e7",
                "text": "org.springframework.security.web.AuthenticationEntryPoint  for example is red on javax.servlet imports",
                "time": "2019-02-04 13:56:32",
                "index": 2,
                "user": "awilhelmer"
            },
            {
                "id": "5c5848ee9221b9382d12cc46",
                "text": "@awilhelmer if you're *fully* on the reactive stack, then there's no servlet anymore",
                "time": "2019-02-04 14:15:10",
                "index": 3,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584959ceb5a2264f919230",
                "text": "it's not that you can simply swap the two without any changes",
                "time": "2019-02-04 14:16:57",
                "index": 4,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c58497d78e1ed4103de3290",
                "text": "especially the integration with spring security needs some changes beyond just sprinkling in a bunch of `Mono`/`Flux`",
                "time": "2019-02-04 14:17:33",
                "index": 5,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c5849fc41775971a0d604cf",
                "text": "i want the fully reactive stack, but i need security and @EnableResourceServer ",
                "time": "2019-02-04 14:19:40",
                "index": 6,
                "user": "awilhelmer"
            },
            {
                "id": "5c584a2df04ef00644da5014",
                "text": "it isn't possible or? ",
                "time": "2019-02-04 14:20:29",
                "index": 7,
                "user": "awilhelmer"
            },
            {
                "id": "5c584c71975714406b929db6",
                "text": "it is. you're doing this through the `ServerHttpSecurity`",
                "time": "2019-02-04 14:30:09",
                "index": 9,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584c8278e1ed4103de4778",
                "text": "https://stackoverflow.com/questions/53509457/spring-webflux-oauth-2-resource-server shows some details",
                "time": "2019-02-04 14:30:26",
                "index": 10,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584cc978e1ed4103de4955",
                "text": "But handle with care, some details are concerning scope handling which might not be needed in your case.",
                "time": "2019-02-04 14:31:37",
                "index": 11,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584cdb54f21a71a1f8c906",
                "text": "Also, I recommend to head over to the spring-security or even spring-security-oauth channels :)",
                "time": "2019-02-04 14:31:55",
                "index": 12,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584ee6ca428b0645530ade",
                "text": "@styx_hcr_twitter  thx but I see that e.g. RESOURCE_ID is missing ... :D i hate spring security ... ",
                "time": "2019-02-04 14:40:38",
                "index": 14,
                "user": "awilhelmer"
            },
            {
                "id": "5c584f6341775971a0d62c09",
                "text": "Many things changed, necessary restructurings have been made... with WebFlux is twice as complicated because you have the things that are different with the latest Spring Versions + stack changes...",
                "time": "2019-02-04 14:42:43",
                "index": 15,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584f848aa5ca5abf8251f6",
                "text": "I'm sorry I can't give you the definitive hints, because we also needed multiple sources of information during our migration to a reactive resource server.",
                "time": "2019-02-04 14:43:16",
                "index": 16,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584f9041775971a0d62de2",
                "text": "I can just assure you: it works :)",
                "time": "2019-02-04 14:43:28",
                "index": 17,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584fa3f46373406a50111a",
                "text": "Also: https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#reactive-applications this part of the docs is quite good in the meantime",
                "time": "2019-02-04 14:43:47",
                "index": 18,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c584faa78e1ed4103de60c7",
                "text": ":D you helped me a lot to look to the right direction ",
                "time": "2019-02-04 14:43:54",
                "index": 19,
                "user": "awilhelmer"
            },
            {
                "id": "5c585001ca428b0645531169",
                "text": "spring security was always a pain ... in JEE u yonly build some own annotations and it works ... and spring security, that security chain method configurations are the badest thing i ever saw",
                "time": "2019-02-04 14:45:21",
                "index": 20,
                "user": "awilhelmer"
            },
            {
                "id": "5c585086ca428b06455313b2",
                "text": "Another hint: depending on your use-case you might get away with just config file changes. The configuration on the `ServerHttpSecurity` is usually just needed for more special cases",
                "time": "2019-02-04 14:47:34",
                "index": 21,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c585090ca428b064553146c",
                "text": "(we had such a special case ;-) )",
                "time": "2019-02-04 14:47:44",
                "index": 22,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c5850b67b68f941026da26b",
                "text": "Either way, special gitter channels for all of this exist :)",
                "time": "2019-02-04 14:48:22",
                "index": 23,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c58515b93fe7d5ac0407964",
                "text": "yes i know thank u very much",
                "time": "2019-02-04 14:51:07",
                "index": 24,
                "user": "awilhelmer"
            },
            {
                "id": "5c58516f454aad4df7f368e7",
                "text": "(and yes i got a secial use-case , ... :D )",
                "time": "2019-02-04 14:51:27",
                "index": 25,
                "user": "awilhelmer"
            }
        ]
    },
    {
        "id": 476,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df93963e7265623016077ff",
                "text": "Hi, does anyone of you know how the copyright term of the spring boot project looks like? Looking for something like \"Copyright (c) 2019 Spring Boot\"",
                "time": "2019-12-17 20:24:03",
                "index": 0,
                "user": "leonlatsch"
            },
            {
                "id": "5df94212ac14cc652c9f7227",
                "text": "@leonlatsch Check out https://github.com/spring-projects/spring-boot/blob/master/LICENSE.txt",
                "time": "2019-12-17 21:01:06",
                "index": 1,
                "user": "dfcoffin"
            }
        ]
    },
    {
        "id": 477,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df4d3197ce7ea1e35817d3f",
                "text": "Hi. I come back to java development after a while and I looking for the free version of JDK/JRE (not from oracle). Introduce when java became non-free. What's the official repository for this free version?",
                "time": "2019-12-14 12:18:33",
                "index": 0,
                "user": "BeRoots"
            },
            {
                "id": "5df4d460578ecf4b1fa09820",
                "text": "@BeRoots this depends on your OS. If you have a mainstream linux distribution, there will be an openjdk available from the distro repositories. If you use non-free OS. You can get openjdk from: https://adoptopenjdk.net/",
                "time": "2019-12-14 12:24:00",
                "index": 1,
                "user": "AlexCzar"
            },
            {
                "id": "5df4d53e2bca3016aa7ad46b",
                "text": "@AlexCzar Yes. Thanks. I discover https://adoptopenjdk.net :)",
                "time": "2019-12-14 12:27:42",
                "index": 2,
                "user": "BeRoots"
            },
            {
                "id": "5df4d68ac6ce6027ebbd0f5d",
                "text": "I had read an excellent article which advised to take the sources from open-source projects which shared it. But no way to find it. If someone have an other proposal. He is welcome.",
                "time": "2019-12-14 12:33:14",
                "index": 3,
                "user": "BeRoots"
            }
        ]
    },
    {
        "id": 478,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bab6d6098245f4ae08750ec",
                "text": "I\u2019m building a set of libraries on top of Spring Boot, packaged as Spring Boot Starters. I need to be able to define functionality where on application startup they look at the environment (i.e. read properties) and based on that will set other property values. I originally tried to do this in an `EnvironmentPostProcessor` but that doesn\u2019t seem to be the correct place because you run into ordering issues where not all `PropertySource`s are available yet. I\u2019m wondering what is the correct approach for this?",
                "time": "2018-09-26 11:28:32",
                "index": 0,
                "user": "edeandrea"
            },
            {
                "id": "5bab6e6a01fb5f4ae125792e",
                "text": "If i'm not mistaken I did it once using `SpringBootCondition` @edeandrea ",
                "time": "2018-09-26 11:32:58",
                "index": 1,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab6f70cdc501317256a61d",
                "text": "@marcosbarbero How would that work? Where would I put that? I\u2019m not trying to build an auto-configuration where I\u2019m injecting a bean based on property values (i.e. `@ConditionalOnProperty`). I want to look in the `Environment` for a property. Based on its presence or its value being a certain value I want to set a different property to a certain value",
                "time": "2018-09-26 11:37:20",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5bab70138196693171b93c0c",
                "text": "now i'm confused, first you said:\n>I\u2019m building a set of libraries on top of Spring Boot, packaged as Spring Boot Starters.\n\nand then you said:\n\n>I\u2019m not trying to build an auto-configuration\n\nNow I'm not sure what you are actually trying to build",
                "time": "2018-09-26 11:40:03",
                "index": 3,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab725953c31c111168ddd1",
                "text": "thats correct. Auto-configuration is just a set of `@Configuration` classes that get triggered automatically when registered under the `org.springframework.boot.autoconfigure.EnableAutoConfiguration` key within `spring.factories`. An auto-configuration class\u2019 \u201cjob\u201d is to register beans, some of which may be conditional based on certain conditions.\n\nIn my case I\u2019m not trying to register beans. I\u2019m trying to set property values based on values of other properties. Currently I have it implemented as an `EnvironmentPostProcessor` but that isn\u2019t the correct approach due to ordering and not all `PropertySource`s being resolved when the `EnvironmentPostProcessor` kicks in.\n\nPerhaps a concrete use case may help:\n\nI want to look for the presence of the `spring.boot.admin.client.url` property. If not found then set `spring.boot.admin.client.enabled=false`.\n\nOn the config server side we have different configurations for different apps with different profiles, some of which set  `spring.boot.admin.client.url` to a value and some which don't. The application itself bundles the `spring-boot-admin-starter-client` dependency regardless. Whether or not to enable it is simply driven by the application's runtime target.",
                "time": "2018-09-26 11:49:45",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5bab728853c31c111168df43",
                "text": "You can see https://github.com/spring-projects/spring-boot/issues/14607 for more details",
                "time": "2018-09-26 11:50:32",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5bab72a4eba8e60bc649b071",
                "text": "I was told by Spring Boot folks that my current approach is not the correct one, so I am searching for what the correct approach may be.",
                "time": "2018-09-26 11:51:00",
                "index": 6,
                "user": "edeandrea"
            },
            {
                "id": "5bab7437cdc501317256c837",
                "text": "Well, I can be misunderstanding things here but I don't see how it's not an `*AutoConfiguration` once you want to conditionally set properties based on another property",
                "time": "2018-09-26 11:57:43",
                "index": 7,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab74707bd81c5b9db77886",
                "text": "i guess we can label it what we want - but in the end i don\u2019t need to/want to create any bean definitions",
                "time": "2018-09-26 11:58:40",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5bab74898ddf5867dc77a789",
                "text": "nor do i need to create an additional `PropertySource`",
                "time": "2018-09-26 11:59:05",
                "index": 9,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 479,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b926a9360f9ee7aa4eef3eb",
                "text": "Hello guys I want to send Array of int and String as RequestBody:\nThis is the json:\n\n    {\n\t    \"customUiModel\": [1, 3, 5],\n\t    \"user\": \"user\"\n    }\n\nThis is the endpoint code:\n \n    @RequestMapping(value = \"/save\", method = RequestMethod.POST)\n \t     @ResponseStatus(HttpStatus.CREATED)\n\t     public CustomUiModel createCustomUiObject(@RequestBody @Valid int[] customUiModel, String user) {\n\n\t\treturn customAppService.saveCustom(customUiModel, user);\n    }\nAnd this is the error :\n ` \"message\": \"JSON parse error: Cannot deserialize instance of `int[]` out of START_OBJECT token; nested exception is     com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `int[]` out of START_OBJECT token\\n at [Source: \n    (PushbackInputStream); line: 1, column: 1]\",\n        \"path\": \"/custom/save\"`",
                "time": "2018-09-07 12:09:55",
                "index": 0,
                "user": "vlatk0o"
            },
            {
                "id": "5b926ba6f86b741b0521be41",
                "text": "I have tried with Array<Integer> instead this int[] but I have got same error...",
                "time": "2018-09-07 12:14:30",
                "index": 1,
                "user": "vlatk0o"
            },
            {
                "id": "5b929a52cddb292dff3bd442",
                "text": "@vlatk0o make sure your request body  matches your method argument type. From your code snippet, it looks like your method  should look this: ",
                "time": "2018-09-07 15:33:38",
                "index": 12,
                "user": "pkigozi_gitlab"
            },
            {
                "id": "5b929feb7667e11554bc05be",
                "text": "```\nclass Foo {\n       private int[] numbers;\n       private String user;\n       //Your getters & setters\n}\n```\nThen your controller method should be:\n\n```\n@RequestMapping(value = \"/save\", method = RequestMethod.POST)\n@ResponseStatus(HttpStatus.CREATED)\npublic CustomUiModel createCustomUiObject(@RequestBody @Valid Foo customUiModel) {\n      return customAppService.saveCustom(customUiModel.getNumber(), customUiModel.getUser());\n}\n```",
                "time": "2018-09-07 15:57:31",
                "index": 13,
                "user": "pkigozi_gitlab"
            },
            {
                "id": "5b9639687ce5f5314f8d313e",
                "text": "@pkigozi_gitlab thank you a lot!",
                "time": "2018-09-10 09:29:12",
                "index": 42,
                "user": "vlatk0o"
            }
        ]
    },
    {
        "id": 480,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e2c7e60dc07667042f06e11",
                "text": "Hi guys! I need help for my spring boot application. I am working on a backend REST API server. This server exposes a number of resources that must be protected with authentication and authorization rules. The API will be consumed by mobile applications who offer Social Login (Facebook, google) and username and password login. How should I handle this problem authenticating users? I have already used JWT authentication which is fine. But now I need to work with different tokens (coming from Facebook and Google) and I have no idea how to manage them. I read something about OAUTH2 but it is very confusing too me. Thank you in advance ! ",
                "time": "2020-01-25 17:44:00",
                "index": 0,
                "user": "deanstef"
            },
            {
                "id": "5e2c7ed79ad22d5bd5dbde60",
                "text": "@deanstef maybe get to know oauth2 first https://www.youtube.com/watch?v=996OiexHze0",
                "time": "2020-01-25 17:45:59",
                "index": 1,
                "user": "konstantinblaesi"
            },
            {
                "id": "5e2c7f00cd53a80aac24c964",
                "text": "looks like they also have another video targeted at spring + oauth2 , not sure how good that one is :) https://www.youtube.com/watch?v=TaZqDrwBWwA",
                "time": "2020-01-25 17:46:40",
                "index": 2,
                "user": "konstantinblaesi"
            },
            {
                "id": "5e2c7f7f183449313bd84fc0",
                "text": "@konstantinblaesi thank you! I already know quite well, at least theoretical, how OAUTH2 works. My problem is the integration with spring. Particularly how to manage external OAuth2 providers as Google or Facebook. I am looking for standard solutions/best practices ",
                "time": "2020-01-25 17:48:47",
                "index": 3,
                "user": "deanstef"
            },
            {
                "id": "5e2c9bbcda04a624f4817de0",
                "text": "@deanstef have you seen https://spring.io/guides/tutorials/spring-boot-oauth2/ yet?",
                "time": "2020-01-25 19:49:16",
                "index": 4,
                "user": "boda2004"
            },
            {
                "id": "5e2c9cf2da04a624f4818538",
                "text": "@boda2004 as far as I can see this is just for Stateful services, am I right?",
                "time": "2020-01-25 19:54:26",
                "index": 5,
                "user": "deanstef"
            },
            {
                "id": "5e2c9ecb4c3dae24f5eb451e",
                "text": "@deanstef i tend to think that session or state is not required, but would have to take a look at sources. OTOH https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/html/boot-features-security-oauth2-resource-server.html does not imply any state, bearer token would be fine, so unless you want to use refresh tokens you should be fine",
                "time": "2020-01-25 20:02:19",
                "index": 6,
                "user": "boda2004"
            },
            {
                "id": "5e2d581ca420263e03a03f85",
                "text": "@boda2004 I hope the configuration of a ResourceServer is enough but I am afraid for single Authorisation Providers like Google or Facebook it requires more configuration. However I will try to follow the spring documentation",
                "time": "2020-01-26 09:13:00",
                "index": 13,
                "user": "deanstef"
            }
        ]
    },
    {
        "id": 481,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce6a5ad7c363c75a72d5e6c",
                "text": "With Spring Boot 2.1.4 I have the error \"cannot execute INSERT in a read-only transaction\" and need to explicitly specify @EnableTransactionManagement(proxyTargetClass = true) At the same time 2.0.9 works without this annotation. Also, I don't define pring.aop.proxy-target-class property anywhere. Is it a bug? I couldn't find in the 2.1 changelog that the behavior has been changed.",
                "time": "2019-05-23 13:52:45",
                "index": 0,
                "user": "php-coder"
            },
            {
                "id": "5ce6a5cdd22ba766a2e7d333",
                "text": "@php-coder do you use `@Transactional(readonly=true)` at any point?",
                "time": "2019-05-23 13:53:17",
                "index": 1,
                "user": "vanseverk"
            },
            {
                "id": "5ce6a63a0ac9852a95290554",
                "text": "@vanseverk my method has @Transactional annotation (without readOnly flag). Other methods have readOnly flag but they aren't being executed",
                "time": "2019-05-23 13:55:06",
                "index": 2,
                "user": "php-coder"
            },
            {
                "id": "5ce6a69675d9a575a62f7748",
                "text": "@vanseverk service class also has an interface so it should be proxyied with JDK proxy very well. One more detail -- I use JdbcTemplate if it matters somehow.",
                "time": "2019-05-23 13:56:38",
                "index": 4,
                "user": "php-coder"
            }
        ]
    },
    {
        "id": 482,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5beb093947217e07ff17f0b6",
                "text": "Hi,\n\nI'm currently parsing the `META-INF/spring-configuration-metadata.json` files to generate some documentation from them.\nWhile doing so, I stumbled upon the method `org.springframework.boot.configurationmetadata.ConfigurationMetadataSource#getDescription`.\nThis method seems to return null in every case, so what's the point of this method?",
                "time": "2018-11-13 17:26:17",
                "index": 0,
                "user": "larsgrefer"
            },
            {
                "id": "5beb09d37a36913a9a38669e",
                "text": "more formally:\nAfter scanning these Files using `org.springframework.boot.configurationmetadata.ConfigurationMetadataRepositoryJsonBuilder`\n```\nProcessing jar:file:/home/lgrefer/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator-autoconfigure/2.1.0.RELEASE/5dc4ca545ffe9b6e6e733413d33c1b0a880a8316/spring-boot-actuator-autoconfigure-2.1.0.RELEASE.jar!/META-INF/spring-configuration-metadata.json\nProcessing jar:file:/home/lgrefer/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.1.0.RELEASE/8898af6accfab65ac6e232c1535abbc33cfa5fcb/spring-boot-autoconfigure-2.1.0.RELEASE.jar!/META-INF/spring-configuration-metadata.json\nProcessing jar:file:/home/lgrefer/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator/2.1.0.RELEASE/f8fcc9b23ef9bda256aedac43c4bace31c21f2b5/spring-boot-actuator-2.1.0.RELEASE.jar!/META-INF/spring-configuration-metadata.json\nProcessing jar:file:/home/lgrefer/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/2.1.0.RELEASE/a78c97c771856f7690b9308886c75affe9295b12/spring-boot-2.1.0.RELEASE.jar!/META-INF/spring-configuration-metadata.json\n```\n the following statement is false:\n\n```\nconfigurationMetadataRepository.getAllGroups().values().stream()\n                                               .flatMap(group -> group.getSources().values().stream())\n                                               .anyMatch(source -> source.getDescription() != null)\n```",
                "time": "2018-11-13 17:28:51",
                "index": 1,
                "user": "larsgrefer"
            },
            {
                "id": "5beb0d3b47217e07ff180e61",
                "text": "It\u2019s null because the source have no description I guess",
                "time": "2018-11-13 17:43:23",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5beb0d6fe0fd6b4360e9c066",
                "text": "There is no way to contribute that at the moment using code generation",
                "time": "2018-11-13 17:44:15",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5beb10d1e0fd6b4360e9d7a0",
                "text": "Oh okay. If I manually specify a `group` with a `description` in `additional-spring-configuration-metadata.properties` it works :+1: ",
                "time": "2018-11-13 17:58:41",
                "index": 4,
                "user": "larsgrefer"
            }
        ]
    },
    {
        "id": 483,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bed6da7f1b8753404cdb557",
                "text": "Is it possible to get annotations on a method from a ServerWebExchange in a WebFilter? ",
                "time": "2018-11-15 12:59:19",
                "index": 0,
                "user": "mowol"
            },
            {
                "id": "5bed6e7892b7d1172191d994",
                "text": "@mowol I don't understand; what's the use case exactly?",
                "time": "2018-11-15 13:02:48",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5bed6ec8d001b91720645c18",
                "text": " @bclozel I have a custom annotation on a method that i want to react on on an incoming request. To \"catch\" the request i used a WebFilter and now i need to get the values from the annotation. I am using Spring Webflux so any of the solutions from spring MVC are no good",
                "time": "2018-11-15 13:04:08",
                "index": 3,
                "user": "mowol"
            },
            {
                "id": "5bed6f1c92b7d1172191dfb8",
                "text": "@mowol like a Controller method? or something else? At the WebFilter level,  before calling the chain, you don't know where the exchange is going to be mapped to.",
                "time": "2018-11-15 13:05:32",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5bed6f3a7a36913a9a478f6b",
                "text": "Yes a controller method. The same method has a @GetMapping annotation",
                "time": "2018-11-15 13:06:02",
                "index": 5,
                "user": "mowol"
            },
            {
                "id": "5bed6f41bb06d73a997a7fdb",
                "text": "So i'm guessing a WebFilter is not the right way to go",
                "time": "2018-11-15 13:06:09",
                "index": 6,
                "user": "mowol"
            },
            {
                "id": "5bed6f68d001b91720646029",
                "text": "Maybe not - again, it depends on the actual use case; is it security? Or something like CORS?",
                "time": "2018-11-15 13:06:48",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5bed6f8162866f7473a1fa4f",
                "text": "Yes i need to validate an authorization header against another REST api",
                "time": "2018-11-15 13:07:13",
                "index": 8,
                "user": "mowol"
            },
            {
                "id": "5bed6f886b9822140d33c5ff",
                "text": "it really depends on what you're about to do with that information - prevent the processing of the exchange, etc",
                "time": "2018-11-15 13:07:20",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5bed6f9921387234050e82a0",
                "text": "and i need to add a header to the response as well",
                "time": "2018-11-15 13:07:37",
                "index": 10,
                "user": "mowol"
            },
            {
                "id": "5bed6fe2f1b8753404cdc4c9",
                "text": "and what kind of information are you getting from that annotation?",
                "time": "2018-11-15 13:08:50",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5bed6ff347217e07ff270725",
                "text": "two strings that needs to be using in the call to the REST api",
                "time": "2018-11-15 13:09:07",
                "index": 12,
                "user": "mowol"
            },
            {
                "id": "5bed7027bb06d73a997a8668",
                "text": "it sounds a lot like a `HandlerInterceptor` in MVC, but we don't have that in WebFlux",
                "time": "2018-11-15 13:09:59",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5bed703dbb06d73a997a86bc",
                "text": "I completely agree",
                "time": "2018-11-15 13:10:21",
                "index": 14,
                "user": "mowol"
            },
            {
                "id": "5bed706592b7d1172191e822",
                "text": "I have a working solution where the authentication happens as part of the controller method, but it hides the actual logic so we want to improve on it",
                "time": "2018-11-15 13:11:01",
                "index": 15,
                "user": "mowol"
            },
            {
                "id": "5bed7072fee6703aaf74cac1",
                "text": "and also reduce code",
                "time": "2018-11-15 13:11:14",
                "index": 17,
                "user": "mowol"
            },
            {
                "id": "5bed72814e7ca14520acecb4",
                "text": "@bclozel so no workarounds possible?",
                "time": "2018-11-15 13:20:01",
                "index": 18,
                "user": "mowol"
            },
            {
                "id": "5bed75dce0fd6b4360f92867",
                "text": "I managed to make it prettier by extracting the validation call to another method",
                "time": "2018-11-15 13:34:20",
                "index": 19,
                "user": "mowol"
            },
            {
                "id": "5bed763292b7d11721921425",
                "text": "I've looked it up a bit, and it seems other solutions are more involved, like reactive support in spring security; this works with a combination of a webfilter, method security looking at annotations and storing data in the reactor subscriber context",
                "time": "2018-11-15 13:35:46",
                "index": 20,
                "user": "bclozel"
            },
            {
                "id": "5bed764f4e7ca14520ad09fd",
                "text": "what you're trying to achieve is quite similar, but I don't know if there's an easier way to deal with that",
                "time": "2018-11-15 13:36:15",
                "index": 21,
                "user": "bclozel"
            },
            {
                "id": "5bed76b5d001b917206492ca",
                "text": "I am afraid changing to spring security is not an option",
                "time": "2018-11-15 13:37:57",
                "index": 22,
                "user": "mowol"
            },
            {
                "id": "5bed77ce3102f14521a68d94",
                "text": "(I meant replicating what they're doing)",
                "time": "2018-11-15 13:42:38",
                "index": 23,
                "user": "bclozel"
            },
            {
                "id": "5bed7aef6b9822140d341763",
                "text": "I see",
                "time": "2018-11-15 13:55:59",
                "index": 24,
                "user": "mowol"
            },
            {
                "id": "5bed7af421387234050ed21f",
                "text": "thank you for your time",
                "time": "2018-11-15 13:56:04",
                "index": 25,
                "user": "mowol"
            }
        ]
    },
    {
        "id": 484,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e956a32fea5216d697a6924",
                "text": "Hello, I have written Rest API where I run select queries to MySQL database. Does someone know, why the scandic letters are replaced with unknown characters, such as \"\u00c3\u00a4\"? I made sure database and its table columns are UTF-8 from their encoding and I added `?useUnicode=yes&characterEncoding=UTF-8` to my JDBC connection string, but the problem still exists. When I run select queries in console, I can see the scandic letters fine.",
                "time": "2020-04-14 07:45:54",
                "index": 0,
                "user": "holmmi"
            },
            {
                "id": "5e956e94e24b4d6c44083ff3",
                "text": "@holmmi how do you output result? can it be that your api response is sent with header e.g. `Content-type: text/html; charset=iso-8859-1` or something",
                "time": "2020-04-14 08:04:36",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5e956ed9e24b4d6c440840f8",
                "text": "and you inspect browser output",
                "time": "2020-04-14 08:05:45",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5e958978f87c5956a259d8f4",
                "text": "@boda2004 checking the content-type of response, it is `Content-Type\tapplication/json;charset=UTF-8`.",
                "time": "2020-04-14 09:59:20",
                "index": 3,
                "user": "holmmi"
            }
        ]
    },
    {
        "id": 485,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ecad948b101510b2014a441",
                "text": "In case anybody runs into this, something in Spring Boot 2.3.0 has changed. I used the autoconfigured H2 database with the devtools dependency and tried to open the H2 web console at `/h2-console` with the JDBC URL `jdbc:h2:mem:testdb`, as I've done many times before. That no longer worked.\nInstead, I had to go into `application.properties` and set the log level for `org.springframework.boot.autoconfigure.DataSourceAutoConfiguration` to `INFO` in order to see the correct connection string, which had about 37 characters and is different every time.\nIs that what you're supposed to do from now on?",
                "time": "2020-05-24 20:30:00",
                "index": 0,
                "user": "kousen"
            },
            {
                "id": "5ecb7b524412600ccd66def3",
                "text": "@kousen https://github.com/spring-projects/spring-boot/issues/21475",
                "time": "2020-05-25 08:01:22",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ecbf05d3ffa6106f1d25d10",
                "text": "@snicoll Wow, setting `spring.datasource.generate-unique-name=false` is much easier. Why did the default change in this release?",
                "time": "2020-05-25 16:20:45",
                "index": 3,
                "user": "kousen"
            },
            {
                "id": "5eccbbc73ffa6106f1d4337b",
                "text": "so that you get isolated databases by default when you run your tests",
                "time": "2020-05-26 06:48:39",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 486,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ecf99ff9da05a060a37d618",
                "text": "Iam sending a token in the header  ",
                "time": "2020-05-28 11:01:19",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecf9a43778fad0b1330318e",
                "text": "But  int eh target endpoint its coming  partially replacing the encrypted toeken with  null",
                "time": "2020-05-28 11:02:27",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecf9a5089941d051a2a93c7",
                "text": "I am invoking a rest api",
                "time": "2020-05-28 11:02:40",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecf9a584c9b0f060d2c3828",
                "text": "any clue to this behaviour",
                "time": "2020-05-28 11:02:48",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecf9a642c49c45f5aa992d1",
                "text": "there is a HHeader filter that s fine",
                "time": "2020-05-28 11:03:00",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfa38389941d051a2aacec",
                "text": "@wilkinsona  any clue",
                "time": "2020-05-28 11:41:55",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfa9f8225dc25f54af86b3",
                "text": "@DoraRajappan Sorry, no idea based on what you've described.",
                "time": "2020-05-28 12:09:28",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5ecfaa79a91f120a6ccaf22b",
                "text": "am invoking rest endpoint  that has @RequestHeader  authentication... value passed to it token rdjgfchgjg54978hbjjlj . but the emdpoint gets it as token null.",
                "time": "2020-05-28 12:11:37",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfaaabf0b8a2053abbf3d4",
                "text": "\"token rdjgfchgjg54978hbjjlj \" reaches as \"token null\" why?",
                "time": "2020-05-28 12:12:27",
                "index": 10,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfabe7b101510b2021ca95",
                "text": "Sounds like something's changed the value of the header before it reaches the endpoint or the client isn't sending it properly. I can't think what might be doing that. If I were in your situation, I'd want to try to narrow down where the problem's occurring. I'd probably do that by debugging the server and check the headers that are received.",
                "time": "2020-05-28 12:17:43",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5ecfade827513a72fbbb0140",
                "text": "Could also be CORS",
                "time": "2020-05-28 12:26:16",
                "index": 12,
                "user": "OrangeDog"
            },
            {
                "id": "5ecfaf10f0b8a2053abbff19",
                "text": "kk",
                "time": "2020-05-28 12:31:12",
                "index": 13,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfaf13a91f120a6ccaff96",
                "text": "thank you",
                "time": "2020-05-28 12:31:15",
                "index": 14,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfaf26549761730b629341",
                "text": "i will post the request from postman and see how it goes",
                "time": "2020-05-28 12:31:34",
                "index": 15,
                "user": "DoraRajappan"
            },
            {
                "id": "5ecfaf2f2280c80cbfd3f646",
                "text": "@wilkinsona ",
                "time": "2020-05-28 12:31:43",
                "index": 16,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 487,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5caf584ef851ee043d9d809b",
                "text": "Having some trouble with both `spring.resources.chain.strategy.content` and `WebJarsResourceResolver`. The relevant objects all seem to get created. However `ResourceUrlEncodingRequestWrapper.resourceUrlProvider` is always `null`, and `WebJarsResourceResolver.resolveUrlPath` is never called (although `resolveResource` is).\n\nAn example snippet from my `index.html` template: `<script th:src=\"@{/webjars/bootstrap/js/bootstrap.min.js}\"></script>`",
                "time": "2019-04-11 15:07:58",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5bd8b34ccd69e79fd8e3",
                "text": "@OrangeDog it sounds like the `ResourceUrlEncodingFilter` is registered but the `ResourceUrlProvider` is not there or not exposed. This should be done by Spring MVC itself, not Spring Boot. Do you have a sample I could take a look at?",
                "time": "2019-04-11 15:23:04",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5caf5c9aa0790b29c99ccca7",
                "text": "Not really. Further oddness though - in a filter that does a `forward` to a template the content hash gets added, but the `WebJarsResourceResolver` still isn't called (to add the version).",
                "time": "2019-04-11 15:26:18",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5ce7016a930a45a0f6a2",
                "text": "(yes, for a webjar I won't need the hash if the version is added properly)",
                "time": "2019-04-11 15:27:35",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5d48b34ccd69e79fe45e",
                "text": "The `ResourceUrlEncodingFilter` is not registered for FORWARD dispatches, so that might explain that",
                "time": "2019-04-11 15:29:12",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5caf5d6393fb4a7dc210c345",
                "text": "But that's when it worked...",
                "time": "2019-04-11 15:29:39",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5d88c55bd14d35c99779",
                "text": "it's really hard to understand what's going on without a sample",
                "time": "2019-04-11 15:30:16",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5caf5db2bd70a40d5f3250c3",
                "text": "Sorry, the `ResourceUrlEncodingFilter` was before the filter that did a forward, so it had already wrapped the request.",
                "time": "2019-04-11 15:30:58",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5e0325686a7dc3135fa8",
                "text": "But it's the `resourceUrlProvider` not being set on that wrapper that's the problem.",
                "time": "2019-04-11 15:32:19",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5e5ca84e0c501a143f3e",
                "text": "Oh, is it because the index page isn't handled by a controller, so the hander interceptors aren't involved?",
                "time": "2019-04-11 15:33:48",
                "index": 10,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5f6220fbe911ee9ad0d1",
                "text": "Yes, that's why",
                "time": "2019-04-11 15:38:10",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5f8aa84e0c501a14494e",
                "text": "OK, is the default index handler part of Boot so I can go file an issue?",
                "time": "2019-04-11 15:38:50",
                "index": 12,
                "user": "OrangeDog"
            },
            {
                "id": "5caf5fff016a930a45a10b3c",
                "text": "you mean the infrastructure serving the index.html file on \"/\" by default?",
                "time": "2019-04-11 15:40:47",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5caf60873ebbdc55b39df646",
                "text": "Yes, that",
                "time": "2019-04-11 15:43:03",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5caf611a31aec969e88bd3da",
                "text": "Is it possible to configure path exclusions with chain.strategy? I'd rather not have to list every path than isn't `/webjar/**`. I'd rather not stick a pointless fixed version on them either.",
                "time": "2019-04-11 15:45:30",
                "index": 15,
                "user": "OrangeDog"
            },
            {
                "id": "5caf6251f851ee043d9dcb26",
                "text": "in that case, the index.html is not rendered by a templating engine, right? It's just a static file being served",
                "time": "2019-04-11 15:50:41",
                "index": 16,
                "user": "bclozel"
            },
            {
                "id": "5caf6272bd70a40d5f326dfd",
                "text": "And Spring Framework supports rewriting static resources only for CSS files if I remember correctly",
                "time": "2019-04-11 15:51:14",
                "index": 17,
                "user": "bclozel"
            },
            {
                "id": "5cb05bf81f6e900d5e1dd4cf",
                "text": "@bclozel wrong on both counts I'm afraid.\nWithout any configuration, Spring Boot will serve \"/\" using a view called \"index\", which (if it exists) will render \"templates/index.html\". Now I've switched to an explicit Controller, all static resources are rewritten (the default path is /**).",
                "time": "2019-04-12 09:35:52",
                "index": 29,
                "user": "OrangeDog"
            },
            {
                "id": "5cb05c413ebbdc55b3a49a1c",
                "text": "@OrangeDog that's why I asked if it was the static file support or a rendered template",
                "time": "2019-04-12 09:37:05",
                "index": 30,
                "user": "bclozel"
            },
            {
                "id": "5cb05c72c55bd14d35d04aac",
                "text": "please open an issue on the Spring Boot tracker for that - I don't know if we'll be able to solve that in Spring Boot or if we'll require a change in Framework",
                "time": "2019-04-12 09:37:54",
                "index": 31,
                "user": "bclozel"
            },
            {
                "id": "5cb05c84bd70a40d5f38a145",
                "text": "Ah, no you said \"index.html\", which is indeed the name of the template file. I'll open that shortly.",
                "time": "2019-04-12 09:38:12",
                "index": 32,
                "user": "OrangeDog"
            },
            {
                "id": "5cb06336bd70a40d5f38d3b0",
                "text": "#16546",
                "time": "2019-04-12 10:06:46",
                "index": 33,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 488,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5de4e8729319bb5190cabe90",
                "text": "how can i listen to a message from rabbitmq and stream the response to ui using webflux or something. if any example is handy, please share.",
                "time": "2019-12-02 10:33:22",
                "index": 0,
                "user": "mondaymorning04"
            },
            {
                "id": "5de4eb3d05eec2433dbc23da",
                "text": "@mondaymorning04 I can't recall if Spring AMQP (I assume that's what you're using to talk to RabbitMQ) has any reactive support. You could ask in https://gitter.im/spring-projects/spring-amqp.",
                "time": "2019-12-02 10:45:17",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 489,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5e1ef744f72ed51fb4d4db15",
                "text": "Hello! In order to do retries with a *feign* client, I've been following this documentation: [spring-cloud-feign-overriding-defaults](https://projects.spring.io/spring-cloud/spring-cloud.html#spring-cloud-feign-overriding-defaults). It seemed to me extremely easy and I created the `@Configuration` class and modified the `@FeignClient` overriding its configuration this way:\n```\n@FeignClient(value = \u201cservice\u201d, url = \"\\${service.url}\", configuration = [ServiceConfig::class])\n```\n```\n@Configuration\nclass ServiceConfig {\n    @Bean\n    fun retryFactory(): Retryer = Retryer.Default()\n}\n```\n\nBut it doesn\u2019t work. Am I missing something? I will appreciate so much any help!",
                "time": "2020-01-15 11:28:04",
                "index": 0,
                "user": "jmanzaro"
            },
            {
                "id": "5e1f0218c86a6f1fb37ef766",
                "text": "I don't suppose there's a way to have a fallback static error page for when your normal error page fails?",
                "time": "2020-01-15 12:14:16",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e1f024194656d7d5705ecec",
                "text": "I imagine it depends on the container, if it's supported at all",
                "time": "2020-01-15 12:14:57",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5e1f0b9984894f56b6638640",
                "text": "@jmanzaro you\u2019d have more luck asking this on #spring-cloud ",
                "time": "2020-01-15 12:54:49",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5e1f1171be66165ecbd416ab",
                "text": "@snicoll Ok, thanks!",
                "time": "2020-01-15 13:19:45",
                "index": 5,
                "user": "jmanzaro"
            }
        ]
    },
    {
        "id": 490,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d4441a726e273244602e84f",
                "text": "Trying to get the embedded server, Spring boot with version 2.0.9.RELEASE and cloud starter 2.0.4.RELEASE and Zuul 1.4.0.RELEASE. Embedded server startup comes up with an error ServerPropertiesAutoConfiguration., any idea how to catch up with correct versions to work with., thanks",
                "time": "2019-08-02 13:59:03",
                "index": 0,
                "user": "sathishjayapal"
            },
            {
                "id": "5d46c494475c0a0febf95c4f",
                "text": "@sathishjayapal `ServerPropertiesAutoConfiguration` no longer exist in SB2. You have something that is outdated that\u2019s still trying to access it. You need to upgrade your dependencies to compatible SB version",
                "time": "2019-08-04 11:42:12",
                "index": 12,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 491,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ed656f1a91f120a6cdb3970",
                "text": "Hi guys, how can I POST a custom Content-Type \"application/vnd.com.example_v1+xml\" using WebClient and a XML body?",
                "time": "2020-06-02 13:41:05",
                "index": 0,
                "user": "jfsanchez-gh"
            },
            {
                "id": "5ed659f822dd444224f3d4ea",
                "text": "```java\nwebClient.post().contentType(new MediaType(\"application\", \"vnd.com.example_v1+xml\"))\n```",
                "time": "2020-06-02 13:54:00",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ed66909225dc25f54c00c4d",
                "text": "@OrangeDog thx for your answer but this is failing as the default XML encoder `Jaxb2XmlEncoder` returns false when checking `canEncode`",
                "time": "2020-06-02 14:58:17",
                "index": 2,
                "user": "jfsanchez-gh"
            },
            {
                "id": "5ed66e69f0b8a2053acca0b1",
                "text": "It's not final, so you could extend and override `canEncode`.  Looking at the source of `MimeType` it also looks like it would work if `Jaxb2XmlEncoder` constructed itself with `application/*+xml`.",
                "time": "2020-06-02 15:21:13",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5ed66e843ffa6106f1eddc2e",
                "text": "Perhaps that should be a feature request (and similar for `+json`)",
                "time": "2020-06-02 15:21:40",
                "index": 4,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 492,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c7e66e7d2d62067b748ea4d",
                "text": "Hi, i\u2019ve some questions about the @EndpointId name conventions. Why it\u2019s not allowed to use - in an endpoint name anymore? I want to understand the reason for this change.",
                "time": "2019-03-05 12:09:11",
                "index": 0,
                "user": "sklaholz"
            },
            {
                "id": "5c7e6742d2d62067b748ed0b",
                "text": "CamelCase is allowed but kebab-case log a warning and in sping boot 2.2 it will throw an exception",
                "time": "2019-03-05 12:10:42",
                "index": 1,
                "user": "sklaholz"
            },
            {
                "id": "5c7e761db1503b3d70836a7d",
                "text": "@sklaholz You can learn about the reasons for the restrictions in https://github.com/spring-projects/spring-boot/issues/14773",
                "time": "2019-03-05 13:14:05",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 493,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e18221991129970ca9e9d05",
                "text": "I am trying to setup my own spring starter for my own security configuration which seems to work fine when running the application, but when i try to create mock mvc tests it won't load up my `WebSecurityConfigurerAdapter` when the following conditional is specified: `@ConditionalOnMissingBean(WebSecurityConfigurerAdapter.class)`.\n\nI tried this:\n```\n@SpringBootTest\n@AutoConfigureMockMvc\npublic class WebSecurityTests {\n\n  @Autowired\n  private MockMvc mockMvc;\n\n  @MockBean JwtDecoder jwtDecoder;\n\n  @SpringBootApplication(exclude = {SecurityAutoConfiguration.class, UserDetailsServiceAutoConfiguration.class})\n  public static class TestConfig {\n    @RestController\n    public class MockController {\n      @RequestMapping(path = \"/\", method = {RequestMethod.HEAD, RequestMethod.GET, RequestMethod.POST, RequestMethod.PUT, RequestMethod.PATCH})\n      public String access(HttpServletRequest request) {\n        return request.getMethod();\n      }\n    }\n  } \n...\n```\n\nWith this in an auto configuration definition:\n```\n@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass(WebSecurityConfigurerAdapter.class)\n@ConditionalOnWebApplication(type = Type.SERVLET)\npublic class WebSecurityConfiguration {\n....\n  @EnableWebSecurity\n  @Configuration(proxyBeanMethods = false)\n  @ConditionalOnMissingBean(WebSecurityConfigurerAdapter.class)\n  @Order(SecurityProperties.BASIC_AUTH_ORDER)\n  static class DefaultConfigurerAdapter extends WebSecurityConfigurerAdapter {\n...\n```\n\nWith `@ConditionalOnMissingBean(WebSecurityConfigurerAdapter.class)` it seems like no access control takes place, when I remove `@ConditionalOnMissingBean(WebSecurityConfigurerAdapter.class)` all my tests pass, but this will prevent me from being able to override the `WebSecurityConfigurerAdapter` if needed in my other projects. Any thoughts on how to resolve this?",
                "time": "2020-01-10 07:04:57",
                "index": 0,
                "user": "sdavids13"
            },
            {
                "id": "5e182c5c559755189050ee4b",
                "text": "something else is creating `WebSecurityConfigurerAdapter`, check the auto-configuration report to figure out",
                "time": "2020-01-10 07:48:44",
                "index": 1,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 494,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d1b3288f0f22f6645fc494c",
                "text": "Hey guys, I have a problem with my own autoconfig. There's an autoconfig in a seperate project which gets a list of beans which implement a specific interface to register them as prometheus metrics.\nThis autoconfig is included via a maven dependency in the main project. The beans which implement the interface are instantiated through a @Configuration class. The problem is, that the autoconfig runs to early and\nget's an empty list of beans. This problem does not happen when the beans which implement the interface are created via @Service or @Component. But we wan't to create the beans manually in the @Configuration class. The main project\nshould not care about the autoconfig so I don't want to use something like @DependsOn in the main project. Is there a solution to fix this problem?  ",
                "time": "2019-07-02 10:31:36",
                "index": 0,
                "user": "Chr3is"
            },
            {
                "id": "5d1b3e9426206b667c721978",
                "text": "Autoconfig should always \"run\" after all Configuration. How is the autoconfig getting the list?",
                "time": "2019-07-02 11:23:00",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d1b3ee00ee3c30b1d6db819",
                "text": "```\n@Configuration\n@ConditionalOnClass({ MetricsAutoConfiguration.class })\n@AutoConfigureBefore(CompositeMeterRegistryAutoConfiguration.class)\n@ConditionalOnProperty(\n        value = { \"persistence.metrics.entity-cache.enabled\" },\n        matchIfMissing = true\n)\npublic class EntityCacheMetricsAutoConfiguration {\n\n    @Bean\n    public EntityCacheMetrics entityCacheMetrics(List<? extends EntityCacheStats> caches) {\n        return EntityCacheMetrics.of(caches);\n    }\n}\n```",
                "time": "2019-07-02 11:24:16",
                "index": 2,
                "user": "Chr3is"
            }
        ]
    },
    {
        "id": 495,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc17f9fef84ab3786fe589e",
                "text": "Hi, is there any reason why JNDI_PROPERTY_SOURCE_NAME are not included in org.springframework.cloud.context.refresh.ContextRefresher#DEFAULT_PROPERTY_SOURCES? Cause we have some problems with the refresh, if we place our config server url at the context.xml from the tomcat server",
                "time": "2019-11-05 13:56:47",
                "index": 0,
                "user": "christopherfischer"
            },
            {
                "id": "5dc186b8a3f0b17849f0244a",
                "text": "@christopherfischer That's a question for the Spring Cloud team. You can find them in https://gitter.im/spring-cloud/spring-cloud",
                "time": "2019-11-05 14:27:04",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 496,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ec548b826d26710bba8fd63",
                "text": "I thought that Spring Boot would read `application.properties` using ISO-8601 when parsing a `LocalTime`, but it seems a custom Converter is needed (https://stackoverflow.com/questions/61911328/how-to-have-spring-boot-parse-properties-bound-to-localtime-in-iso8601-format/61913835) otherwise, it uses the locale of the JVM to parse the time. Is this a bug?",
                "time": "2020-05-20 15:11:52",
                "index": 0,
                "user": "wimdeblauwe"
            },
            {
                "id": "5ec54f8026d26710bba91946",
                "text": "@wimdeblauwe What led to you assuming that ISO-8601 would be used?",
                "time": "2020-05-20 15:40:48",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ec54fd63d81ad775847a4cf",
                "text": "@wilkinsona because https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-conversion indicates that for `Period` and `Duration` it is used. Nothing is specified regarding `LocalTime`, `LocalDate`, ... so I thought it would be the same.",
                "time": "2020-05-20 15:42:14",
                "index": 3,
                "user": "wimdeblauwe"
            },
            {
                "id": "5ec550af0fbf8b175882e1c7",
                "text": "That's because Boot has specific support for converting strings to `Period`s and `Duration`s. Unless specified, any other conversion is performed by the standard conversions that are provided by Framework's conversion service.",
                "time": "2020-05-20 15:45:51",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5ec553049832dd6f04646a72",
                "text": "Maybe a note on this could be added in the documentation?",
                "time": "2020-05-20 15:55:48",
                "index": 5,
                "user": "wimdeblauwe"
            },
            {
                "id": "5ec555ca9832dd6f04647479",
                "text": "I'm not sure that's the best course of action. Documenting everything that Spring Boot itself does not do is essentially a never-ending task. I'll open an issue instead to see if there's something we can do about the inconsistency.",
                "time": "2020-05-20 16:07:38",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 497,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c6e60079155d45d904cde88",
                "text": "I was wondering about Spring Boot 2.1.3 + Postgresql + database initialization.\n\nWe return from our DataSource a com.opentable.db.postgres.embedded.EmbeddedPostgres database. In our application.properties file, hibernate.ddl-auto=none, schema and data is set to working .sql files for creating and inserting into the database. Still the database is not initialized if I don't set spring.datasource.initialization-mode=always.\n\nIs this a bug or is the EmbeddedPostgres not supported by Spring Boot 2's database initialization by default?",
                "time": "2019-02-21 08:23:35",
                "index": 0,
                "user": "masu1402"
            },
            {
                "id": "5c6e7bcbc776985d8f2b4138",
                "text": "Spring Boot considers a database to be embedded if it's running in the same process as the application. Specifically, H2, Derby, and HSQLDB can all be identified as an embedded database. In Spring Boot's terms, EmbeddedPostgres isn't embedded.",
                "time": "2019-02-21 10:22:03",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c6e7be3c82c68509e10816d",
                "text": "@wilkinsona Ok. Thank you!",
                "time": "2019-02-21 10:22:27",
                "index": 2,
                "user": "masu1402"
            }
        ]
    },
    {
        "id": 498,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5cf0377f7c1dab468c736a80",
                "text": "Hello all. Have a question regarding spring boot actuator. I am building a web application which exposes certain endpoints to user. I want to expose custom metrics like number of users currently using the app, number of get/post requests coming in, time taken by api's to execute and various other counters. Is there a guide which explains how to do this? ",
                "time": "2019-05-30 20:05:19",
                "index": 0,
                "user": "ravening"
            },
            {
                "id": "5cf03c21481ef4167ba2d2c6",
                "text": "@rakgenius You can read this [article](https://docs.spring.io/spring-boot/docs/2.2.0.M2/reference/html/production-ready-features.html), it's basically how to secure your endpoints, how to add custom metric etc.",
                "time": "2019-05-30 20:25:05",
                "index": 1,
                "user": "tomicarsk6"
            }
        ]
    },
    {
        "id": 499,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5e3067146f9d3d3498f49636",
                "text": "I was looking at the new docker capabilities in 2.3.0-M1 and I had 2 questions: \n1- Is docker required to build the images? I guess it is, but it's a very important point in favor of Jib\n2- Is there a way to get the layered dockerfile? or should one copy the one in the example blog post and keep it for future reference to use it? ",
                "time": "2020-01-28 16:53:40",
                "index": 0,
                "user": "jorgemoralespou"
            },
            {
                "id": "5e30689040da694c5ee00cd3",
                "text": "@jorgemoralespou \n\n1. It is if you are using the buildpack integration. They do quite a bit more than jib so the Docker requirement is unavoidable.\n2. You should copy the one from the blog post for now. It'll also be added to the reference documentation at some point before 2.3 GA. We've considered generating the file automatically (and have a prototype of that) but we're unsure how useful it will be in practice as users will inevitably want to customise it to meet their specific needs. Things like changing the base image, creating users, etc.",
                "time": "2020-01-28 17:00:00",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5e306ac6433e1d40396bb744",
                "text": "@wilkinsona what if you don't use the buildpack integration? just the layered jarmode?",
                "time": "2020-01-28 17:09:26",
                "index": 2,
                "user": "jorgemoralespou"
            },
            {
                "id": "5e306b72e8a8383559eca311",
                "text": "@wilkinsona I think I've seen the prototype where there was a jarmode=dockerfile. I think that even if a user wants to change the dockerfile, getting a working example OOTB would be useful. From there, it's easy to customize. Think that otherwise, one would need to find the correct documentation, and hope that it's aligned with the version. If provided in the jarmode tools, the dockerfile example will always be aligned, at least as a basic example",
                "time": "2020-01-28 17:12:18",
                "index": 3,
                "user": "jorgemoralespou"
            },
            {
                "id": "5e3070b29e366928fdf71e71",
                "text": "@jorgemoralespou if you don't use the buildpack integration,  just the layered jarmode, then you don\u2019t need a docker daemon running locally.",
                "time": "2020-01-28 17:34:42",
                "index": 4,
                "user": "scottfrederick"
            },
            {
                "id": "5e30739abfe65274eab31d2f",
                "text": "I see, but if I want an image, I need docker daemon. So, unlike jib, this plugin does only produce the artifacts in a specific format, that can be then used in a docker build (hence, requiring a docker daemon)",
                "time": "2020-01-28 17:47:06",
                "index": 5,
                "user": "jorgemoralespou"
            }
        ]
    },
    {
        "id": 500,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cdeada49404bf2aed60941d",
                "text": "The configuration of atomikos doesn't provide a way to disable the startup messages?\n> Thanks for using Atomikos! Evaluate http://www.atomikos.com/Main/ExtremeTransactions for advanced features and professional support\nor register at http://www.atomikos.com/Main/RegisterYourDownload to disable this message and receive FREE tips & advice\n\nThere's no `spring.jta.atomikos.properties.registered`\n",
                "time": "2019-05-17 12:48:36",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5cdeb4aa83ae782aee8348f9",
                "text": "@OrangeDog  I believe it is problem with atomikos not with spring https://github.com/atomikos/transactions-essentials/blob/master/public/transactions/src/main/java/com/atomikos/icatch/provider/imp/AssemblerImp.java#L105\nPrefer using http://narayana.io/ ",
                "time": "2019-05-17 13:18:34",
                "index": 1,
                "user": "mohanaraosv"
            },
            {
                "id": "5cdeb4e00ac9852a95f2f3c1",
                "text": "@mohanaraosv it's not a problem with atomikos. Spring Boot doesn't allow autoconfiguration of that property.",
                "time": "2019-05-17 13:19:28",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5cdeb5109404bf2aed60ceff",
                "text": "It can still be set with a system property though",
                "time": "2019-05-17 13:20:16",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5cdec7045b63ea22b3c0a6e0",
                "text": "I'm getting very confused with JTA. I've tried both the atomikos and bitronix starters. Are you supposed to disable Hikari and use the JTA pools instead?",
                "time": "2019-05-17 14:36:52",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5cdec7f59404bf2aed6171bc",
                "text": "Therefore you can' t use any of the boot config to create the `DataSource`?",
                "time": "2019-05-17 14:40:53",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5cdecc600ec37966a1866329",
                "text": "@OrangeDog I don't think it's appropriate for us to have a configuration property. Atomikos doesn't document the property anywhere and seems to prefer to only explain what to do once you have registered. If we add a configuration property we would be documenting the property and not honouring the Atomikos team's intent.",
                "time": "2019-05-17 14:59:44",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5cdecc90ef853135c8d7ee1d",
                "text": "@wilkinsona that's true I suppose. Though it's open source so not exactly hard to find.",
                "time": "2019-05-17 15:00:32",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5cdecd80509b1035c764e2b9",
                "text": "Yeah, it's not hard to find, but they seem to be making it as hard as they can while still being OSS. We should respect that, I think.",
                "time": "2019-05-17 15:04:32",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5cdecdafecdf942b4cfc4882",
                "text": "With regards to pooling, yes, when using Atomikos or Bitronix, you need to use their connection pools. That's how the connections and the work that they do against the database get enlisted in the XA transaction.",
                "time": "2019-05-17 15:05:19",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5cdece125b63ea22b3c0e56a",
                "text": "You can still use spring.datasource.url and the like to configure the DataSource, but it will then be pooled by the transaction manager rather than Hikari",
                "time": "2019-05-17 15:06:58",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5cdece445b63ea22b3c0e6ce",
                "text": "Our Atomikos and Bitronix samples both use an auto-configured DataSource with JTA.",
                "time": "2019-05-17 15:07:48",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5cded12bd22ba766a2b28e21",
                "text": "Having spent ages on my multi-config db to get the hikari config applied properly...",
                "time": "2019-05-17 15:20:11",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5cded13def853135c8d81630",
                "text": "I'm just going to use a `ChainedTransactionManager` for the moment",
                "time": "2019-05-17 15:20:29",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5cded1408265145bbb28b0ba",
                "text": "For my sanity",
                "time": "2019-05-17 15:20:32",
                "index": 15,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 501,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c54f87854f21a71a1e3ebeb",
                "text": "So uhm I'm doing requests from a domain to the same domain on the same port from react. I get a CORS error every time despite having @CrossOrigin(origins = \"*\", allowedHeaders = \"*\", methods = RequestMethod.GET)\n on the CLASS",
                "time": "2019-02-02 01:55:04",
                "index": 0,
                "user": "Redmancometh"
            },
            {
                "id": "5c54f89cceb5a2264f7cac58",
                "text": "Then to top it off I added https://pastebin.com/pruAeecm\n\nand it does nothing",
                "time": "2019-02-02 01:55:40",
                "index": 1,
                "user": "Redmancometh"
            },
            {
                "id": "5c54f8b2ca428b06453e297e",
                "text": "no allow origin header in t he network nothing...the filter is in the same class as the rest of my @Configuration classes",
                "time": "2019-02-02 01:56:02",
                "index": 2,
                "user": "Redmancometh"
            },
            {
                "id": "5c54f8b79221b9382dfe0b86",
                "text": "So I'm mega confused atm",
                "time": "2019-02-02 01:56:07",
                "index": 3,
                "user": "Redmancometh"
            },
            {
                "id": "5c54f91a9ed7e3764f4b2def",
                "text": "@Redmancometh give this a whirl: https://github.com/mateothegreat/k8specs-platform-api/blob/master/src/main/java/k8specs/api/config/ApplicationConfig.java#L13",
                "time": "2019-02-02 01:57:46",
                "index": 4,
                "user": "mateothegreat"
            },
            {
                "id": "5c54f94a7b68f94102588f7b",
                "text": "Ty will give it a shot",
                "time": "2019-02-02 01:58:34",
                "index": 5,
                "user": "Redmancometh"
            },
            {
                "id": "5c54f95854f21a71a1e3efe5",
                "text": "So weird how basically none of the regular solutions work like at all",
                "time": "2019-02-02 01:58:48",
                "index": 6,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fbe193fe7d5ac02bc315",
                "text": "\"Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://*************:8484/prioritize?visitId=******. (Reason: CORS request did not succeed).[Learn More]\"",
                "time": "2019-02-02 02:09:37",
                "index": 7,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fbe2f04ef00644c5876e",
                "text": "ffs",
                "time": "2019-02-02 02:09:38",
                "index": 8,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fbe9f04ef00644c587cb",
                "text": "why spring why",
                "time": "2019-02-02 02:09:45",
                "index": 9,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fd3f8aa5ca5abf6dbdbd",
                "text": "https://pastebin.com/4dAZNu3c\n\nrequest headers...no response for response headers",
                "time": "2019-02-02 02:15:27",
                "index": 10,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fd427b68f9410258a7aa",
                "text": "this is pissing me off so much",
                "time": "2019-02-02 02:15:30",
                "index": 11,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fe4683f387390388f8c7",
                "text": "@Redmancometh `curl -X OPTIONS https://whatever:8484/prioritize`",
                "time": "2019-02-02 02:19:50",
                "index": 12,
                "user": "mateothegreat"
            },
            {
                "id": "5c54fe55a59de252b04e8b03",
                "text": "are you trying to test CORs?",
                "time": "2019-02-02 02:20:05",
                "index": 13,
                "user": "mateothegreat"
            },
            {
                "id": "5c54fe5993fe7d5ac02bd0b1",
                "text": "requires auth so I can't do that sadly",
                "time": "2019-02-02 02:20:09",
                "index": 14,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fe6d8aa5ca5abf6dc407",
                "text": "but I mean...shouldn't the headers be present in the request headers in chrome/firefox?",
                "time": "2019-02-02 02:20:29",
                "index": 15,
                "user": "Redmancometh"
            },
            {
                "id": "5c54fe7c9221b9382dfe2c06",
                "text": "I understand not seeing them in the response somewhat",
                "time": "2019-02-02 02:20:44",
                "index": 16,
                "user": "Redmancometh"
            },
            {
                "id": "5c550048ceb5a2264f7cda9b",
                "text": "Well used rest.js from react instead of just using fetch...no more CORS errors",
                "time": "2019-02-02 02:28:24",
                "index": 17,
                "user": "Redmancometh"
            },
            {
                "id": "5c55004c93fe7d5ac02bdd33",
                "text": "not gonna question it just accept it I appreciate the help",
                "time": "2019-02-02 02:28:28",
                "index": 18,
                "user": "Redmancometh"
            }
        ]
    },
    {
        "id": 502,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0a9b24ecc6a91b3124227a",
                "text": "Hi booters, is it possible with `actuator` (without jmx) to inspect a bean's attributes values?  I tried `/actuator/beans/<bean-name>` without success",
                "time": "2019-06-19 20:29:24",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5d0a9b28a8d9871b32c7b0e7",
                "text": "Thanks",
                "time": "2019-06-19 20:29:28",
                "index": 1,
                "user": "akuma8"
            },
            {
                "id": "5d0b1b1d4291ad76a58fcba7",
                "text": "@akuma8 should be trivial to add an endpoint that takes bean name and invokes toString on it or may be jsonifies it and prints it back to user. Be mindful around what you expose here. It can be a potential security weakness of your app",
                "time": "2019-06-20 05:35:25",
                "index": 7,
                "user": "javaman20"
            }
        ]
    },
    {
        "id": 503,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bfe9965958fc53895021d9f",
                "text": "hello.\nAny clear explanation what is the use of `equals ()` and `hashCode ()` methods in java ? \n:D",
                "time": "2018-11-28 13:34:29",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5bfea627ced7003fe19c6459",
                "text": "@davidparry ok thanks",
                "time": "2018-11-28 14:28:55",
                "index": 4,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 504,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd67c0555bbed7ade1b6176",
                "text": "Hello, I've got a question regarding custom spring boot starters. I'd like to have a starter that contains a jpa repository & a service.\nMy `UserRepository` is very simple, extends the `JpaRepository`. However, when injecting this repository outside of the starter, spring throws ` Failed to instantiate [...UserRepository]: Specified class is an interface`.\nI've added this repository in the spring.factories file, but same issue. I've also tried to add `@ComponentScan` on both the starter & the app (using the starter), same issue too.\nIs there anything I'm missing to use repository/interfaces in a spring boot starter? ",
                "time": "2019-11-21 11:59:01",
                "index": 0,
                "user": "nWidart"
            },
            {
                "id": "5dd67e1b5b3db9548ac5e228",
                "text": "@nWidart There's no need to list a repository in `spring.factories`. Spring Data should find them via scanning that's switched on by `@EnableJpaRepositories`. Boot will auto-configure that for you and it'll scan all of the auto-configuration packages by default. Try adding `@AutoConfigurationPackage` to a `@Configuration` class in your starter that's in the same package as your `UserRepository`",
                "time": "2019-11-21 12:07:55",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dd682945b3db9548ac60213",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/l3n3/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/l3n3/image.png)",
                "time": "2019-11-21 12:27:00",
                "index": 2,
                "user": "nWidart"
            },
            {
                "id": "5dd682a0f977187add8976c8",
                "text": "I see ok, that seems to work for the repository, thanks! IntelliJ isn't happy though, saying bean not found. yet it does find it",
                "time": "2019-11-21 12:27:12",
                "index": 3,
                "user": "nWidart"
            },
            {
                "id": "5dd682e1b010e62276440866",
                "text": "Not the end of the world I guess. :)\nA similar issue was with a service class, that has an interface and its implementation. I had to add the implementation in the spring.factories file (while the service is annotated with `@Service` is this expected or is there also a better way to acoomplish this?",
                "time": "2019-11-21 12:28:17",
                "index": 4,
                "user": "nWidart"
            },
            {
                "id": "5dd68dbbb010e62276445ecd",
                "text": "A `@Service` is a specialised `@Component` so generally they'd be found by component scanning, however we recommend not using component scanning in a starter and its auto-configuration",
                "time": "2019-11-21 13:14:35",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5dd68ddf99dfe74c95806797",
                "text": "I'd recommend using `@Bean` methods in `@Configuration` classes instead. Those `@Configuration` classes should be listed under `EnableAutoConfiguration` in `spring.factories`.",
                "time": "2019-11-21 13:15:11",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5dd68f8c1bf5192e667b408c",
                "text": "Ah I see ok that makes sense, thanks! \ud83d\ude04",
                "time": "2019-11-21 13:22:20",
                "index": 7,
                "user": "nWidart"
            }
        ]
    },
    {
        "id": 505,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d51289cbb5364334c188d11",
                "text": "Hi All, I'm facing following issue on application startup: Parameter 0 of constructor in com.xxx.xxx.xxx.XXXPermissionEvaluator required a bean named 'entityManagerFactory' that could not be found.\n",
                "time": "2019-08-12 08:51:40",
                "index": 0,
                "user": "anand2techie"
            },
            {
                "id": "5d5128aa53490e334dd981ff",
                "text": "upgraded to Spring boot 2.1.7",
                "time": "2019-08-12 08:51:54",
                "index": 1,
                "user": "anand2techie"
            },
            {
                "id": "5d5128bf9507182477c3ec70",
                "text": "defined below dependencies in gradle:",
                "time": "2019-08-12 08:52:15",
                "index": 2,
                "user": "anand2techie"
            },
            {
                "id": "5d5128c05178a7247672a70e",
                "text": "// Spring libs for web, JMS, security, and MVC\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n    implementation 'org.springframework.boot:spring-boot-starter-activemq'\n    implementation 'org.springframework.boot:spring-boot-starter-security'\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.retry:spring-retry'\n\n    implementation 'org.springframework.cloud:spring-cloud-starter'\n    // Traceable logging\n    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'",
                "time": "2019-08-12 08:52:16",
                "index": 3,
                "user": "anand2techie"
            },
            {
                "id": "5d5128e6029a51607f7ccfbf",
                "text": "Defined db configurations in application.yml as well. Any answers would be helpful",
                "time": "2019-08-12 08:52:54",
                "index": 4,
                "user": "anand2techie"
            },
            {
                "id": "5d5165422612bb718c545614",
                "text": "@anand2techie do you have another jpa dependency in your project?",
                "time": "2019-08-12 13:10:26",
                "index": 6,
                "user": "adrianSoria"
            },
            {
                "id": "5d517655d03a7c63e614aee3",
                "text": "@adrianSoria Hi Adrian, No I don't have. Actual I've fixed it. issue is because of ComponentScan and related config were not right",
                "time": "2019-08-12 14:23:17",
                "index": 7,
                "user": "anand2techie"
            }
        ]
    },
    {
        "id": 506,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e309c43f301780b833e4dce",
                "text": "Hello, Where can I find documentation on custom favicon with spring boot? I am attempting to remove/disable the default spring boot logo on the browser using java/angular.",
                "time": "2020-01-28 20:40:35",
                "index": 0,
                "user": "zjesse1314_gitlab"
            },
            {
                "id": "5e309cc9f301780b833e5016",
                "text": "@zjesse1314_gitlab You can add a `favicon.ico` file alongside the other static resources in your app",
                "time": "2020-01-28 20:42:49",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5e309d57dc52c34ace1e5ae4",
                "text": "I you're using 2.2.x, there's no default favicon. If you're using 2.1.x you can set `spring.mvc.favicon.enabled` to disable the default one.",
                "time": "2020-01-28 20:45:11",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5e309dcbfe0e6f74e9d801f5",
                "text": "@wilkinsona I am using 2.1.5. have a favico.ico in the static folder. But still shows the spring leaf favicon.  Also I tried adding spring.mvc.favicon.enabled=false and spring.favicon.enabled=false to disable the favicons but no luck. Still see the spring icon.",
                "time": "2020-01-28 20:47:07",
                "index": 3,
                "user": "zjesse1314_gitlab"
            },
            {
                "id": "5e30adad6f9d3d3498f6a88e",
                "text": "@wilkinsona Thank you, I resolved my issue. Seems like it does not go into the src/main/resources/static/favicon.ico I moved the favicon to src/main/resources and it worked!",
                "time": "2020-01-28 21:54:53",
                "index": 8,
                "user": "zjesse1314_gitlab"
            }
        ]
    },
    {
        "id": 507,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f175bf09419f46bf5be80be",
                "text": "Hey, everybody. I tried to upgrade the Spring Boot version for my application and found a difference in behavior. When switching from 2.2.7 to 2.2.8 (and above), the conversion from identifier to database entity stops working. I wrote a simple application to show what it looks like.  https://github.com/Vaysman/dcc-test/tree/master",
                "time": "2020-07-21 21:19:44",
                "index": 0,
                "user": "Vaysman"
            },
            {
                "id": "5f175c4f43d5173b8c0d9a4a",
                "text": "When I started to investigate this problem, I discovered that the root of this is in the DomainClassConverter class. ",
                "time": "2020-07-21 21:21:19",
                "index": 1,
                "user": "Vaysman"
            },
            {
                "id": "5f175db4acf05a6be43f1c6b",
                "text": "I understand that the problem lies in the setApplicationContext method. The method uses lazy initialization and it adds converters to Conversion, but only after the first use. But this event never occurs because the converter is not registered in \u0421onversionService.",
                "time": "2020-07-21 21:27:16",
                "index": 2,
                "user": "Vaysman"
            },
            {
                "id": "5f175e036279c91f4204af56",
                "text": "Is it a bug? Or am I doing something wrong?",
                "time": "2020-07-21 21:28:35",
                "index": 3,
                "user": "Vaysman"
            },
            {
                "id": "5f17d730acf05a6be4405027",
                "text": "@Vaysman I believe it's a bug in Spring Data. If it's the problem that I am thinking of, it's been fixed in Spring Data snapshots and the fix will be included in tomorrow's Spring Boot releases.",
                "time": "2020-07-22 06:05:36",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5f1802b09360cb1f466080ec",
                "text": "@wilkinsona thank you. I found it. ",
                "time": "2020-07-22 09:11:12",
                "index": 6,
                "user": "Vaysman"
            }
        ]
    },
    {
        "id": 508,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c4f49ed9221b9382dd7d46a",
                "text": "Is there a Spring -Security specific room?    Search doesn't bring anything else up",
                "time": "2019-01-28 18:29:01",
                "index": 0,
                "user": "tlann"
            },
            {
                "id": "5c4f4a7dceb5a2264f56813d",
                "text": "\"spring-security\"",
                "time": "2019-01-28 18:31:25",
                "index": 1,
                "user": "glammr1"
            },
            {
                "id": "5c4f4cf878e1ed4103a3f4b1",
                "text": "@glammr1 Thanks.  I'm new to Gitter and a search for that didn't bring  it up.  I then saw the globe outline and investigated that.",
                "time": "2019-01-28 18:42:00",
                "index": 2,
                "user": "tlann"
            },
            {
                "id": "5c4f507593fe7d5ac005d075",
                "text": "No problem!  I just happened to have it sitting in \"Your Suggestions\" :)",
                "time": "2019-01-28 18:56:53",
                "index": 3,
                "user": "glammr1"
            }
        ]
    },
    {
        "id": 509,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e2667d8342e1054d056cca6",
                "text": "guys,I want create log of my normal spring boot with strategy of saveing a month log,example day,I want it is from 2019-12-22  to 2020-01-21 and tomorrow 2019-12-23 to 2020-01-22,better can study at a offical URL,I don't find it!",
                "time": "2020-01-21 02:54:16",
                "index": 0,
                "user": "xuanjinnan"
            },
            {
                "id": "5e26cba5342e1054d0597b6b",
                "text": "@xuanjinnan you could search in google by \"slf4j log4j rotation\" https://examples.javacodegeeks.com/enterprise-java/log4j/log4j-rotation-example/ is an example",
                "time": "2020-01-21 10:00:05",
                "index": 3,
                "user": "bvn13"
            }
        ]
    },
    {
        "id": 510,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d38d0821dc63329660a1fc2",
                "text": "Hi - I may have missed it but was wondering if the `spring-boot-samples` are moving to a  different location in git as I don't see the folder in the `master` branch",
                "time": "2019-07-24 21:41:22",
                "index": 0,
                "user": "ranarula"
            },
            {
                "id": "5d3940cd0bb0ac39beaebc5e",
                "text": "We\u2019ve moved them to smoke tests as that\u2019s what they really are",
                "time": "2019-07-25 05:40:29",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5d3940e4415d6a31b4d3fc8d",
                "text": "https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tests/spring-boot-smoke-tests",
                "time": "2019-07-25 05:40:52",
                "index": 2,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 511,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cefad53faac6439340edc5f",
                "text": "Hello, I'm trying to deploy a webflux app to cloud foundry that depends on reactive mongodb, but `AbstractCloudConfig` provides support to the blocking one, is there a way to overcome this issue?",
                "time": "2019-05-30 10:15:47",
                "index": 0,
                "user": "andyalbert"
            },
            {
                "id": "5cefc44ffaac6439340f727d",
                "text": "@andyalbert I see you've cross-posted in https://gitter.im/spring-cloud/spring-cloud. That's the better place to ask. Please make it clear that you've cross-posted, though. If you don't, people may end up wasting their time trying to help you when you've already got the answer that you need.",
                "time": "2019-05-30 11:53:51",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cefd1ebbf4cbd167c005aa6",
                "text": "@wilkinsona Sorry, I'm new to gitter and not aware of the rules, sorry again",
                "time": "2019-05-30 12:51:55",
                "index": 4,
                "user": "andyalbert"
            }
        ]
    },
    {
        "id": 512,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cc2cf15b4700e023dd5b0dd",
                "text": "Hi everybody, in a spring-boot context, I use spring-session with REDIS. But in our on premise infrastructure, REDIS comes with Dynamite from Netflix to do the cross datacenter replication and high availability. And Dynomite doesn\u2019t support PUB/SUB commands. \nSo we need to write our own custom sessionRepository with no pub/sub commands.\nIt\u2019s where I have an issue with Spring Boot Autoconfiguration, I should be able to do easilly this custom if I trust the documentation (https://docs.spring.io/spring-session/docs/current-SNAPSHOT/reference/html/custom-sessionrepository.html#custom-sessionrepository).\nSo I have make a config class such as :\n```\n@Configuration\n@EnableRedisHttpSession\npublic class SessionConfig extends AbstractHttpSessionApplicationInitializer {\n\n    @Bean\n    @Primary\n    public SessionRepository sessionRepository() {\n        return new RedisDynoSessionRepository();\n    }\n}\n```\nAnd this is the signature of my Custom Repository Class :\n```\npublic class RedisDynoSessionRepository implements\n        FindByIndexNameSessionRepository<RedisDynoSessionRepository.RedisSession>\n\u2026\n```\nThe issue is that at runtime Spring complains about initializing the bean because it exists :\n```\n[11:35:45.235] WARN   [nConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'sessionRepository' defined in class path resource [com/orange/ccmd/spring/redis/SessionConfig.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=sessionConfig; factoryMethodName=sessionRepository; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/orange/ccmd/spring/redis/SessionConfig.class]] for bean 'sessionRepository': There is already [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration; factoryMethodName=sessionRepository; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.class]] bound.\n```\nAnd if I setup the override configuration of Spring Boot it complains because there are not the same types\n```\n[11:28:49.894] WARN   [nConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisMessageListenerContainer' defined in class path resource [org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.listener.RedisMessageListenerContainer]: Factory method 'redisMessageListenerContainer' threw exception; nested exception is java.lang.IllegalStateException: @Bean method RedisHttpSessionConfiguration.sessionRepository called as bean reference for type [org.springframework.session.data.redis.RedisOperationsSessionRepository] but overridden by non-compatible bean instance of type [com.orange.ccmd.spring.redis.RedisDynoSessionRepository]. Overriding bean of same name declared in: class path resource [com/orange/ccmd/spring/redis/SessionConfig.class]\n```\nI\u2019d like to know the proper way to provide my own implementation of a sessionRepository to Spring ?",
                "time": "2019-04-26 09:27:49",
                "index": 0,
                "user": "herveDarritchon"
            },
            {
                "id": "5cc2dce35b3f941aa5951bcf",
                "text": "I don't think this is a problem with Boot's auto-configuration. It will back off when you declare your own `SessionRepository` bean",
                "time": "2019-04-26 10:26:43",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2dd5b3d78aa6c0399c270",
                "text": "It looks like a couple of Spring Session problems to me:\n\n1. It seems to rely on bean definition overriding to allow a custom `SessionRepository` to be configured\n2. When bean definition overriding is permitted, RedisHttpSessionConfiguration makes some assumptions about the type of the SessionRepository which do not hold true",
                "time": "2019-04-26 10:28:43",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2dddc3d78aa6c0399c551",
                "text": "@herveDarritchon I see you've already been discussing this in https://gitter.im/spring-projects/spring-session. It would have been courteous to mention that to avoid people wasting time duplicating effort",
                "time": "2019-04-26 10:30:52",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2de35a4ef0974710103eb",
                "text": "If I were you, I would open a Spring Session issue. Ideally, Spring Session would allow repository customization with bean definition overriding disabled. Putting that aside, I think a change is still needed to RedisHttpSessionConfiguration regardless",
                "time": "2019-04-26 10:32:21",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2e72a1cd0b8307d76d261",
                "text": "@wilkinsona first of all, sorry if I didn\u2019t mention my post on the spring-session gitter. As I tried to reformulate it, I thought it wasn\u2019t necessary to mention it. I was wrong. Sorry about that and thanks to answer.\nI will follow your advice and open an issue in spring-session github.\n",
                "time": "2019-04-26 11:10:34",
                "index": 5,
                "user": "herveDarritchon"
            }
        ]
    },
    {
        "id": 513,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c2cf65593cce97d3bd7c55e",
                "text": "Okay, I have a question. What's the main difference between the following two \"implementations\" of `WebMvcConfigurer`?\nCreating `@Configuration`:\n```\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n                .allowedOrigins(\"*\")\n                .allowCredentials(false)\n                .allowedHeaders(\"Accept\",\"Content-Type\",\"Origin\",\"Authorization\")\n                .exposedHeaders(\"Authorization\")\n                .allowedHeaders(\"POST\",\"GET\",\"DELETE\",\"OPTIONS\",\"PUT\");\n    }\n}\n```\nand creating `@Bean`:\n```\n@Bean\n    public WebMvcConfigurer corsConfig() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                        .allowedOrigins(\"*\")\n                        .allowCredentials(false)\n                        .allowedHeaders(\"Accept\",\"Content-Type\",\"Origin\",\"Authorization\")\n                        .exposedHeaders(\"Authorization\")\n                        .allowedHeaders(\"POST\",\"GET\",\"DELETE\",\"OPTIONS\",\"PUT\");\n            }\n        };\n    }\n```",
                "time": "2019-01-02 17:35:17",
                "index": 0,
                "user": "PaddaelsM"
            },
            {
                "id": "5c2dc54d0b7fc97caadf7bea",
                "text": "@PaddaelsM I also want to know",
                "time": "2019-01-03 08:18:21",
                "index": 1,
                "user": "junjiex123"
            },
            {
                "id": "5c2fe1da73360b4d55bbfcc7",
                "text": "@PaddaelsM Both works exactly the same way; difference being how you want to create it.",
                "time": "2019-01-04 22:44:42",
                "index": 11,
                "user": "abhishekransingh"
            }
        ]
    },
    {
        "id": 514,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5cd07fad6a84d76ed8574902",
                "text": "a while since I comitted to the spring boot project. PRs are created against the earlierst release branch (e.g. 2.0.x) and then merged forward to 2.1.x and then to master)?",
                "time": "2019-05-06 18:40:45",
                "index": 0,
                "user": "eiselems"
            },
            {
                "id": "5cd081b08446a6023ed86b2e",
                "text": "Yes",
                "time": "2019-05-06 18:49:20",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5cd082643d78aa6c03f72599",
                "text": "except 2.0.x is EOL, so 2.1.x is a better choice in this case",
                "time": "2019-05-06 18:52:20",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5cd08286a4ef0974715dc19e",
                "text": "https://spring.io/blog/2019/04/03/spring-boot-2-0-9-released",
                "time": "2019-05-06 18:52:54",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5cd083b5375bac747068065d",
                "text": "Thanks Brian, exactly what I was looking for \ud83d\udc4d",
                "time": "2019-05-06 18:57:57",
                "index": 4,
                "user": "eiselems"
            },
            {
                "id": "5cd08448990feb4518635e0b",
                "text": "Let's cherry pick from my master based branch and see if that works better then \ud83d\ude05",
                "time": "2019-05-06 19:00:24",
                "index": 5,
                "user": "eiselems"
            },
            {
                "id": "5cd08e2fe416b845193ff409",
                "text": "Today I have no luck with CI/CD it seems ... :D",
                "time": "2019-05-06 19:42:39",
                "index": 6,
                "user": "eiselems"
            },
            {
                "id": "5cd08e93a4ef0974715e16d1",
                "text": "```\nwaiting for docker to come up...\nError response from daemon: Get https://registry-1.docker.io/v2/: toomanyrequests: too many failed login attempts for username or IP address\n```",
                "time": "2019-05-06 19:44:19",
                "index": 7,
                "user": "eiselems"
            }
        ]
    },
    {
        "id": 515,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5f28b0ada2be9049908d61fb",
                "text": "Hello Guys, ",
                "time": "2020-08-04 00:49:49",
                "index": 0,
                "user": "KomaBeyond"
            },
            {
                "id": "5f28b12d03d73b60ee650cf6",
                "text": "Is there any materials that can help me have a good understand for the spring-security?",
                "time": "2020-08-04 00:51:57",
                "index": 1,
                "user": "KomaBeyond"
            },
            {
                "id": "5f29270836563560f2c1036a",
                "text": "https://docs.spring.io/spring-security/site/docs/current/reference/html5/",
                "time": "2020-08-04 09:14:48",
                "index": 3,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 516,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bb7b4ec82893a2f3ba58d87",
                "text": "hi i am migrating from 1.2.5 spring boot to 2.0.5 spring boot getting this error is any body having idea on this\n2018-10-06 00:21:10 [main] ERROR o.s.b.SpringApplication:863 - Application run failed\njava.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter\n        at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64)\n        at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\n        at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:180)\n        at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:141)\n        at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)\n        at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)\n        at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)\n        at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:271)\n        at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:91)\n        at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)\n        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:780)\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:333)\n        at com.datametica.governer.coordinator.Application.main(Application.java:76)\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]\n        at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)\n        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)\n        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)\n        at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:718)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:659)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:627)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1012)\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:194)\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:170)\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanType(BeanTypeRegistry.java:163)\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.lambda$updateTypesIfNecessary$2(BeanTypeRegistry.java:150)\n        at java.util.Iterator.forEachRemaining(Iterator.java:116)\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:148)\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getNamesForType(BeanTypeRegistry.java:114)\n        at org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:26",
                "time": "2018-10-05 19:01:00",
                "index": 0,
                "user": "nkmurthy"
            },
            {
                "id": "5bb7b9f0ae7be9401608991a",
                "text": "@nkmurthy edit that, go into compose mode (right side of input bar) and add \"```\" at the top and bottom of the error please.",
                "time": "2018-10-05 19:22:24",
                "index": 1,
                "user": "springroll12"
            },
            {
                "id": "5bb7bad6600c5f64235c40e8",
                "text": "@nkmurthy which DB are you using? spring uses hibernate as default. if you want to use different vendor then you need to customize it ",
                "time": "2018-10-05 19:26:14",
                "index": 2,
                "user": "hayaticakici"
            },
            {
                "id": "5bb7d7dac08b8b3067db1601",
                "text": "@nkmurthy that looks like a corrupted classpath to me. Can you jump from 1.2 to the latest 1.5 first. And only then migrate to 2.0 once you\u2019re done?",
                "time": "2018-10-05 21:30:02",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 517,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bffe61af849b222e0c16339",
                "text": "Hello, \nI need some help. I'm trying to exit my spring application via `SpringApplication.exit`, but during shutdown I get `java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61c88f2 has been closed already`\nHow do I fix it?\nThanks",
                "time": "2018-11-29 13:14:02",
                "index": 0,
                "user": "javorka"
            },
            {
                "id": "5bffec74d24f9324d270d875",
                "text": "@javorka Try this",
                "time": "2018-11-29 13:41:08",
                "index": 3,
                "user": "gitmnd"
            },
            {
                "id": "5bffec7af849b222e0c19129",
                "text": "        System.exit(SpringApplication.exit(context, (ExitCodeGenerator) () -> 0));\n",
                "time": "2018-11-29 13:41:14",
                "index": 4,
                "user": "gitmnd"
            },
            {
                "id": "5bffec908dffd748dbff7328",
                "text": "context is your ConfigurableApplicationContext ",
                "time": "2018-11-29 13:41:36",
                "index": 5,
                "user": "gitmnd"
            }
        ]
    },
    {
        "id": 518,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dee591a6a85195b9e273544",
                "text": "Hello, is there an easy way how to obtain `localAddress` (addess on which the request was accpeted) from [ServerWebExchange](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/server/ServerWebExchange.html) ? Even when server is behind proxy?",
                "time": "2019-12-09 14:24:26",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5dee599ad75ad3721d810aac",
                "text": "I have multiple interface and I need to distinguish between them.",
                "time": "2019-12-09 14:26:34",
                "index": 1,
                "user": "bilak"
            },
            {
                "id": "5dee5adcb065c6433c675fbc",
                "text": "@bilak try to check all `getAttributes()`. ",
                "time": "2019-12-09 14:31:56",
                "index": 2,
                "user": "bvn13"
            },
            {
                "id": "5dee5b1ad75ad3721d811721",
                "text": "What class is responsible for all `@Value`-es populating?",
                "time": "2019-12-09 14:32:58",
                "index": 3,
                "user": "bvn13"
            },
            {
                "id": "5dee5b6d6a85195b9e274863",
                "text": "@bvn13 unfortunately there is no \"good\" attribute which can help me in this. only way I can think of is `exchange.getRequest().getURI().getHost()`",
                "time": "2019-12-09 14:34:21",
                "index": 4,
                "user": "bilak"
            },
            {
                "id": "5dee5b76d64a052fb6e3a7a2",
                "text": "but that could be changed with header",
                "time": "2019-12-09 14:34:30",
                "index": 5,
                "user": "bilak"
            },
            {
                "id": "5dee5cf48e906a1c8d9a330e",
                "text": "@bilak As I understand `exchange.getRequest().getURI().getHost()` is a host part of URL. It does not correlate with physical network adapter.",
                "time": "2019-12-09 14:40:52",
                "index": 8,
                "user": "bvn13"
            },
            {
                "id": "5dee5d4ec3d6795b9f4fcc98",
                "text": "can you explain your case more widely?",
                "time": "2019-12-09 14:42:22",
                "index": 9,
                "user": "bvn13"
            },
            {
                "id": "5dee5db31659720ca8290afb",
                "text": "@bvn13 sure, I'm building spring-cloud-gateway application where I need to distinguish between addresses on which I accept the requests. So for example I have addresses `192.168.1.2` and `192.168.1.3` and I need to perform different operations on each of them. ",
                "time": "2019-12-09 14:44:03",
                "index": 14,
                "user": "bilak"
            },
            {
                "id": "5dee5e0732df1245cb0fb6d8",
                "text": "@bilak take a look to my gateway-logger https://pastebin.com/kYKX3pax . it might be usefull",
                "time": "2019-12-09 14:45:27",
                "index": 17,
                "user": "bvn13"
            },
            {
                "id": "5dee5e369319bb519008a90d",
                "text": "the attribute GATEWAY_ORIGINAL_REQUEST_URL_ATTR might be your solving",
                "time": "2019-12-09 14:46:14",
                "index": 19,
                "user": "bvn13"
            },
            {
                "id": "5dee5e5e26eeb8518f91bfad",
                "text": "@bvn13 unfortunately I'm using it in descendant of `AbstractRoutePredicateFactory` where `GATEWAY_ORIGINAL_REQUEST_URL_ATTR` is not present :(",
                "time": "2019-12-09 14:46:54",
                "index": 20,
                "user": "bilak"
            },
            {
                "id": "5dee5ea0d64a052fb6e3c455",
                "text": "@bilak Could you implement a filter to intercept this attribute and save it for your purposes?",
                "time": "2019-12-09 14:48:00",
                "index": 23,
                "user": "bvn13"
            },
            {
                "id": "5dee5ec69319bb519008ae95",
                "text": "@bvn13 yes that maybe is a solution, let me try",
                "time": "2019-12-09 14:48:38",
                "index": 25,
                "user": "bilak"
            },
            {
                "id": "5dee5fd1c3d6795b9f4fdf3b",
                "text": "@bvn13 unfortunately filter is run after predicate, so that's not way how to do it",
                "time": "2019-12-09 14:53:05",
                "index": 26,
                "user": "bilak"
            },
            {
                "id": "5dee6014f65fec1c8eee1b6b",
                "text": "@bilak do you have `@Order(Ordered.HIGHEST_PRECEDENCE)` annotation on your filter?",
                "time": "2019-12-09 14:54:12",
                "index": 27,
                "user": "bvn13"
            },
            {
                "id": "5dee60589319bb519008b944",
                "text": "@bilak do you have 1 instance of gateway or 2?",
                "time": "2019-12-09 14:55:20",
                "index": 28,
                "user": "bvn13"
            },
            {
                "id": "5dee60ae6a85195b9e277590",
                "text": "@bvn13 no change if I put `@Order(Ordered.HIGHEST_PRECEDENCE)` to the filter. I have only 1 gateway currently, but it will be behind proxy.",
                "time": "2019-12-09 14:56:46",
                "index": 29,
                "user": "bilak"
            },
            {
                "id": "5dee61c3d75ad3721d814e91",
                "text": "your gateway is run 1 instance and listen 2 network interfaces... hm... I see a crazy approach to split your gateway into 2 instances (1 network interface per gateway instance) and to get `@Value(\"server.host\")` where you need it",
                "time": "2019-12-09 15:01:23",
                "index": 31,
                "user": "bvn13"
            }
        ]
    },
    {
        "id": 519,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ca4c4b11f6e900d5ed0d896",
                "text": "Does anybody know where the default `Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml]` http header of a `RestTemplate` comes from? Is this a spring configurable property?",
                "time": "2019-04-03 14:35:29",
                "index": 0,
                "user": "sddakoty"
            },
            {
                "id": "5ca4c4d8a0790b29c9559dd5",
                "text": "I think it is coming from RestTemplateBuilder - internal",
                "time": "2019-04-03 14:36:08",
                "index": 1,
                "user": "gitmnd"
            },
            {
                "id": "5ca4c51ca84e0c501acd162a",
                "text": "I already had a look into, but could not find anything about media type or sort of...",
                "time": "2019-04-03 14:37:16",
                "index": 2,
                "user": "sddakoty"
            },
            {
                "id": "5ca4c6c7a0790b29c955adfc",
                "text": "it's in `RestTemplate`, actually. the headers are automatically added by the included `messageConverters`. so anything related to JSON is configured by `MappingJackson2HttpMessageConverter` and XML `MappingJackson2XmlHttpMessageConverter`",
                "time": "2019-04-03 14:44:23",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5ca4c6fca0790b29c955af08",
                "text": "check out `MappingJackson2HttpMessageConverter:L68` for example",
                "time": "2019-04-03 14:45:16",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5ca4c71925686a7dc3cc11f8",
                "text": "or `MappingJackson2XmlHttpMessageConverter:L60`",
                "time": "2019-04-03 14:45:45",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5ca4c8028148e555b24140c6",
                "text": "I see, thank you. So if I'd like to add an additional media type, I'd just have to create a `@Bean` of `AbstractHttpMessageConverter` providing the desired media type? Is that the correct way?",
                "time": "2019-04-03 14:49:38",
                "index": 6,
                "user": "sddakoty"
            },
            {
                "id": "5ca4c86393fb4a7dc2c9b312",
                "text": "i'm not sure, sorry.",
                "time": "2019-04-03 14:51:15",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5ca4c871b34ccd69e75b6561",
                "text": "ok",
                "time": "2019-04-03 14:51:29",
                "index": 8,
                "user": "sddakoty"
            }
        ]
    },
    {
        "id": 520,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ba7f6a3e6046343f3a69146",
                "text": "Hello can someone help me with smth inSpring boot",
                "time": "2018-09-23 20:25:07",
                "index": 0,
                "user": "andihoxha"
            },
            {
                "id": "5ba7fa9b5df5194734023621",
                "text": "@andihoxha probably yes, just try and ask here \ud83d\ude00",
                "time": "2018-09-23 20:42:03",
                "index": 1,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba80d34b9531f2dfaae4b77",
                "text": "well I am creating some kind of blog using java spring boot.. I am new in this and most of code is from youtube or other part of internet. However when I ran as java springboot server it says APPLICATION FAILED TO START\n\nDescription:\n\nField postService in com.example.demo.BlogController required a bean of type 'Server.PostService' that could not be found.\n\nAction:\n\nConsider defining a bean of type 'Server.PostService' in your configuration.\nThe code is this;\n\n**package com.example.demo;  \n\nimport org.springframework.boot.SpringApplication;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n\n@SpringBootApplication\n\npublic class BlogApplication {\n\npublic static void main(String[] args) {\n\n    SpringApplication.run(BlogApplication.class, args);\n}\n\n\n\n\n\n**package com.example.demo;\n  import java.util.List;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.PostMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n import Server.PostService;\n import entities.Post;\n import java.util.Date;\n  @RestController\n  public class BlogController {\n  @Autowired\n  private PostService postService;\n  @GetMapping(value=\"/\")\n\n  public String index() {\n    return \"index\";\n    }\n  @GetMapping(value=\"/posts\")\n  public List<Post>posts(){\n  return postService.getAllPosts();\n\n    }\n  @PostMapping(value=\"/post\")\n  public void publishPost(@RequestBody Post post) {\n\n   if(post.getDatecreation() == null) \n  post.setDatecreation(new Date());\n      postService.insert(post);  \n     }\n     }**\n\n \n\n**package entities;\n    import java.util.Date;\n    import javax.persistence.Entity;\n    import javax.persistence.GeneratedValue;\n    import javax.persistence.GenerationType;\n    import javax.persistence.Id;\n    @Entity\n     public class Post {\n      @Id\n    @GeneratedValue(strategy=GenerationType.AUTO)\n     private Long id;\n     private String title;\n    private String body;\n    private Date Datecreation;\n\n    public Post() {\n\n     }\n    public long getId() {\n    return id;\n     }\n    public void setId(long id) {\n    this.id = id;\n    }   \n    public String gettitle() {\n    return title;\n     }\n    public void settitle(String title) {\n     this.title= title;\n     }\n    public String getBody() {\n    return body;\n     }\n    public void setBody(String body) {\n    this.body = body;\n     }\n    public Date getDatecreation() {\n    return Datecreation;\n    }\n    public void setDatecreation(Date datecreation) {\n    this.Datecreation = datecreation;\n    }\n    }**\n\n\n\n\n\n\n\n\n\n\n\n\n**package Repositories;\n\n   import org.springframework.data.jpa.repository.JpaRepository;\n   import org.springframework.stereotype.Repository;\n   import entities.Post;\n   @Repository\n   public interface PostRepository extends JpaRepository<Post,Long>{\n    }**",
                "time": "2018-09-23 22:01:24",
                "index": 2,
                "user": "andihoxha"
            },
            {
                "id": "5ba823f81ee2ca65025e0792",
                "text": "@andihoxha if you have a service class for you blogpost as mention BlogController.java `private PostService postService;` you should also add it as a BlogController constructor argument like \n```\nprivate PostService postService;\npublic BlogController(PostService postService){\n\tthis.postService = postService;\n}\n```",
                "time": "2018-09-23 23:38:32",
                "index": 3,
                "user": "ecukalla_twitter"
            },
            {
                "id": "5ba8257bd655361f76437ef6",
                "text": "@andihoxha you can have a look at [21-point](https://github.com/mraible/21-points/) which is a spring-boot & angular app generated with jhipster. Look at `src/main/java/org/jhipster/health/web/rest/` for the controllers with *Resource.java",
                "time": "2018-09-23 23:44:59",
                "index": 4,
                "user": "ecukalla_twitter"
            },
            {
                "id": "5ba88b0abe4f300626dc8123",
                "text": "@andihoxha As mentioned on your question at stackoverflow your package structure doesn't follow the best practices and as such doesn't detect anything that isn't under `com.example.demo`. Fix your package structure accordingly. ",
                "time": "2018-09-24 06:58:18",
                "index": 5,
                "user": "mdeinum"
            }
        ]
    },
    {
        "id": 521,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5df14c29ce2b2e652bbbdef2",
                "text": "Good Evening everyone. Wanted to ask a question for clarification. So I'm using Spring Boot for a REST Api application. So I'm trying to apply the MVC pattern to structure the project, let's pick for example a Facebook clone, I'll have a Model for Users, Events, Groups, Posts etc. Then I'll have some Controllers for these like PostController. But I'm not quite sure how to separate this layers. For now I'm using PostController like a `@RestController`, so I have the endpoints and doing actions on POST, GETetc. Let's pick a POST request to `/post` which it would create a new post. For now I instantiate a Post model class, fill it with info, save inside the DB using JPA + Postgres and that's it. The PostModel is an `@Entity` too, and when it's saved inside the Database, I return the Model and it automatically converts as a JSON. Well I'm quite happy on this, but was asking myself if this is the best way to do it. For now I'm using only the MC of the MVC pattern, what is the View? I know that's the JSON but should I consider it in another way. The model should update the view as the MVC states, but actually my JSON is returned by the Controller so this might be the case that the Controller is \"updating\" the View? Maybe there is a guide or video or some documentation where to look things like this? Thanks in advance",
                "time": "2019-12-11 20:06:01",
                "index": 0,
                "user": "joel.sina_gitlab"
            },
            {
                "id": "5df153af072446515d8d1757",
                "text": "@joel.sina_gitlab There isn't really a view when you're building a REST API. The view in MVC typically means HTML that's produced by combining an HTML template and the model produced by your control using something like Thymeleaf",
                "time": "2019-12-11 20:38:06",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5df156430995661eb8cbc80e",
                "text": "@wilkinsona Thank you for your reply. So my initial thoughts were correct on the view. So I have a few other questions. I have the `User`. So technically the user \"creates\" the Post to be pubblished. Should I consider a method inside the `User` on creating? Inside `PostController` maybe retreieve the User and from that call that method and then alter the data inside there or that's not the best way to deal with? Another question is: If I have a `Interface` and is implemented by two classes, how could I save them with JPA (Hibernate). So right now I have a `User` interface and `UserA` and `UserB` implementing it. I need to both save them inside the Users table, but `UserA` can do more things than `UserB`. For example commenting or reporting etc. That's why I'm unsure on the method inside the Model",
                "time": "2019-12-11 20:49:07",
                "index": 4,
                "user": "joel.sina_gitlab"
            },
            {
                "id": "5df1658ee72656230129dd73",
                "text": "@joel.sina_gitlab No, probably not. That sort of logic typically belongs in a service (or directly in the controller) rather than in the entity itself.",
                "time": "2019-12-11 21:54:22",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5df27f0a578ecf4b1f9089dd",
                "text": "@wilkinsona Ok so my initial thoughts were correct, glad to hear that. I managed with some searches to get it working not with the Interface but with an abstract class. The Abstract class is delcared as `Entity` with `@Inheritance` as a single table and `@DiscriminatorColumn` and the classes which extend the abstract are like `@Entity` with the `@DiscriminatorValue` assigned. Well it kinda works since when retrieving the `Post` JSON now the `User` has only the fields only for the Abstract class and not the sub classes too. I'll do some checks on this",
                "time": "2019-12-12 17:55:22",
                "index": 26,
                "user": "joel.sina_gitlab"
            }
        ]
    },
    {
        "id": 522,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c4f8fedc2dba5382ea388d1",
                "text": "Greetings. I want my spring boot app to serialize the response body as JSON. How do I configure my view to do that automatically?",
                "time": "2019-01-28 23:27:41",
                "index": 0,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f90eb8aa5ca5abf498695",
                "text": "in the annotation for your restful mapping there's a content-type thing",
                "time": "2019-01-28 23:31:55",
                "index": 1,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f90fbf46373406a1794ac",
                "text": "you just put application/json",
                "time": "2019-01-28 23:32:11",
                "index": 2,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9107ca428b06451a243e",
                "text": "@Redmancometh Trying\u2026thank you for the response!",
                "time": "2019-01-28 23:32:23",
                "index": 3,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f910b8aa5ca5abf4986f1",
                "text": "that'll automatically serialize a POJO To it iirc",
                "time": "2019-01-28 23:32:27",
                "index": 4,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9174454aad4df7ba6445",
                "text": "@Redmancometh Is that an annotation I would add to my view method?",
                "time": "2019-01-28 23:34:12",
                "index": 5,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9188ceb5a2264f586474",
                "text": "What annotation are you using at the top of your method to map it to a rest location?",
                "time": "2019-01-28 23:34:32",
                "index": 6,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f919c54f21a71a1c03ced",
                "text": "@GetMapping, @RequestMapping, @PostMapping, etc",
                "time": "2019-01-28 23:34:52",
                "index": 7,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f91bf8aa5ca5abf498a60",
                "text": "```@RequestMapping```",
                "time": "2019-01-28 23:35:27",
                "index": 8,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f91d9f04ef00644a12542",
                "text": "I believe the field for requestmapping is called \"produces\" within the annotation",
                "time": "2019-01-28 23:35:53",
                "index": 9,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f91e21b62f1265065c3fc",
                "text": "So like @RequestMapping(produces = \"application/json\")",
                "time": "2019-01-28 23:36:02",
                "index": 10,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f91fd41775971a09cd687",
                "text": "Trying...",
                "time": "2019-01-28 23:36:29",
                "index": 11,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f92229221b9382dd9c8e5",
                "text": "I was using `MediaType.APPLICATION_JSON_VALUE`.",
                "time": "2019-01-28 23:37:06",
                "index": 12,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f922eceb5a2264f5868e6",
                "text": "I changed it to the string you gave: `application/json`.",
                "time": "2019-01-28 23:37:18",
                "index": 13,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9276c2dba5382ea3956b",
                "text": "hmm did it throw an error? Your payload may not be serializable",
                "time": "2019-01-28 23:38:30",
                "index": 14,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f92aec2dba5382ea396e1",
                "text": "@Redmancometh It\u2019s telling me No serializer found for class `org.json.JSONObject` and no properties discovered to create BeanSerializer.",
                "time": "2019-01-28 23:39:26",
                "index": 15,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9551f46373406a17af27",
                "text": "@Redmancometh Do you recommend upgrading to Spring Boot >=2.0? I\u2019m using 1.5.19.",
                "time": "2019-01-28 23:50:41",
                "index": 16,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f956454f21a71a1c053e4",
                "text": "I would definitely recommend upgrading that's a very dated version",
                "time": "2019-01-28 23:51:00",
                "index": 17,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9569ceb5a2264f588243",
                "text": "You might need to provide a serializer bean for jackson",
                "time": "2019-01-28 23:51:05",
                "index": 18,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f95861b62f1265065daea",
                "text": "Do you have getters/setters get for all the fields and/or @Data from lombok?",
                "time": "2019-01-28 23:51:34",
                "index": 19,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f95c6ca428b06451a43c7",
                "text": "I have a single GET method that makes an API call and returns a serialized `JSONArray`.",
                "time": "2019-01-28 23:52:38",
                "index": 20,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f95d71b62f1265065dd7a",
                "text": "I'm talking about the POJO you're passing via the API call",
                "time": "2019-01-28 23:52:55",
                "index": 21,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f961a13a2814df6e22c7c",
                "text": "I\u2019m not sure if this is the right answer: I\u2019m manually building a `JSONArray` from an API response. I don\u2019t know that I have a POJO in this case.",
                "time": "2019-01-28 23:54:02",
                "index": 22,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f961dceb5a2264f588984",
                "text": "Idk wish I could help you more but it usually just magically works for me after I add the content type. Generally I return a POJO class from the GET though",
                "time": "2019-01-28 23:54:05",
                "index": 23,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f962b9221b9382dd9e475",
                "text": "Ok, that\u2019s helpful at least.",
                "time": "2019-01-28 23:54:19",
                "index": 24,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f962f93fe7d5ac007b754",
                "text": "I would try turning the JSONArray into a POJO if possible and try that personally",
                "time": "2019-01-28 23:54:23",
                "index": 25,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f963e13a2814df6e22d16",
                "text": "It might get weird about serializing JSON objects to json",
                "time": "2019-01-28 23:54:38",
                "index": 26,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f98bec2dba5382ea3b6f9",
                "text": "@Redmancometh I think I\u2019m getting closer!",
                "time": "2019-01-29 00:05:18",
                "index": 27,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f98d89221b9382dd9f848",
                "text": "I upgraded to 2.1.2.RELEASE and gradle, and so far the results are promising.",
                "time": "2019-01-29 00:05:44",
                "index": 28,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9bd0975714406b59e00c",
                "text": "@Redmancometh I\u2019m close (I think). I\u2019m returning my JSONArray as a string but now getting an error that my entire JSON string could be resolve a template.",
                "time": "2019-01-29 00:18:24",
                "index": 29,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9bdf454aad4df7ba9bd3",
                "text": "Do you have any insight into that error?",
                "time": "2019-01-29 00:18:39",
                "index": 30,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9beff04ef00644a16053",
                "text": "Weird are you using thymeleaf/etc? If you have no templating engine that error shouldn't happen",
                "time": "2019-01-29 00:18:55",
                "index": 31,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9bf941775971a09d1894",
                "text": "You generally get that when you have thymeleaf/etc enabled and no corresponding .html file for the page template",
                "time": "2019-01-29 00:19:05",
                "index": 32,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9c0bca428b06451a67e3",
                "text": "Yes, but I\u2019m not trying to use it.",
                "time": "2019-01-29 00:19:23",
                "index": 33,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9c6a41775971a09d1ba4",
                "text": "I removed thymeleaf and now get a 404 for my route.",
                "time": "2019-01-29 00:20:58",
                "index": 34,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9c8bf04ef00644a163e5",
                "text": "uh do you have a @RestController annotation? And have the path set to /?",
                "time": "2019-01-29 00:21:31",
                "index": 35,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9c989221b9382dda10bd",
                "text": "You also might try /api then you do /api/getmappingpath",
                "time": "2019-01-29 00:21:44",
                "index": 36,
                "user": "Redmancometh"
            },
            {
                "id": "5c4f9d018aa5ca5abf49d082",
                "text": "That was my mistake. I had @Controller instead of @RestController.",
                "time": "2019-01-29 00:23:29",
                "index": 37,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9d0213a2814df6e253b7",
                "text": "Thank you!",
                "time": "2019-01-29 00:23:30",
                "index": 38,
                "user": "szicari_gitlab"
            },
            {
                "id": "5c4f9d0b41775971a09d202b",
                "text": "np",
                "time": "2019-01-29 00:23:39",
                "index": 39,
                "user": "Redmancometh"
            }
        ]
    },
    {
        "id": 523,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be2c1cf3102f14521630705",
                "text": "```\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nThe bean 'taskScheduler', defined in class path resource [org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [example/SchedulingConfig.class] and overriding is disabled.\n\nAction:\n\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\n```\n\nIs there any way to override a bean without setting that property?\nIdk if I should override it or not. This is it:\n\n```\n\n    @Bean\n    public ScheduledLockConfiguration taskScheduler(LockProvider lockProvider) {\n        return ScheduledLockConfigurationBuilder\n            .withLockProvider(lockProvider)\n            .withPoolSize(3)\n            .withDefaultLockAtMostFor(Duration.ofMinutes(10))\n            .build();\n    }\n```",
                "time": "2018-11-07 10:43:27",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5be2c4753102f14521631551",
                "text": "@ofabricio the types are different. Previously we would have silently overridden your bean but now we\u2019re telling you what\u2019s going on",
                "time": "2018-11-07 10:54:45",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5be2c497d001b91720215443",
                "text": "Can you consider renaming that `taskScheduler` method to something more explicit? It\u2019s not really a task scheduler is it?",
                "time": "2018-11-07 10:55:19",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5be2c4eae8add80e63b4eac2",
                "text": "This: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#bean-overriding",
                "time": "2018-11-07 10:56:42",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5be2c517bb06d73a9937ae76",
                "text": "(In your case setting the property isn\u2019t going to fix anything as you\u2019ve named something we auto-configure with a different type. Excluding that auto-config or renaming your bean method name will fix it. I highly recommend the latter)",
                "time": "2018-11-07 10:57:27",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5be2c529bb887874748f1fd5",
                "text": "@snicoll yeah, that is from shedlock example. This project im doing maintenance wasn't made by me so im a bit afraid of changing things :sweat_smile: ",
                "time": "2018-11-07 10:57:45",
                "index": 5,
                "user": "ofabricio"
            },
            {
                "id": "5be2c5402138723405cb97c0",
                "text": "It\u2019s a bean name. And it looks wrong to me",
                "time": "2018-11-07 10:58:08",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5be2c5627326df140eca5c80",
                "text": "ill give it a better name then, and pray :laughing: ",
                "time": "2018-11-07 10:58:42",
                "index": 7,
                "user": "ofabricio"
            },
            {
                "id": "5be2c57c7a36913a9a04ff98",
                "text": "No need to pray, really. You can search in the codebase if that name is hardcoded and adapt accordingly",
                "time": "2018-11-07 10:59:08",
                "index": 8,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 524,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5b8f7da1c9500b4bab84d326",
                "text": "hello,everyBody . can you tell me where is springBoot\u2018s maven dependency.just learn this frame\uff0cplease pay more attention",
                "time": "2018-09-05 06:54:25",
                "index": 0,
                "user": "maoyi1995"
            },
            {
                "id": "5b8f7df211b41f69dbc1e659",
                "text": "You can start with this: https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/ ",
                "time": "2018-09-05 06:55:46",
                "index": 1,
                "user": "vlatk0o"
            },
            {
                "id": "5b8f7dfe11227d711d1a0833",
                "text": "Or watch some tutorial about it",
                "time": "2018-09-05 06:55:58",
                "index": 2,
                "user": "vlatk0o"
            },
            {
                "id": "5b8f7e2594f8164c17def36e",
                "text": "@vlatk0o   ok  ,thanks",
                "time": "2018-09-05 06:56:37",
                "index": 3,
                "user": "maoyi1995"
            },
            {
                "id": "5b8f7e54e5b40332ab489a2f",
                "text": "@maoyi1995 You are welcome. Feel free to ask anytime :)",
                "time": "2018-09-05 06:57:24",
                "index": 4,
                "user": "vlatk0o"
            },
            {
                "id": "5b8f7e9ec2bd5d117a1fe6e8",
                "text": "ok ,thank.Technical man\u3002",
                "time": "2018-09-05 06:58:38",
                "index": 5,
                "user": "maoyi1995"
            }
        ]
    },
    {
        "id": 525,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ce5831e75d9a575a6277095",
                "text": "I have a very strange problem with Spring Websocket. I run my application locally with Intellij Idea it works I have my websockets correctly. However if I generate a jar and I run it with `java -jar` my websocket doesn't work any more !",
                "time": "2019-05-22 17:13:02",
                "index": 0,
                "user": "wathek"
            },
            {
                "id": "5ce5882c13e9854e334b1700",
                "text": "\"doesn't work (anymore)\" is literally the worst thing you can say. what errors are you getting? have you tried debugging it? ",
                "time": "2019-05-22 17:34:36",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5ce5899a63dea422b4c8fa93",
                "text": "@tonisostrat  actually I was trying to find how to describe more the \"doesn't work\" and what I found is if I use the jar it doesn't work and if I extract the jar and I set the classpath it works",
                "time": "2019-05-22 17:40:42",
                "index": 2,
                "user": "wathek"
            },
            {
                "id": "5ce58b2163dea422b4c909d6",
                "text": "does it log any errors?",
                "time": "2019-05-22 17:47:13",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5ce58b38879f4478c7c39a75",
                "text": " \u00a0@tonisostrat no error at all",
                "time": "2019-05-22 17:47:36",
                "index": 4,
                "user": "wathek"
            },
            {
                "id": "5ce58e717c363c75a725cb81",
                "text": "@tonisostrat doing this : `java -noverify -Dfile.encoding=UTF-8 -classpath \"$PWD/BOOT-INF/classes:$PWD/BOOT-INF/lib/*\"  com.ttt.backend.ApplicationKt` works and doing `java -jar app.jar` doesn't work.\nBy the way, I extracted the `app.jar` before executing the first command.",
                "time": "2019-05-22 18:01:21",
                "index": 5,
                "user": "wathek"
            },
            {
                "id": "5ce58e8e6366992a9402e10a",
                "text": "and the `app.jar` is created by `gradle build`",
                "time": "2019-05-22 18:01:50",
                "index": 6,
                "user": "wathek"
            },
            {
                "id": "5ce58f1ad22ba766a2e07570",
                "text": "and how does it *not work*? what are the symptoms?",
                "time": "2019-05-22 18:04:10",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5ce58f5fecdf942b4c2950b1",
                "text": "@wathek is your jar compiled as an executable jar using maven?",
                "time": "2019-05-22 18:05:19",
                "index": 8,
                "user": "bicabone"
            },
            {
                "id": "5ce58f7813e9854e334b5239",
                "text": "because `-jar` only works for executable jars. ",
                "time": "2019-05-22 18:05:44",
                "index": 9,
                "user": "bicabone"
            },
            {
                "id": "5ce58f96b313d723140e4e2b",
                "text": "you can use the following maven plugin to build such a jar \n```\n<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-jar-plugin</artifactId>\n    <configuration>\n        <archive>\n            <manifest>\n                <addClasspath>true</addClasspath>\n                <classpathPrefix>libs/</classpathPrefix>\n                <mainClass>\n                    org.baeldung.executable.ExecutableMavenJar\n                </mainClass>\n            </manifest>\n        </archive>\n    </configuration>\n</plugin>\n```",
                "time": "2019-05-22 18:06:14",
                "index": 10,
                "user": "bicabone"
            },
            {
                "id": "5ce58fbcef853135c805a408",
                "text": "replacing the `mainClass` arg with the your main, executable class",
                "time": "2019-05-22 18:06:52",
                "index": 11,
                "user": "bicabone"
            },
            {
                "id": "5ce590050ac9852a95217c32",
                "text": "in general, going from `java -cp ...` to `java -jar ...` won't just \"work\"",
                "time": "2019-05-22 18:08:05",
                "index": 12,
                "user": "bicabone"
            },
            {
                "id": "5ce5902cb313d723140e5436",
                "text": "@bicabone yes it's an executable jar. Well when I say it doesn't work i mean that the application starts but my websocket doesn't log anything from the interceptor:\n```\n@Configuration\n@EnableScheduling\n@EnableWebSocketMessageBroker\npublic class WebSocketConfig extends AbstractSessionWebSocketMessageBrokerConfigurer<Session> {\n\n    @Override\n    public void configureMessageBroker(MessageBrokerRegistry config) {\n        config.enableSimpleBroker(\"/topic\");\n        config.setApplicationDestinationPrefixes(\"/\");\n        config.setUserDestinationPrefix(\"/user\");\n    }\n\n\n    @Override\n    protected void configureStompEndpoints(StompEndpointRegistry registry) {\n        registry.addEndpoint(\"/gs-guide-websocket\")\n                .setAllowedOrigins(\"*\")\n                .withSockJS();\n    }\n\n\n    @Override\n    @Order(Ordered.HIGHEST_PRECEDENCE + 99)\n    public void configureClientInboundChannel(ChannelRegistration registration) {\n        registration.interceptors(new ChannelInterceptor() {\n            @Override\n            public Message<?> preSend(Message<?> message, MessageChannel channel) {\n                System.out.println(\"INTERCEPTED 3\");\n                return message;\n            }\n\n            @Override\n            public void postSend(Message<?> message, MessageChannel channel, boolean sent) {\n                System.out.println(\"POST SEND\");\n            }\n\n            @Override\n            public void afterSendCompletion(Message<?> message, MessageChannel channel, boolean sent, Exception ex) {\n                System.out.println(\"AFTER SEND COMPLETION\");\n            }\n\n            @Override\n            public boolean preReceive(MessageChannel channel) {\n                System.out.println(\"PRE RECEIVE\");\n                return true;\n            }\n\n            @Override\n            public Message<?> postReceive(Message<?> message, MessageChannel channel) {\n                System.out.println(\"POST RECEIVE\");\n                return message;\n            }\n\n            @Override\n            public void afterReceiveCompletion(Message<?> message, MessageChannel channel, Exception ex) {\n                System.out.println(\"AFTER RECEIVE COMPLETION\");\n            }\n        });\n    }\n}\n```",
                "time": "2019-05-22 18:08:44",
                "index": 13,
                "user": "wathek"
            },
            {
                "id": "5ce590daecdf942b4c295c5c",
                "text": "intellij might be putting something in your classpath that gradle is skipping",
                "time": "2019-05-22 18:11:38",
                "index": 14,
                "user": "bicabone"
            },
            {
                "id": "5ce590f6d22ba766a2e084ce",
                "text": "you're 100% sure the app is launching from the jar, though? but just not giving the same behaviour.. hmm",
                "time": "2019-05-22 18:12:06",
                "index": 15,
                "user": "bicabone"
            },
            {
                "id": "5ce5911e75d9a575a627e45b",
                "text": "@bicabone I take the jar file from `gradle build` command I extract it I run it manually it works but executing the jar itself doesn't",
                "time": "2019-05-22 18:12:46",
                "index": 16,
                "user": "wathek"
            },
            {
                "id": "5ce591c9ef853135c805b49d",
                "text": "anyway if you can run the app with `java -cp $someDirectory/libs/*:  com.my.package.MySpringBootApp` that's just as good isn't it? in any case, it seems like it's just an issue with how gradle is building your executable jar",
                "time": "2019-05-22 18:15:37",
                "index": 17,
                "user": "bicabone"
            },
            {
                "id": "5ce592b483ae782aeeb1f4b9",
                "text": "also, just because no errors are logged doesn't mean they aren't throwing",
                "time": "2019-05-22 18:19:32",
                "index": 18,
                "user": "bicabone"
            },
            {
                "id": "5ce592da9404bf2aed8f6888",
                "text": "if you send something to an executor/other thread, a runtime exception can be thrown and you won't see it if you aren't catching the exception and logging.",
                "time": "2019-05-22 18:20:10",
                "index": 19,
                "user": "bicabone"
            },
            {
                "id": "5ce592ddb313d723140e69ea",
                "text": "@bicabone I mean no it doesn't get into the interceptor ",
                "time": "2019-05-22 18:20:13",
                "index": 20,
                "user": "wathek"
            },
            {
                "id": "5ce592edecdf942b4c296cc6",
                "text": "but it might not be getting to the interceptor because of an exception",
                "time": "2019-05-22 18:20:29",
                "index": 21,
                "user": "bicabone"
            },
            {
                "id": "5ce592f29d64e537bcf2ba17",
                "text": "that you aren't seeing",
                "time": "2019-05-22 18:20:34",
                "index": 22,
                "user": "bicabone"
            },
            {
                "id": "5ce59303ecdf942b4c296d53",
                "text": "@bicabone how could I found it that ?",
                "time": "2019-05-22 18:20:51",
                "index": 23,
                "user": "wathek"
            },
            {
                "id": "5ce593276366992a9403045c",
                "text": "do a thread dump when it is running",
                "time": "2019-05-22 18:21:27",
                "index": 24,
                "user": "bicabone"
            },
            {
                "id": "5ce5932cad024978c60ed84d",
                "text": "see what it is doing",
                "time": "2019-05-22 18:21:32",
                "index": 25,
                "user": "bicabone"
            },
            {
                "id": "5ce593b9879f4478c7c3ddf7",
                "text": "although I still suspect you just have a bad jar being built by gradle",
                "time": "2019-05-22 18:23:53",
                "index": 26,
                "user": "bicabone"
            },
            {
                "id": "5ce593dbecdf942b4c297467",
                "text": "is it running fine with `java -noverify -Dfile.encoding=UTF-8 -classpath \"$PWD/BOOT-INF/classes:$PWD/BOOT-INF/lib/*\"`?",
                "time": "2019-05-22 18:24:27",
                "index": 27,
                "user": "bicabone"
            },
            {
                "id": "5ce593ed63dea422b4c94e97",
                "text": "if so, try running it with  just this:\n\n`java -noverify -Dfile.encoding=UTF-8 -classpath \"$yourlibs/lib/app.jar\"`",
                "time": "2019-05-22 18:24:45",
                "index": 28,
                "user": "bicabone"
            },
            {
                "id": "5ce594108f019114ae9b5b22",
                "text": "and if it doesn't work as espected, your jar doesn't have all of its dependencies, and there's your problem",
                "time": "2019-05-22 18:25:20",
                "index": 29,
                "user": "bicabone"
            },
            {
                "id": "5ce5943d9404bf2aed8f7302",
                "text": "interesting ",
                "time": "2019-05-22 18:26:05",
                "index": 30,
                "user": "wathek"
            },
            {
                "id": "5ce5945f7c363c75a725f44a",
                "text": "what is in your lib folder that you mentioned ^?  more than just one jar I assume?",
                "time": "2019-05-22 18:26:39",
                "index": 31,
                "user": "bicabone"
            },
            {
                "id": "5ce594739d64e537bcf2c4f2",
                "text": "@bicabone yes I have more than 200 libs",
                "time": "2019-05-22 18:26:59",
                "index": 32,
                "user": "wathek"
            },
            {
                "id": "5ce5947b13e9854e334b7512",
                "text": "well then some of the others are important",
                "time": "2019-05-22 18:27:07",
                "index": 33,
                "user": "bicabone"
            },
            {
                "id": "5ce5948decdf942b4c297861",
                "text": "and you need something like the equivalent of ```<addClasspath>true</addClasspath>```",
                "time": "2019-05-22 18:27:25",
                "index": 34,
                "user": "bicabone"
            },
            {
                "id": "5ce5949b9d64e537bcf2c521",
                "text": "in your gradle build config",
                "time": "2019-05-22 18:27:39",
                "index": 35,
                "user": "bicabone"
            },
            {
                "id": "5ce5949d9d64e537bcf2c525",
                "text": "@bicabone but I don't understand if my jar file doesn't contain all the libs why when I extract it it does work",
                "time": "2019-05-22 18:27:41",
                "index": 36,
                "user": "wathek"
            },
            {
                "id": "5ce594a813e9854e334b7678",
                "text": "but you said it doesn't work :)",
                "time": "2019-05-22 18:27:52",
                "index": 37,
                "user": "bicabone"
            },
            {
                "id": "5ce594be9404bf2aed8f75fe",
                "text": "@bicabone no I said if I execute the jar it doesn't work but if I extract it and I run it manually it does work",
                "time": "2019-05-22 18:28:14",
                "index": 38,
                "user": "wathek"
            },
            {
                "id": "5ce595360ac9852a9521a1a5",
                "text": "can you paste your gradle build config",
                "time": "2019-05-22 18:30:14",
                "index": 39,
                "user": "bicabone"
            },
            {
                "id": "5ce595496366992a94031517",
                "text": "probably looks something like this \n```\njar {\n    // Keep jar clean:\n    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'\n\n    manifest {\n        attributes 'Main-Class': 'com.somepackage.MainClass',\n                   'Class-Path': configurations.runtime.files.collect { \"lib/$it.name\" }.join(' ')\n    }\n    // How-to add class path:\n    //     https://stackoverflow.com/questions/22659463/add-classpath-in-manifest-using-gradle\n    //     https://gist.github.com/simon04/6865179\n}```",
                "time": "2019-05-22 18:30:33",
                "index": 40,
                "user": "bicabone"
            },
            {
                "id": "5ce595a78a5e130a8d72906a",
                "text": "@wathek you do not need `jar` task. Just add `bootJar` task.\n```groovy\nbootJar {\n\tlaunchScript ()\n\t\n\tmanifest {\n\t\tattributes 'Manifest-Version': '1.0',\n\t\t\t'Start-Class': 'com.demo.MyDemoApplication',\n\t\t\t'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher',\n\t\t\t'Jdk-Version': System.getProperty('java.version') + ' (' + System.getProperty(\"java.vm.vendor\") + ')',\n\t\t\t'Implementation-Vendor': 'An Earthling',\n\t\t\t'Implementation-Title': 'Spring Boot 2 Webflux Config Override Demo'\n\t}\n}\n```",
                "time": "2019-05-22 18:32:07",
                "index": 41,
                "user": "nnanda2016"
            },
            {
                "id": "5ce595b033920c09b87d67e0",
                "text": "this will make the JAR a fat executable jar",
                "time": "2019-05-22 18:32:16",
                "index": 42,
                "user": "nnanda2016"
            },
            {
                "id": "5ce595c456275601641227f2",
                "text": "and you can run it like this (without adding any other locations to classpath) `./my-app.jar start`",
                "time": "2019-05-22 18:32:36",
                "index": 43,
                "user": "nnanda2016"
            },
            {
                "id": "5ce595ed9d64e537bcf2d00e",
                "text": "here's my build.gradle \n```\nbuildscript {\n\trepositories {\n\t\tmavenCentral()\n\t\tjcenter()\n\t}\n\tdependencies {\n\t\tclasspath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'\n\t}\n}\n\nplugins {\n\tid 'com.google.protobuf' version '0.8.8'\n\tid 'org.jetbrains.kotlin.jvm' version '1.3.31'\n\tid 'org.jetbrains.kotlin.kapt' version '1.3.31'\n\tid 'org.jetbrains.kotlin.plugin.jpa' version '1.3.31'\n\tid 'org.jetbrains.kotlin.plugin.spring' version '1.3.31'\n\tid 'io.spring.dependency-management' version '1.0.7.RELEASE'\n\tid 'org.springframework.boot' version '2.1.5.RELEASE'\n}\n\n\narchivesBaseName = 'app'\ngroup = 'com.demo'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = 1.8\n\ndef grpcVersion = '1.20.0' // CURRENT_GRPC_VERSION\n\ncompileKotlin {\n\tkotlinOptions {\n\t\tfreeCompilerArgs = [\"-Xjsr305=strict\"]\n\t\tjvmTarget = \"1.8\"\n\t}\n}\ncompileTestKotlin {\n\tkotlinOptions {\n\t\tfreeCompilerArgs = [\"-Xjsr305=strict\"]\n\t\tjvmTarget = \"1.8\"\n\t}\n}\n\nrepositories {\n\tmavenCentral()\n\tmaven { url \"https://repo.spring.io/snapshot\" }\n\tmaven { url \"https://repo.spring.io/milestone\" }\n\tjcenter()\n}\n\next {\n\tspringCloudVersion = 'Greenwich.SR1'\n}\n\ndependencies {\n\t// Kotlin + Spring Boot\n\timplementation(\"org.springframework.session:spring-session-core\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-web\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-actuator\")\n\n\timplementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8\")\n\timplementation(\"org.jetbrains.kotlin:kotlin-reflect\")\n\n\t// Log4j\n\timplementation(\"org.apache.logging.log4j:log4j-api\")\n\timplementation(\"org.apache.logging.log4j:log4j-core\")\n\n\t\n\t// Websocket\n\timplementation(\"org.springframework.boot:spring-boot-starter-websocket\")\n\n\t// GRPC\n\timplementation(\"io.github.lognet:grpc-spring-boot-starter:3.2.1\")\n\timplementation(\"io.grpc:grpc-netty-shaded:${grpcVersion}\")\n\timplementation(\"io.grpc:grpc-protobuf:${grpcVersion}\")\n\timplementation(\"io.grpc:grpc-stub:${grpcVersion}\")\n\tcompileOnly(\"javax.annotation:javax.annotation-api:1.2\")\n}\n\nprotobuf {\n\tprotoc { artifact = 'com.google.protobuf:protoc:3.7.1' }\n\tplugins {\n\t\tgrpc { artifact = \"io.grpc:protoc-gen-grpc-java:${grpcVersion}\" }\n\t}\n\tgenerateProtoTasks {\n\t\tall()*.plugins { grpc {} }\n\t}\n}\n\nsourceSets {\n\tmain {\n\t\tjava {\n\t\t\tsrcDirs 'build/generated/source/proto/main/grpc'\n\t\t\tsrcDirs 'build/generated/source/proto/main/java'\n\t\t}\n\t}\n}\n\n\ndependencyManagement {\n\timports {\n\t\tmavenBom \"org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}\"\n\t}\n}\n```",
                "time": "2019-05-22 18:33:17",
                "index": 44,
                "user": "wathek"
            },
            {
                "id": "5ce5960033920c09b87d67e2",
                "text": "You can also supply your own `launch.script` which is basically a UNIX script. You can automate as much as possible via your custom script",
                "time": "2019-05-22 18:33:36",
                "index": 45,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5963083ae782aeeb20fd7",
                "text": "@nnanda2016 my bootJar and jar are created by a plugin in gradle",
                "time": "2019-05-22 18:34:24",
                "index": 46,
                "user": "wathek"
            },
            {
                "id": "5ce59645b313d723140e810c",
                "text": "yes @wathek where is that plugin? ",
                "time": "2019-05-22 18:34:45",
                "index": 47,
                "user": "bicabone"
            },
            {
                "id": "5ce596550ac9852a9521aa31",
                "text": "you should have some plugin code like what myself or @nnanda2016 are posting",
                "time": "2019-05-22 18:35:01",
                "index": 48,
                "user": "bicabone"
            },
            {
                "id": "5ce59669c6feb0541ec7d9bf",
                "text": "We use `org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}` to build executable JAR",
                "time": "2019-05-22 18:35:21",
                "index": 49,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5967663dea422b4c95cd9",
                "text": "so I don't think you have made a truly \"executable\" jar, which is why it works when you extract but not if you try to run the jar with `-jar`",
                "time": "2019-05-22 18:35:34",
                "index": 50,
                "user": "bicabone"
            },
            {
                "id": "5ce59688c6feb0541ec7d9c1",
                "text": "yes i agree with @bicabone ",
                "time": "2019-05-22 18:35:52",
                "index": 51,
                "user": "nnanda2016"
            },
            {
                "id": "5ce596960aa0de5601852968",
                "text": "executable JAR is a special ZIP format and cannot be extracted",
                "time": "2019-05-22 18:36:06",
                "index": 52,
                "user": "nnanda2016"
            },
            {
                "id": "5ce596a48a5e130a8d729077",
                "text": "at least the one created by Spring Boot\u2019s `bootJar` plugin",
                "time": "2019-05-22 18:36:20",
                "index": 53,
                "user": "nnanda2016"
            },
            {
                "id": "5ce596bfb313d723140e832e",
                "text": "I think bootJar is the way to go actually. never knew about that (I still use maven over gradle)",
                "time": "2019-05-22 18:36:47",
                "index": 54,
                "user": "bicabone"
            },
            {
                "id": "5ce596e3c6feb0541ec7d9c4",
                "text": ":) we are in gradle, but Spring Boot has complete Maven support as well",
                "time": "2019-05-22 18:37:23",
                "index": 55,
                "user": "nnanda2016"
            },
            {
                "id": "5ce597099d64e537bcf2d6b1",
                "text": "@nnanda2016 bootJar is created by `id 'org.springframework.boot' version '2.1.5.RELEASE'`",
                "time": "2019-05-22 18:38:01",
                "index": 56,
                "user": "wathek"
            },
            {
                "id": "5ce5992d8f019114ae9b7f2b",
                "text": "don't you need to \"apply the java plugin\" for the executable jar to get created?",
                "time": "2019-05-22 18:47:09",
                "index": 57,
                "user": "bicabone"
            },
            {
                "id": "5ce599459404bf2aed8f96af",
                "text": "just looking at this doc: https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/",
                "time": "2019-05-22 18:47:33",
                "index": 58,
                "user": "bicabone"
            },
            {
                "id": "5ce5ab68ecdf942b4c2a2074",
                "text": "absolutely you need the `java` plugin",
                "time": "2019-05-22 20:04:56",
                "index": 59,
                "user": "tonisostrat"
            },
            {
                "id": "5ce5b5ef2a66cd45dd03ed39",
                "text": "@wathek check this sample https://github.com/nnanda2016/springboot2-executable-jar-demo",
                "time": "2019-05-22 20:49:51",
                "index": 60,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5b658ad024978c60fd031",
                "text": "@tonisostrat  actually I'm using kotlin do I still need java plugin ?",
                "time": "2019-05-22 20:51:36",
                "index": 61,
                "user": "wathek"
            },
            {
                "id": "5ce5b65def853135c806b837",
                "text": "@nnanda2016 ok thank you",
                "time": "2019-05-22 20:51:41",
                "index": 62,
                "user": "wathek"
            },
            {
                "id": "5ce5b68fc6feb0541ec7da0c",
                "text": "that you have to figure out from GRADLE and SPRING BOOT\u2019s documentation as both support Kotlin ",
                "time": "2019-05-22 20:52:31",
                "index": 63,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5b69ec6feb0541ec7da0e",
                "text": "the sample i posted is in Java..",
                "time": "2019-05-22 20:52:46",
                "index": 64,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5b6b5879f4478c7c4d71a",
                "text": "yes",
                "time": "2019-05-22 20:53:09",
                "index": 65,
                "user": "wathek"
            },
            {
                "id": "5ce5b6ca8a5e130a8d7290cf",
                "text": "but i dont think it will be any different from Kotlin",
                "time": "2019-05-22 20:53:30",
                "index": 66,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5b6ce8a5e130a8d7290d1",
                "text": "both run on JVM",
                "time": "2019-05-22 20:53:34",
                "index": 67,
                "user": "nnanda2016"
            },
            {
                "id": "5ce5b6e15627560164122871",
                "text": "and `bootJar` uses a launch script which is UNIX specific to run the code",
                "time": "2019-05-22 20:53:53",
                "index": 68,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 526,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5be676d062866f747376ea00",
                "text": "hi all, i am not able to access the endpoints or http://localhost:8080 on my spring boot app",
                "time": "2018-11-10 06:12:32",
                "index": 0,
                "user": "raghanag"
            },
            {
                "id": "5be676dcbb06d73a994f21dc",
                "text": "can you please let me know what would be the cause",
                "time": "2018-11-10 06:12:44",
                "index": 1,
                "user": "raghanag"
            },
            {
                "id": "5be677076b9822140d0906ce",
                "text": "i am using the https://github.com/spring-guides/gs-accessing-data-rest example",
                "time": "2018-11-10 06:13:27",
                "index": 2,
                "user": "raghanag"
            },
            {
                "id": "5be6ed1dbb88787474a9851a",
                "text": "@raghanag I don't know what the cause is without some more information. The guide works fine for me:\n\n```\n$ curl localhost:8080\n{\n  \"_links\" : {\n    \"people\" : {\n      \"href\" : \"http://localhost:8080/people{?page,size,sort}\",\n      \"templated\" : true\n    },\n    \"profile\" : {\n      \"href\" : \"http://localhost:8080/profile\"\n    }\n  }\n}\n```\n\nI suspect the problem is either due to a difference between your code and the guide, or something about the environment that you're running it in.",
                "time": "2018-11-10 14:37:17",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5be76901bb06d73a9954daa9",
                "text": "thanks @wilkinsona i tried the same on my different laptop and it started working",
                "time": "2018-11-10 23:25:53",
                "index": 15,
                "user": "raghanag"
            }
        ]
    },
    {
        "id": 527,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba2093de6046343f383e4d4",
                "text": "Hi all, I'm new to Spring-boot and I'm confuse with annotations @Configuration and @EnableAutoConfiguration and how @EnalbleAutoConfiguration works internally.Anyone please help me.",
                "time": "2018-09-19 08:30:53",
                "index": 0,
                "user": "satyap88"
            },
            {
                "id": "5ba209db8909f71f75f6fac6",
                "text": "This video explains in details how this works: https://www.youtube.com/watch?v=uof5h-j0IeE",
                "time": "2018-09-19 08:33:31",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ba20a047dca30650321f752",
                "text": "@snicoll : thank you very much for quick reply.",
                "time": "2018-09-19 08:34:12",
                "index": 4,
                "user": "satyap88"
            }
        ]
    },
    {
        "id": 528,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d122ad86d90fa3daa453aa7",
                "text": "Hi.  Having trouble packaging springboot apps as war files for installation on weblogic 12.2.1.3.  I've tried various different wrinkles on the basic approach but I either get tomcat related errors or no detectable activity from the app.  Management is asking me to ditch springBoot, but it just seems impossible to me that creating what only a couple of years ago was an absolutely standard type of program on weblogic is impossible (or even really really hard) in this new framework.  Any suggestions?",
                "time": "2019-06-25 14:08:24",
                "index": 0,
                "user": "ScreamingCandle_twitter"
            },
            {
                "id": "5d122b170f051738260e4e26",
                "text": "Also, I've no idea how gitter works.  Hopefully it will either tweet at me or send me email at screamingcandle@gmail.com.",
                "time": "2019-06-25 14:09:27",
                "index": 1,
                "user": "ScreamingCandle_twitter"
            },
            {
                "id": "5d122cc281d4c416606b360d",
                "text": "@ScreamingCandle_twitter you hang around in the room and people will send you messages",
                "time": "2019-06-25 14:16:34",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5d12395681d4c416606ba766",
                "text": "@ScreamingCandle_twitter could you give more details?\nSpring Boot version? What tomcat related errors?",
                "time": "2019-06-25 15:10:14",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5d124731d86a112930579468",
                "text": "@bclozel  @OrangeDog Well, I've gone from springBoot 2.1.5 to 2.0.9 because I was getting a problem with the embedded tomcat (that I couldn't convince maven I didn't need) that included a jar with a ... dependency? expectation? that servlet 4.0 would be acceptable.  Servlet 4.0 definition is not recognized in that version of Weblogic, so it wouldn't install the war.   That's an initial issue I was working around until I could work on it.  Since then I've been trying to exclude Tomcat.  In my initial prototypes, which were attempting to implement a soap service, I was getting jar errors while excluding tomcat at compile time (showed up in the IDE as a missing jar for http related methods, which makes sense).  Stepping back further from there, I tried to do a straight vanilla rest service implementing no logic and just deploying the war.  My current error: <Could not load user defined filter in web.xml: weblogic.websocket.tyrus.TyrusServletFilter.\n\njava.lang.ClassCastException: org.apache.tomcat.websocket.server.WsServerContainer cannot be cast to org.glassfish.tyrus.server.TyrusServerContainer",
                "time": "2019-06-25 16:09:21",
                "index": 4,
                "user": "ScreamingCandle_twitter"
            },
            {
                "id": "5d124e350f051738260fa7a9",
                "text": "@ScreamingCandle_twitter It sounds like you still have Tomcat dependencies that should not be there. What have you tried when attempted to exclude Tomcat? Assuming that you're using Maven, adding an `<exclusion>` for `spring-boot-starter-tomcat` should be sufficient.",
                "time": "2019-06-25 16:39:17",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d124e76527a392800bec1d6",
                "text": "Alternatively, if you want to build a war file that can be both deployed to Weblogic and run using `java -jar` you should declare a dependency on `spring-boot-starter-tomcat` with `<scope>provided</scope>`",
                "time": "2019-06-25 16:40:22",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5d124eeef68cef3827c36e4a",
                "text": "There's some info about this in [the docs](https://docs.spring.io/spring-boot/docs/2.0.x/reference/htmlsingle/#howto-create-a-deployable-war-file) include a section with some WebLogic-specific guidance.",
                "time": "2019-06-25 16:42:22",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 529,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bd85c40c08b8b3067977765",
                "text": "I've just tried upgrading an app to `2.1.0` and I'm seeing tests failing with `ConfigFileApplicationListener does not define or inherit an implementation of the resolved method abstract supportsSourceType(Ljava/lang/Class;)Z of interface org.springframework.context.event.SmartApplicationListener`. Anyone know what might be causing this?",
                "time": "2018-10-30 13:27:28",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5bd85f10c7bf7c3662934253",
                "text": "@mplanchant this is a default method on the `SmartApplicationListener` interface; can you check that you've got the right Spring Framework version on classpath? (5.1.2.RELEASE)",
                "time": "2018-10-30 13:39:28",
                "index": 1,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 530,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bf6bdb3f59704348ee7eb3c",
                "text": "Hey everyone, couldn't find an answere anywhere else: Are Kotlin Coroutines supported by Spring boot? And where yes, where can i find the docu?",
                "time": "2018-11-22 14:31:15",
                "index": 0,
                "user": "H3npi"
            },
            {
                "id": "5bf6bf6e6621313894ff2c24",
                "text": "@H3npi AFAIK not in spring features, no. You'd have to use webflux for example",
                "time": "2018-11-22 14:38:38",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5bf6c059ced7003fe16b328f",
                "text": "@H3npi support in Framework is scheduled for 5.2 https://jira.spring.io/browse/SPR-15413",
                "time": "2018-11-22 14:42:33",
                "index": 2,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 531,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3f3c18c45b986d116de34f",
                "text": "Looking at @EnableScheduling documentation, if I read it correctly, it is supposed to run one Task at a time. I'm guessing that applies to Components as well. ",
                "time": "2019-01-16 14:13:44",
                "index": 0,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f3c760721b912a58c8624",
                "text": "I've inherited this app, it doesn't have a @Configuration class. If I wanted to create a TaskScheduler that would be used throughout the app, how would I go about it? Basically, I need to be able to run 4 parallel threads.",
                "time": "2019-01-16 14:15:18",
                "index": 1,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f3fc00721b912a58c9e75",
                "text": "@davorm_gitlab by default the task scheduler has a thread pool size of 1. If you truly want scheduled tasks to run in parallel then you need to customize the scheduler. This is an example of how you would do that\n\n```java\nimport org.springframework.boot.task.TaskSchedulerBuilder;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.scheduling.annotation.EnableScheduling;\nimport org.springframework.scheduling.annotation.SchedulingConfigurer;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;\nimport org.springframework.scheduling.config.ScheduledTaskRegistrar;\n\n@Configuration\n@EnableScheduling\npublic class SchedulingConfig implements SchedulingConfigurer {\n\t@Override\n\tpublic void configureTasks(ScheduledTaskRegistrar taskRegistrar) {\n\t\ttaskRegistrar.setTaskScheduler(threadPoolTaskScheduler());\n\t}\n\n\t@Bean(destroyMethod = \"shutdown\")\n\tpublic ThreadPoolTaskScheduler threadPoolTaskScheduler() {\n\t\treturn new TaskSchedulerBuilder()\n\t\t\t.poolSize(100)\n\t\t\t.threadNamePrefix(\"task-scheduler\")\n\t\t\t.build();\n\t}\n}\n```\n\nWhen I use this in combination with\n\n```java\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ScheduledTasks {\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(ScheduledTasks.class);\n\n\t@Scheduled(cron = \"*/5 * * * * *\")\n\tpublic void runTask() {\n\t\tLOGGER.info(\"Running task\");\n\t}\n\n\t@Scheduled(cron = \"*/1 * * * * *\")\n\tpublic void runAnotherTask() {\n\t\tLOGGER.info(\"Running another task\");\n\t}\n}\n```\n\nI get this output\n\n```\n2019-01-16 09:28:16.921  INFO 53637 --- [           main] c.e.s.ScheduledExpressionApplication     : Started ScheduledExpressionApplication in 2.644 seconds (JVM running for 3.025)\n2019-01-16 09:28:17.001  INFO 53637 --- [task-scheduler1] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:18.004  INFO 53637 --- [task-scheduler2] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:19.004  INFO 53637 --- [task-scheduler3] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:20.000  INFO 53637 --- [task-scheduler1] c.e.s.scheduler.ScheduledTasks           : Running task\n2019-01-16 09:28:20.000  INFO 53637 --- [task-scheduler2] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:21.002  INFO 53637 --- [task-scheduler3] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:22.005  INFO 53637 --- [task-scheduler4] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:23.003  INFO 53637 --- [task-scheduler6] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:24.004  INFO 53637 --- [task-scheduler7] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:25.004  INFO 53637 --- [task-scheduler1] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:25.004  INFO 53637 --- [task-scheduler5] c.e.s.scheduler.ScheduledTasks           : Running task\n2019-01-16 09:28:26.001  INFO 53637 --- [task-scheduler8] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:27.004  INFO 53637 --- [task-scheduler9] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:28.002  INFO 53637 --- [ask-scheduler10] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:29.005  INFO 53637 --- [ask-scheduler11] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:30.004  INFO 53637 --- [task-scheduler3] c.e.s.scheduler.ScheduledTasks           : Running task\n2019-01-16 09:28:30.004  INFO 53637 --- [task-scheduler2] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:31.003  INFO 53637 --- [task-scheduler1] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:32.002  INFO 53637 --- [ask-scheduler12] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:33.005  INFO 53637 --- [task-scheduler8] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:34.005  INFO 53637 --- [task-scheduler9] c.e.s.scheduler.ScheduledTasks           : Running another task\n2019-01-16 09:28:35.004  INFO 53637 --- [task-scheduler5] c.e.s.scheduler.ScheduledTasks           : Running task\n2019-01-16 09:28:35.004  INFO 53637 --- [ask-scheduler15] c.e.s.scheduler.ScheduledTasks           : Running another task\n```",
                "time": "2019-01-16 14:29:20",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5c3f3fd5c45b986d116dfa49",
                "text": "OK, my bad, we have a @SpringBootApplication, which is an enhanced @Configuration. However, this is our main entrypoint. It seems like a place to put the Scheduler. ",
                "time": "2019-01-16 14:29:41",
                "index": 3,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f400a95e17b45255ef81a",
                "text": "Thankx @edeandrea. Does this Scheduler work on @Components as well?",
                "time": "2019-01-16 14:30:34",
                "index": 4,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f4065cb47ec30005225fe",
                "text": "I\u2019m not sure what you mean by \u201cDoes this Scheduler work on `@Component`s as well\u201d. Any Spring abstraction works with any spring-managed bean",
                "time": "2019-01-16 14:32:05",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5c3f406a8318994524fbff95",
                "text": "Right, but that's not really what I'm looking for. I have 4 @Components that are blocking each other.",
                "time": "2019-01-16 14:32:10",
                "index": 6,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f408d8318994524fc00fe",
                "text": "I apologize if my questions don't make sense, I've been thrown into this head first :)",
                "time": "2019-01-16 14:32:45",
                "index": 7,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f40c935350772cf3e7e0d",
                "text": "Each @Component has a @Scheduled run() method which is run at specified intervals. My problem is that they block each other.",
                "time": "2019-01-16 14:33:45",
                "index": 8,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f40e935350772cf3e7f32",
                "text": "So if I set up the scheduler you described, will it make my problem go away?",
                "time": "2019-01-16 14:34:17",
                "index": 9,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f410b0999400604fe6f71",
                "text": "what do you mean they block each other?",
                "time": "2019-01-16 14:34:51",
                "index": 10,
                "user": "edeandrea"
            },
            {
                "id": "5c3f4121f780a1521f1d1da6",
                "text": "While one is running, others are not started. It's like a Round Robin",
                "time": "2019-01-16 14:35:13",
                "index": 11,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f414d0999400604fe706e",
                "text": "right by default the thread pool used by the task scheduling configuration is single-threaded, so only one task runs at a time",
                "time": "2019-01-16 14:35:57",
                "index": 12,
                "user": "edeandrea"
            },
            {
                "id": "5c3f415495e17b45255f0096",
                "text": "OK",
                "time": "2019-01-16 14:36:04",
                "index": 13,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f415a20b78635b63242e2",
                "text": "if 2 tasks are scheduled to run at the same time, then they run sequentially",
                "time": "2019-01-16 14:36:10",
                "index": 14,
                "user": "edeandrea"
            },
            {
                "id": "5c3f416acb47ec3000522d60",
                "text": "if you want them to be able to run in parallel then you need to define a custom thread pool for your tasks",
                "time": "2019-01-16 14:36:26",
                "index": 15,
                "user": "edeandrea"
            },
            {
                "id": "5c3f416edab15872cea36e22",
                "text": "and increase the pool size",
                "time": "2019-01-16 14:36:30",
                "index": 16,
                "user": "edeandrea"
            },
            {
                "id": "5c3f4172c45b986d116e0630",
                "text": "OK",
                "time": "2019-01-16 14:36:34",
                "index": 17,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f4174ba5936605bcc5c45",
                "text": "Thanks",
                "time": "2019-01-16 14:36:36",
                "index": 18,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f418a0721b912a58cabb1",
                "text": "And creating an Executor within my Configuration would solve that?",
                "time": "2019-01-16 14:36:58",
                "index": 19,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f419a0999400604fe71b3",
                "text": "(just something I just came across)",
                "time": "2019-01-16 14:37:14",
                "index": 20,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f41a01cb70a372aea9ba5",
                "text": "just beware though this takes effect for all scheduled tasks in your app since the scheduler config is global",
                "time": "2019-01-16 14:37:20",
                "index": 21,
                "user": "edeandrea"
            },
            {
                "id": "5c3f41b00999400604fe71d1",
                "text": "Sure, that shouldn't be a problem",
                "time": "2019-01-16 14:37:36",
                "index": 22,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f41bcf780a1521f1d215f",
                "text": "The app is relatively simple, really",
                "time": "2019-01-16 14:37:48",
                "index": 23,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f41e5dab15872cea3732c",
                "text": "Drop in this class somewhere in a package under your main application class and change the values in the `threadPoolTaskScheduler` method so it makes sense for your situation\n\n```java\nimport org.springframework.boot.task.TaskSchedulerBuilder;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.scheduling.annotation.EnableScheduling;\nimport org.springframework.scheduling.annotation.SchedulingConfigurer;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;\nimport org.springframework.scheduling.config.ScheduledTaskRegistrar;\n\n@Configuration\n@EnableScheduling\npublic class SchedulingConfig implements SchedulingConfigurer {\n    @Override\n    public void configureTasks(ScheduledTaskRegistrar taskRegistrar) {\n        taskRegistrar.setTaskScheduler(threadPoolTaskScheduler());\n    }\n\n    @Bean(destroyMethod = \"shutdown\")\n    public ThreadPoolTaskScheduler threadPoolTaskScheduler() {\n        return new TaskSchedulerBuilder()\n            .poolSize(100)\n            .threadNamePrefix(\"task-scheduler\")\n            .build();\n    }\n}\n```",
                "time": "2019-01-16 14:38:29",
                "index": 24,
                "user": "edeandrea"
            },
            {
                "id": "5c3f420c0721b912a58cb011",
                "text": "unfortunately i have to drop off of here for a while",
                "time": "2019-01-16 14:39:08",
                "index": 25,
                "user": "edeandrea"
            },
            {
                "id": "5c3f420ff780a1521f1d24f0",
                "text": "Sounds great, I'll try it.",
                "time": "2019-01-16 14:39:11",
                "index": 26,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f421ac45b986d116e0c87",
                "text": "Thank you so much for your help, I'll let you know if it solves my problem.",
                "time": "2019-01-16 14:39:22",
                "index": 27,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f4225f780a1521f1d2565",
                "text": "you\u2019re welcome",
                "time": "2019-01-16 14:39:33",
                "index": 28,
                "user": "edeandrea"
            },
            {
                "id": "5c3f552ac45b986d116e9627",
                "text": "@davorm_gitlab that depends entierely of the `TaskScheduler` you\u2019ve configured",
                "time": "2019-01-16 16:00:42",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5c3f642a0999400604ff79ef",
                "text": "@snicoll I haven't :) But, I found out the solution. First thing - update Spring. I realized we're using some super old version. After that, I implemented an Executor in the Application class. That fixed it. Now I just have to make sure that my Components only run one-of-a-type-at-a-time, but I know how to handle that.",
                "time": "2019-01-16 17:04:42",
                "index": 33,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f643932a8370605e0124e",
                "text": "Unless there's a Spring directive that can do that for me?",
                "time": "2019-01-16 17:04:57",
                "index": 34,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f64fd35350772cf3f838e",
                "text": "if you haven\u2019t you get something that spwans a new thread for every scheduling request so it must just work (not ideal for production use though)",
                "time": "2019-01-16 17:08:13",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5c3f650cba355012a44bbd6a",
                "text": "I also have a hard time understanding how an upgrade fixed anything as this feature is quite mature",
                "time": "2019-01-16 17:08:28",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5c3f665335350772cf3f8bd6",
                "text": "oh I actually take it back, I mixed up with `@EnableAsync`",
                "time": "2019-01-16 17:13:55",
                "index": 37,
                "user": "snicoll"
            },
            {
                "id": "5c3f6663ba5936605bcd6aea",
                "text": ">  If neither of the two is resolvable, a local single-threaded default scheduler will be created and used within the registrar.",
                "time": "2019-01-16 17:14:11",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5c3f6670dab15872cea47cb5",
                "text": "Spring Boot 2.1 has auto-configuration for task scheduling btw",
                "time": "2019-01-16 17:14:24",
                "index": 39,
                "user": "snicoll"
            },
            {
                "id": "5c402f7939596c372bf5224d",
                "text": "@snicoll The upgrade I did was from 1.3.2, task scheduler wasn't even in then. My components don't spawn additional threads, they do some work and then they finish. As I said, adding an Executor with a thread pool solved the issue. I'm interested, though, why do you say it is not ideal for production use?",
                "time": "2019-01-17 07:32:09",
                "index": 63,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c402f840721b912a592a9df",
                "text": "Also, many thanks for all your help guys!",
                "time": "2019-01-17 07:32:20",
                "index": 64,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40739d8ce4bb25b8c6ecbc",
                "text": "@davorm_gitlab I mixed up async and scheduling. The first uses `AsyncTaskExecutor` that\u2019s not recommended for production as it creates a new thread per invocation while the latter uses a single thread by default (that\u2019s why tasks were piled up without config). ",
                "time": "2019-01-17 12:22:53",
                "index": 67,
                "user": "snicoll"
            },
            {
                "id": "5c4073b027611d4204ba71af",
                "text": "@snicoll Ah OK, thanks for the clarification!",
                "time": "2019-01-17 12:23:12",
                "index": 68,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4073b47a0f4d5b19c2b098",
                "text": "Wow `1.3.2` is a long leap. I\u2019d look at what we\u2019ve done in 2.1 and remove your explicit configuration",
                "time": "2019-01-17 12:23:16",
                "index": 69,
                "user": "snicoll"
            },
            {
                "id": "5c4073ca7a0f4d5b19c2b0d3",
                "text": "What do you mean by \"explicit configuration\"?",
                "time": "2019-01-17 12:23:38",
                "index": 70,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4073d5746d4a677ac8c33d",
                "text": "your executor, there is no need for that in 2.1, check the doc",
                "time": "2019-01-17 12:23:49",
                "index": 71,
                "user": "snicoll"
            },
            {
                "id": "5c4073dd8ce4bb25b8c6ef51",
                "text": "Really?",
                "time": "2019-01-17 12:23:57",
                "index": 72,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4073e1746d4a677ac8c347",
                "text": "I just told you",
                "time": "2019-01-17 12:24:01",
                "index": 73,
                "user": "snicoll"
            },
            {
                "id": "5c407400831899452403d81a",
                "text": "You did, I'm just checking if I'm reading it right.",
                "time": "2019-01-17 12:24:32",
                "index": 74,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40740c9bfa375aab161bfe",
                "text": "Forgive me if I'll test it :)",
                "time": "2019-01-17 12:24:44",
                "index": 75,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c407599f780a1521f24d18c",
                "text": "Of course, you're right, it just works. I wasn't doubting you at all, but I had to test it before putting it into production.",
                "time": "2019-01-17 12:31:21",
                "index": 76,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4075c2c45b986d1175bd3b",
                "text": "doubting is fine. Consider also reading the doc to see how you can fine tune pool settings",
                "time": "2019-01-17 12:32:02",
                "index": 77,
                "user": "snicoll"
            },
            {
                "id": "5c4075ee746d4a677ac8d304",
                "text": "I will, of course. I need to find where first, but I will :)",
                "time": "2019-01-17 12:32:46",
                "index": 78,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4078db95e17b452566c0e2",
                "text": "Although, once I remove the Executor I see in the log that it complains there are 2 executors and none marked as primary (or named taskExecutor) so I could actually leave it in, it can't hurt. Or can it? As far as the version goes, as I said, I inherited the code ...",
                "time": "2019-01-17 12:45:15",
                "index": 79,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4078ed0721b912a5947ce1",
                "text": "(also found the docs, it's my new Bible)",
                "time": "2019-01-17 12:45:33",
                "index": 80,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c4078fb35350772cf464de2",
                "text": "So once again, many thanks for your help @snicoll !",
                "time": "2019-01-17 12:45:47",
                "index": 81,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40790e1cb70a372af253b9",
                "text": "I can\u2019t guess what you\u2019re talking about. Pasting the actual log would be easier",
                "time": "2019-01-17 12:46:06",
                "index": 82,
                "user": "snicoll"
            },
            {
                "id": "5c407926f780a1521f24e96e",
                "text": "```2019-01-17 13:28:48.466  INFO 64348 --- [scheduling-1] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [applicationTaskExecutor, taskScheduler]```",
                "time": "2019-01-17 12:46:30",
                "index": 83,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c407a169bfa375aab163d1c",
                "text": "that\u2019s odd",
                "time": "2019-01-17 12:50:30",
                "index": 84,
                "user": "snicoll"
            },
            {
                "id": "5c407a789bfa375aab163f40",
                "text": "If I have an Executor defined in my main class, I get: \n```2019-01-17 13:43:29.428  INFO 74764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService\n2019-01-17 13:43:29.433  INFO 74764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'taskExecutor'\n2019-01-17 13:43:29.672  INFO 74764 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService 'taskScheduler'```",
                "time": "2019-01-17 12:52:08",
                "index": 85,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c407a8c95e17b452566c98e",
                "text": "(sorry, messages didn't seem to be going through)",
                "time": "2019-01-17 12:52:28",
                "index": 86,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c407a950721b912a5948438",
                "text": "you should wrap them for a start ```",
                "time": "2019-01-17 12:52:37",
                "index": 87,
                "user": "snicoll"
            },
            {
                "id": "5c407ad020b78635b63a240b",
                "text": "Yeah ok I can see that log",
                "time": "2019-01-17 12:53:36",
                "index": 88,
                "user": "snicoll"
            },
            {
                "id": "5c407af39bfa375aab1640f9",
                "text": "It still works, though",
                "time": "2019-01-17 12:54:11",
                "index": 89,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c407b029bfa375aab164111",
                "text": "it\u2019s not a warning so there is no reason for it  not to work",
                "time": "2019-01-17 12:54:26",
                "index": 90,
                "user": "snicoll"
            },
            {
                "id": "5c407b107a0f4d5b19c2dd09",
                "text": "Yep, I was thinking the same",
                "time": "2019-01-17 12:54:40",
                "index": 91,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c407b9935350772cf466357",
                "text": "That stuff is so confusing, I really don\u2019t understand why the async pointcut would consider the task scheduler as a candidate. I\u2019ve created https://github.com/spring-projects/spring-boot/issues/15729",
                "time": "2019-01-17 12:56:57",
                "index": 92,
                "user": "snicoll"
            },
            {
                "id": "5c407bbb27611d4204bab4ac",
                "text": "I'm glad I'm not the only one that finds it confusing :) Again, thanks for your help!",
                "time": "2019-01-17 12:57:31",
                "index": 93,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b13f8318994524057a4a",
                "text": "I know this is not really the place to ask such questions. but since upgrading to 2.1.2, my packaged jar can no longer be run from the command line (runs fine from Eclipse, but that's pretty much a given). I've configured POM as documented, the jar is about the same size as the old one (i.e. huge compared to .original), but I'm getting the good old:\n```Exception in thread \"main\" java.lang.reflect.InvocationTargetException```\nfollowed by:\n```Caused by: java.lang.NoSuchMethodError: org.springframework.boot.SpringApplicati\non.<init>([Ljava/lang/Object;)V\n        at org.apache.camel.spring.boot.FatJarRouter.main(FatJarRouter.java:26)```\nMy main application is defined as:\n```\n@SpringBootApplication\n@EnableAsync\n@EnableScheduling\npublic class Application extends FatJarRouter```\nBased on everything I've read, it acts as if not all libraries are packaged, yet I triplechecked and everything is in the jar. Where else should I be looking? I can provide pom.xml. if it will help.\n",
                "time": "2019-01-17 16:45:51",
                "index": 94,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b16dba355012a45405ba",
                "text": "Why do you think this is not the place to ask questions?",
                "time": "2019-01-17 16:46:37",
                "index": 95,
                "user": "snicoll"
            },
            {
                "id": "5c40b18495e17b4525684b65",
                "text": "You may want to check that the camel version you are using is compatible with Spring Boot 2.1",
                "time": "2019-01-17 16:47:00",
                "index": 96,
                "user": "snicoll"
            },
            {
                "id": "5c40b18cba355012a4540643",
                "text": "I meant, this is obviously some build/packaging issue, probably not related to ... aaah",
                "time": "2019-01-17 16:47:08",
                "index": 97,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b18fba355012a4540650",
                "text": "One sec",
                "time": "2019-01-17 16:47:11",
                "index": 98,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b19d746d4a677aca6b68",
                "text": "2.16.1, I'll go check the documentation",
                "time": "2019-01-17 16:47:25",
                "index": 99,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b1b7dab15872ceacc27a",
                "text": "https://start.spring.io/actuator/info",
                "time": "2019-01-17 16:47:51",
                "index": 100,
                "user": "snicoll"
            },
            {
                "id": "5c40b1e9ba355012a45409c5",
                "text": "Alright, thank you!",
                "time": "2019-01-17 16:48:41",
                "index": 101,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b7ad20b78635b63bdf71",
                "text": "Alright, needed some changes but I got it to compile and execute. Now it finishes right away, but that might be because I had to switch from FatJarRouter to RouteBuilder. I'll look into it tomorrow. Thank you for all your help!",
                "time": "2019-01-17 17:13:17",
                "index": 102,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c40b9e6831899452405b985",
                "text": "Hmmm, it still runs fine from Eclipse, I need to check what else I'm missing. But that'll be tomorrow.",
                "time": "2019-01-17 17:22:46",
                "index": 103,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c41a10235350772cf4dbae6",
                "text": "I'm sorry for bothering again, I've looked through the docs and couldn't find something to help me. As I said yesterday, my application works perfectly fine from Eclipse but when I run it from the command line, it seems to abort as soon as the SpringApplication.run() is called. It looks to me that it doesn't process the application.yml file, cause it displays the banner (it's set to \"off\" and doesn't show up in the Console when running in Eclipse). I've tried passing the ```--spring.config.location=config/application.yml``` (with both slash and backslash)  and it didn't help. I've enclosed the call to run() with a println's and only the one before the invocation is displayed. When running in Eclipse, I can see both start and finish and my scheduled threads run fine. I've tried passing --debug on the command line but no joy. Where else can I look at?",
                "time": "2019-01-18 09:48:50",
                "index": 105,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c41b0f38ce4bb25b8cef243",
                "text": "Please ignore my last question. I figured out the problem. I was running the jar from a different location, so it was processing the wrong yml file. Thank you all so much for your support!",
                "time": "2019-01-18 10:56:51",
                "index": 117,
                "user": "davorm_gitlab"
            }
        ]
    },
    {
        "id": 532,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d1ec116dd0b530e409c9818",
                "text": "why HystrixFeign add /r/n and HystrixFeign on my request\uff1f",
                "time": "2019-07-05 03:16:38",
                "index": 0,
                "user": "AceLuodan"
            },
            {
                "id": "5d1ec120ce3d0458f2af789d",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/hp5Q/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/hp5Q/image.png)",
                "time": "2019-07-05 03:16:48",
                "index": 1,
                "user": "AceLuodan"
            },
            {
                "id": "5d1f7ae05821f065d44a6507",
                "text": "@AceLuodan There's a separate room for Spring Cloud: https://gitter.im/spring-cloud/spring-cloud",
                "time": "2019-07-05 16:29:20",
                "index": 28,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 533,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cab1cd731aec969e86f144e",
                "text": "Quick not-exactly-boot-question, but perhaps someone can enlighten me: I found some code on the web that placed Autowired on a constructor parameter. I've never seen that so far, and I kind of think this is a mistake. Autowired's Javadoc also says nothing about supporting parameters, but the annotation is allowed on parameters (via @Target ). Is that correct? Or does Spring do something with Autowired on a constructor parameter (the only thing I could think of would be the required attribute, but the doc says to use Optional for that)",
                "time": "2019-04-08 10:05:11",
                "index": 0,
                "user": "TomRauchenwald"
            },
            {
                "id": "5cab2bb7bd70a40d5f162854",
                "text": "@TomRauchenwald IIRC using `@Autowired` on parameters is a pretty ancient practice. I'm not even sure right now whether this was necessary at some point at all, I just recall that it was often seen until some years ago...",
                "time": "2019-04-08 11:08:39",
                "index": 3,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5cab2c4d1f6e900d5efabb4e",
                "text": "@styx_hcr_twitter thanks. Do you recall what it did? AFAIK Autowired on the constructor itself used to be necessary, only since spring 4.2 or 4.3 it's allowed to omit it if only one constructor is available. Or were you then allowed to omit it on the constructor?",
                "time": "2019-04-08 11:11:09",
                "index": 4,
                "user": "TomRauchenwald"
            },
            {
                "id": "5cab2f54f851ee043d809c5e",
                "text": "Hmm, then I again I also might confuse this with the constructor-level annotations... interesting question though, I found https://github.com/spring-projects/spring-framework/issues/18629 and https://github.com/spring-projects/spring-framework/issues/19833\nSeems to be something special for tests primarily.",
                "time": "2019-04-08 11:24:04",
                "index": 5,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5cab2f7cf851ee043d809d4b",
                "text": "I correct myself then to \"don't think I ever saw this\". Sorry for the confusion :)",
                "time": "2019-04-08 11:24:44",
                "index": 6,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5cab564e20fbe911ee7ef139",
                "text": "@styx_hcr_twitter sorry, had to step away for a bit. thanks for the additional pointers and the help!",
                "time": "2019-04-08 14:10:22",
                "index": 15,
                "user": "TomRauchenwald"
            }
        ]
    },
    {
        "id": 534,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0be1da7456db0bb821b6bb",
                "text": "Can someone show me how I can add a bean to application context programmatically in runtime ? I tried different but now capable to get it available from ApplicationContext",
                "time": "2019-06-20 19:43:22",
                "index": 0,
                "user": "belkirdi"
            },
            {
                "id": "5d0be206e7267a62a90e39b3",
                "text": "different way but wasn't able to register it in the ApplicationContext",
                "time": "2019-06-20 19:44:06",
                "index": 1,
                "user": "belkirdi"
            },
            {
                "id": "5d0be2154b0b7b477b2b94ec",
                "text": "Thanks in advance for your help ",
                "time": "2019-06-20 19:44:21",
                "index": 2,
                "user": "belkirdi"
            },
            {
                "id": "5d0be408d16b28559f56a5ec",
                "text": "I did it using ConfigurableApplicationContext to get the bean factory",
                "time": "2019-06-20 19:52:40",
                "index": 3,
                "user": "belkirdi"
            },
            {
                "id": "5d0be44a5bc3210bb767d343",
                "text": "I am capable to get the bean after that from the applicationContext by registering my object as a singleton  but when I look up to definitionnames ",
                "time": "2019-06-20 19:53:46",
                "index": 4,
                "user": "belkirdi"
            },
            {
                "id": "5d0be45e4b0b7b477b2ba69e",
                "text": "It's not there",
                "time": "2019-06-20 19:54:06",
                "index": 5,
                "user": "belkirdi"
            },
            {
                "id": "5d0be68ce7267a62a90e62de",
                "text": "@belkirdi by which method exactly?",
                "time": "2019-06-20 20:03:24",
                "index": 7,
                "user": "javaman20"
            },
            {
                "id": "5d0bfb8acedb297a8187bb44",
                "text": "@javaman20 I am generating and compiling class in runtime. This class I define it as a component with scheduled function to run it based in interval",
                "time": "2019-06-20 21:32:58",
                "index": 17,
                "user": "belkirdi"
            },
            {
                "id": "5d0bfba8fd4aa914b510a745",
                "text": "I registered the instance of this class as a singleton",
                "time": "2019-06-20 21:33:28",
                "index": 18,
                "user": "belkirdi"
            },
            {
                "id": "5d0bfbc8bc834f76a4afa851",
                "text": "I am capable to get the bean from the application context but the scheduler doesn't seem to work",
                "time": "2019-06-20 21:34:00",
                "index": 19,
                "user": "belkirdi"
            },
            {
                "id": "5d0c04af007cff7a82e87ff4",
                "text": "@belkirdi can you please expand on >but the scheduler doesn't seem to work",
                "time": "2019-06-20 22:11:59",
                "index": 21,
                "user": "javaman20"
            },
            {
                "id": "5d0c0afffd4aa914b5112af3",
                "text": "@javaman20 I am generating and compiling a class like this in runtime :import com.iwellsite.core.code.formula.builder.Formula;\nimport lombok.extern.log4j.Log4j2;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Service;\n\n@Log4j2\n@Service\npublic class CustomFormula extends Formula {\n  @Scheduled(fixedRate = 1000)\n  public void calculate() {\n    log.info(\"Custom formula calculated based on scheduler !!!\");\n  }\n}",
                "time": "2019-06-20 22:38:55",
                "index": 23,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0b36207f6e6963cfdcf7",
                "text": "I want to register this class as bean in the application to make the scheduler work",
                "time": "2019-06-20 22:39:50",
                "index": 24,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0b495bc3210bb7691321",
                "text": "The component annotation is not enough",
                "time": "2019-06-20 22:40:09",
                "index": 25,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0b9d5bc3210bb7691732",
                "text": "ConfigurableListableBeanFactory beanFactory = ((ConfigurableApplicationContext) applicationContext).getBeanFactory();\n\t\t\n\t\t\n\t\tbeanFactory.registerSingleton(className, scheduledFormula);\n\t\tFormula customFormula = (Formula)applicationContext.getBean(className);\n\t\tcustomFormula.calculate();",
                "time": "2019-06-20 22:41:33",
                "index": 27,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0bd7d35d4162a86c7b6d",
                "text": "when I am calling calculate it seems to work good but the problem is I want this class to be a part of applicationContext.getBeanDefinitionNames()",
                "time": "2019-06-20 22:42:31",
                "index": 28,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0be7bc834f76a4b01ef1",
                "text": "to make sure that the scheduler will work properly",
                "time": "2019-06-20 22:42:47",
                "index": 29,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0efc41654c559ecc31c2",
                "text": "finally i find it ",
                "time": "2019-06-20 22:55:56",
                "index": 30,
                "user": "belkirdi"
            },
            {
                "id": "5d0c0f27207f6e6963cff8f0",
                "text": "AutowireCapableBeanFactory beanFactory = applicationContext.getAutowireCapableBeanFactory();\n\t\tbeanFactory.autowireBean(instance);\n\t\tbeanFactory.initializeBean(instance, instance.getClass().getCanonicalName());",
                "time": "2019-06-20 22:56:39",
                "index": 31,
                "user": "belkirdi"
            }
        ]
    },
    {
        "id": 535,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ce7e9e275d9a575a6386596",
                "text": "What is the way Spring Boot customizes the load configuration file?  Some of the information used is EnvironmentPostProcessor, some use @Import to implement ImportBeanDefinitionRegistrar, and some use @PropertySource, I am troubled",
                "time": "2019-05-24 12:56:02",
                "index": 0,
                "user": "xingguang2013"
            },
            {
                "id": "5ce7ed396366992a941384da",
                "text": "@xingguang2013 using the PropertySource annotation would be the recommended way to do so.",
                "time": "2019-05-24 13:10:17",
                "index": 1,
                "user": "vanseverk"
            },
            {
                "id": "5ce7ed49ad024978c61f3dfb",
                "text": "Or just depending on the sensible defaults that Spring Boot allows you to",
                "time": "2019-05-24 13:10:33",
                "index": 2,
                "user": "vanseverk"
            },
            {
                "id": "5ce7ed6883ae782aeec23c62",
                "text": "Put default variables in application.properties, put specific variables in environment variables through for example system variables",
                "time": "2019-05-24 13:11:04",
                "index": 3,
                "user": "vanseverk"
            },
            {
                "id": "5ce7ed8bb313d723141ed978",
                "text": "you can also have a second application.properties file in the location where you run your (runnable) Jar, which will get a precedence over the one supplied in the Jar itself",
                "time": "2019-05-24 13:11:39",
                "index": 4,
                "user": "vanseverk"
            },
            {
                "id": "5ce7efa8ef853135c8164038",
                "text": "@vanseverk thank you ",
                "time": "2019-05-24 13:20:40",
                "index": 5,
                "user": "xingguang2013"
            },
            {
                "id": "5ce800a16366992a94142c02",
                "text": "@vanseverk Thanks for try to help @xingguang2013, but using `@PropertySource` with Spring Boot is discouraged. The recommended approach is to use `EnvironmentPostProcessor` to add one or more additional `PropertySource` instances to the `Environment`.",
                "time": "2019-05-24 14:33:05",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5ce80195d22ba766a2f167dd",
                "text": "@wilkinsona that one's new for me, I'll take a look into it, thanks!",
                "time": "2019-05-24 14:37:09",
                "index": 7,
                "user": "vanseverk"
            },
            {
                "id": "5ce8021e9d64e537bc03a870",
                "text": "It does seem to be a bit of extra hassle though... :)",
                "time": "2019-05-24 14:39:26",
                "index": 8,
                "user": "vanseverk"
            }
        ]
    },
    {
        "id": 536,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8d843926bac95353ca05da",
                "text": "is there a way to supply system props (`-D<prop>=<val>`) in `springBoot` task config? I am using Spring Boot `2.0.4` and have this for now\n```groovy\nspringBoot {\n    mainClassName = \u2018com.example.DemoApplication'\n}\n```\n\nI want to pass some system properties along with this.\n",
                "time": "2018-09-03 18:58:01",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5b8e33c4ac25fd11b5da6c7c",
                "text": "@nnanda2016 What do you want to pass the system properties to? If it\u2019s `bootRun`, you can configure the task directly",
                "time": "2018-09-04 07:27:00",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5b8ebdd326bac95353ca09b6",
                "text": "@wilkinsona Got it; thanks...I was using `springBoot` instead of `bootRun`\u2026so, what\u2019s the basic difference?",
                "time": "2018-09-04 17:16:03",
                "index": 61,
                "user": "nnanda2016"
            },
            {
                "id": "5b8ebded88520a0c6ee61496",
                "text": "`bootRun` was able to pick main class name from `springBoot` task",
                "time": "2018-09-04 17:16:29",
                "index": 62,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 537,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5df9c603090f1379680c3af4",
                "text": "Hi Everyone\nI am facing a problem regarding Internatilization API response. I have explained my problem on Stackoverflow.\n\nhttps://stackoverflow.com/questions/59351131/api-response-internationalization-returning-listelement-spring-boot?noredirect=1#comment104899899_59351131\n\nCan someone please help me?",
                "time": "2019-12-18 06:24:03",
                "index": 0,
                "user": "anuragdhunna"
            },
            {
                "id": "5df9db96c0c8ef301bd0dba4",
                "text": "@anuragdhunna maybe this works https://www.baeldung.com/spring-custom-validation-message-source",
                "time": "2019-12-18 07:56:06",
                "index": 3,
                "user": "konstantinblaesi"
            }
        ]
    },
    {
        "id": 538,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f1170f9724012319bb079f2",
                "text": "Hello.\nI am working with conditional bean creation using `@ConditionalOnProperty` annotation.\nAny idea if `applicationContext.getBean(BeanName.class)`could help with `NoSuchBeanDefinitionException` ?",
                "time": "2020-07-17 09:35:53",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5f11715a4a9e2578a0a40cf7",
                "text": "I tried: \n```\nOptional.ofNullable(applicationContext.getBean(MyBean.class)).isPresent() {\n}\n```\nBut I always get `NoSuchBeanDefinitionException`",
                "time": "2020-07-17 09:37:30",
                "index": 1,
                "user": "amirensit"
            },
            {
                "id": "5f11762afd3832489b14b52c",
                "text": "I am not sure I understood the question. Are you trying to test this or something?",
                "time": "2020-07-17 09:58:02",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5f1177fd18ddba6ef5dc94cc",
                "text": "yes",
                "time": "2020-07-17 10:05:49",
                "index": 3,
                "user": "amirensit"
            },
            {
                "id": "5f1178838a9a0a08cba368c7",
                "text": "my question is: \nwhen the bean is not created, is there a way how to verify if the bean is null or not ?",
                "time": "2020-07-17 10:08:03",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5f1185f264b6213da1430325",
                "text": "check the exception?",
                "time": "2020-07-17 11:05:22",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5f11860382ccdc78adcc39b9",
                "text": "beans can't be null",
                "time": "2020-07-17 11:05:39",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5f118673564e6b39f5610231",
                "text": " `ApplicationContextRunner` has useful methods for that. If you can\u2019t use that `getBeansOfType(BeanName.class)` should be empty",
                "time": "2020-07-17 11:07:31",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 539,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5df686130dc628523e3f673f",
                "text": "Hi all, I am working on a Spring Boot project that authenticates through OAuth2.  I realized that the `aud` field is not validated from a resource server.  Is there any plan to introduce an `audience` field in `org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties.Jwt` so the `JwtDecoder ` could validate it?  If not, should I create an issue for it?",
                "time": "2019-12-15 19:14:27",
                "index": 0,
                "user": "MaximeJeanson_gitlab"
            },
            {
                "id": "5df6864e7ce7ea1e358ce6f4",
                "text": "@MaximeJeanson_gitlab take a look at baeldung's new reworked OAuth library",
                "time": "2019-12-15 19:15:26",
                "index": 2,
                "user": "bvn13"
            },
            {
                "id": "5df68b22ce2b2e652bdfecc3",
                "text": "@bvn13 I'm not sure I've found what you're referencing :-/ But while searching I've found this [Unported Features](https://github.com/spring-projects/spring-security/wiki/OAuth-2.0-Migration-Guide#unported-features) and this [Configuring a Custom Validator](https://docs.spring.io/spring-security/site/docs/5.2.2.BUILD-SNAPSHOT/reference/htmlsingle/#oauth2resourceserver-jwt-validation-custom) which partially answer my question.  Still I wonder why it has to be handle manually while in [RFC 7519 - 4.1.3.  \"aud\" (Audience) Claim](https://tools.ietf.org/html/rfc7519#section-4.1.3) it must be validated if present? :)",
                "time": "2019-12-15 19:36:02",
                "index": 3,
                "user": "MaximeJeanson_gitlab"
            },
            {
                "id": "5df68d6d7d382b523f82503b",
                "text": "@bvn13 Btw, thanks for now I can configure the audience validator in my project ^_^",
                "time": "2019-12-15 19:45:49",
                "index": 4,
                "user": "MaximeJeanson_gitlab"
            }
        ]
    },
    {
        "id": 540,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d2f1b5ae190903936ffee34",
                "text": "I'm using `@AutoConfigureRestDocs`, what's the base way to have a `RestDocsMockMvcConfigurationCustomizer` that's picked up by all tests?",
                "time": "2019-07-17 12:58:02",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5d2f1b6cd14e297762e9ea55",
                "text": "Most of which are `@WebMvcTest`",
                "time": "2019-07-17 12:58:20",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d2f2244e190903936002d51",
                "text": "Probably by declaring it in a `@Configuration` class that you `@Import`",
                "time": "2019-07-17 13:27:32",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d2f226001621760bcceb420",
                "text": "You could create your own annotation and meta-annotate it with `@AutoConfigureRestDocs` and the `@Import`",
                "time": "2019-07-17 13:28:00",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 541,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cf10330481ef4167ba7d9da",
                "text": "@wilkinsona this is somewhat related to the issue I described yesterday since its about testing again. When running integration tests using Gradle that spin up a Spring Boot application, we get non-zero exit values since the application isn't being torn-down cleanly before the Gradle task completes; causing Jenkins to report erros and abort pipeline builds. The issue is fixed if I use `@DirtiesContext` but the length of time it takes to run the tests is crazy (around 12 minutes). Do you know of any ways to improve the efficiency of those tests by, maybe, telling Gradle to shut down the current applictaion context at the conclusion of the \"test\" task?  ",
                "time": "2019-05-31 10:34:24",
                "index": 0,
                "user": "mlk5060"
            },
            {
                "id": "5cf10648b76eac527a7c072a",
                "text": "@mlk5060 The test framework should close the contexts for you automatically once all the tests have been run. IIRC, it uses a shutdown hook to do so.",
                "time": "2019-05-31 10:47:36",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cf1067b5de053468beaf2e6",
                "text": "@wilkinsona I'm wondering if the context is in the middle of shutting down when Gradle tries to exit, in that case?",
                "time": "2019-05-31 10:48:27",
                "index": 2,
                "user": "mlk5060"
            },
            {
                "id": "5cf106f26fc5846bab3a9994",
                "text": "I'd expect Gradle to wait for the VM running the tests to exit rather than it forcing anything. That's always the behaviour that I have seen, anyway",
                "time": "2019-05-31 10:50:26",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5cf10729e41fe15e75eafc17",
                "text": "Can you share the output from the `test` task when you're not using `@DirtiesContext`?",
                "time": "2019-05-31 10:51:21",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5cf10cee7c1dab468c78c265",
                "text": "@wilkinsona  sure! Sorry about the delays, I'm bouncing between a few jobs!",
                "time": "2019-05-31 11:15:58",
                "index": 6,
                "user": "mlk5060"
            },
            {
                "id": "5cf10dc365392c3b60969f1e",
                "text": "@wilkinsona Now the `test` task is passing without `@DirtiesContext` being present on the `IntegrationtestBase` class :confounded: ",
                "time": "2019-05-31 11:19:31",
                "index": 7,
                "user": "mlk5060"
            }
        ]
    },
    {
        "id": 542,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ec532933be96c0df9945816",
                "text": "hello, when using `ConfigurationProperties` is there any way to have some kind of `supporting` field? I would like to use that field  in `@PostConstruct` to present computed values. So it would be nice if annotation processor doesn't gather a informations about it and doesn't create meta-data. I've tried to add `transient` field but it's still gathered.",
                "time": "2020-05-20 13:37:23",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5ec54e569d1d2310cc38399f",
                "text": "@bilak A field alone isn't sufficient to cause metadata to be generated. For example we have a `parsedAddresses` field in Boot's `RabbitProperties` that isn't included in the metadata. IIRC, there has to be a public getter method to trigger metadata generation.",
                "time": "2020-05-20 15:35:50",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 543,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d1b9d8984cbda1764b72bad",
                "text": "Hi Could anyone tell me where to study JAVA for backend?",
                "time": "2019-07-02 18:08:09",
                "index": 0,
                "user": "geometryhu"
            },
            {
                "id": "5d1baf14cd7934667dc5e7b5",
                "text": "@geometryhu What do you mean by \u201cJava for backend\u201d? Is there a Java for frontend? Buy books on Java. In my case I learnt Java from those books: \u201cHeadfirst Java\u201d, \u201dHeadfirst Design pattern\u201d, \u201cJava 8 in Action\u201d and \u201cEffective Java\u201d ",
                "time": "2019-07-02 19:23:00",
                "index": 1,
                "user": "akuma8"
            },
            {
                "id": "5d1bb2ec84e3391a5ac20150",
                "text": "@akuma8, there are/were a few frameworks where you wrote code in Java and it was transpiled to JS. There was GWT, Vaadin (which i think is still going), for example",
                "time": "2019-07-02 19:39:24",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5d1bb3a7b1b66b7203c20eac",
                "text": "Right tool for the job",
                "time": "2019-07-02 19:42:31",
                "index": 3,
                "user": "akuma8"
            }
        ]
    },
    {
        "id": 544,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c87cb8abf7990126e8fa9b5",
                "text": "are the maven spring repos acting up? should https://repo.spring.io/milestone be accessible?",
                "time": "2019-03-12 15:08:58",
                "index": 0,
                "user": "marcguilera"
            },
            {
                "id": "5c87de858f294b134a2e9d71",
                "text": "> are the maven spring repos acting up? should https://repo.spring.io/milestone be accessible?\n\nI also have problems",
                "time": "2019-03-12 16:29:57",
                "index": 2,
                "user": "FWiesner"
            },
            {
                "id": "5c87ded88f294b134a2e9f9c",
                "text": "@marcguilera @FWiesner See https://twitter.com/springops",
                "time": "2019-03-12 16:31:20",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5c87defdbf7990126e903552",
                "text": "@bclozel thanks",
                "time": "2019-03-12 16:31:57",
                "index": 4,
                "user": "FWiesner"
            }
        ]
    },
    {
        "id": 545,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d21f38a9bb34a3cf327e703",
                "text": "Hi guys can i write `@controller`(for spring mvc thymeleaf) and `@restcontroller`(for rest api ) in one spring boot project ??",
                "time": "2019-07-07 13:28:42",
                "index": 0,
                "user": "iammohsinar"
            },
            {
                "id": "5d21f4128193ce270f3b8f3b",
                "text": "of course",
                "time": "2019-07-07 13:30:58",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5d21f451fadb05448035d77e",
                "text": "Controller will send request to restcontroller then rest controller will connect to db. If mobile devices want to connect to my api it will request to Restcontroller directly ",
                "time": "2019-07-07 13:32:01",
                "index": 2,
                "user": "iammohsinar"
            },
            {
                "id": "5d21f484b50ac233b9e73284",
                "text": "Is there any project example on github ?? @tonisostrat ",
                "time": "2019-07-07 13:32:52",
                "index": 3,
                "user": "iammohsinar"
            },
            {
                "id": "5d21f4d1631d3433ba3f8216",
                "text": "no-no-no. there should be a common @Service class implementation that both the @RestController and the normal @Controller will call when needed. don't do @Controller -> @RestController",
                "time": "2019-07-07 13:34:09",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5d239d7317cc7b05ca94d61d",
                "text": "@tonisostrat  thanks your answer helps me but i want to know how  can i handle URL pattern for `@restcontroller ` and `@controller ` ?  e.g:  for `/login` i am using `authfilter` for json and i need to use session for `thymeleaf`.\n",
                "time": "2019-07-08 19:45:55",
                "index": 27,
                "user": "iammohsinar"
            }
        ]
    },
    {
        "id": 546,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d079d95325b465cc344a64a",
                "text": "@wilkinsona  hello , what is the purpose of using adapter classes in spring like WebSecurityConfigurerAdapter ...\nbecause as i know adapter pattern is usually used to make two incompatible interfaces or classes to work together.\ni don't figure out this in spring adapter implementation.\n",
                "time": "2019-06-17 14:03:01",
                "index": 0,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5d07a409950f1062a987ac8d",
                "text": "`WebSecurityConfigurerAdapter` isn't an adapter in that sense, and neither is `WebMvcConfigurerAdapter`. They're just convenient base classes for `WebSecurityConfigurer` and `WebMvcConfigurer` implementations.",
                "time": "2019-06-17 14:30:33",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 547,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c33d9ed82a6c30b909ee558",
                "text": "Hi, I am trying to get my api to work with oauth2.   Has anyone implemented a resource server which connects to an existing Oauth server?",
                "time": "2019-01-07 22:59:57",
                "index": 0,
                "user": "pitchblack408"
            },
            {
                "id": "5c33e07f1948ad07e804b9a9",
                "text": "Did you take a look at https://spring.io/guides/tutorials/spring-boot-oauth2/",
                "time": "2019-01-07 23:27:59",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5c33e10a5ec8fe5a851a0b44",
                "text": "Or section 3 from https://www.baeldung.com/rest-api-spring-oauth2-angularjs",
                "time": "2019-01-07 23:30:18",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5c33e26cbd592b2e6e6af0e6",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#oauth2-resource-server-support",
                "time": "2019-01-07 23:36:12",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c33e2b64ed182787775ba48",
                "text": "https://docs.spring.io/spring-security/site/docs/current/reference/html/webflux-oauth2.html#webflux-oauth2-resource-server",
                "time": "2019-01-07 23:37:26",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5c33e2dfaac7082e6fed8ec1",
                "text": "https://github.com/spring-projects/spring-security/tree/5.1.2.RELEASE/samples/boot/oauth2resourceserver",
                "time": "2019-01-07 23:38:07",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5c33e33d357dd7655d3282c0",
                "text": "@pitchblack408 all those links I just posted should get you goibg",
                "time": "2019-01-07 23:39:41",
                "index": 6,
                "user": "edeandrea"
            },
            {
                "id": "5c33e344bd592b2e6e6af63e",
                "text": "Going",
                "time": "2019-01-07 23:39:48",
                "index": 7,
                "user": "edeandrea"
            },
            {
                "id": "5c33e4adbd592b2e6e6afec9",
                "text": "https://spring.io/guides/tutorials/spring-boot-oauth2/ has single sign on example but I am trying to use oauth2 with an rest api.   The company has an authentication server already.  They want me to use that with the api I just made.  I will look at the other links you provided",
                "time": "2019-01-07 23:45:49",
                "index": 8,
                "user": "pitchblack408"
            }
        ]
    },
    {
        "id": 548,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d0553ad950f1062a9779e87",
                "text": "Hi Booters, \nCould someone explains me this strange behavior of `@DataJpaTest`: \nI defined a simple test class: \n```\n@ActiveProfiles( \"dev\" )\n@RunWith( SpringRunner.class )\n@DataJpaTest\n@TestPropertySource( properties = {\n        \"logging.level.org.hibernate.type=trace\",\n        \"logging.level.org.hibernate.sql=debug\",\n        \"logging.level.org.hibernate.type.BasicTypeRegistry=warn\",\n        \"spring.main.banner-mode=off\" } )\n@AutoConfigureTestDatabase( connection = H2, replace = AutoConfigureTestDatabase.Replace.NONE )\npublic class CommonRepositoryTestConfig { }\n```\nI also have `spring-boot-starter-security:2.1.5.RELEASE` and `spring-security-oauth2:2.3.6.RELEASE` dependencies. The `@SpringBootApplication` class is also annoted with `@EnableAuthorizationServer`. When I start my jpa tests, this exception is thrown:\n```\njava.lang.IllegalStateException: Failed to load ApplicationContext\n\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)\n\tat org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration': Unsatisfied dependency expressed through field 'endpoints'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfi\n```\n",
                "time": "2019-06-15 20:23:08",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5d05559b8e050f62aa2449e7",
                "text": "The full stacktrace: \n```\n\njava.lang.IllegalStateException: Failed to load ApplicationContext\n\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)\n\tat org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration': Unsatisfied dependency expressed through field 'endpoints'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration': Unsatisfied dependency expressed through field 'configurers'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'java.util.List<org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurer>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotat\n```",
                "time": "2019-06-15 20:31:22",
                "index": 1,
                "user": "akuma8"
            },
            {
                "id": "5d0555bea8d9871b32936bde",
                "text": "I tried several solutions, one by excluding explicitly the bean `org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration` in `@DataJpaTest( excludeFilters=....)` without success. ",
                "time": "2019-06-15 20:31:58",
                "index": 2,
                "user": "akuma8"
            },
            {
                "id": "5d0556ad2313502d384bd86f",
                "text": "So I finally decided to define the missing bean in my test class:\n```\n   @TestConfiguration\n    public static class TestConfig {\n        @Bean\n        public List<AuthorizationServerConfigurer> configurers() {\n            List<AuthorizationServerConfigurer> configurers = Collections.emptyList();\n            return configurers;\n        }\n    }\n```\nThat solved the issue. \nCould someone explains me the reason of this failure. Why `@DataJpaTest` looks for security beans? Thanks ",
                "time": "2019-06-15 20:35:57",
                "index": 3,
                "user": "akuma8"
            },
            {
                "id": "5d078ffc325b465cc3443cd7",
                "text": "@akuma8 what does your main application class look like? I would guess it has an `@Enable\u2026` annotation on it that is switching on some security \"stuff\".",
                "time": "2019-06-17 13:05:00",
                "index": 25,
                "user": "wilkinsona"
            },
            {
                "id": "5d079120e527d95addec8625",
                "text": "@wilkinsona  This is my main class: \n```\n@SpringBootApplication( exclude = { QuartzAutoConfiguration.class } )\n@EnableIntegration\n@IntegrationComponentScan\n@EnableResourceServer\n@EnableAuthorizationServer\n@EnableWebSecurity( debug = true )\n@EnableGlobalMethodSecurity( prePostEnabled = true, securedEnabled = true )\n@EnableConfigurationProperties\n@EnableAsync( proxyTargetClass = true )\n@EnableCaching( proxyTargetClass = true )\n@EnableSwagger2\n@Import( BeanValidatorPluginsConfiguration.class )\npublic class SecurityServiceApplication extends GlobalMethodSecurityConfiguration {\n\n    public static void main( String[] args ) {\n        SpringApplication.run( SecurityServiceApplication.class );\n    }\n\n    @Override\n    protected MethodSecurityExpressionHandler createExpressionHandler() {\n        return new OAuth2MethodSecurityExpressionHandler();\n    }\n\n    @PostConstruct\n    void setTimeZone() {\n        TimeZone.setDefault( TimeZone.getTimeZone( \"UTC\" ) );\n    }\n}\n```",
                "time": "2019-06-17 13:09:52",
                "index": 26,
                "user": "akuma8"
            },
            {
                "id": "5d0791b32313502d385ae946",
                "text": "Yes I have security enables but I thought that `@DataJpaTest` doesn't care about  that and looks for only beans related to database tests. ",
                "time": "2019-06-17 13:12:19",
                "index": 27,
                "user": "akuma8"
            },
            {
                "id": "5d0793126f0ec85ade232e62",
                "text": "Yes and no. It tunes component scanning to only include beans that are related to JPA, but has to honour everything that's enabled via your main class",
                "time": "2019-06-17 13:18:10",
                "index": 28,
                "user": "wilkinsona"
            },
            {
                "id": "5d07936a2313502d385af659",
                "text": "There's some guidance in the reference docs: https://docs.spring.io/spring-boot/docs/2.1.x/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-user-configuration",
                "time": "2019-06-17 13:19:38",
                "index": 29,
                "user": "wilkinsona"
            },
            {
                "id": "5d0793d82313502d385afab1",
                "text": "I'd recommend splitting those `@Enable\u2026` annotations out into a few separate `@Configuration` classes. You could group `@EnableResourceServer`, `@EnableAuthorizationServer` and `@EnableGlobalMethodSecurity` on a separate `@Configuration` class that deals solely with security. This class would be your `GlobalMethodSecurityConfiguration` extension.",
                "time": "2019-06-17 13:21:28",
                "index": 30,
                "user": "wilkinsona"
            },
            {
                "id": "5d07955efbcc305cc48826e0",
                "text": "Thanks for your suggestions, I'll split my  configurations. ",
                "time": "2019-06-17 13:27:58",
                "index": 31,
                "user": "akuma8"
            }
        ]
    },
    {
        "id": 549,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bc078186e5a401c2d5b7829",
                "text": "hello.\nAny idea how to add a new `hibernate sequence` in liquibase and applicate that sequence to a specific entity ?",
                "time": "2018-10-12 10:31:52",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5bc07835435c2a518e93bcf7",
                "text": "I need to set the autoIncrement id of a specific entity start from 1000 and increment by 1",
                "time": "2018-10-12 10:32:21",
                "index": 1,
                "user": "amirensit"
            },
            {
                "id": "5bc078641c100a4f29727f7b",
                "text": "the id of the other entities should start by 1 and increment by 1 ",
                "time": "2018-10-12 10:33:08",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5bc0b260f659e67772a43d22",
                "text": "@amirensit his hibernate_sequence  is \"global\" and used by all normal generated ids. you need to configure the usage of different sequences at the ```@Id / @Generator*``` annotations. see this https://vladmihalcea.com/hibernate-identity-sequence-and-table-sequence-generator/ for a complete wrap up of the topic",
                "time": "2018-10-12 14:40:32",
                "index": 5,
                "user": "thackel"
            },
            {
                "id": "5bc0bf60435c2a518e96089d",
                "text": "@thackel ok",
                "time": "2018-10-12 15:36:00",
                "index": 11,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 550,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e2227e9c7647778a5df384f",
                "text": "Hey! Am I the only one having problem fetching 2.1.12.RELEASE from mvn central? I see it here https://search.maven.org/artifact/org.springframework.boot/spring-boot-dependencies/2.1.12.RELEASE/pom but  not here https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies and I get release not found when trying to build it in my project. Any sync issue going on?",
                "time": "2020-01-17 21:32:25",
                "index": 0,
                "user": "jebeaudet"
            },
            {
                "id": "5e223521dd1429262d428804",
                "text": "@jebeaudet mvnrepository is a 3rd party website indexing maven repositories. maven.org is the source of truth. Issues have been recently reported on https://issues.sonatype.org/ about 404s/CDN sync issues but it seems that artifacts are there. Do you have an exact error message?",
                "time": "2020-01-17 22:28:49",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5e25b4468e073f465f244cf7",
                "text": "@bclozel looks like it's an issue with our internal maven repo, never seen that one before so didn't think to look there. By switching to maven central it downloaded the release properly. thanks and sorry for the noise!",
                "time": "2020-01-20 14:08:06",
                "index": 43,
                "user": "jebeaudet"
            },
            {
                "id": "5e260546051f76323cc438d6",
                "text": "Regarding the previous message, our internal repository was configured with maven central in http and this is not supported anymore as of January 15th, 2020 https://support.sonatype.com/hc/en-us/articles/360041287334. All I had to do is point to the proper upstream maven repository and it worked. I'm guessing mvnrepository might have the same problem!",
                "time": "2020-01-20 19:53:42",
                "index": 45,
                "user": "jebeaudet"
            },
            {
                "id": "5e264c40d45b4f5fee3d7d89",
                "text": "@jebeaudet Glad you got it resolved. Note that if your internal repo is also mirroring repo.spring.io (e.g. for Spring milestones or snapshots), you\u2019ll need to make a similar change. https://spring.io/blog/2019/09/16/goodbye-http-repo-spring-use-https",
                "time": "2020-01-21 00:56:32",
                "index": 46,
                "user": "scottfrederick"
            }
        ]
    },
    {
        "id": 551,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e392d4a73ddad4acd8fc3d4",
                "text": "Hello.\nAny idea what is the alternative of `@AutoConfigureMockMvc(secure=false)` as secure attribute is deprecated ?\nI am using 2.1.2.RELEASE version of spring boot",
                "time": "2020-02-04 08:37:30",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5e393576f6945f41ef59e098",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#deprecations-in-spring-boot-21",
                "time": "2020-02-04 09:12:22",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e393e2d594a0517c26707eb",
                "text": "@snicoll :thumbsup: ",
                "time": "2020-02-04 09:49:33",
                "index": 2,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 552,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c6ef3f2c4da4a11f5927324",
                "text": "does spring-boot provide any readymade support for social login? \nI have googled it, yes there are social-core and related dependencies, but none of them solves the purpose of handling social login. They are used to retrive data from social apps.\n\nAlso, someone told me that latest release of Spring contains automatic creation of users, if they login using social providers. But he never responded on the solution added by spring.\n\nNote, I want to create this social login feature through a REST api built using spring-boot.",
                "time": "2019-02-21 18:54:42",
                "index": 0,
                "user": "Puspendert"
            },
            {
                "id": "5c6f0072c4da4a11f592cb1c",
                "text": "@Puspendert Have you looked at Spring Security?  It has the features to support social login.  Take a look at [this](https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#oauth2login)",
                "time": "2019-02-21 19:48:02",
                "index": 1,
                "user": "tlann"
            },
            {
                "id": "5c6f058fc776985d8f2f084e",
                "text": "I will give it a try. Thanks",
                "time": "2019-02-21 20:09:51",
                "index": 2,
                "user": "Puspendert"
            }
        ]
    },
    {
        "id": 553,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba368b2f7e1580625fa924a",
                "text": "Hi, I'm using Spring's Cache abstraction (using JSR107) for some parts of an application. Together with the Boot Actuator endpoint we can look at these cases. ",
                "time": "2018-09-20 09:30:26",
                "index": 0,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba36902e5c2cc56adb86ee1",
                "text": "I'm now also adding HIbernate L2  cache and I'm wondering if it can integrate more or less with Spring's Cache abstraction, so that it uses the same javax CacheManager for all caches (both custom defined caches as Hibernate L2)",
                "time": "2018-09-20 09:31:46",
                "index": 1,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba369221ee2ca650242e2bf",
                "text": "As anybody some experience in this area?",
                "time": "2018-09-20 09:32:18",
                "index": 2,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba36940f4bd1056ac8d89d6",
                "text": "There is a test that does that",
                "time": "2018-09-20 09:32:48",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ba36959e5c2cc56adb870bb",
                "text": "https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/Hibernate2ndLevelCacheIntegrationTests.java",
                "time": "2018-09-20 09:33:13",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5ba36989e5c2cc56adb87153",
                "text": "Oke I will look into that",
                "time": "2018-09-20 09:34:01",
                "index": 5,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba369bd1043315947bb3212",
                "text": "What I'm experiencing now is that the Hibernate caches are created in different classloader. So the Hibernate created caches do exist, but not in the CacheManager used by Spring.",
                "time": "2018-09-20 09:34:53",
                "index": 6,
                "user": "marceloverdijk"
            },
            {
                "id": "5ba36ccc0cfe7f30f1bff82b",
                "text": "JCache bootstrap uses the app classloader as it should",
                "time": "2018-09-20 09:47:56",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5ba36cdc1043315947bb4759",
                "text": "I don\u2019t know what Hibernate does",
                "time": "2018-09-20 09:48:12",
                "index": 8,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 554,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5b92bf701e2b442a25dada86",
                "text": "hello everybody i'm new in spring boot i need same tutorials or books name  ",
                "time": "2018-09-07 18:12:00",
                "index": 0,
                "user": "ArABd_gitlab"
            },
            {
                "id": "5b92ddd033ebb72e37e45ab6",
                "text": "@ArABd_gitlab https://spring.io/guides https://www.baeldung.com",
                "time": "2018-09-07 20:21:36",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5b92de7433ebb72e37e45f02",
                "text": "so did the spring security channel here just die?",
                "time": "2018-09-07 20:24:20",
                "index": 2,
                "user": "xenoterracide"
            },
            {
                "id": "5b93072e7ce5f5314f7bf33c",
                "text": "@xenoterracide thank you",
                "time": "2018-09-07 23:18:06",
                "index": 3,
                "user": "ArABd_gitlab"
            }
        ]
    },
    {
        "id": 555,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5dc31135e886fb5aa2661de5",
                "text": "is spring boot 2.2.0 jigsaw ready?",
                "time": "2019-11-06 18:30:13",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5dc31165196ffb4db91a9c4b",
                "text": "meaning could I start using jigsaw with my own modules and it? does it properly export the right packages and stuff?",
                "time": "2019-11-06 18:31:01",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5dc326e1f26ea4729d67ae67",
                "text": "Yes. Each artifact in both Boot and Framework can be used with Jigsaw as automatic modules. The benefits are negligible at best though so we don't expect many people to bother and have hardly seen anyone do so.",
                "time": "2019-11-06 20:02:41",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 556,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ef5df5cbb149531edd0bc8c",
                "text": "Hello, I don't know if this is the  channel for testing, but just wanted to ask if how would I do a unit test on time limits?\nLike for example, I implemented a 5 hour user session limit, where the user's session automatically expires after 5 hours from the time it logged in.\n\nSo how do I verify that indeed the session expired after this time period in the future?(except manual testing)",
                "time": "2020-06-26 11:43:24",
                "index": 0,
                "user": "josephnicholas"
            },
            {
                "id": "5ef6f615c223cc536a3af8b5",
                "text": "@josephnicholas I would just test that the container has been configured with the required timeout and then trust it to do that correctly. Anything beyond that is going to be cumbersome to test due to the time involved and is largely testing the container rather than your own code. If you do want to check that you are using the right mechanism to configure the timeout, you could set it to something very short in a test and then check that things timeout as expected.",
                "time": "2020-06-27 07:32:37",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 557,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5edfb9985dcbb760b6dbd5d0",
                "text": "Hello I'm trying to integrate redis for caching. but currently I'm getting following error and can't get over it. \n```\njava.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class com.archiving.model.ImportDTO (java.util.LinkedHashMap is in module java.base of loader 'bootstrap'; com.archiving.model.ImportDTO is in unnamed module of loader 'app')\n\tat com.archiving.service.impl.ImportsServiceImpl$$EnhancerBySpringCGLIB$$277f3e8f.getImportById(<generated>)\n\tat com.archiving.controller.ImportsApiController.readImport(ImportsApiController.java:65)\n\tat com.archiving.controller.ImportsApiController$$FastClassBySpringCGLIB$$1a25a29d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\n```\n\nThis is my caching config:\n\n```\n@Configuration\n@EnableCaching\n@EnableConfigurationProperties(CacheProperties.class)\npublic class CacheConfig {\n\n  public static final String INTERNAL_API_BUSINESS_PREMISES = \"internal-api::check-bp\";\n  public static final String INTERNAL_API_ORGANIZATION = \"internal-api::check-org\";\n  public static final String IMPORTS = \"imports\";\n\n  private final CacheProperties cacheProperties;\n  private final ObjectMapper objectMapper;\n\n  public CacheConfig(CacheProperties cacheProperties, ObjectMapper objectMapper) {\n    this.cacheProperties = cacheProperties;\n    this.objectMapper = objectMapper;\n  }\n\n  @Bean\n  //@Primary\n  public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory rcf) {\n    RedisTemplate<Object, Object> template = new RedisTemplate<>();\n    template.setConnectionFactory(rcf);\n    template.setDefaultSerializer(new GenericJackson2JsonRedisSerializer(objectMapper));\n    return template;\n  }\n\n  @Bean\n  public RedisCacheManagerBuilderCustomizer redisCacheManagerBuilderCustomizer() {\n    return builder -> {\n      builder.cacheDefaults(defaultCacheConfig(cacheProperties.getDefaultTtl()));\n      if (cacheProperties.getCaches() != null && !cacheProperties.getCaches().isEmpty()) {\n        cacheProperties.getCaches()\n          .forEach((key, value) -> builder.withCacheConfiguration(key, defaultCacheConfig(value.getTtl())));\n      }\n    };\n  }\n\n  private RedisCacheConfiguration defaultCacheConfig(Duration ttl) {\n    return RedisCacheConfiguration.defaultCacheConfig().disableCachingNullValues().entryTtl(ttl)\n      .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(new GenericJackson2JsonRedisSerializer(objectMapper)))\n      //.serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(new GenericJackson2JsonRedisSerializer(objectMapper)))\n      //.serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(new JdkSerializationRedisSerializer(getClass().getClassLoader())));\n    ;\n  }\n\n}\n```\n\nand this is method annotated with caching\n\n```\n@Override\n  @Cacheable(value = CacheConfig.IMPORTS)\n  public ImportDTO getImportById(String importId) {\n   ... \n  }\n```\n\nWhen I call the method first time and look into the redis, data are stored properly and response is returned ok. But when I call that method second time it fails on error mentioned above. Could somebody please tell me what's wrong? ",
                "time": "2020-06-09 16:32:24",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5edfba9fee693d6eb3b37dfe",
                "text": "You're using Jackson serialization. Everything that gets cached must be set up with necessary Jackson annotations. You may need type hints etc.",
                "time": "2020-06-09 16:36:47",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5edfe0f55dcbb760b6dc7869",
                "text": "@OrangeDog there are jackson annotations \n```\npublic class ImportDTO implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @JsonProperty(\"id\")\n  private UUID id;\n\n  @JsonProperty(\"businessPremisesId\")\n  private UUID businessPremisesId;\n\n  @JsonProperty(\"businessDate\")\n  private LocalDate businessDate;\n\n  @JsonProperty(\"created\")\n  private OffsetDateTime created;\n\n  @JsonProperty(\"type\")\n  private ImportTypeEnumDTO type;\n\n  @JsonProperty(\"version\")\n  private String version;\n\n  @JsonProperty(\"status\")\n  private ImportStatusEnumDTO status;\n\n  @JsonProperty(\"replaceId\")\n  private UUID replaceId;\n\n  @JsonProperty(\"company\")\n  private CompanyDTO company;\n```",
                "time": "2020-06-09 19:20:21",
                "index": 2,
                "user": "bilak"
            },
            {
                "id": "5edfe110013105125a2518b7",
                "text": "basically tImprtDTO is generated by openapi-generator\n",
                "time": "2020-06-09 19:20:48",
                "index": 3,
                "user": "bilak"
            }
        ]
    },
    {
        "id": 558,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5be18c7af25a725338fd125a",
                "text": "with spring boot 2, can I remove `jackson-datatype-jsr310`(and jackson-databind, jackson-annotations...) dependency? I removed them from my projects and everything seems ok, but i'm afraid of getting a runtime exception anytime (or even worse, messing the dates)",
                "time": "2018-11-06 12:43:38",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5be1934bde33dd0c96da52aa",
                "text": "JSR310 is automatically provided now that Java8 is the base if you\u2019re using the starter",
                "time": "2018-11-06 13:12:43",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5be1996b9c65e607e70a9acd",
                "text": "Thanks!",
                "time": "2018-11-06 13:38:51",
                "index": 2,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 559,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c000139ed6bcf1ef87c8ce9",
                "text": "Hi Guys, I am very excited to join this community as i have recently started learning spring and springboot based application development",
                "time": "2018-11-29 15:09:45",
                "index": 0,
                "user": "cool-raj"
            },
            {
                "id": "5c000158e25cc274056139a9",
                "text": "hope i will learn a lot from this community!",
                "time": "2018-11-29 15:10:16",
                "index": 1,
                "user": "cool-raj"
            },
            {
                "id": "5c000286ced7003fe1a4ef3b",
                "text": "I need a small help from the community: I have a wicket 6 based web application , this is a simple application with cooncetion to databases to fetch the data.This applicaition does not use spring at all. Now i want to migrate it to springboot so that we can run this stanalone in boot's tomcat server.First question : is it feasible ? if yes then , please suggest me the possible steps.",
                "time": "2018-11-29 15:15:18",
                "index": 2,
                "user": "cool-raj"
            },
            {
                "id": "5c0002d4e25cc2740561459b",
                "text": "stand-alone means run once and exit?",
                "time": "2018-11-29 15:16:36",
                "index": 3,
                "user": "gitmnd"
            },
            {
                "id": "5c0002fccb32736b29b1489a",
                "text": "or does it need to serve API request?",
                "time": "2018-11-29 15:17:16",
                "index": 4,
                "user": "gitmnd"
            },
            {
                "id": "5c000307e25cc274056146a5",
                "text": "@gitmnd : no it runs on jboss or similer kind of app server",
                "time": "2018-11-29 15:17:27",
                "index": 5,
                "user": "cool-raj"
            },
            {
                "id": "5c000348cfa682348da35dfb",
                "text": "yes it is possible",
                "time": "2018-11-29 15:18:32",
                "index": 6,
                "user": "gitmnd"
            },
            {
                "id": "5c000380d24f9324d27173c4",
                "text": "This application  offers the webpages and the actions are served by serverAPI",
                "time": "2018-11-29 15:19:28",
                "index": 7,
                "user": "cool-raj"
            },
            {
                "id": "5c0003b8f849b222e0c22d5f",
                "text": "@gitmnd : this application offers the webpages and the actions are served by serverAPI.Can you please suggest me some steps that i shall take into consideration",
                "time": "2018-11-29 15:20:24",
                "index": 8,
                "user": "cool-raj"
            },
            {
                "id": "5c0003f6ed6bcf1ef87ca37a",
                "text": "so you want to serve API request via spring-boot API and your web application still outside boot project,right?",
                "time": "2018-11-29 15:21:26",
                "index": 9,
                "user": "gitmnd"
            },
            {
                "id": "5c00051ccb32736b29b157c0",
                "text": "@gitmnd : i think , i could not explain properly.my applicaition offers webpages which are rendered by wicket.any action on page results into submitting the data in database or loading data from databases but data layer is as service layer . this services is just the name , it's not a http service . it's just a database call via ORM layer",
                "time": "2018-11-29 15:26:20",
                "index": 10,
                "user": "cool-raj"
            },
            {
                "id": "5c00058f958fc538950b2d37",
                "text": "@cool-raj  you can very well write springboot based rest api's. what you need to do is expose an end point using RestController. you can write your database code using spring boot crud repository which is again hibernate powered ORM",
                "time": "2018-11-29 15:28:15",
                "index": 12,
                "user": "gitmnd"
            },
            {
                "id": "5c0005fad24f9324d27184b1",
                "text": "@gitmnd : so  My application is legecy three tier architecture application all the layer implemented in same code base with three packages : fronlayer is served via wicket and secong layer is EJB layer serving the business logic and third one is database layer.",
                "time": "2018-11-29 15:30:02",
                "index": 14,
                "user": "cool-raj"
            },
            {
                "id": "5c000630e25cc274056160b6",
                "text": "@gitmnd :thanks but making so much changes might need a lot of effort and time.",
                "time": "2018-11-29 15:30:56",
                "index": 16,
                "user": "cool-raj"
            },
            {
                "id": "5c00063a7074b9036874ca45",
                "text": "yes it does..",
                "time": "2018-11-29 15:31:06",
                "index": 18,
                "user": "gitmnd"
            },
            {
                "id": "5c000653cfa682348da376a3",
                "text": "will do :)",
                "time": "2018-11-29 15:31:31",
                "index": 20,
                "user": "adrianSoria"
            },
            {
                "id": "5c000667662131389439d098",
                "text": "@gitmnd : i want if there is a way i can wrap this whole applicaitoion in springboot as it is with minimum changes",
                "time": "2018-11-29 15:31:51",
                "index": 21,
                "user": "cool-raj"
            },
            {
                "id": "5c0006a77074b9036874cd23",
                "text": "springboot predominantly used for API requests.for web you can use spring MVC",
                "time": "2018-11-29 15:32:55",
                "index": 22,
                "user": "gitmnd"
            },
            {
                "id": "5c0006b78dffd748db0028ca",
                "text": "Hmm",
                "time": "2018-11-29 15:33:11",
                "index": 23,
                "user": "cool-raj"
            },
            {
                "id": "5c0007abf59704348e22b663",
                "text": "@gitmnd :i have got this link https://github.com/MarcGiffing/wicket-spring-boot but this is not working out of the box.",
                "time": "2018-11-29 15:37:15",
                "index": 25,
                "user": "cool-raj"
            },
            {
                "id": "5c0007ef958fc538950b3f95",
                "text": "sorry ..i don't have any idea about wicket",
                "time": "2018-11-29 15:38:23",
                "index": 26,
                "user": "gitmnd"
            },
            {
                "id": "5c001273cfa682348da3cfcb",
                "text": "@gitmnd : no issue but i am really thankful for your thoughts",
                "time": "2018-11-29 16:23:15",
                "index": 28,
                "user": "cool-raj"
            }
        ]
    },
    {
        "id": 560,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c52e8311b62f126507c3aed",
                "text": "Hi! Maybe someone know what should I do if I want replace  bean on another bean during start context? For instance: I have   ` \n@Replace(newImplementation = B.class)\n@Component\nclass A implements Smth {}\n\n@Component\nclass B implements Smth {}\n\n@Service\npublic class Service  {\n @Autowire\n private A a;\n}\n`\nIn this case I want to in Service was autowired class B. It is possible? I tried with postProcessBeanFactory, but unsuccessfully. Thanks for any help.\n\n\n\n\n",
                "time": "2019-01-31 12:21:05",
                "index": 0,
                "user": "danzik"
            },
            {
                "id": "5c530d641b62f126507d4718",
                "text": "@danzik Since B is not an A I do not see how that could possibly work? I'd look at @Primary perhaps..",
                "time": "2019-01-31 14:59:48",
                "index": 1,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c5338947b68f941024d08e5",
                "text": "19:58\n@TomRauchenwald @SergeyHydra, no. During starting application I want to spring bean was replaced another bean. I just don't know is it possible at all. My thoughts was use BFPP smth like this \n```\npublic void postProcessBeanFactory(ConfigurableListableBeanFactory configurableListableBeanFactory) throws BeansException {\n   String[] names = configurableListableBeanFactory.getBeanDefinitionNames();\n        for (String name : names) {\n            BeanDefinition beanDefinition = configurableListableBeanFactory.getBeanDefinition(name);\n            String className = beanDefinition.getBeanClassName();\n            if (className == null) return;\n            try {\n                Class originalClass = Class.forName(className);\n                Replace annotation = (Replace) originalClass.getAnnotation(Replace.class);\n                if (annotation != null){\n                    Class newClass =  annotation.newImpl();\n                    beanDefinition.setBeanClassName(newClass.getName());\n                }\n            } catch (ClassNotFoundException e) {\n                throw new RuntimeException(e);\n            }\n        }\n}\n```\nbut it doesn't work. So for me interesting can I replace in all places where I inject bean A on bean B?",
                "time": "2019-01-31 18:04:04",
                "index": 24,
                "user": "danzik"
            },
            {
                "id": "5c533a741b62f126507ea57e",
                "text": "@danzik This is begging for all manner of problems, including classcastexceptions, etc.  Usually when people want to change the behavior of an object they use AOP",
                "time": "2019-01-31 18:12:04",
                "index": 25,
                "user": "josiahhaswell"
            },
            {
                "id": "5c533bb09221b9382df29a0f",
                "text": "@josiahhaswell I know it, but me interested can I do it with BFPP if yes then how? And how AOP in this case will help?",
                "time": "2019-01-31 18:17:20",
                "index": 26,
                "user": "danzik"
            },
            {
                "id": "5c533bdaf04ef00644ba19f4",
                "text": "@danzik Can you give me a quick overview of what you're trying to accomplish with this?",
                "time": "2019-01-31 18:18:02",
                "index": 27,
                "user": "josiahhaswell"
            },
            {
                "id": "5c533d72ceb5a2264f713a88",
                "text": "just  when I  ```\n@Autowired\nprivate A instanceA;\n``` replace it on bean B.",
                "time": "2019-01-31 18:24:50",
                "index": 28,
                "user": "danzik"
            },
            {
                "id": "5c533d94ca428b064532b7e3",
                "text": "@danzik I would expect it to be an error if Spring allowed you to introduce inconsistencies in it.  Even if this worked for autowiring by type it would fail for autowiring by name",
                "time": "2019-01-31 18:25:24",
                "index": 29,
                "user": "josiahhaswell"
            },
            {
                "id": "5c533dafca428b064532b978",
                "text": "@danzik  Not to mention it circumvents both the type-checker and the linker ",
                "time": "2019-01-31 18:25:51",
                "index": 30,
                "user": "josiahhaswell"
            },
            {
                "id": "5c533db9ceb5a2264f713bc3",
                "text": "@danzik And nothing good will come of that",
                "time": "2019-01-31 18:26:01",
                "index": 31,
                "user": "josiahhaswell"
            },
            {
                "id": "5c533e189221b9382df2a9df",
                "text": "@josiahhaswell yes, I'm agree with that,  just interesting it's possible or not, anyway thanks for the response!  > @danzik And nothing good will come of that ; ",
                "time": "2019-01-31 18:27:36",
                "index": 32,
                "user": "danzik"
            },
            {
                "id": "5c534056975714406b725c81",
                "text": "@danzik Here's why this will never work: To do this,  Spring would have to grab the target bean, locate the injection point (field or constructor or method) and try to perform that operation with a (probably) incompatible type",
                "time": "2019-01-31 18:37:10",
                "index": 33,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53406d1b62f126507ed2e2",
                "text": "I mean, you can see what happens pretty easily when you manually try that",
                "time": "2019-01-31 18:37:33",
                "index": 34,
                "user": "josiahhaswell"
            },
            {
                "id": "5c5340e8975714406b7260ad",
                "text": "```java\nclass B {\n}\nclass A {\n    A(B b) {\n    }   \n}\n//elsewhere\nClass<A> a = A.class;\nConstructor<A> actor = a.getConstructor(B.class);\nactor.newInstance(new C());\n\n\n```",
                "time": "2019-01-31 18:39:36",
                "index": 35,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53412d54f21a71a1d8aee1",
                "text": "The literal only way you can get this to work is by having any replaceable type and all the types it could replace derive from the same base type or interface",
                "time": "2019-01-31 18:40:45",
                "index": 36,
                "user": "josiahhaswell"
            },
            {
                "id": "5c534132454aad4df7d3097a",
                "text": "And use that literally everywhere",
                "time": "2019-01-31 18:40:50",
                "index": 37,
                "user": "josiahhaswell"
            },
            {
                "id": "5c5341c613a2814df6fab999",
                "text": "But your question fundamentally reduces to the question \"Is the JVM strongly typed?\" to which the answer is \"Yes\"",
                "time": "2019-01-31 18:43:18",
                "index": 38,
                "user": "josiahhaswell"
            }
        ]
    },
    {
        "id": 561,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd0b9ed1e23486b9310588d",
                "text": "I don't know that this is a spring-boot thing per-se, because what I'm about to ask about is _probably_ either spring core or even apache http components related...but is there a way to create a single `RestTemplate` where the socket timeouts are configured per host/destination? ",
                "time": "2018-10-24 18:29:01",
                "index": 0,
                "user": "kevinludwig"
            },
            {
                "id": "5bd0ba43271506518d642c3b",
                "text": "Because I find very often I have basically one `RestTemplate` configuration but I have a single slow host, so I have to accommodate like a 30s socket timeout for that one host, whereas every other host is maybe 1s socket timeouts or less. And the only option I know of is to clone the entire rest template configuration and then to use `@Qualifier` to pick the right one. ",
                "time": "2018-10-24 18:30:27",
                "index": 1,
                "user": "kevinludwig"
            },
            {
                "id": "5bd0baa6069fca52a58a6d40",
                "text": "...and when configuring RestTemplate with apache http components for example, that configuration isn't a trivial 1 or 2 line configuration, it can be pretty verbose, and I'm incentivized to not copy it ...besides which Qualifier is generally annoying and ugly and I try to avoid it whenever possible",
                "time": "2018-10-24 18:32:06",
                "index": 2,
                "user": "kevinludwig"
            },
            {
                "id": "5bd100ccab17df2631e633b2",
                "text": "@kevinludwig \nI would recommend creating your own RestClientBuilder and setting some default timeouts. (Doing so, means the Spring Boot will backoff its configuration of a RestClientBuilder:\n\n```\n@Configuration\npublic class BuildRestClientAutoConfiguration {\n\n\t@Value(\"${ribbon.ConnectTimeout:1000}\")\n\tprivate int connectionTimeout;\n\n\t@Value(\"${ribbon.ReadTimeout:20000}\")\n\tprivate int readTimeout;\n\n\n\tprivate final ObjectProvider<HttpMessageConverters> messageConverters;\n\tprivate final ObjectProvider<List<RestTemplateCustomizer>> restTemplateCustomizers;\n\n\tpublic BuildRestClientAutoConfiguration(\n\t\t\tObjectProvider<HttpMessageConverters> messageConverters,\n\t\t\tObjectProvider<List<RestTemplateCustomizer>> restTemplateCustomizers) {\n\t\tthis.messageConverters = messageConverters;\n\t\tthis.restTemplateCustomizers = restTemplateCustomizers;\n\t}\n\n\t@Bean\n\tpublic RestTemplateBuilder restTemplateBuilder() {\n\t\tRestTemplateBuilder builder = new RestTemplateBuilder();\n\t\tHttpMessageConverters converters = this.messageConverters.getIfUnique();\n\t\tif (converters != null) {\n\t\t\tbuilder = builder.messageConverters(converters.getConverters());\n\t\t}\n\t\tList<RestTemplateCustomizer> customizers = this.restTemplateCustomizers\n\t\t\t\t.getIfAvailable();\n\t\tif (!CollectionUtils.isEmpty(customizers)) {\n\t\t\tcustomizers = new ArrayList<>(customizers);\n\t\t\tAnnotationAwareOrderComparator.sort(customizers);\n\t\t\tbuilder = builder.customizers(customizers);\n\t\t}\n\t\tbuilder = builder.setConnectTimeout(connectionTimeout);\n\t\tbuilder = builder.setReadTimeout(readTimeout);\n\t\treturn builder;\n\t}\n}\n```\n\nThen when you need a specific RestTemplate for your slow host:\n\n```\npublic class SomeClass {\n\n\tprivate RestTemplate restTemplate;\n\n\tpublic SomeClass(RestTemplateBuilder restTemplateBuilder) {\n\t\trestTemplate = restTemplateBuilder\n\t\t\t.setConnectTimeout(1000)\n\t\t\t.setReadTimeout(20000)\n\t\t\t.build();\n\t}\n\n```\n\nWe set a global timeout in the builder to make sure each RestTemplate \"inherits\" a reasonable timeout value and then override things when we need to.\n",
                "time": "2018-10-24 23:31:23",
                "index": 4,
                "user": "tkvangorder"
            }
        ]
    },
    {
        "id": 562,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5b8e498111227d711d127478",
                "text": "Hi. I am getting this error while using `maven package` with prod profile :\n```\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\n```\nAfter research, I get this https://stackoverflow.com/a/37477910/6717287\nBut, I didn't get how to add a jar to my classPath, is it via pom.xml file ?",
                "time": "2018-09-04 08:59:45",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5b8e4c70ac25fd11b5db0b51",
                "text": "Yes. Typically you\u2019d already have the necessary jars via `spring-boot-starter-logging` so I\u2019d guess there\u2019s something in your prod profile that\u2019s excluding more than it perhaps should.",
                "time": "2018-09-04 09:12:16",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5b8e4ca6e5b40332ab412064",
                "text": "@wilkinsona ok",
                "time": "2018-09-04 09:13:10",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5b8e4e5660f9ee7aa4d63091",
                "text": "@wilkinsona  here is configuration for `dev` profile : \n```\n<profile>\n            <id>dev</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <dependencies>\n                <!--<dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>-->\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-devtools</artifactId>\n                    <optional>true</optional>\n                </dependency>\n            </dependencies>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <version>${maven-war-plugin.version}</version>\n                        <configuration>\n                            <failOnMissingWebXml>false</failOnMissingWebXml>\n                            <warSourceDirectory>target/www/</warSourceDirectory>\n                            <webResources>\n                                <resource>\n                                    <directory>src/main/webapp</directory>\n                                    <includes>\n                                        <include>WEB-INF/**</include>\n                                    </includes>\n                                </resource>\n                            </webResources>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n            <properties>\n                <!-- default Spring profiles -->\n                <spring.profiles.active>dev${profile.no-liquibase}</spring.profiles.active>\n            </properties>\n        </profile>\n```\n\n",
                "time": "2018-09-04 09:20:22",
                "index": 3,
                "user": "amirensit"
            },
            {
                "id": "5b8e4e61d8d36815e5d3baee",
                "text": "for prod, there is no exclusion (unable to copy and paste code)",
                "time": "2018-09-04 09:20:33",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5b8e50b74be56c5918dceb63",
                "text": "Then I can\u2019t explain why Maven is apparently using a different classpath in the two cases. You haven\u2019t shown all of your pom though.",
                "time": "2018-09-04 09:30:31",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 563,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cd43c718fcdb05d47a7c182",
                "text": ">>...\n> Hi Spring team,\n> I created a demo app showcasing my problem with the @SpringBootTests in case of using multiple dispatcher servlets:\n> https://github.com/hbrands/demo-multidispatch\n> It would be great, if you could have a look and tell me if I'm doing something wrong or if it's a bug of if this scenario is not supported.\n> All other details are in the project readme. Thanks!\n@snicoll @wilkinsona Should I create an issue or how to proceed?\n",
                "time": "2019-05-09 14:42:57",
                "index": 0,
                "user": "hbrands"
            },
            {
                "id": "5cd43e0456271260f93197cc",
                "text": "@hbrands Your second application context is hidden away in the `restServlet` `@Bean` method. When you create the `MockMvc` instance in your test, you're using the main application context. As a result, it can't find any of the controllers that are only known to this hidden context.",
                "time": "2019-05-09 14:49:40",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cd43e255a1d435d46113653",
                "text": "Given that you're using `@SpringBootTest` with a random port, you could use rest template or web client and make actual HTTP calls to test your app",
                "time": "2019-05-09 14:50:13",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cd43e4ae7f42160fa5d98a4",
                "text": "If you want to use `MockMvc`, you'll need to get at the hidden application context and pass that to mock mvc",
                "time": "2019-05-09 14:50:50",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5cd5baa956271260f93c697d",
                "text": "@wilkinsona Thanks for your answer and suggestion.\nI wonder if testing support could even more be enhanced. What I'd really like to do as a user is something like this:\n\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = WebEnvironment.MOCK)\n@AutoConfigureMockMvc\npublic class WebControllerTests {\n    @Autowired\n    private MockMvc mockMvc;\n\n    @Test\npublic void helloUnauthorized() throws Exception {\n    mockMvc.perform(...)\n```\n\n...and the testing env is setup as closely as possible as the prod env. Wishful thinking?",
                "time": "2019-05-10 17:53:45",
                "index": 27,
                "user": "hbrands"
            },
            {
                "id": "5cd5d42ef52a2375160d7e08",
                "text": "but this code looks fine, what do you miss?",
                "time": "2019-05-10 19:42:38",
                "index": 28,
                "user": "nightswimmings"
            },
            {
                "id": "5cd71d0ae7f42160fa715335",
                "text": "@nightswimmings do you mean my response?\nWell, it doesn't work like this if you have multiple dispatcher servlets with multiple app contexts. Therefore my wish: enhance the default autoconfiguration of the mvc mock environment to match the production setting more closely.",
                "time": "2019-05-11 19:05:46",
                "index": 32,
                "user": "hbrands"
            }
        ]
    },
    {
        "id": 564,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cc30dd25b3f941aa5969045",
                "text": "hello is it possible to programmatically access to auto configuration results ? i.e. I have a bean that is activated with a custom AnyNestedCondition, and I want to unit test the conditions themself",
                "time": "2019-04-26 13:55:30",
                "index": 0,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc30e9e5b3f941aa596948a",
                "text": "You don\u2019t need to access the auto-configuration result for that, do you?",
                "time": "2019-04-26 13:58:54",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cc30ea6e416b84519e42fb0",
                "text": "You can check the presence of the bean in the context, that\u2019s what we do",
                "time": "2019-04-26 13:59:02",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5cc30ed0e416b84519e430c9",
                "text": "yes but I ned to know which configuration has activated it",
                "time": "2019-04-26 13:59:44",
                "index": 3,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc30ed78790b0307e065b81",
                "text": "Why?",
                "time": "2019-04-26 13:59:51",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5cc30edf5b3f941aa59695c8",
                "text": "to test the condition logic",
                "time": "2019-04-26 13:59:59",
                "index": 5,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc30ef1990feb4518079a58",
                "text": "i.e. it can be activate by a presence of a class or of a file",
                "time": "2019-04-26 14:00:17",
                "index": 6,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc30f10a4ef097471027dc2",
                "text": "and I want to create a unit test that can ensure the conditions works",
                "time": "2019-04-26 14:00:48",
                "index": 7,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc30f3ea4ef097471027f3f",
                "text": "I still don\u2019t see why you\u2019d want to access the auto-configuration results for that. Here\u2019s how we test the low-level stuff https://github.com/spring-projects/spring-boot/blob/9cde736b5991132deefb02848bf3903cd7a43d48/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AnyNestedConditionTests.java",
                "time": "2019-04-26 14:01:34",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5cc30fcb990feb4518079ef1",
                "text": "so I want to test that something is activated when a file or a class are in the classpath",
                "time": "2019-04-26 14:03:55",
                "index": 9,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc30feb3b6cb0686a587ef2",
                "text": "both are present in the test classpath",
                "time": "2019-04-26 14:04:27",
                "index": 10,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc310008446a6023e7dd62a",
                "text": "so I can either create a specific project per test",
                "time": "2019-04-26 14:04:48",
                "index": 11,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc3100e1cd0b8307d781fe2",
                "text": "Is the path to the file hardcoded?",
                "time": "2019-04-26 14:05:02",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5cc31013a4ef0974710285a6",
                "text": "yes",
                "time": "2019-04-26 14:05:07",
                "index": 13,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc3102fe416b84519e43b25",
                "text": "OK. How accessing the auto-configuration report is going to help you?",
                "time": "2019-04-26 14:05:35",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5cc3107ee416b84519e43def",
                "text": "so the file is provided by a dependency and the class also",
                "time": "2019-04-26 14:06:54",
                "index": 15,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc310994b4cb471d95f618f",
                "text": "so I want create a test that basically fails if the file or the class is removed/renamed",
                "time": "2019-04-26 14:07:21",
                "index": 16,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc310ae1cd0b8307d7824f7",
                "text": "None of that has a link to the auto-configuration report",
                "time": "2019-04-26 14:07:42",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5cc310dea4ef097471028d2e",
                "text": "You can control the classpath with a special classloader. That\u2019s what we do for our own conditions",
                "time": "2019-04-26 14:08:30",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5cc310f02e2caa1aa6c1f847",
                "text": "do you have an example ?",
                "time": "2019-04-26 14:08:48",
                "index": 19,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc311221cd0b8307d7827dc",
                "text": "btw  I'm on sb 1.5",
                "time": "2019-04-26 14:09:38",
                "index": 20,
                "user": "lburgazzoli"
            },
            {
                "id": "5cc318b42e2caa1aa6c233c1",
                "text": "@lburgazzoli 1.5 is EOL in a few months, you really should consider upgrading. We have this for our own tests: https://github.com/spring-projects/spring-boot/blob/9cde736b5991132deefb02848bf3903cd7a43d48/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/FilteredClassLoader.java",
                "time": "2019-04-26 14:41:56",
                "index": 22,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 565,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5bdc7894995818347b91c23d",
                "text": "@snicoll Hi Stephane, need to discuss regarding the #1573",
                "time": "2018-11-02 16:17:24",
                "index": 0,
                "user": "govi20"
            },
            {
                "id": "5bdc78ce5760a73eb42a3369",
                "text": "What would be the next action item?",
                "time": "2018-11-02 16:18:22",
                "index": 1,
                "user": "govi20"
            },
            {
                "id": "5bdc88eb0445e15fad128c12",
                "text": "@govi20 I don\u2019t know yet, we just discussed it on the team call. My recollection was that \u201cno dialect\u201d could have more than one cause and we can\u2019t have a failure analyser until we know exactly what those are.",
                "time": "2018-11-02 17:27:07",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5bdc89876eb1e3597a9dea97",
                "text": "If it were me, I would start by writing some tests to create various failure cases. They'll be needed anyway as we can't add an analyser without some tests to go with it.",
                "time": "2018-11-02 17:29:43",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5bdc89af0445e15fad129148",
                "text": "True. Would you want to do that @govi20 ?",
                "time": "2018-11-02 17:30:23",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5bdc8a0f6eb1e3597a9dee63",
                "text": "Yes. sure. ",
                "time": "2018-11-02 17:31:59",
                "index": 8,
                "user": "govi20"
            },
            {
                "id": "5bdc8aa70445e15fad1297cf",
                "text": "I was thinking about contacting to someone from Hibernate ORM team, and list down the Exceptions.",
                "time": "2018-11-02 17:34:31",
                "index": 9,
                "user": "govi20"
            },
            {
                "id": "5bdc8aba26be6b59795aff4a",
                "text": "May be project maintainer ",
                "time": "2018-11-02 17:34:50",
                "index": 10,
                "user": "govi20"
            },
            {
                "id": "5bdc8e8f076992347aa6cd0c",
                "text": "We might need some help from the Hibernate team, but I don't think that should be the first step. I would start by exploring things yourself by writing some tests that cause things to fail in various ways and seeing what exception Hibernate throws. If the exception is ambiguous then we can speak to the Hibernate team about making things clearer.",
                "time": "2018-11-02 17:51:11",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5bdc8ed9b9c91919548fb66e",
                "text": "If it's simply a matter of enumerating the exceptions, we can do that ourselves by looking at Hibernate's `Exception` subclasses. Anything that it throws that a standard Java exception is very unlikely to be suitable for failure analysis.",
                "time": "2018-11-02 17:52:25",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5bdc8fc4a9c55b2574991ccc",
                "text": "@wilkinsona Okay. Thanks :) Will start working in that direction.",
                "time": "2018-11-02 17:56:20",
                "index": 13,
                "user": "govi20"
            },
            {
                "id": "5bdc8fe326be6b59795b2867",
                "text": "FWIW, I don't think the exception in #1573 is suitable for failure analysis. `HibernateException` is very broad and to be more precise with it we'd have to get into matching on the exception message which I don't like doing. There may be other bootstrapping failures where Hibernate throws something more specific.",
                "time": "2018-11-02 17:56:51",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5bdc90f5995818347b926dfe",
                "text": "I tried couple of scenarios: 1) Passing incorrect dialect value 2) Removed dialect property. In both the cases I got StrategySelectionException. But this case is with Hibernate 5.x.x ",
                "time": "2018-11-02 18:01:25",
                "index": 15,
                "user": "govi20"
            },
            {
                "id": "5bdd6400cd2a6b5bdc8b38bc",
                "text": "y",
                "time": "2018-11-03 09:01:52",
                "index": 16,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 566,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e85e0e01742080c5dffd3b6",
                "text": "I see that spring supports building an oauth2 authorization server here https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/html/boot-features-security-oauth2-authorization-server.html",
                "time": "2020-04-02 12:56:00",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5e85e0fc08ef111e644e0af7",
                "text": "since that uses the nimbus oauth2 + openid connect sdk under the hood according to https://spring.io/blog/2017/05/11/spring-security-5-0-0-m1 I was wondering if spring has some support for building open id connect servers too ?",
                "time": "2020-04-02 12:56:28",
                "index": 1,
                "user": "konstantinblaesi"
            },
            {
                "id": "5e85f75e2037b00c730b9900",
                "text": "@konstantinblaesi `spring-security-oauth2-boot` is a deprecated lib. it was a short-term bridge between Boot and Security OAuth2 while waiting for Security 5.x to be released with built-in OAuth2 support. Spring Security proper should have what you need now. \n\nhttps://docs.spring.io/spring-security/site/docs/current/reference/html5/\n\nthere are lots of samples in https://github.com/spring-projects/spring-security/tree/master/samples/boot. not sure if any of those help answer your OpenID Connect questions specifically. there\u2019s a dedicated gitter room for #spring-security where you could get better answers. ",
                "time": "2020-04-02 14:31:58",
                "index": 2,
                "user": "scottfrederick"
            },
            {
                "id": "5e85f803f79ff847b32b0a88",
                "text": "> Spring Security proper should have what you need now.\n\nUnless you need an auth server",
                "time": "2020-04-02 14:34:43",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5e85f8480be15b3164437615",
                "text": "\"open id connect server\" is just a specific subset of \"authorization server\"",
                "time": "2020-04-02 14:35:52",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5e85f8d52037b00c730b9906",
                "text": "@OrangeDog re: specific subset, that\u2019s my understanding also. but you\u2019re saying Security 5.x won\u2019t help you build an auth server? ",
                "time": "2020-04-02 14:38:13",
                "index": 5,
                "user": "scottfrederick"
            },
            {
                "id": "5e85f9880b533a4a3ac4bcac",
                "text": "https://github.com/spring-projects/spring-security/issues/6320",
                "time": "2020-04-02 14:41:12",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5e85f9c16564121e659e4cb1",
                "text": "https://spring.io/blog/2019/11/14/spring-security-oauth-2-0-roadmap-update",
                "time": "2020-04-02 14:42:09",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5e85f9ecb6bdcf0c5ecaa191",
                "text": "There's also a gitter room for #spring-security-oauth",
                "time": "2020-04-02 14:42:52",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5e85f9f6d85b5a7938257232",
                "text": "ah yes, I remember this lively discussion now :-)",
                "time": "2020-04-02 14:43:02",
                "index": 9,
                "user": "scottfrederick"
            },
            {
                "id": "5e85fa622037b00c730b990f",
                "text": "it\u2019s a bit confusing still, as the security samples still have some simple auth server samples. at any rate, #spring-security or #spring-security-oauth are better rooms to get help and discuss the current state",
                "time": "2020-04-02 14:44:50",
                "index": 10,
                "user": "scottfrederick"
            },
            {
                "id": "5e85fa7e6564121e659e4ed1",
                "text": "The issue was reopened two weeks ago. I don't know if that counts as notifying the community of any progress.",
                "time": "2020-04-02 14:45:18",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5e8601860051a622935feb82",
                "text": "@OrangeDog right, the same policy is in place for `spring-security-oauth` and `spring-security-oauth2-boot`. Deprecated and in maintenance-only mode, where CVEs and critical bugs will be addressed but no new features added. ",
                "time": "2020-04-02 15:15:18",
                "index": 17,
                "user": "scottfrederick"
            }
        ]
    },
    {
        "id": 567,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e280dbb3fd0cc7cfe15ec3e",
                "text": "Hello! I'm trying to upgrade spring boot to 2.2.2, but I've run into a strange CORS issue. It seems like when the preflight request contains the \"Access-Control-Request-Method: POST\" header I get an HttpMessageNotReadableException, as if Spring was trying to run the actual RestController instead. Not sure what I am doing wrong",
                "time": "2020-01-22 08:54:19",
                "index": 0,
                "user": "Yopi"
            },
            {
                "id": "5e28132442ae383fa967890e",
                "text": "@Yopi it was a bug in Spring Framework, it's been fixed already in Spring Boot 2.2.3",
                "time": "2020-01-22 09:17:24",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5e281517075a19397ce741e2",
                "text": "@bclozel oh is it? I couldn't see anything about it when googling at all. Was it too small for it to end up in the release notes?",
                "time": "2020-01-22 09:25:43",
                "index": 2,
                "user": "Yopi"
            }
        ]
    },
    {
        "id": 568,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c6d712000aa630d9ae2866b",
                "text": "Hi!",
                "time": "2019-02-20 15:24:16",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5c6d714035c7a50422829fdc",
                "text": "Simple question: What are the differences of Boot 1.X: server.context-path vs server.servlet-path / Boot 2.X: server.servlet.context-path vs server.servlet.path?",
                "time": "2019-02-20 15:24:48",
                "index": 1,
                "user": "nightswimmings"
            },
            {
                "id": "5c6d715ea7d733509d99b5f6",
                "text": "I am doing testing by changing actuators context-path and it  gets appended to servlet one",
                "time": "2019-02-20 15:25:18",
                "index": 2,
                "user": "nightswimmings"
            },
            {
                "id": "5c6d73f0ab952d308561eef8",
                "text": "Is there any way in Boot 1.X or 2.X to set a gobal context-path (/myapp) and different basepaths for rest and actuators (/myapp/api,/myapp/actuators)? Ive seen the question in SO, but none of the answers seem to work",
                "time": "2019-02-20 15:36:16",
                "index": 3,
                "user": "nightswimmings"
            },
            {
                "id": "5c6d9b84b6c74f1e2e8349bd",
                "text": "@nightswimmings Yes, that's possible. If you set the `context-path` to `myapp`, the actuator will then be available at `myapp/actuators`. To move your REST Endpoints under `myapp/api` you can add `/api` as a path prefix: https://github.com/spring-projects/spring-framework/blob/master/src/docs/asciidoc/web/webmvc.adoc#path-matching",
                "time": "2019-02-20 18:25:08",
                "index": 16,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 569,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5ce4453aef853135c8fcff50",
                "text": "Do I need to get an issue assigned to me or just fork the repo and start working on it?",
                "time": "2019-05-21 18:36:42",
                "index": 0,
                "user": "kstrijbos"
            },
            {
                "id": "5ce5242275d9a575a624cd4d",
                "text": "@kstrijbos You can just fork the repo and start working, but there is a small risk of duplicate effort if someone else does the same. If you comment on the issue that you're planning to work on, we can hopefully avoid that risk. While GitHub does not let us assign issues to anyone outside of the core team, we have a `spring-contributor` user that we use to indicate that a member of the community is working on an issue and intends to contribute something. ",
                "time": "2019-05-22 10:27:46",
                "index": 12,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 570,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd54a21167c4f62b78884a2",
                "text": "hello, I have a simple reactive app that can send a `ServerResponse` with a body of my POJO as JSON, but I would like to make it return XML.  What do I need to do?  When I change the contentType of the `ServerResponse` to XML, the response is a `406 Not Acceptable 'Could not find acceptable representation'` ",
                "time": "2019-11-20 14:13:53",
                "index": 0,
                "user": "obarat"
            },
            {
                "id": "5dd54bc50bb46a64a5f0bbe5",
                "text": "I am using RouterFunction, not annotated controller",
                "time": "2019-11-20 14:20:53",
                "index": 1,
                "user": "obarat"
            },
            {
                "id": "5dd54e2f0bb46a64a5f0cecd",
                "text": "@obarat What are you expecting to be used to convert your POJO to XML?",
                "time": "2019-11-20 14:31:11",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5dd54e61bebeec417b986931",
                "text": "I expect there would be some default codecs like JAXB or something\n\nI also added this dependency, to no avail\n```\n\t\t<dependency>\n\t\t\t<groupId>com.fasterxml.jackson.dataformat</groupId>\n\t\t\t<artifactId>jackson-dataformat-xml</artifactId>\n\t\t</dependency>\n```",
                "time": "2019-11-20 14:32:01",
                "index": 6,
                "user": "obarat"
            },
            {
                "id": "5dd552709c9fca147c01838d",
                "text": "ah ok, I added the annotation @XmlRootElement and it works now",
                "time": "2019-11-20 14:49:20",
                "index": 7,
                "user": "obarat"
            },
            {
                "id": "5dd5548b7a4c62147b2252ea",
                "text": "unfortunately, that only works for response payload.  how can i use `bodyToMono(MyClass.class)` on a `ServerRequest` with xml body?",
                "time": "2019-11-20 14:58:19",
                "index": 8,
                "user": "obarat"
            }
        ]
    },
    {
        "id": 571,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cdc1b510f381d0a76be34b6",
                "text": "Is there a way to configure multiple data sources, but keep all the pool auto-config?",
                "time": "2019-05-15 13:59:45",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5cdc1bc65a887e1cd9f115b6",
                "text": "As far as I can tell, I'd have to copy `DataSourceConfiguration` for each source, which only differ in host/dbname/user",
                "time": "2019-05-15 14:01:42",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5cdc29eef251e60ffa87e4c3",
                "text": "And then for JPA, similarly copy the vendor-specific config",
                "time": "2019-05-15 15:02:06",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5cdc8a655a887e1cd9f44aab",
                "text": "@OrangeDog \nHere is an example of how we bind two different data sources. Notice that we mark one as primary so that data source is used in a majority of places where dependent beans assume there is only a single data source in the context.\n\n```java\n\t// ---------------------------------------------------------------------------------------------------------------------------\n\t// We bind both the the data source properties and the data source to the same \"datasource.main\" configuration. This will\n\t// handle auto-discovery of the driver class and using the proper url for Hikari data source pool.\n\t// ---------------------------------------------------------------------------------------------------------------------------\n\t@Bean\n\t@ConfigurationProperties(\"datasource.main\")\n\t@Primary\n\tpublic DataSourceProperties mainDataSourceProperties() {\n\t\treturn new DataSourceProperties();\n\t}\n\n\t@Bean(name = \"mainDataSource\", destroyMethod=\"\")\n\t@ConfigurationProperties(prefix = \"datasource.main\")\n\t@Primary\n\tpublic DataSource driverManagerMainDataSource() {\n\t\treturn mainDataSourceProperties().initializeDataSourceBuilder().build();\n\t}\n\n\t// ---------------------------------------------------------------------------------------------------------------------------\n\t// We bind both the the data source properties and the data source to the same \"datasource.reporter\" configuration. This will\n\t// handle auto-discovery of the driver class and using the proper url for Hikari data source pool.\n\t// ---------------------------------------------------------------------------------------------------------------------------\n\t@Bean\n\t@ConfigurationProperties(\"datasource.reporter\")\n\tpublic DataSourceProperties reporterDataSourceProperties() {\n\t\treturn new DataSourceProperties();\n\t}\n\n\t@Bean(name =\"reporterDataSource\", destroyMethod=\"\")\n\t@ConfigurationProperties(prefix = \"datasource.reporter\")\n\tpublic DataSource driverManagerReporterDataSource() {\n\t\treturn reporterDataSourceProperties().initializeDataSourceBuilder().build();\n\t}\n\n```",
                "time": "2019-05-15 21:53:41",
                "index": 4,
                "user": "tkvangorder"
            },
            {
                "id": "5cdd403e509b1035c7593254",
                "text": "thanks @tkvangorder but I'm looking for something simpler when vendor (hikari, etc.) detection and properties come into play",
                "time": "2019-05-16 10:49:34",
                "index": 22,
                "user": "OrangeDog"
            },
            {
                "id": "5cdd40bf6366992a94c8dc94",
                "text": "#15732 appears to be the place to go",
                "time": "2019-05-16 10:51:43",
                "index": 23,
                "user": "OrangeDog"
            },
            {
                "id": "5cdd9a46879f4478c78d3a83",
                "text": "@OrangeDog oh, that is a cool enhancement...would have made our life easier. ",
                "time": "2019-05-16 17:13:42",
                "index": 41,
                "user": "tkvangorder"
            }
        ]
    },
    {
        "id": 572,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ed783ec2c49c45f5abd252d",
                "text": "Hello, how to create a collection of beans of the same type in a spring-boot library?\nThe use-case is that I'd like to instantiate multiple instances of the same class (implementing `MeterBinder`) dynamically in the `@Bean`-annotated method in AutoConfiguration. Does it work if the method return type is `Collection<MeterBinder>`?",
                "time": "2020-06-03 11:05:16",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5ed7855a22dd444224f6f009",
                "text": "Dynamic bean definitions usually involve a `BeanDefinitionRegistryPostProcessor`",
                "time": "2020-06-03 11:11:22",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ed785eeff7a920a722c680e",
                "text": "",
                "time": "2020-06-03 11:13:50",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5ed78884778fad0b1343de7f",
                "text": "Thanks for your response! It's not too dynamic in that sense since it's the normal way of creating bean, ie. in the `@Bean` annotated method in `@Configuration` class. I feel like my use-case is simpler to solve it with `BeanDefinitionRegistryPostProcessor`.. Any other ideas?",
                "time": "2020-06-03 11:24:52",
                "index": 3,
                "user": "asgarj"
            },
            {
                "id": "5ed789b37da67d06faec3891",
                "text": "What is your use-case then? How dynamic is it?",
                "time": "2020-06-03 11:29:55",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5ed789d3a3a1b13679c4b977",
                "text": "You can only define one bean definition with one `@Bean` method",
                "time": "2020-06-03 11:30:27",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5ed789f62c49c45f5abd3aba",
                "text": "That can create multiple instances if it's not a singleton bean.",
                "time": "2020-06-03 11:31:02",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5ed78a9c2c49c45f5abd3d30",
                "text": "\nThe use-case is that spring-boot binds all `MeterBinder`s on the classpath to the `MeterRegistry` automatically. So you can create your `MeterBinder`s in the `@Bean` annotated class.. Now I want to create multiple instances of the same `MeterBinder` with different tags in the auto-configuration in a spring-boot library.",
                "time": "2020-06-03 11:33:48",
                "index": 7,
                "user": "asgarj"
            },
            {
                "id": "5ed78b9f9da05a060a4b5b0c",
                "text": "But it's always a fixed number of beans?",
                "time": "2020-06-03 11:38:07",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5ed78ed6daf4cf366edbcc47",
                "text": "unless you're trying to describe something with a fixed set of definitions but some are conditional, in which case you could do it with multiple `@Bean`s with different conditional annotations",
                "time": "2020-06-03 11:51:50",
                "index": 9,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 573,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c59502813a2814df6219b42",
                "text": "Hi, can I run spring-boot 2.1.2 on Tomcat 7? Would tomcat  only need the WAR file?",
                "time": "2019-02-05 08:58:16",
                "index": 0,
                "user": "hazcod"
            },
            {
                "id": "5c59505e41775971a0dcb2eb",
                "text": "Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in update mode)",
                "time": "2019-02-05 08:59:10",
                "index": 1,
                "user": "hazcod"
            },
            {
                "id": "5c59514fceb5a2264f986c06",
                "text": "I'm a bit confused what information tomcat needs to run a spring WAR.",
                "time": "2019-02-05 09:03:11",
                "index": 2,
                "user": "hazcod"
            },
            {
                "id": "5c595307c2dba5382ee32ba1",
                "text": "@HazCod Spring Boot 2.x requires a Servlet 3.1 compatible container. Tomcat 7 only supports Servlet 3.0.",
                "time": "2019-02-05 09:10:31",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 574,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ea911fd0b23797ec04dd81b",
                "text": "Hi. I have a question about how auto config works. I want to start an embedded artemis broker. the relevant autoconfig class is `ArtemisEmbeddedServerConfiguration`. \nThe configuration report says the class matches:\n```\nArtemisEmbeddedServerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.apache.activemq.artemis.core.server.embedded.EmbeddedActiveMQ' (OnClassCondition)\n      - @ConditionalOnProperty (spring.artemis.embedded.enabled=true) matched (OnPropertyCondition)\n```\n`ArtemisAutoConfiguration` is not matched, though, because we configure the ConnectionFactory ourselves. Does this mean ArtemisEmbeddedServerConfiguration (which is package-private and imported by ArtemisAutoConfiguration) is not applied by Boot? ",
                "time": "2020-04-29 05:34:53",
                "index": 0,
                "user": "TomRauchenwald"
            },
            {
                "id": "5ea9131f0b23797ec04dda4e",
                "text": "ArtemisEmbeddedServerConfiguration is not listed in spring.factories, so that's the reason I think. What confuses me is that it's shown in the configuration report but it isn't applied",
                "time": "2020-04-29 05:39:43",
                "index": 1,
                "user": "TomRauchenwald"
            },
            {
                "id": "5ea93b9f97338850a2d6d97f",
                "text": "@TomRauchenwald There are two phases involved and I suspect that's what is causing the misleading report. The first phase is configuration parsing and the second is bean registration. During the configuration parsing phase, both `ArtemisAutoConfiguration` and `ArtermisEmbeddedServerConfiguration` will match as their conditions that aren't bean-related are satisfied. During the bean registration phase, `ArtemisAutoConfiguration` will not match. This then prevents `ArtermisEmbeddedServerConfiguration` from being considered for bean registration. Unfortunately, this leaves it in the report as having matched as that was the case the last time its conditions were evaluated. I think we should try and improve the report in this regard. Can you please open an issue?",
                "time": "2020-04-29 08:32:31",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ea9551797338850a2d7328c",
                "text": "@wilkinsona thanks, I kind of suspected that that's the reason, but I wanted to understand the issue in detail. In that specific case it would be nice if ArtemisAutoConfiguration would work even though a ConnectionFactory is present, so that the embedded broker can be started/configured by boot. But I can make that work myself. ",
                "time": "2020-04-29 10:21:11",
                "index": 4,
                "user": "TomRauchenwald"
            },
            {
                "id": "5ea956557975db7ebfd23398",
                "text": "hm I actually think the problem is described in this issue already by @snicoll  : https://github.com/spring-projects/spring-boot/issues/13509 and https://github.com/spring-projects/spring-framework/issues/21604",
                "time": "2020-04-29 10:26:29",
                "index": 5,
                "user": "TomRauchenwald"
            },
            {
                "id": "5ea957367975db7ebfd2384e",
                "text": "well thinking more about it, the check on ConnectionFactory makes sense. If I configure boot to use MQSeries or whatever, I wouldn't want an embedded broker to be started automatically. ",
                "time": "2020-04-29 10:30:14",
                "index": 6,
                "user": "TomRauchenwald"
            },
            {
                "id": "5ea989023d58de7a38e35ebc",
                "text": "Yep #13509 captures the problem. I'd forgotten about that one. Thanks for tracking it down.",
                "time": "2020-04-29 14:02:42",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 575,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bdaec0d538a1c197157a97b",
                "text": "can you tell me how to achieve it.. in fact it used to work with spring-boot 2.0.4 but it fails with latest 2.0.6 - i believe because the `CacheManagerJpaDependencyConfiguration` was not registered in 2.0.4 and is now registered in 2.0.6 .. ",
                "time": "2018-11-01 12:05:33",
                "index": 0,
                "user": "ptahchiev"
            },
            {
                "id": "5bdaed5825b9875faeb7a2eb",
                "text": "@ptahchiev @snicoll is probably the best person to help you and he's on a plane right now",
                "time": "2018-11-01 12:11:04",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bdc3dd5076992347aa45b0f",
                "text": "@ptahchiev correct, the contract in  Spring Boot always was to have the cache infrastructure configured before JPA kicks in. This was broken and got fixed as you\u2019ve indicated. If you want JPA to be available before the cache kicks in, you need to roll out your own config.",
                "time": "2018-11-02 12:06:45",
                "index": 71,
                "user": "snicoll"
            },
            {
                "id": "5bdc3e4525b9875faec0af48",
                "text": "Having said that, no need to go nuclear, there are several other callback options where you can get the cache manager and the entity manager and perform such customization",
                "time": "2018-11-02 12:08:37",
                "index": 72,
                "user": "snicoll"
            },
            {
                "id": "5bdc3ef925b9875faec0b51b",
                "text": "@snicoll thank you. Can you point me to these callbacks?",
                "time": "2018-11-02 12:11:37",
                "index": 73,
                "user": "ptahchiev"
            },
            {
                "id": "5bdc3f086eb1e3597a9bb161",
                "text": "Anything really",
                "time": "2018-11-02 12:11:52",
                "index": 74,
                "user": "snicoll"
            },
            {
                "id": "5bdc3f11995818347b8ff10e",
                "text": "you inject the two in a bean and a `@PostConstruct`",
                "time": "2018-11-02 12:12:01",
                "index": 75,
                "user": "snicoll"
            },
            {
                "id": "5bdc3f14d3442e1972798bc9",
                "text": "or you listen to an event",
                "time": "2018-11-02 12:12:04",
                "index": 76,
                "user": "snicoll"
            },
            {
                "id": "5bdc3f45d2b0f125754f569b",
                "text": "Wondering how you expect 2nd level cache to work though",
                "time": "2018-11-02 12:12:53",
                "index": 77,
                "user": "snicoll"
            },
            {
                "id": "5bdc3f52d2b0f125754f56fe",
                "text": "You\u2019re using that right?",
                "time": "2018-11-02 12:13:06",
                "index": 78,
                "user": "snicoll"
            },
            {
                "id": "5bdc400725b9875faec0ba88",
                "text": "yes, i am using it .. and yes if JPA is constructed before the cacheManager then maybe 2LC won't work :( .. then do you have a suggestion how to create the regions in my request. Apparently the `JCacheManagerCustomizer` won't work :(",
                "time": "2018-11-02 12:16:07",
                "index": 79,
                "user": "ptahchiev"
            },
            {
                "id": "5bdc4016a9c55b257496b930",
                "text": "I already did",
                "time": "2018-11-02 12:16:22",
                "index": 80,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 576,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dee70a96a85195b9e27f30f",
                "text": "hello, I have an issue with my reactive app - the context is lost when an exception is thrown and I can't access the principal from my class that extends `AbstractErrorWebExceptionHandler`",
                "time": "2019-12-09 16:04:57",
                "index": 0,
                "user": "obarat"
            },
            {
                "id": "5dee71e8d75ad3721d81d57e",
                "text": "Also, I've built a mock service that is reactive and I want to simulate latency, but when I add a delay to the response Mono, my main reactive application does not retain the connection, I get random failures just because of the delay.  How can I simulate latency to performance test a reactive app?",
                "time": "2019-12-09 16:10:16",
                "index": 1,
                "user": "obarat"
            },
            {
                "id": "5dee73795ac7f22fb58ce257",
                "text": "One more question :) is there such a thing as `AuditApplicationEvent` in the reactive world?",
                "time": "2019-12-09 16:16:57",
                "index": 2,
                "user": "obarat"
            },
            {
                "id": "5dee8bbec3d6795b9f514eb2",
                "text": "@obarat You can add retry count and call a service whose ip does not exists ( so basically a service calls another service and increase the retry count ) ",
                "time": "2019-12-09 18:00:30",
                "index": 5,
                "user": "ramgsuri"
            },
            {
                "id": "5deead7c1e0b827cc8cf0490",
                "text": "@ramgsuri not sure if I understand.. I want to make the call be successful, but take longer than a few ms for the mock to respond",
                "time": "2019-12-09 20:24:28",
                "index": 6,
                "user": "obarat"
            },
            {
                "id": "5def484dd64a052fb6eac3a5",
                "text": "@obarat please ask on #spring-security",
                "time": "2019-12-10 07:25:01",
                "index": 9,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 577,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e85faed442e4a27791f5589",
                "text": "When configuring CORS in a Rest application, what's the value to be passed to `(CorsRegistry) registry.addMapping()` when resources are served under `/api/` (i.e. the `ServletRegistrationBean` maps the `DispatcherServlet` with `addUrlMappings(\"/api/*\")`?",
                "time": "2020-04-02 14:47:09",
                "index": 0,
                "user": "watery"
            },
            {
                "id": "5e85fb256564121e659e5151",
                "text": "`/api/**`",
                "time": "2020-04-02 14:48:05",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e85fb859d51802235e3aa2a",
                "text": "unless you only have one level, then `/api/*` also works",
                "time": "2020-04-02 14:49:41",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5e85fbad3c6c42277aedf8b8",
                "text": "oh, with a separate `DispatcherServlet` I'm not sure",
                "time": "2020-04-02 14:50:21",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5e85fdd0cce9e155f44036f3",
                "text": "`spring-security-oauth2-boot` is also still being maintained, which essentially consists of bumping the version to match Boot's every release.",
                "time": "2020-04-02 14:59:28",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5e8b34af6823cb38acb29858",
                "text": "@OrangeDog thanks, I would say the same, though my findings say `/**` and I don't get why ( https://stackoverflow.com/q/60945809/3127111 ) ",
                "time": "2020-04-06 13:54:55",
                "index": 48,
                "user": "watery"
            },
            {
                "id": "5e8b3f0c6823cb38acb2c15f",
                "text": "@watery it will be because it's relative to the dispatcher ",
                "time": "2020-04-06 14:39:08",
                "index": 53,
                "user": "OrangeDog"
            },
            {
                "id": "5e8cab0716f84f046161a62f",
                "text": "@OrangeDog mmmh ok, but does that mean I can't have several independent rest paths within the same Boot application? I.e. `/api-public/`, `/api-reserved/` etc. ?",
                "time": "2020-04-07 16:32:07",
                "index": 88,
                "user": "watery"
            },
            {
                "id": "5e8cad8be7ca460b06457c24",
                "text": "Depends what \"independent\" means.",
                "time": "2020-04-07 16:42:51",
                "index": 89,
                "user": "OrangeDog"
            },
            {
                "id": "5e8cadb2f87c5956a2424edb",
                "text": "Although unless it's \"not in the same application\" then it's \"yes\".",
                "time": "2020-04-07 16:43:30",
                "index": 90,
                "user": "OrangeDog"
            },
            {
                "id": "5e8caddef450c25cc8c4fad4",
                "text": "You can have as many different controllers, filters, and handlers on different paths as you like",
                "time": "2020-04-07 16:44:14",
                "index": 91,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 578,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eec98a6613d3b3394f6d3e0",
                "text": "Is there a neat way to test the binding of a `@ConfigurationProperties` without a full context and properties file? The input could be e.g. a `Properties` instance or a `Map<String, ?>` structure.",
                "time": "2020-06-19 10:51:18",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5eec9dcce73f71694986863b",
                "text": "I\u2019m not sure if there is a test slice for config props, but you could write tests that provide properties using the @Testproperties annotion for example and then verify the expected data in the tests",
                "time": "2020-06-19 11:13:16",
                "index": 1,
                "user": "pcornelissen"
            },
            {
                "id": "5eec9e40a813c72dcff98c1c",
                "text": "If you mean `@TestPropertySource`, it's not applicable to methods",
                "time": "2020-06-19 11:15:12",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5eec9e50c3362026a90a59b0",
                "text": "No, but to the testclass",
                "time": "2020-06-19 11:15:28",
                "index": 3,
                "user": "pcornelissen"
            },
            {
                "id": "5eec9e53b8152d34844f987e",
                "text": "I suppose I could have a load of nested classes with one test each",
                "time": "2020-06-19 11:15:31",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5eec9e5fe73f71694986863e",
                "text": "maybe use inner classes for that",
                "time": "2020-06-19 11:15:43",
                "index": 5,
                "user": "pcornelissen"
            },
            {
                "id": "5eec9e7bfa0c9221fc49fa71",
                "text": "I'd rather have an instance of whatever the `PropertyBindingThing` is and call it with various inputs",
                "time": "2020-06-19 11:16:11",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5eec9ea827fbeb24493fa951",
                "text": "Yeah, I\u2019d try to combine as many non-interfering properties in one go as possible",
                "time": "2020-06-19 11:16:56",
                "index": 7,
                "user": "pcornelissen"
            },
            {
                "id": "5eec9fdc54d7862dc497842a",
                "text": "`ConfigurationPropertiesBinder` isn't public",
                "time": "2020-06-19 11:22:04",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5eeca40aec4a341beed836b4",
                "text": "How do you do lists with `@TestPropertySource`?",
                "time": "2020-06-19 11:39:54",
                "index": 9,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 579,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5eced780f0b8a2053ab9d103",
                "text": "Am I just missing something dumb?  I was trying to see what difference (if any) this made to startup time by adding it to a jar that has autoconfigurations.  I do not see any file being generated though. \n```\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-autoconfigure-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n```",
                "time": "2020-05-27 21:11:28",
                "index": 0,
                "user": "kjq"
            },
            {
                "id": "5ecf6a5b3ffa6106f1dc6e03",
                "text": "@kjq it is low-level optimizations. If you have auto-configurations, it should generate a file for the conditions we can check without loading the class",
                "time": "2020-05-28 07:38:03",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5ecfc3c3549761730b62cc5e",
                "text": "@snicoll - thanks for the response!  I should not have to do anything for it to generate the file correct?  I just plop it in maven, in a module that has autoconfigurations, and nothing gets generated.",
                "time": "2020-05-28 13:59:31",
                "index": 42,
                "user": "kjq"
            },
            {
                "id": "5ecfc911ff7a920a72195989",
                "text": "Yep. Can\u2019t help you more without a small sample that reproduces what you see",
                "time": "2020-05-28 14:22:09",
                "index": 43,
                "user": "snicoll"
            },
            {
                "id": "5ecfc9412c49c45f5aaa1d9a",
                "text": "It\u2019s hard to know where you\u2019ve looked with \u201cnothing gets generated\u201d :) ",
                "time": "2020-05-28 14:22:57",
                "index": 44,
                "user": "snicoll"
            },
            {
                "id": "5ecfc9c82c49c45f5aaa1f70",
                "text": "@snicoll - in the POM for the project I add this:\n```\n<dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-autoconfigure-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n```\nAfter building the package I am looking in the output folder under META-INF but just see my spring.factories file.",
                "time": "2020-05-28 14:25:12",
                "index": 45,
                "user": "kjq"
            },
            {
                "id": "5ecfd01e2c49c45f5aaa33d1",
                "text": "okay. Care to share a small repo that reproduces that? ",
                "time": "2020-05-28 14:52:14",
                "index": 46,
                "user": "snicoll"
            },
            {
                "id": "5ecfda50f0b8a2053abc877b",
                "text": "Sure, ill provide one later today.  Thanks!",
                "time": "2020-05-28 15:35:44",
                "index": 47,
                "user": "kjq"
            }
        ]
    },
    {
        "id": 580,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5caa5ae1bd70a40d5f10e9ae",
                "text": "Hello, Can somebody help me?\nI try to add test for pull request and I need to use `ElasticsearchContainer` but when I use it I get exception such as `org.junit.AssumptionViolatedException: Could not find a valid Docker environment.` \nWhat\u2019s wrong?",
                "time": "2019-04-07 20:17:37",
                "index": 0,
                "user": "ayudovin"
            },
            {
                "id": "5caaf071b34ccd69e781a843",
                "text": "@ayudovin you need docker running on your machine",
                "time": "2019-04-08 06:55:45",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5cab319120fbe911ee7df22e",
                "text": "\n> @ayudovin you need docker running on your machine\n@snicoll Does it mean I need to run Elasticsearch container on my docker?\n",
                "time": "2019-04-08 11:33:37",
                "index": 58,
                "user": "ayudovin"
            }
        ]
    },
    {
        "id": 581,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c445ec08ce4bb25b8df1a91",
                "text": "Hi Team, I'm using MongoDB with SpringBoot but the constraints applied in my entity are just not working. I'm not getting any exception for invalid data. The constraints are :- @NotNull\n    @Length(min=4)\n    @Field(\"name\")\n    private String name;\n    @NotNull\n    @Length(min=5)\n    @Field(\"teamName\")\n    private String teamName;\n ",
                "time": "2019-01-20 11:42:56",
                "index": 0,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c445ef08ce4bb25b8df1c52",
                "text": "Controller is as simple as it can get:- @PostMapping(\"/createuser\")\n    public HttpStatus createUser(@RequestBody Users user) {\n        userRepository.save(user);\n        return HttpStatus.CREATED;\n    } The postman request is:- {\n\t\"name\":\"\",\n\t\"teamName\":null\n}",
                "time": "2019-01-20 11:43:44",
                "index": 1,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c4467679bfa375aab2ef4b9",
                "text": "If you want the Users object to be validated by spring mvc, then you need to add the @Valid Annotation to the request body to be validated. See https://spring.io/guides/gs/validating-form-input/ for an example with an input form. It's the same for a RestController.",
                "time": "2019-01-20 12:19:51",
                "index": 2,
                "user": "teramawi"
            },
            {
                "id": "5c4468031cb70a372a0ae70e",
                "text": "Yeah worked. So that means whenever in controllers I need the validations to show the effect, I gotta use @Valid right?",
                "time": "2019-01-20 12:22:27",
                "index": 3,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c44d78d95e17b452581b68f",
                "text": "Is it a good practice to use @Valid with @RequestParam and @PathVariable for validation of parameters?",
                "time": "2019-01-20 20:18:21",
                "index": 4,
                "user": "RaviShekhawat"
            },
            {
                "id": "5c44e54e9bfa375aab322210",
                "text": "It's one way to do it. I do it in my current API project for example",
                "time": "2019-01-20 21:17:02",
                "index": 5,
                "user": "isaakm_gitlab"
            }
        ]
    },
    {
        "id": 582,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bbe1299ae7be940163263ae",
                "text": "Request URL: http://localhost:8080/logout\nRequest Method: DELETE\nStatus Code: 302 \nRemote Address: [::1]:8080\nReferrer Policy: no-referrer-when-downgrade",
                "time": "2018-10-10 14:54:17",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe12b4f659e6777290ea0c",
                "text": "@RequestMapping(value =\"/logout\", method = RequestMethod.DELETE)\t\n\tpublic void  logout(HttpServletRequest request) {\t\n\t\tHttpSession session =request.getSession(); \n\t\tsession.invalidate();\n\t}",
                "time": "2018-10-10 14:54:44",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe12cabbdc0b2505196ada",
                "text": "Any idea why I am getting a 302 status instead of 200",
                "time": "2018-10-10 14:55:06",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe12fae65a634336b5176e",
                "text": "Calling from angular2",
                "time": "2018-10-10 14:55:54",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1331600c5f6423856afd",
                "text": "public  logout() {\t\n\t\n\t this.http.delete('logout').subscribe(value => {\n     this.currentUser =null;\n    });\n}\n",
                "time": "2018-10-10 14:56:49",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1a61bbdc0b250519a4a9",
                "text": "@DoraRajappan  Verify if you have session logout handlers in the WebSecurityConfig",
                "time": "2018-10-10 15:27:29",
                "index": 5,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5bbe1aa6e65a634336b552f9",
                "text": "Ok...",
                "time": "2018-10-10 15:28:38",
                "index": 6,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1ac2e65a634336b5536f",
                "text": "I supressed  websecurity",
                "time": "2018-10-10 15:29:06",
                "index": 7,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1ae26e5a401c2d4a6196",
                "text": "did it work or still the same? ",
                "time": "2018-10-10 15:29:38",
                "index": 8,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5bbe1b13271506518deade17",
                "text": "Its same only I need to find out how to pass HttpServeltRequest from angular2",
                "time": "2018-10-10 15:30:27",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1b43384492366116f72c",
                "text": "in between.. one surprising thing.. why are you calling a  DELETE method than  a simple /logout mapped URL handler?",
                "time": "2018-10-10 15:31:15",
                "index": 10,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5bbe1b68384492366116f84f",
                "text": "a POST? Im trying that",
                "time": "2018-10-10 15:31:52",
                "index": 11,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1b811e23486b93acb806",
                "text": "I need to checkout how to pass HttpServletRequest to the logout",
                "time": "2018-10-10 15:32:17",
                "index": 12,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1b87ae7be9401632ad5a",
                "text": "from angular",
                "time": "2018-10-10 15:32:23",
                "index": 13,
                "user": "DoraRajappan"
            },
            {
                "id": "5bbe1bcd600c5f642385bec5",
                "text": "just GET is enough.. ",
                "time": "2018-10-10 15:33:33",
                "index": 14,
                "user": "vphanibhushanreddy"
            },
            {
                "id": "5bbe2a03ae7be94016332ee9",
                "text": "@DoraRajappan\n\n  I am getting a Status Code: 302  for this  request.. any idea what the problem is. http.delete also same status code 302. So changed to post.\n``` \npublic  logout() {\t\n\t let body = {};\n\t \n\t this.http.post('logout',JSON.stringify(body)).subscribe(value => {\n     this.currentUser =null;\n    });\n} \n\n ```\n\n@PostMapping(value =\"/logout\")\t\n\tpublic void  logout(@RequestBody HttpServletRequest request) {\t\n\t\tHttpSession session =request.getSession(); \n\t\tsession.invalidate();\n\t}\nRequest URL: http://localhost:8080/logout\nRequest Method: POST\nStatus Code: 302 \nRemote Address: [::1]:8080\nReferrer Policy: no-referrer-when-downgrade\nlogout method is not getting called cause call is not coming to the debugger.",
                "time": "2018-10-10 16:34:11",
                "index": 15,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 583,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dcffcc5eeb63e1a83c3b329",
                "text": "what's the preferred/recommended way to inject beans that depend on other beans in `@Configuration` classes?\n\n```\n@Component\npublic class SomeComponent {}\n\n-------------\n\n@Component\npublic class CustomAuthProvider implements AuthenticationProvider {\n  private final SomeComponent comp;\n\n  public CustomAuthProvider(SomeComponent comp) {\n    this.comp = comp;\n  }\n}\n\n-------------\n\n@Configuration\npublic class SecurityConfiguration extends GlobalAuthenticationConfigurerAdapter {\n  @Override\n  public void configure(AuthenticationManagerBuilder auth) {\n    // I need an instance of `CustomAuthProvider` here\n  }\n}\n```\ndo you just do constructor injection in the `SecurityConfiguration` class or instead use `@Bean`s to instantiate the whole chain manually?",
                "time": "2019-11-16 13:42:29",
                "index": 0,
                "user": "tonisostrat"
            },
            {
                "id": "5dcfffdcfd6fe41fc09576c0",
                "text": "Constructor injection is recommended in a higher  coupling situation than properties injection.",
                "time": "2019-11-16 13:55:40",
                "index": 1,
                "user": "LiinNs"
            },
            {
                "id": "5dd0009768ad1c4a0fd891c5",
                "text": "so extending the example i gave you you would do this?\n\n```\n@Configuration\npublic class SecurityConfiguration extends GlobalAuthenticationConfigurerAdapter {\n  private final CustomAuthProvider provider;\n\n  public SecurityConfiguration(CustomAuthProvider provider) {\n    this.provider = provider;\n  }\n\n  // configure() method\n}\n```",
                "time": "2019-11-16 13:58:47",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5dd000c2eeb63e1a83c3cbfa",
                "text": "Yah",
                "time": "2019-11-16 13:59:30",
                "index": 3,
                "user": "LiinNs"
            },
            {
                "id": "5dd0015bfd6fe41fc09581fa",
                "text": "I learn these from <Spring in Action 5th>",
                "time": "2019-11-16 14:02:03",
                "index": 4,
                "user": "LiinNs"
            }
        ]
    },
    {
        "id": 584,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5de137a85506624598394eda",
                "text": "Hi, can anyone help me with a failing RestTemplate get request?",
                "time": "2019-11-29 15:22:16",
                "index": 0,
                "user": "celroid"
            },
            {
                "id": "5de13e23c3d6795b9ff1ef28",
                "text": "@celroid What's the failure?",
                "time": "2019-11-29 15:49:55",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5de1448cd75ad3721d22a988",
                "text": "\n```\nResponseEntity<GeocodeResponse> responseEntity = restTemplate.exchange(uri, HttpMethod.GET, requestEntity,\n          new ParameterizedTypeReference<GeocodeResponse>() {\n          });\n```\nDuring a resttemplate.execute I am getting this error:\nNo instances available for reverse.geocoder.api.here.com",
                "time": "2019-11-29 16:17:16",
                "index": 2,
                "user": "celroid"
            },
            {
                "id": "5de14519d64a052fb685e41b",
                "text": "Some logs:\n```\n   2019-11-29T17:11:10.11+0200 [APP/PROC/WEB/0] OUT 2019-11-29 15:11:10.117  INFO [prod-business-alexa,75ae48be22eeb22b,c0905b14e41fe813,false] 25 --- [nio-8080-exec-5] c.netflix.config.ChainedDynamicProperty  : Flipping property: reverse.geocoder.api.here.com.ribb\non.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647\n   2019-11-29T17:11:10.12+0200 [APP/PROC/WEB/0] OUT 2019-11-29 15:11:10.123  INFO [prod-business-alexa,75ae48be22eeb22b,c0905b14e41fe813,false] 25 --- [nio-8080-exec-5] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer\n-reverse.geocoder.api.here.com\n   2019-11-29T17:11:10.12+0200 [APP/PROC/WEB/0] OUT 2019-11-29 15:11:10.124  INFO [prod-business-alexa,75ae48be22eeb22b,c0905b14e41fe813,false] 25 --- [nio-8080-exec-5] c.netflix.loadbalancer.BaseLoadBalancer  : Client: reverse.geocoder.api.here.com instantiated a\nLoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=reverse.geocoder.api.here.com,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null\n   2019-11-29T17:11:10.12+0200 [APP/PROC/WEB/0] OUT 2019-11-29 15:11:10.125  INFO [prod-business-alexa,75ae48be22eeb22b,c0905b14e41fe813,false] 25 --- [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater\n   2019-11-29T17:11:10.12+0200 [APP/PROC/WEB/0] OUT 2019-11-29 15:11:10.126  INFO [prod-business-alexa,75ae48be22eeb22b,c0905b14e41fe813,false] 25 --- [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client reverse.geoc\noder.api.here.com initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=reverse.geocoder.api.here.com,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractin\ngServerList@956cbc1\n   2019-11-29T17:11:10.14+0200 [APP/PROC/WEB/0] OUT 2019-11-29 15:11:10.139 ERROR [prod-business-alexa,75ae48be22eeb22b,75ae48be22eeb22b,false] 25 --- [nio-8080-exec-5] d.p.g.a.r.l.PositionIntentHandler        : No instances available for reverse.geocoder.api.here.\ncom\n```",
                "time": "2019-11-29 16:19:36",
                "index": 3,
                "user": "celroid"
            },
            {
                "id": "5de1453c6a85195b9ec977cf",
                "text": "why is ribbon even in the logs, this resttemplate doesn't have the @loadbalance annotation",
                "time": "2019-11-29 16:20:12",
                "index": 4,
                "user": "celroid"
            },
            {
                "id": "5de14b6bd75ad3721d22dbb5",
                "text": "You couple probably answer that by putting a breakpoint in `org.springframework.http.client.support.InterceptingHttpAccessor.setRequestFactory(ClientHttpRequestFactory)` and seeing what's setting the Ribbon request factory on your `RestTemplate`.",
                "time": "2019-11-29 16:46:35",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 585,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbdf41c1c100a4f295ffb5d",
                "text": "hi all, is it possible to register an EnvironmentPostProcessor for a single unit test (class)? I can add it to src/test/resources/META-INF/spring.factories which works fine, but then it's 'global' for all tests. There's a specific scenario I want to test so I'd ideally not 'pollute' other tests with that PostProcessor",
                "time": "2018-10-10 12:44:12",
                "index": 0,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf4a8ae7be94016316bb0",
                "text": "also I am aware that the EnvironmentPostProcessor javadocs say they should be registered in spring.factories, so I guess it's not possible programmatically... but was still curious :)",
                "time": "2018-10-10 12:46:32",
                "index": 2,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf5c1bbdc0b2505186e4d",
                "text": "Not possible programatically",
                "time": "2018-10-10 12:51:13",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bbdf5f7271506518de9b1f3",
                "text": "WDYM by polluting? Those are only invoked if you start a full Spring Boot application as part of your test AFAIK",
                "time": "2018-10-10 12:52:07",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bbdf643600c5f64238470ae",
                "text": "yes that's it basically, I want to test some different post-processing scenarios but I can only either register the post processor for *all* tests or for no tests at all... not a big deal, but I wanted to avoid possible side effects for unrelated tests, that's all",
                "time": "2018-10-10 12:53:23",
                "index": 8,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf64de65a634336b42457",
                "text": "but no big deal otherwise, thanks for the confirmation :)",
                "time": "2018-10-10 12:53:33",
                "index": 9,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf651bbdc0b2505187399",
                "text": "Wait",
                "time": "2018-10-10 12:53:37",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5bbdf664ae7be94016317ba2",
                "text": "@RoyJacobs Those aren\u2019t supposed to run, is it?",
                "time": "2018-10-10 12:53:56",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bbdf6bc600c5f64238474c7",
                "text": "@snicoll I think so. we're starting a full context in those tests, I'm working on a bunch of AutoConfigurations for internal company infrastructure and such",
                "time": "2018-10-10 12:55:24",
                "index": 16,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf6c9600c5f642384754e",
                "text": "Define \u201cfull context\"",
                "time": "2018-10-10 12:55:37",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5bbdf6eff659e677728ffac2",
                "text": "a full Spring Boot Application that does full AutoConfiguration that applies all registered EnvironmentPPs and other things registered in spring.factories",
                "time": "2018-10-10 12:56:15",
                "index": 19,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf6fc82893a2f3bc487bc",
                "text": "I should probably have called them integration tests instead of unit tests, sorry",
                "time": "2018-10-10 12:56:28",
                "index": 21,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf6fe1c100a4f29601451",
                "text": "You shouldn\u2019t do that to test an auto-configuration ",
                "time": "2018-10-10 12:56:30",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5bbdf7051c100a4f29601460",
                "text": "that\u2019s what I tried to explained above",
                "time": "2018-10-10 12:56:37",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5bbdf71ac08b8b3067f9235a",
                "text": "So the fact the EnvPPs are called is more due to your testing style than anything else IMO",
                "time": "2018-10-10 12:56:58",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5bbdf725ef4afc4f284cb045",
                "text": "no I realize that, I oversimplified, sorry.",
                "time": "2018-10-10 12:57:09",
                "index": 25,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf72b600c5f6423847727",
                "text": "I actually *want* to test the envpp's",
                "time": "2018-10-10 12:57:15",
                "index": 26,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf735384492366115d2df",
                "text": "I got that but you should test them in isolation",
                "time": "2018-10-10 12:57:25",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5bbdf756ae7be94016318523",
                "text": "If you isolate the \u201cbig integration tests\u201d then you won\u2019t have EnvPPs being invoked on unrelated tests is what I am trying to get at",
                "time": "2018-10-10 12:57:58",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5bbdf7f9271506518de9c647",
                "text": "@snicoll yes and normally we do that. I'm just trying to test the *interaction* between a bunch of different envpp's at startup (mostly related to spring cloud and the bootstrap context and some other things).  anyway, I think we agree :) in 99.9999% of tests we're not doing any of this stuff at all",
                "time": "2018-10-10 13:00:41",
                "index": 33,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf821ef4afc4f284cb7d3",
                "text": "it's also not for an application per se, I'm working on an \"internal\" Spring Boot for our company (which is Spring Boot + a bunch of extra modules)",
                "time": "2018-10-10 13:01:21",
                "index": 34,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf829435c2a518e81612a",
                "text": "+ some default configuration etc",
                "time": "2018-10-10 13:01:29",
                "index": 35,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf836c7bf7c3662e87108",
                "text": "Okay cool. Throwing `ApplicationContextRunner` in case you don\u2019t know about it yet",
                "time": "2018-10-10 13:01:42",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5bbdf86c384492366115dc22",
                "text": "yes, that's been VERY useful for us, thanks for adding it :)",
                "time": "2018-10-10 13:02:36",
                "index": 37,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf87fae7be94016318f05",
                "text": "Sweet, thanks for the feedback",
                "time": "2018-10-10 13:02:55",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5bbdf8a6384492366115dd7b",
                "text": "That thing is a success story with two persons in the team working hard to get a decent API. And then a third person comes and make it 10 times better. Pretty happy about the outcome",
                "time": "2018-10-10 13:03:34",
                "index": 39,
                "user": "snicoll"
            },
            {
                "id": "5bbdf8dd82893a2f3bc48ed5",
                "text": "certainly! we previously had a custom implementation doing something similar",
                "time": "2018-10-10 13:04:29",
                "index": 40,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf8e8e65a634336b436f9",
                "text": "we've found that it can be very useful to override the class loader and hide certain dependencies",
                "time": "2018-10-10 13:04:40",
                "index": 41,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf8ecc08b8b3067f92c47",
                "text": "wow, ok. That\u2019s interesting",
                "time": "2018-10-10 13:04:44",
                "index": 42,
                "user": "snicoll"
            },
            {
                "id": "5bbdf8f6271506518de9cc7a",
                "text": "Is there anything that yours does that we don\u2019t yet?",
                "time": "2018-10-10 13:04:54",
                "index": 43,
                "user": "snicoll"
            },
            {
                "id": "5bbdf94fbbdc0b2505188bf9",
                "text": "the custom classloader stuff, I think. I notice you can add a custom class loader in your Runner as well, we've just made that into a simple DSL",
                "time": "2018-10-10 13:06:23",
                "index": 44,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf956600c5f6423848cb8",
                "text": "so you can hide classes and resources, or redirect them",
                "time": "2018-10-10 13:06:30",
                "index": 45,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf9781c100a4f29602969",
                "text": "A builder for `ClassLoader` kind of",
                "time": "2018-10-10 13:07:04",
                "index": 46,
                "user": "snicoll"
            },
            {
                "id": "5bbdf97a1c100a4f2960296b",
                "text": "right",
                "time": "2018-10-10 13:07:06",
                "index": 47,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdf97e271506518de9d1f4",
                "text": "(except you hide that part I suppose)",
                "time": "2018-10-10 13:07:10",
                "index": 48,
                "user": "snicoll"
            },
            {
                "id": "5bbdf98ac7bf7c3662e879fd",
                "text": "Feel free to submit something if you think the API could be better",
                "time": "2018-10-10 13:07:22",
                "index": 49,
                "user": "snicoll"
            },
            {
                "id": "5bbdf9f6600c5f642384922d",
                "text": "ok! I'll ask the developer here to see if we can make it into a small pull request",
                "time": "2018-10-10 13:09:10",
                "index": 50,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfa14435c2a518e8171e6",
                "text": "it has helped us to more easily test the interactions between various combinations of dependencies",
                "time": "2018-10-10 13:09:40",
                "index": 51,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfa22271506518de9d876",
                "text": ":+1: ",
                "time": "2018-10-10 13:09:54",
                "index": 52,
                "user": "snicoll"
            },
            {
                "id": "5bbdfa36384492366115e90a",
                "text": "@snicoll I removed lombok and pushed new version to: https://github.com/pmihalcin/spring-data-repository-cache",
                "time": "2018-10-10 13:10:14",
                "index": 53,
                "user": "pmihalcin"
            },
            {
                "id": "5bbdfa4fe65a634336b44523",
                "text": "Thanks, I appreciate that",
                "time": "2018-10-10 13:10:39",
                "index": 54,
                "user": "snicoll"
            },
            {
                "id": "5bbdfa96ef4afc4f284ccd05",
                "text": "@snicoll we'll try to do some work on it here and prepare a simple pull request at some point, thanks for the help",
                "time": "2018-10-10 13:11:50",
                "index": 55,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfaaa6e5a401c2d4954fd",
                "text": "Thank you!",
                "time": "2018-10-10 13:12:10",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5bbdfb49ef4afc4f284cd373",
                "text": "hmm, just checking, but it looks fairly similar to FilteredClassLoader actually :)",
                "time": "2018-10-10 13:14:49",
                "index": 57,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfb5de65a634336b44d50",
                "text": "I wasn't aware of its existence",
                "time": "2018-10-10 13:15:09",
                "index": 58,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfba06e5a401c2d495e17",
                "text": "Good to hear, I wondered what we missed there :)",
                "time": "2018-10-10 13:16:16",
                "index": 59,
                "user": "snicoll"
            },
            {
                "id": "5bbdfbc782893a2f3bc49f3d",
                "text": "I think the only additional thing we have is hiding resources",
                "time": "2018-10-10 13:16:55",
                "index": 60,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfbdf1c100a4f29603b82",
                "text": "Interested by that",
                "time": "2018-10-10 13:17:19",
                "index": 61,
                "user": "snicoll"
            },
            {
                "id": "5bbdfc1e384492366115f879",
                "text": "we're using that to test some @ConditionalByResource calls and some other auto-configuration behavior",
                "time": "2018-10-10 13:18:22",
                "index": 62,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfc35600c5f642384a372",
                "text": "I thought we had that too",
                "time": "2018-10-10 13:18:45",
                "index": 63,
                "user": "snicoll"
            },
            {
                "id": "5bbdfc70ae7be9401631ad00",
                "text": "oh I must've missed that, I see a FilteredClassLoader that can hide classes or packages, but that's in 2.0.5",
                "time": "2018-10-10 13:19:44",
                "index": 64,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfca3f659e67772902c62",
                "text": "https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/FilteredClassLoader.java can hide classes or packages it seems?",
                "time": "2018-10-10 13:20:35",
                "index": 65,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfd07600c5f642384aad0",
                "text": "Yup. I am not saying it\u2019s there. Anyway :)",
                "time": "2018-10-10 13:22:15",
                "index": 66,
                "user": "snicoll"
            },
            {
                "id": "5bbdfd12c7bf7c3662e8937c",
                "text": "right, back to work",
                "time": "2018-10-10 13:22:26",
                "index": 67,
                "user": "RoyJacobs"
            },
            {
                "id": "5bbdfd17ef4afc4f284ce16e",
                "text": "I'll see what I can do anyway",
                "time": "2018-10-10 13:22:31",
                "index": 68,
                "user": "RoyJacobs"
            }
        ]
    },
    {
        "id": 586,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5df64b8ace2b2e652bde3080",
                "text": "[![Annotation 2019-12-15 100127.png](https://files.gitter.im/spring-projects/spring-boot/Ngui/thumb/Annotation-2019-12-15-100127.png)](https://files.gitter.im/spring-projects/spring-boot/Ngui/Annotation-2019-12-15-100127.png)",
                "time": "2019-12-15 15:04:42",
                "index": 0,
                "user": "aluckens"
            },
            {
                "id": "5df64b8ace2b2e652bde3081",
                "text": "[![Annotation 2019-12-15 100344.png](https://files.gitter.im/spring-projects/spring-boot/Ngui/thumb/Annotation-2019-12-15-100344.png)](https://files.gitter.im/spring-projects/spring-boot/Ngui/Annotation-2019-12-15-100344.png)",
                "time": "2019-12-15 15:04:42",
                "index": 1,
                "user": "aluckens"
            },
            {
                "id": "5df64c090616d6515e432295",
                "text": "hi  all, im currently facing this problem  i permitted request the \"/account/login\" and \"/account/register\" but still it checking for Authorization header.",
                "time": "2019-12-15 15:06:49",
                "index": 2,
                "user": "aluckens"
            },
            {
                "id": "5df662a2578ecf4b1fab11d9",
                "text": "@aluckens Do you have a filter to work around JWT?",
                "time": "2019-12-15 16:43:14",
                "index": 3,
                "user": "bvn13"
            },
            {
                "id": "5df6631ce7265623014c2ad3",
                "text": "yes",
                "time": "2019-12-15 16:45:16",
                "index": 4,
                "user": "aluckens"
            },
            {
                "id": "5df66339e47fb31eb7b8b976",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/416L/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/416L/image.png)",
                "time": "2019-12-15 16:45:45",
                "index": 5,
                "user": "aluckens"
            },
            {
                "id": "5df664982cc1b31e342348b2",
                "text": "https://0x0.st/z0-3.png\n@aluckens check if authentication required before working with JWT into Filter",
                "time": "2019-12-15 16:51:36",
                "index": 7,
                "user": "bvn13"
            },
            {
                "id": "5df668a7ac14cc652c8b5673",
                "text": "https://0x0.st/z0-6.png - here is my issue. Why session has attribute FLASH_MAPS containing my redirect flash attribute (serviceForm) but it is not parsed into Model nor SessionAttribute?\n",
                "time": "2019-12-15 17:08:55",
                "index": 8,
                "user": "bvn13"
            },
            {
                "id": "5df66d72dbf24d0becf4d390",
                "text": "oh... as I expected my issue is about my app is running behind gateway with url rewriting\n\nhttps://0x0.st/z0-D.png",
                "time": "2019-12-15 17:29:22",
                "index": 9,
                "user": "bvn13"
            }
        ]
    },
    {
        "id": 587,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bb264873844923661cbf211",
                "text": "I'm facing this very unusual error. I have this JpaRepository<SomeObject, Long>\n```\npublic interface SomeRepository extends JpaRepository<SomeObject, Long> {\n      @Query(\"select someObject from SomeObject someObject where someObject.id = ?1\")\n     public SomeObject getSomeObject(int id);\n}\n```\nIt works fine, and when I try to get SomeObject with ID that does not exist, it simply returns null and I handle it and proceed further.\n\nHowever, when I introduced multiple instances of my application (say 2), and hid them behind a loadbalancer. I perform this operation (as a script), where it retrieves/creates/deletes SomeObject on repeat.\n\nWhen I have only one instance, I run the script which does: retrieval (returns null) -> creation of SomeObject, deletion of SomeObject and repeat retrieval (returns null) -> ... etc\n\nEverything works fine and as expected ^\n\nIn my multiple instances setup, load balancer reroutes requests to instances interchangeably. Meaning, the operations now happen in this order:\n\nInstance (1) retrieval (returns null)\n\nInstance (2) creation of SomeObject\n\nInstance (1) deletion of SomeObject\n\nAnd on the next iteration, some weird behavior is observed!\n\nInstance (2) retrieval (here instead of returning null, Spring all of a sudden throws following exception):\n```\nCaused by: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find somePackage.SomeObject with id 1; nested exception is javax.persistence.EntityNotFoundException: Unable to find somePackage.SomeObject with id 1\n at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:389) ~[spring-orm-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:488) ~[spring-orm-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59) ~[spring-tx-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) ~[spring-tx-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147) ~[spring-tx-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) ~[spring-data-jpa-1.11.3.RELEASE.jar!/:?]\n at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57) ~[spring-data-commons-1.13.3.RELEASE.jar!/:?]\n at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) ~[spring-aop-4.3.8.RELEASE.jar!/:4.3.8.RELEASE]\n at com.sun.proxy.$Proxy201.getSomeObject(Unknown Source) ~[?:?]\n at mypackage.getSomeObject(MyClass.java:111) ~[]\n```",
                "time": "2018-10-01 18:16:39",
                "index": 0,
                "user": "yeralin"
            },
            {
                "id": "5bb264945af4853068466e8e",
                "text": "I've been banging my head against the wall for few weeks now trying to fix this issue, but I can't figure out why this exception EntityNotFoundException is thrown.\n\nThe exception is ofc correct, I don't understand why it does not return null as usual.\n```\npublic class SomeObject {\n\n  @Id\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  private Long id;\n\n}\n```",
                "time": "2018-10-01 18:16:52",
                "index": 1,
                "user": "yeralin"
            },
            {
                "id": "5bb2681ea9be136b94de3d6c",
                "text": "@hayaticakici Hi, no it is not HQL query. \n\nSorry, i tried to simplify the case, but I actually have a little more complex query that is not covered by `findById` method:\n`@Query(\"select someObject from SomeObject someObject where someObject.id = ?1, someObject.someField = ?2\")`\n\nbut it does fail for both queries",
                "time": "2018-10-01 18:31:58",
                "index": 4,
                "user": "yeralin"
            }
        ]
    },
    {
        "id": 588,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5c6482074003460b2d46c760",
                "text": "I'm receiving this error `Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/autoconfigure/web/ErrorAttributes` when trying to run a spring boot web test. I've verified that spring cloud is on Greenwich, which supports 2.1.x, and that all of my boot dependencies are at 2.1.2.RELEASE. Does anyone know what could be the issue here?",
                "time": "2019-02-13 20:45:59",
                "index": 0,
                "user": "snowe2010"
            },
            {
                "id": "5c6489945095f6660cebf961",
                "text": "You have something that isn't compatible with Spring Boot 2 on the classpath. `ErrorAttributes` is in `org.springframework.boot.web.servlet.error`. What's the full stack trace?",
                "time": "2019-02-13 21:18:12",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c65ac554bafd97ca3f0c30a",
                "text": "@wilkinsona Here is the entire stack trace. https://pastebin.com/WFp8EQJF   I read that it would be a classpath issue, but running dependencyReport and searching all the spring boot dependencies indicates that they are being upgraded by gradle to the correct 2.1.2.RELEASE version. ",
                "time": "2019-02-14 17:58:45",
                "index": 16,
                "user": "snowe2010"
            },
            {
                "id": "5c65afba80df6804a1a52027",
                "text": "It seems it might be related to our common module using spring boot 1.5.6, as GlobalExceptionHandler isn't located in the project we are converting to spring boot 2",
                "time": "2019-02-14 18:13:14",
                "index": 17,
                "user": "snowe2010"
            }
        ]
    },
    {
        "id": 589,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d03799ffaf70031f9104c54",
                "text": "Hi! I have a problem with the interaction of Spring Security and the Spring Boot Actuator configuration. As far as I can see, the MeterRegistry (regardless of Simple or Prometheus) is built a lot earlier because I use RestTemplate within a PermissionEvaluator and as such common tags and a couple metrics aren't registered. Is there a better solution than adding @Lazy to the offending beans? Feels like a hack to me.",
                "time": "2019-06-14 10:40:31",
                "index": 0,
                "user": "schosin"
            },
            {
                "id": "5d038365325b465cc3284d8d",
                "text": "You need to do similar things reasonably often. Like if your security decisions will need a service, but if you build the service too early it won't get any security aspects added to it. That's what `@Lazy` is for.",
                "time": "2019-06-14 11:22:13",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d0385d7ecc6a91b31e2a426",
                "text": "Ran into the aspect one as well for caching. Solution was @Lazy as well. I guess I won't be searching for better solutions then.",
                "time": "2019-06-14 11:32:39",
                "index": 2,
                "user": "schosin"
            },
            {
                "id": "5d03ab1dbc56c731f8b989ac",
                "text": "@schosin IMO, it would be worth raising a Spring Security issue about that. Ideally, it would be possible to configure Spring Security to use various beans without it prematurely initialising them.",
                "time": "2019-06-14 14:11:41",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 590,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ca87a51759abc043c76342f",
                "text": "hi everyone",
                "time": "2019-04-06 10:07:13",
                "index": 0,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87a6593fb4a7dc2e2492c",
                "text": "i have a question about spring boot rest api applications",
                "time": "2019-04-06 10:07:33",
                "index": 1,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87b093ebbdc55b36eb8ff",
                "text": "Suppose we have two entities",
                "time": "2019-04-06 10:10:17",
                "index": 2,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87b128148e555b25a8700",
                "text": "```\n@Entity\nEntityOne {\n  @OneToMany\n  private EntityTwo entityTwo;\n}\n\n@Entity\nEntityTwo {\n  @ManyToOne\n  @JoinColumn(name = \"enity_one_id\")\n  private EntityOne entityOne;\n}\n```",
                "time": "2019-04-06 10:10:26",
                "index": 3,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87b947ecbdc29ca0bc010",
                "text": "We recieve entityOneId from the client to the controller. How are we supposed to create entityTwo when we have only id with us? It just feels stupid to find EntityOneById first and then assign it to entity one and then save it. One db query for nothing.",
                "time": "2019-04-06 10:12:36",
                "index": 4,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87d0abd70a40d5f04e4da",
                "text": "create a dummy `EntityTwo` object with just the `@Id` filled, hibernate does the rest",
                "time": "2019-04-06 10:18:50",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5ca87d5aa84e0c501ae5aaba",
                "text": "```\nvar entityOne = // from request\n\nvar entityTwo = new EntityTwo();\n\nentityTwo.setId(entityOne.getEntityTwoId());\n\nentityOne.setEntityTwo(entityTwo);\n\n// store\n```",
                "time": "2019-04-06 10:20:09",
                "index": 6,
                "user": "tonisostrat"
            },
            {
                "id": "5ca87d81a84e0c501ae5abc3",
                "text": "When I'm creating a dummy entityTwo I have to provide a lot of values which cannot be null. That's the problem.",
                "time": "2019-04-06 10:20:49",
                "index": 7,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87da8a0790b29c96e97b7",
                "text": "why? do you do null checks on entitytwo creation?",
                "time": "2019-04-06 10:21:28",
                "index": 8,
                "user": "tonisostrat"
            },
            {
                "id": "5ca87db2a0790b29c96e97c7",
                "text": "Kotlin",
                "time": "2019-04-06 10:21:38",
                "index": 9,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87dd0c55bd14d359a706c",
                "text": "my entities are data classes",
                "time": "2019-04-06 10:22:08",
                "index": 10,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87e80759abc043c764e73",
                "text": "well, this is how i always structure my stuff\n\n```\nclass Identfiable {\n\n  private Long id;\n\n  setId(Long id) {\n    this.id = id;\n  }\n\n  getId() {\n    return id;\n  }\n}\n\nclass EntityOne extends Identifiable {}\n\nclass EntityTwo extends Identifiable {}\n```\n\nnow whenever I need to set a reference I can just do\n\n```\nvar entityTwoId = // from wherever\nvar entityOne = // from wherever\n\nvar entityTwo = new Identifiable();\n\nentityTwo.setId(entityTwoId);\n\nentityOne.setEntityTwo(entityTwo);\n```",
                "time": "2019-04-06 10:25:04",
                "index": 11,
                "user": "tonisostrat"
            },
            {
                "id": "5ca87f1993fb4a7dc2e268ef",
                "text": "Got it! Thanks :)",
                "time": "2019-04-06 10:27:37",
                "index": 12,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca87f5cb34ccd69e7729e7a",
                "text": "you can obviously play around with it some more but it basically boils down to the fact that you need a base object that *only* accepts an ID and as long as your data classes extend from it you can set an instance of that base class as the reference without worrying about all the other data.\n\nthis obviously depedns on *how* you store those references because this will need more work if that reference ID doesn't exist.. but as long as it does this should work.",
                "time": "2019-04-06 10:28:44",
                "index": 13,
                "user": "tonisostrat"
            },
            {
                "id": "5ca880570aad635019394fd9",
                "text": "Yeah, I got the idea :) Thanks a lot @tonisostrat ",
                "time": "2019-04-06 10:32:55",
                "index": 14,
                "user": "kevin-madhu"
            },
            {
                "id": "5ca8813b31aec969e85ecc20",
                "text": "no worries",
                "time": "2019-04-06 10:36:43",
                "index": 15,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 591,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bed11d421387234050c28b3",
                "text": "How are you supposed to construct a `Location` header in a controller that points back to this URL + an ID? I tried injecting a `UriComponentsBuilder` in my controller method but it seems like that it doesn't pick up the methods path\n```\n@PostMapping\n    fun addRule(@RequestBody rule: Rule, uriComponentsBuilder: UriComponentsBuilder): Mono<ResponseEntity<Rule>> = \u2026\n```\nI then try to return something along\n```\nResponseEntity.created(uriComponentsBuilder.pathSegment(myId)\u2026)\n```\nwhich is missing the `@RequestMapping` of the class :-(",
                "time": "2018-11-15 06:27:32",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5bed11ed6b9822140d3172a4",
                "text": "Is this even the way to go? Doesn't it work using webflux?",
                "time": "2018-11-15 06:27:57",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5bed182e21387234050c50aa",
                "text": "@kschlesselmann I don't think we've got something like `MvcUriComponentsBuilder` in WebFlux, nor if we should. Maybe open an enhancement request on jira.spring.io?",
                "time": "2018-11-15 06:54:38",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5bed1b2f4e7ca14520aa978d",
                "text": "@bclozel Why don't you think we should have something like that?",
                "time": "2018-11-15 07:07:27",
                "index": 4,
                "user": "kschlesselmann"
            },
            {
                "id": "5bed6c92bb06d73a997a6aa0",
                "text": "@kschlesselmann I don't know yet - not all MVC concepts directly map to WebFlux",
                "time": "2018-11-15 12:54:42",
                "index": 31,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 592,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5be57d8e2138723405dd0e06",
                "text": "i\u2019m experimenting with this: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html#boot-features-external-config-3rd-party-configuration\n\nbut it tells me @Bean is disallowed at the class declaration :-/",
                "time": "2018-11-09 12:29:02",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be57e0a92b7d1172160bc0f",
                "text": "custom properties",
                "time": "2018-11-09 12:31:06",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be57e0e9600d10e648227f1",
                "text": "```\n@ConfigurationProperties(prefix = \"another\")\n@Bean\npublic AnotherComponent anotherComponent() {\n\t\u2026\n}\n\n```",
                "time": "2018-11-09 12:31:10",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be57e162138723405dd1110",
                "text": "Bean is disallowed",
                "time": "2018-11-09 12:31:18",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be5844e6b9822140d02ee39",
                "text": "@chad_d_stud_twitter The documentation you've linked to says \"you can also use it on public `@Bean` methods\". If you're in a position to modify the class, then it isn't third-party configuration",
                "time": "2018-11-09 12:57:50",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5be584bd6b9822140d02f163",
                "text": "Is this the documentation so that i wont\u2019 get warnings of unknown properties file in spring IDE?\n",
                "time": "2018-11-09 12:59:41",
                "index": 8,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be587b84e7ca145207b6f7f",
                "text": "@chad_d_stud_twitter It's `spring-boot-configuration-processor` that produces the configuration property metadata. That metadata is what's used by your IDE to offer auto-completion for properties and to warn about unknown properties. You can learn more about how to use it [in the documentation](https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#configuration-metadata-annotation-processor).",
                "time": "2018-11-09 13:12:24",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5be587e0c0e6da07fefc2421",
                "text": "thanks",
                "time": "2018-11-09 13:13:04",
                "index": 12,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be589e47326df140edc0989",
                "text": "@wilkinsona after defining a key in my custom properties class do i need to do a refresh/recompile?",
                "time": "2018-11-09 13:21:40",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be589e9bb88787474a0ba41",
                "text": "i\u2019m still seeing yellow though",
                "time": "2018-11-09 13:21:45",
                "index": 14,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be58a177a36913a9a16bdd2",
                "text": "By the way, i\u2019m currently just using the spring plugin on an eclipse 2018-08 install",
                "time": "2018-11-09 13:22:31",
                "index": 15,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be58a1e3102f1452174fb88",
                "text": "haven\u2019t tried the STS yet",
                "time": "2018-11-09 13:22:38",
                "index": 16,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5be58eec92b7d117216134b1",
                "text": "@chad_d_stud_twitter You'll need to trigger the annotation processor. I'm not sure when/if Eclipse will do that",
                "time": "2018-11-09 13:43:08",
                "index": 18,
                "user": "wilkinsona"
            },
            {
                "id": "5be591ce3102f14521753606",
                "text": "okay this is alit tricky. i needed to add the spring annoation processor to the eclipse project -_-",
                "time": "2018-11-09 13:55:26",
                "index": 19,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 593,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd2bcc350010612b2df58cd",
                "text": "Hello! I have an issue with `@SpringBootTest` integration tests: right after the tests have passed, I get this exception:\n```\n227490 [INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 34.2 s - in it.axians.service.vaadin.incident.IncidentIntegrationTest\n2019-11-18 15:38:55.501  INFO 764 --- [extShutdownHook] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'taskScheduler'\n2019-11-18 15:38:55.503  INFO 764 --- [        webpack] dev-webpack                              : \u001b[38;5;35mStopped 'webpack-dev-server'\u001b[0m\n2019-11-18 15:38:55.505  INFO 764 --- [extShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'\n2019-11-18 15:38:55.515  INFO 764 --- [extShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'\n2019-11-18 15:38:55.520  INFO 764 --- [extShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...\n2019-11-18 15:38:55.528  INFO 764 --- [extShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.\n2019-11-18 15:38:55.554 ERROR 764 --- [extShutdownHook] c.v.flow.server.DefaultErrorHandler      : \n\norg.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is java.lang.IllegalStateException: EntityManagerFactory is closed\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:448)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:376)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:572)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:360)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)\n\tat it.axians.security.service.user.session.UserSessionService$$EnhancerBySpringCGLIB$$4595d23b.destroySession(<generated>)\n\tat it.axians.security.vaadin.user.session.UserSessionListener.sessionDestroy(UserSessionListener.java:130)\n\t...\nCaused by: java.lang.IllegalStateException: EntityManagerFactory is closed\n\tat org.hibernate.internal.SessionFactoryImpl.validateNotClosed(SessionFactoryImpl.java:529)\n\tat org.hibernate.internal.SessionFactoryImpl.createEntityManager(SessionFactoryImpl.java:608)\n\tat org.hibernate.internal.SessionFactoryImpl.createEntityManager(SessionFactoryImpl.java:160)\n\tat org.springframework.orm.jpa.JpaTransactionManager.createEntityManagerForTransaction(JpaTransactionManager.java:466)\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:391)\n\t... 51 common frames omitted\n```",
                "time": "2019-11-18 15:46:11",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5dd2bd1c091dd14a0ee1a81c",
                "text": "I guess this is beacuase the context is destroyed but my class `UserSessionListener` invokes its `sessionDestroy` method when the servlet session is destroyed, which is correct, but at that moment it finds an already closed `EntityManagerFactory`. How can I instruct the test not to close the EMF before the test is ended?",
                "time": "2019-11-18 15:47:40",
                "index": 1,
                "user": "heruan"
            },
            {
                "id": "5dd2c21135889012b12f36ab",
                "text": "I think you'd get this same exception if you started shutdown of your app with requests in flight.",
                "time": "2019-11-18 16:08:49",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5dd2c22068ad1c4a0fec3e79",
                "text": "i.e. it's a genuine bug in your lifecycle management",
                "time": "2019-11-18 16:09:04",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5dd2c2ae50010612b2df8b1c",
                "text": "Interesting, it could be. The requests are from Selenium\u2019s `ChromeDriver`, which I close in an `@AfterEach` method, so I guess Spring shouldn\u2019t have initiated context shutdown at that time.",
                "time": "2019-11-18 16:11:26",
                "index": 4,
                "user": "heruan"
            },
            {
                "id": "5dd2c31eca778c1fbf271b09",
                "text": "or you've got a `@Transactional` in the wrong place somewhere",
                "time": "2019-11-18 16:13:18",
                "index": 5,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 594,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c2f42550b7fc97caae8a866",
                "text": "Hi all.. I have 1.5.x Boot application based on thymeleaf starter.. thymeleaf starter pulls in `org.thymeleaf:thymeleaf-spring4:2.1.6.RELEASE`.. will there be any problem if I change it to `3.0.11.RELEASE`?",
                "time": "2019-01-04 11:24:05",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5c2f455bdb5b5c688354c8b4",
                "text": "@pmihalcin it should work: https://github.com/spring-projects/spring-boot/issues/4393#issuecomment-232196954",
                "time": "2019-01-04 11:36:59",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5c2f45c58d31aa78b1468136",
                "text": "@PaddaelsM I assume you're seeing a difference if you're asking this question. The should be equivalent; maybe the the bean name is different and that can cause a problem in your particular case?",
                "time": "2019-01-04 11:38:45",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5c2f46678dafa715c73e4984",
                "text": "@bclozel thanks!",
                "time": "2019-01-04 11:41:27",
                "index": 3,
                "user": "pmihalcin"
            }
        ]
    },
    {
        "id": 595,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5dfb5b7044e1fb33f6f1c7d4",
                "text": "Hello there, Anyone there who can teach me markdown fromate integration into spring-boot using thyemeleaf",
                "time": "2019-12-19 11:13:52",
                "index": 0,
                "user": "Swpnlcht31"
            },
            {
                "id": "5dfb5e0544e1fb33f6f1d5ec",
                "text": "@Swpnlcht31 nothing to do with Spring Boot, but see https://github.com/thymeleaf/thymeleaf/issues/439",
                "time": "2019-12-19 11:24:53",
                "index": 1,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 596,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e30138b40da694c5edd9d33",
                "text": "hello any idea plz how can i call this method using post man ",
                "time": "2020-01-28 10:57:15",
                "index": 0,
                "user": "zoumhane"
            },
            {
                "id": "5e30138ef301780b833a40b9",
                "text": "    @RequestMapping(value = \"/{id}/getImage\", produces = { \"image/tiff\" }, method = RequestMethod.POST)\n",
                "time": "2020-01-28 10:57:18",
                "index": 1,
                "user": "zoumhane"
            },
            {
                "id": "5e30141de8a8383559ea2b01",
                "text": "the error i get ->  HttpMediaTypeNotAcceptableException: Could not find acceptable representation",
                "time": "2020-01-28 10:59:41",
                "index": 2,
                "user": "zoumhane"
            },
            {
                "id": "5e3015526f9d3d3498f233f6",
                "text": "@zoumhane you should provide header ```Accept: image/tiff``` in request",
                "time": "2020-01-28 11:04:50",
                "index": 4,
                "user": "boda2004"
            },
            {
                "id": "5e301802fe0e6f74e9d40fd7",
                "text": "how can i do it using post man plz @boda2004 ",
                "time": "2020-01-28 11:16:18",
                "index": 5,
                "user": "zoumhane"
            },
            {
                "id": "5e30184058f02e349735be1d",
                "text": "i already do it by checking the first checkbox in the ligne",
                "time": "2020-01-28 11:17:20",
                "index": 6,
                "user": "zoumhane"
            },
            {
                "id": "5e301847bfe65274eab06a2a",
                "text": "lmgfy https://learning.getpostman.com/docs/postman/sending-api-requests/requests/#configuring-request-headers",
                "time": "2020-01-28 11:17:27",
                "index": 7,
                "user": "boda2004"
            }
        ]
    },
    {
        "id": 597,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e25ae73000f4978992c4f57",
                "text": "Can anyone please help me how to serve static pages from outside the jar in spring boot ?",
                "time": "2020-01-20 13:43:15",
                "index": 0,
                "user": "YogeshPat3l_gitlab"
            },
            {
                "id": "5e25af6c8e073f465f242aa3",
                "text": "@YogeshPat3l_gitlab http://<server>:<port>/<static-resource>",
                "time": "2020-01-20 13:47:24",
                "index": 1,
                "user": "bvn13"
            },
            {
                "id": "5e25afe40289c83ba2ce3072",
                "text": "@bvn13 This works if the static content is within the jar itself in any of the following paths\n\n \"classpath:/META-INF/resources/\",\n\t\t\t\"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\" ",
                "time": "2020-01-20 13:49:24",
                "index": 2,
                "user": "YogeshPat3l_gitlab"
            },
            {
                "id": "5e25b0105b81ab262e5bb37a",
                "text": "@bvn13 What I want is to put all the static pages outside the jar",
                "time": "2020-01-20 13:50:08",
                "index": 3,
                "user": "YogeshPat3l_gitlab"
            },
            {
                "id": "5e25b2763ea53f0f6657a154",
                "text": "@YogeshPat3l_gitlab https://spring.io/blog/2013/12/19/serving-static-web-content-with-spring-boot :\n```\nSpring Boot will automatically add static web resources located within any of the following directories:\n\n    /META-INF/resources/\n    /resources/\n    /static/\n    /public/\n```",
                "time": "2020-01-20 14:00:22",
                "index": 4,
                "user": "bvn13"
            },
            {
                "id": "5e25b2a90289c83ba2ce45f9",
                "text": "but https://www.baeldung.com/spring-mvc-static-resources -> p.3 ",
                "time": "2020-01-20 14:01:13",
                "index": 5,
                "user": "bvn13"
            },
            {
                "id": "5e25b2c5ad195a0f673f50f8",
                "text": "```\n@Override\npublic void addResourceHandlers(ResourceHandlerRegistry registry) {\n    registry\n      .addResourceHandler(\"/files/**\")\n      .addResourceLocations(\"file:/opt/files/\");\n }\n```",
                "time": "2020-01-20 14:01:41",
                "index": 6,
                "user": "bvn13"
            },
            {
                "id": "5e25b2d60dbd9379ed6b0d20",
                "text": "hope it helps you",
                "time": "2020-01-20 14:01:58",
                "index": 7,
                "user": "bvn13"
            }
        ]
    },
    {
        "id": 598,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ee9db140c34bc5cccb09d55",
                "text": "Hi. I just lost half of my hair debugging a problem for an hour :-). Not sure if it's a known problem in Spring or if I just found a new issue:\n```\n@Configuration\npublic class SomeConfig {\n    @Bean(name = \"other\")\n    SomeOtherBean foo() {\n        System.out.println(\"constructing SomeOtherBean\");\n        return new SomeOtherBean();\n    }\n\n    @Bean(name = \"foo\")\n    SomeBean foo(@Qualifier(\"other\") SomeOtherBean other) {\n        System.out.println(\"constructing SomeBean\");\n        return new SomeBean(other);\n    }\n}\n```\nWith the above configuration class, SomeOtherBean is constructed twice, and SomeBean is never constructed. Why? Because the two methods have the same name. If you rename the second method to `bar`, everything is constructed once, as expected. Should I submit an issue? (Admittedly, using the same method name is not a good idea. I just happened to have done it by accident)",
                "time": "2020-06-17 08:57:56",
                "index": 0,
                "user": "jnizet"
            },
            {
                "id": "5ee9dc8f3ca1e1625e851f6f",
                "text": "@jnizet Sorry for the frustration. I can't see why it wouldn't be technically possible for your configuration to create two beans named `other` and `foo`. If you hadn't used the `name` attribute on `@Bean` then there would be two beans with the same name. One bean would then have to override the other (assuming overriding is enabled), Framework would have to pick one in a predictable way, or it ought to fail.\n\nI think it would be worth a Framework issue. It may just be a documentation change or perhaps a change in behaviour. There is some mention of overloaded `@Bean` methods in [the documentation](https://docs.spring.io/spring-framework/docs/5.2.x/spring-framework-reference/core.html#beans-definition-profiles-java) but it's in a section about `@Profile` which doesn't apply here.\n\n",
                "time": "2020-06-17 09:04:15",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ee9ddb70c34bc5cccb0a406",
                "text": "Thanks @wilkinsona . No need to be sorry at all :-). That was my mistake that caused the fair loss.",
                "time": "2020-06-17 09:09:11",
                "index": 2,
                "user": "jnizet"
            },
            {
                "id": "5ee9e04db9b43009958551dd",
                "text": "I submitted an issue: https://github.com/spring-projects/spring-framework/issues/25263",
                "time": "2020-06-17 09:20:13",
                "index": 4,
                "user": "jnizet"
            }
        ]
    },
    {
        "id": 599,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5df16b620dc628523e1c9bcb",
                "text": "@wilkinsona in https://github.com/spring-projects/spring-boot/issues/19350 you mentioned that you have liquibase smoke tests and that it is working on Java 11. That got me thinking and I noticed that spring-boot-starter-test there is the `jakarta.xml.bind:jakarta.xml.bind-api` dependency. I traced that change to https://github.com/spring-projects/spring-boot/commit/d6a869fa98eaeb3c180a8a3d94dcce8e3f51e204 and it seems like `org.xmlunit:xmlunit-core` needs it and it makes sense. However, this means that it is possible that a dependency which you manage does not work properly on Java 11 and you won't catch it with your smoke tests. In this case it is Liquibase (which is their own mistake I agree). What is your opinion about this? Is the goal that the Boot team provides managed dependencies that work on Java 11, or not? Trying to understand all of this so I know more for the future",
                "time": "2019-12-11 22:19:14",
                "index": 0,
                "user": "filiphr"
            },
            {
                "id": "5df20558e7265623012e323c",
                "text": "@filiphr You should expect that you may have to add some dependencies to get things to work with Java 11, hence the entry on the wiki that I linked to yesterday. We've decided that we don't want to bloat the dependencies for those using Java 8 just to get things working on Java 11.",
                "time": "2019-12-12 09:16:08",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 600,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eb00a219f0c955d7da2abad",
                "text": "OK, seemingly simple question, but apparently my google skills fails me. I a string containing Json, i.e. something like this `String foo = \"{\\\"foo\\\": \\\"bar\\\"}\"`. How do I make a controller return this as pure json, without trying to wrap the entire thing in quotes first? (The endpoint gives `\"{\\\"foo\\\": \\\"bar\\\"}\"`, I want it to give `{\"foo\": \"bar\"}` )",
                "time": "2020-05-04 12:27:13",
                "index": 0,
                "user": "rfftrifork"
            },
            {
                "id": "5eb00a6231a6d25d7caa2f15",
                "text": "(it's from a static resource if that makes it easier)",
                "time": "2020-05-04 12:28:18",
                "index": 1,
                "user": "rfftrifork"
            },
            {
                "id": "5eb02ee93d58de7a38f3b9cb",
                "text": "@rfftrifork simplest way is write to a response argument",
                "time": "2020-05-04 15:04:09",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5eb02f02b6dd230697a54be5",
                "text": "but if it's static, why is it not just a .json file in the resources?",
                "time": "2020-05-04 15:04:34",
                "index": 6,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 601,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be2ff4a3102f14521649e17",
                "text": "Hello. I have some `@WebMvcTest` reps. `@WebFluxTest` with a controller I needed only in the test, see https://github.com/faucet-pipeline/faucet-pipeline-spring-boot-starter/blob/master/faucet-pipeline-spring-boot-autoconfigure/src/test/java/org/faucet_pipeline/spring/autoconfigure/WebMvcIntegrationTest.java#L63-L69 \n\nthat worked with Spring Boot 2.0.x, but the controller-bean isn't recognized any more with 2.1.\n\nIt's no big issue, I know how to replace this, but just curious: Did that work by coincidence? Or is it broken now.",
                "time": "2018-11-07 15:05:46",
                "index": 0,
                "user": "michael-simons"
            },
            {
                "id": "5be2ffd46b9822140df2fad3",
                "text": "It\u2019s a change in Spring Framework 5.1. Such nested class are not detected anymore unless flagged explicitly (kind of a weird use case, this should be a `@Configuration` that contributes the controller)",
                "time": "2018-11-07 15:08:04",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5be2fff46b9822140df2fb73",
                "text": "An `@Import` on the controller should work I guess",
                "time": "2018-11-07 15:08:36",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5be3002a9600d10e64726031",
                "text": "Thanks. I removed it already and explicit instantiate it in the config class above it.",
                "time": "2018-11-07 15:09:30",
                "index": 3,
                "user": "michael-simons"
            },
            {
                "id": "5be300daf1b87534048c5480",
                "text": ":wave:  ",
                "time": "2018-11-07 15:12:26",
                "index": 4,
                "user": "michael-simons"
            }
        ]
    },
    {
        "id": 602,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ce6a66dad024978c6165121",
                "text": "Essentially I'm wondering what approach would be recommended for the following use case. I have a set of Microservices that require to use a dependency (spring-cloud-sleuth) and each would require to individually set the same set of parameters in my application.yml for each. The desire to abstract this out into its own dependency/module/etc that would make use the of spring-cloud-sleuth dependency, set the necessary parameters in the application.yml, and then insert that newly create package/module/etc into each Microservices as a dependency via the Maven POM file so that I wouldn't need to set each Microservice's application.yml with identical entries. I'm still somewhat new to spring-boot, but after extensive research I couldn't really find a similar use case (or at least I didn't know what terminology to use to properly find it). ",
                "time": "2019-05-23 13:55:57",
                "index": 0,
                "user": "tatumalenko"
            },
            {
                "id": "5ce6ab3883ae782aeeb99019",
                "text": "@tatumalenko, that sounds like the perfect approach for that specific set of circumstances. you have a \"module\" dependency that can configure everything and you just tack it on to any service you want.",
                "time": "2019-05-23 14:16:24",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5ce6ae31ef853135c80d91c6",
                "text": "Thanks. My only concern is that I tried to approach it that way, but I couldn't find a way such that the application.yml in each Microservice can inherit from the POM dependency module's application.yml. ",
                "time": "2019-05-23 14:29:05",
                "index": 3,
                "user": "tatumalenko"
            }
        ]
    },
    {
        "id": 603,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ced54f49d64e537bc2772bd",
                "text": "Hi All, I am implementing elasticsearch in springboot. And I am stuck at how to add the cluster name in the RestHighLevelClient . I checked the documentation, and didn't got anything useful.  \n\n```\n@Bean(destroyMethod = \"close\")\n    public RestHighLevelClient client() {\n\n    \tRestHighLevelClient restClient = new RestHighLevelClient(RestClient.builder(new HttpHost(\"127.0.0.1\", 9200, \"http\")));  \n        \n        return restClient;\n    }\n```\n\nI am not sure, how do I add the cluster name in the client.  I am trying with the Settings though, but there is no such method in the RestHighLevelClient to include the cluster name\n\n```\nSettings esSettings = Settings.builder().put(\"cluster.name\", clusterName)\n                .build();\n```\n\n",
                "time": "2019-05-28 15:34:12",
                "index": 0,
                "user": "vikpandey"
            },
            {
                "id": "5ced684e6366992a9438f810",
                "text": "@vikpandey If you're using Spring Boot 2.1.x+, you can just use a configuration property to set up a REST client; see https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-nosql.html#boot-features-connecting-to-elasticsearch-rest",
                "time": "2019-05-28 16:56:46",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5ced6867879f4478c7f9170c",
                "text": "I believe the cluster name is only useful for the native transport, so it doesn't apply to the REST client",
                "time": "2019-05-28 16:57:11",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5ced72bd5de053468bd3bb54",
                "text": "@bclozel  thanks. I will try this ",
                "time": "2019-05-28 17:41:17",
                "index": 3,
                "user": "vikpandey"
            }
        ]
    },
    {
        "id": 604,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ebd57b170997963d5583097",
                "text": "Hi, I want to use a java 14 record to hold Spring configuration properties. This works fine:\n\n```\n@ConfigurationProperties(prefix = \"myprops\")\n@ConstructorBinding\npublic record MyProps(String baseUrl) {}\n```\nBut when I want to add validation like this, it fails:\n\n```\n@ConfigurationProperties(prefix = \"myprops\")\n@ConstructorBinding\n@Validated\npublic record MyProps(@NotBlank String baseUrl) {}\n```\n\nThe error message says \"Could not generate CGLIB subclass of class <> :Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Cannot subclass final class <>\" - which makes sense as records are final. Is there any way to work around this? Other than manually validating in the record constructor?\n\nI'm using Spring Boot 2.2.7.RELEASE",
                "time": "2020-05-14 14:37:37",
                "index": 0,
                "user": "philipp-paland_gitlab"
            },
            {
                "id": "5ebd6eb6ecc55a312d01e030",
                "text": "@philipp-paland_gitlab It's a shame that it doesn't work as we don't use a proxy for configuration property validation. You can see the validation in action if you don't provide a `myprops.baseUrl` property. It'll then fail before Framework's general validation support tries to create the proxy.",
                "time": "2020-05-14 16:15:50",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ebd700220d9bf3057654c24",
                "text": "You can strike a bit of a balance if you disable the validation auto-configuration and just declare a validator instead:\n\n```\npackage com.example.recordvalidation;\n\nimport javax.validation.constraints.NotBlank;\nimport org.springframework.beans.factory.config.BeanDefinition;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.ConfigurationPropertiesScan;\nimport org.springframework.boot.context.properties.ConstructorBinding;\nimport org.springframework.boot.validation.MessageInterpolatorFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Role;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;\n\n@ConfigurationPropertiesScan\n@SpringBootApplication(exclude = org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration.class)\npublic class RecordValidationApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(RecordValidationApplication.class, args);\n\t}\n\n\t@Bean\n\t@Role(BeanDefinition.ROLE_INFRASTRUCTURE)\n\tpublic static LocalValidatorFactoryBean defaultValidator() {\n\t\tLocalValidatorFactoryBean factoryBean = new LocalValidatorFactoryBean();\n\t\tMessageInterpolatorFactory interpolatorFactory = new MessageInterpolatorFactory();\n\t\tfactoryBean.setMessageInterpolator(interpolatorFactory.getObject());\n\t\treturn factoryBean;\n\t}\n\n\t@ConfigurationProperties(prefix = \"myprops\")\n\t@ConstructorBinding\n\t@Validated\n\tpublic record MyProps(@NotBlank String baseUrl) {}\n\n}\n```",
                "time": "2020-05-14 16:21:22",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ebd71ae0abb6d4e87f55882",
                "text": "I've opened https://github.com/spring-projects/spring-boot/issues/21454 to see if we can come up with something better",
                "time": "2020-05-14 16:28:30",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5ebda06eda74582e921c4098",
                "text": "Yes, I noticed that it does the validation itself correctly. Will try your suggestion tomorrow :) Thanks!",
                "time": "2020-05-14 19:47:58",
                "index": 5,
                "user": "philipp-paland_gitlab"
            }
        ]
    },
    {
        "id": 605,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bccd7751c100a4f29c0fcd1",
                "text": "Hi everyone, I'm usign Intellij as IDE,  how can I  create MAVEN SPRING no boot project? can someone show me the way please",
                "time": "2018-10-21 19:45:57",
                "index": 0,
                "user": "carrowheap"
            },
            {
                "id": "5bccee4def4afc4f28ae38a2",
                "text": "Spring Initializr only available in ultime version.",
                "time": "2018-10-21 21:23:25",
                "index": 1,
                "user": "mskoroglu"
            },
            {
                "id": "5bccee7b435c2a518ee32568",
                "text": "go to start.spring.io and download zip and open ex pom.xml in ide",
                "time": "2018-10-21 21:24:11",
                "index": 2,
                "user": "koakh"
            },
            {
                "id": "5bccf03182893a2f3b1ad87e",
                "text": "@koakh ,  @mskoroglu  thanks",
                "time": "2018-10-21 21:31:29",
                "index": 3,
                "user": "carrowheap"
            },
            {
                "id": "5bccf0683844923661779d4e",
                "text": "I always us start.spring.io, it great, and works everywhere, ex console, ides etc, and we keep the zip untoutched too :)",
                "time": "2018-10-21 21:32:24",
                "index": 4,
                "user": "koakh"
            }
        ]
    },
    {
        "id": 606,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf425abddad8777ef93c957",
                "text": "org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'uiApplication': Unsatisfied dependency expressed through field 'userUserService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userUserServiceImpl': Unsatisfied dependency expressed through field 'userUserRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userUserRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query method public abstract org.life.entity.UserUser org.life.service.UserUserServiceCustom.createOrUpdate(org.life.entity.UserUser)! No property create found for type UserUser!",
                "time": "2018-11-20 15:18:03",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf4268c6183a977eee8d738",
                "text": "@DoraRajappan I guess you're look for some help with that exception message? Just the message doesn't tell people very much and doesn't make it easy for people to help. Perhaps you can provide a bit of context about your app and what you're trying to do that is currently not working?",
                "time": "2018-11-20 15:21:48",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bf426b72ef5b06e4097a18b",
                "text": "@DoraRajappan reminder of wrapping things to make them more readable as well please (wrap with ```) ",
                "time": "2018-11-20 15:22:31",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bf426f680652945c390bf89",
                "text": "I need to have a  criteria query to  implement search and I craeted a Custom interface that has the search method.",
                "time": "2018-11-20 15:23:34",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf4278e80652945c390c3a1",
                "text": "```\npublic interface UserUserServiceCustom {\n\tUserUser createOrUpdate(UserUser userUser);\n\n\tvoid remove(UserUser user);\n\n\tUserUser find(Object id);\n\n\t\n\t\n\tpublic List<UserRelation> getUserRelations(long id, long domainId,\n\t\t\tString relation) ;\n\n}\n\n\n```",
                "time": "2018-11-20 15:26:06",
                "index": 8,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf427abb86c70503f5ed489",
                "text": "getUserRelations is the search method",
                "time": "2018-11-20 15:26:35",
                "index": 10,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf427d91ad4155d3af4e5f7",
                "text": "@DoraRajappan just to make your error more readable \n```\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'uiApplication': Unsatisfied dependency expressed through field 'userUserService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userUserServiceImpl': Unsatisfied dependency expressed through field 'userUserRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userUserRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query method public abstract org.life.entity.UserUser org.life.service.UserUserServiceCustom.createOrUpdate(org.life.entity.UserUser)! No property create found for type UserUser!\n```",
                "time": "2018-11-20 15:27:21",
                "index": 11,
                "user": "chermehdi"
            },
            {
                "id": "5bf428051665691e0fd366d0",
                "text": "``` org.life.service.UserUserServiceCustom.createOrUpdate(org.life.entity.UserUser)! No property create found for type UserUser!",
                "time": "2018-11-20 15:28:05",
                "index": 12,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf42838a47c6c5d3b16d856",
                "text": "```\n org.life.service.UserUserServiceCustom.createOrUpdate(org.life.entity.UserUser)! No property create found for type UserUser!\n\n```",
                "time": "2018-11-20 15:28:56",
                "index": 13,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf429494f4bb579f3a7423e",
                "text": "```\n Error creating bean with name 'uiApplication': Unsatisfied dependency expressed through field 'userUserService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userUserServiceImpl': Unsatisfied dependency expressed through field 'userUserRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userUserRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query method public abstract org.life.entity.UserUser org.life.service.UserUserServiceCustom.createOrUpdate(org.life.entity.UserUser)! No property create found for type UserUser!\n```\n",
                "time": "2018-11-20 15:33:29",
                "index": 15,
                "user": "DoraRajappan"
            },
            {
                "id": "5bf42a4d2ef5b06e4097ba38",
                "text": "@DoraRajappan On the face of it, that looks like a problem with your query method. That could either be because your method name doesn't match the properties of the entity, or that you've defined a custom `@Query` annotation and it doesn't match the entity. I can't tell which of those it might be as you haven't provided enough information. I think you'd probably be best asking in the spring-projects/spring-data channel and providing some more information about all the pieces that are involved.",
                "time": "2018-11-20 15:37:49",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5bf42a9a1665691e0fd37cad",
                "text": "thank you very much @wilkinsona ",
                "time": "2018-11-20 15:39:06",
                "index": 18,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 607,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c759576212d0c1e1a9e3238",
                "text": "Question - what are the \"informal\" rules on AutoConfiguration vs. Configuration classes?  My questions are:\n\n1) Can an AutoConfiguration use the @Import in combination with a @ConditionalOn (without a selector)?  It seems that even if I have a conditional annotation the import is pulled in (this seems to be the case with protected static inner classes in my autoconfigurations).\n\n2) I've seen examples where use of the @ConditionalOn is scattered across auto configurations and regular configurations, what are the best practices to it?  I have a separate jar, in a separate package, that contains all my AutoConfigurations and try to keep use of any @ConditionalOn's there.  My standard configurations just straight up setup beans.",
                "time": "2019-02-26 19:37:26",
                "index": 0,
                "user": "kjq"
            },
            {
                "id": "5c764561d2d62067b7138325",
                "text": "@kjq I didn\u2019t understand the first question. A sample would be helpful. FTR inner classes are always considered no need to `@Import` them",
                "time": "2019-02-27 08:08:01",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5c7645ba65ffa019ea59610e",
                "text": "Condition is a general framework feature. In general, we recommend to use Spring Boot\u2019s condition implementations on auto-configuration classes only (as we process them and we can tell you what bean or c onfiguration class was rejected). There are certain conditions (such as `@ConditionalOnMissingBean` that must only be used on auto-configurations given the nature of how they\u2019re handled)",
                "time": "2019-02-27 08:09:30",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5c768b50212d0c1e1aa46ea4",
                "text": "@snicoll - here is a somewhat contrived example below.  Basically, we have \"AutoConfigurations\" that have inner classes usually based on conditionals for what we consider support, usually thirdparty stuff like Mongo, CXF, Ignite.  These are maintained in an \"autoconfigurations\" package.  Within that package, as you can see from the example, it may do more than just inject @Beans.  It may @Import a configuration conditionally.  Reason we do it this way is to try and pattern how people create configurations.  Outside of Autoconfigs we generally do not use any @Conditional statements.\n```\n@Slf4j\n@Configuration\n@Import(ProjectServiceConfiguration.class)\npublic class SparksProjectAutoConfiguration\n{\n    @Configuration\n    @ConditionalOnClass(Mongo.class)\n    @Import(MongoProjectConfiguration.class)\n    protected static class MongoConfiguration\n    {\n    }\n}\n```",
                "time": "2019-02-27 13:06:24",
                "index": 23,
                "user": "kjq"
            },
            {
                "id": "5c768bd45015f21e196a852f",
                "text": "@snicoll - I guess what i find confusing or have not been able to really pinpoint is how the @Imports work with a @Conditional.  An example I have tried to use as an example is the way CXF does it:\n```\n    @Configuration\n    @ConditionalOnClass(JAXRSServerFactoryBean.class)\n    @ConditionalOnExpression(\"'${cxf.jaxrs.component-scan}'=='true' && '${cxf.jaxrs.classes-scan}'!='true'\")\n    @ConditionalOnMissingBean(Server.class)\n    @Import(SpringComponentScanServer.class)\n    protected static class JaxRsComponentConfiguration {\n\n    }\n```",
                "time": "2019-02-27 13:08:36",
                "index": 24,
                "user": "kjq"
            },
            {
                "id": "5c768c00c1cab53d6f48cc66",
                "text": "what about it? If the condition does not match, import won\u2019t be processed",
                "time": "2019-02-27 13:09:20",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5c768c85212d0c1e1aa47859",
                "text": "1) It seemed like my import was getting processed but i can double check in a test.  2) The question is if this is a valid approach - keeping all conditionals in autoconfig only and leaving standard configurations as-is with just @bean primarily.",
                "time": "2019-02-27 13:11:33",
                "index": 26,
                "user": "kjq"
            },
            {
                "id": "5c768ca4c1cab53d6f48d279",
                "text": "Regarding 1) it seemed like what was in the class was not getting processed but the import was - ill verify this.",
                "time": "2019-02-27 13:12:04",
                "index": 27,
                "user": "kjq"
            },
            {
                "id": "5c768cd0e1446a6ebe543078",
                "text": "The first example is sub-optimal. You should move the class condition on `MongoProjectConfiguration` if you can",
                "time": "2019-02-27 13:12:48",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5c768ce2e8ea143737833281",
                "text": "i.e. as close as where it is actually used.",
                "time": "2019-02-27 13:13:06",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5c768cef5015f21e196a8d94",
                "text": "You mean the @COnditionalOnClass?",
                "time": "2019-02-27 13:13:19",
                "index": 30,
                "user": "kjq"
            },
            {
                "id": "5c768cf80966d91204f457f8",
                "text": "the class condition, yes",
                "time": "2019-02-27 13:13:28",
                "index": 31,
                "user": "snicoll"
            },
            {
                "id": "5c768d482ca5ec54744b1e90",
                "text": "That goes back then to my question - is is considered good practice to mix and match these @Conditionals?  I see what you are saying but for us right now the @Configurations are non-conditional and we only have those @Conditionals in autoconfigs.",
                "time": "2019-02-27 13:14:48",
                "index": 32,
                "user": "kjq"
            },
            {
                "id": "5c768d5bb1503b3d704fd671",
                "text": "I don\u2019t understand the question really",
                "time": "2019-02-27 13:15:07",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5c768d5e35c013075348435c",
                "text": "The @Conditionals, excluding OnBean / onMissingBean, get processed normally?",
                "time": "2019-02-27 13:15:10",
                "index": 34,
                "user": "kjq"
            },
            {
                "id": "5c768d6c8a7def0752e5a4dc",
                "text": "I already mentioned where those should be used above",
                "time": "2019-02-27 13:15:24",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5c768da34a65f7547336a6ca",
                "text": "The question is what is the proper way to use @Conditionals.  Scatter them across all your configurations or centralize them only in the AutoConfiguration.  There is a difference between the AutoConfiguration and our regular set of Spring modules.  Can @Conditional be applied on any configuration and it does not need Spring boot to process it?",
                "time": "2019-02-27 13:16:19",
                "index": 36,
                "user": "kjq"
            },
            {
                "id": "5c768dba0966d91204f45ce3",
                "text": "I think I already answered that question",
                "time": "2019-02-27 13:16:42",
                "index": 37,
                "user": "snicoll"
            },
            {
                "id": "5c768dcf608c6f373630f6c9",
                "text": "Use them on auto-configurations",
                "time": "2019-02-27 13:17:03",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5c768e125015f21e196a9625",
                "text": "You seem to draw a hard line on something that\u2019s called `AutoConfiguration`. A `Configuration` class you import as part of an auto-configuration is a by-product and part of this",
                "time": "2019-02-27 13:18:10",
                "index": 39,
                "user": "snicoll"
            },
            {
                "id": "5c768e2135c01307534848a8",
                "text": "What do you consider the difference between an \"autoconfiguration\" and a regular \"configuration?\"  We have a package that contains the \"auto\" @Configurations - in a way that assembles our modules, regular @Configurations.",
                "time": "2019-02-27 13:18:25",
                "index": 40,
                "user": "kjq"
            },
            {
                "id": "5c768e2de1446a6ebe543aad",
                "text": "I just replied to that",
                "time": "2019-02-27 13:18:37",
                "index": 41,
                "user": "snicoll"
            },
            {
                "id": "5c768e3865ffa019ea5b4e5d",
                "text": "I see that. ",
                "time": "2019-02-27 13:18:48",
                "index": 42,
                "user": "kjq"
            },
            {
                "id": "5c768e492ca5ec54744b2869",
                "text": "I don\u2019t know how else to explain it",
                "time": "2019-02-27 13:19:05",
                "index": 43,
                "user": "snicoll"
            },
            {
                "id": "5c768e62e1446a6ebe543c23",
                "text": "if you have a `@Configuration` class that is imported in various context (auto-config, manual setup, non spring boot context) don\u2019t expect to be able to use certain conditions on them",
                "time": "2019-02-27 13:19:30",
                "index": 44,
                "user": "snicoll"
            },
            {
                "id": "5c768e65e1446a6ebe543c29",
                "text": "So \"regular\" configurations which may be applied in different \"autoconfigurations\" and the autoconfig dictates whether or not that config gets loaded.",
                "time": "2019-02-27 13:19:33",
                "index": 45,
                "user": "kjq"
            },
            {
                "id": "5c768e6f65ffa019ea5b4fa8",
                "text": "I never said that",
                "time": "2019-02-27 13:19:43",
                "index": 46,
                "user": "snicoll"
            },
            {
                "id": "5c768e965015f21e196a99c5",
                "text": "That `@Import` not processed/processed thing is not correct IMO. Try to reproduce that in a simple example if you can and we can take it from there",
                "time": "2019-02-27 13:20:22",
                "index": 47,
                "user": "snicoll"
            },
            {
                "id": "5c768eb1c1cab53d6f48e0e0",
                "text": "I don\u2019t understand what problem you\u2019re trying to report so a sample would be best",
                "time": "2019-02-27 13:20:49",
                "index": 48,
                "user": "snicoll"
            },
            {
                "id": "5c768ebe65ffa019ea5b5250",
                "text": "im asking.  We have multiple @Configurations - basically, one per \"module\" for lack of better terms.  They are just regular \"inject this bean\"  If I am using a MongoConfiguration the assumption is Mongo is present.  The autoconfiguration may pick between a Mongo and MySql configuration.",
                "time": "2019-02-27 13:21:02",
                "index": 49,
                "user": "kjq"
            },
            {
                "id": "5c768ee5e8ea14373783423e",
                "text": "I am asking more of a \"best practice\" question to get a better understanding.  If this is not the forum to do so please let me know where I can ask stuff like this.  ",
                "time": "2019-02-27 13:21:41",
                "index": 50,
                "user": "kjq"
            },
            {
                "id": "5c768f0865ffa019ea5b55b9",
                "text": "You\u2019re in the right forum. I\u2019ve tried to mention several times I don\u2019t understand where you\u2019re going.",
                "time": "2019-02-27 13:22:16",
                "index": 51,
                "user": "snicoll"
            },
            {
                "id": "5c768f2a53efa9120384a364",
                "text": "Please read the conversation again and ask if something isn\u2019t clear",
                "time": "2019-02-27 13:22:50",
                "index": 52,
                "user": "snicoll"
            },
            {
                "id": "5c768f54b1503b3d704fe391",
                "text": "Let me see if I can figure out a better way to pose this question as I thought it was pretty clear.",
                "time": "2019-02-27 13:23:32",
                "index": 53,
                "user": "kjq"
            },
            {
                "id": "5c768f7e8a7def0752e5b4ca",
                "text": "You\u2019re moving to \u201cI don\u2019t understand how `@Import` works\u201d to \u201cwhat is the best practice\u201d. I\u2019ve tried to answer both so I don\u2019t think there is much more I can do at this point",
                "time": "2019-02-27 13:24:14",
                "index": 54,
                "user": "snicoll"
            },
            {
                "id": "5c768fd7b1503b3d704fe66a",
                "text": "I know what @Import does - i was asking what the interplay is of @Import in combination with @Conditional - that was clear above I thought.  Then that led into what is the best way to apply @Configurations.  Seems like a natural transition of questions but I will try to work up an example, i just dont want to flood this chat with code examples.",
                "time": "2019-02-27 13:25:43",
                "index": 55,
                "user": "kjq"
            },
            {
                "id": "5c768ff8608c6f3736310bea",
                "text": "You don\u2019t have to and I already replied to that question. If a condition does not match, `@Import` won\u2019t be processed. I was asking for a sample in github or something. I find code snippet in general pretty useless",
                "time": "2019-02-27 13:26:16",
                "index": 56,
                "user": "snicoll"
            },
            {
                "id": "5c76903c65ffa019ea5b5eeb",
                "text": "To which i replied, let me double-test and get back to you because It seemed like it didnt process the @Beans inside but the import was.  That then led to \"what is the best way to do this\" for informational purpose",
                "time": "2019-02-27 13:27:24",
                "index": 57,
                "user": "kjq"
            },
            {
                "id": "5c769049608c6f3736310d8c",
                "text": "Yeah, do that",
                "time": "2019-02-27 13:27:37",
                "index": 58,
                "user": "snicoll"
            },
            {
                "id": "5c7690552ca5ec54744b3a4c",
                "text": "So, i will double-check and if i have more questions ask.  Thanks though for responding!",
                "time": "2019-02-27 13:27:49",
                "index": 59,
                "user": "kjq"
            }
        ]
    },
    {
        "id": 608,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f10686cd60398014654d56e",
                "text": "Hi everyone",
                "time": "2020-07-16 14:47:08",
                "index": 0,
                "user": "ge0ffrey"
            },
            {
                "id": "5f106932ff29b77732075517",
                "text": "In our spring boot starter, we need to detect classes annotated with a specific annotation (@PlanningEntity). These classes are domain classes. They are not services. Think Person, Nurse, Vehicle, Shift, Customer, etc.\nCurrently our starter detects them in either the (sub)packages of the Spring Boot application class, unless `@EntityScan(basePackageClasses = {...} ` is used, in which case we use those.\nDoes that align with the Spring Boot philosophy in other starters?",
                "time": "2020-07-16 14:50:26",
                "index": 1,
                "user": "ge0ffrey"
            },
            {
                "id": "5f1073510d37916fda7c42de",
                "text": "`@EntityScan` is primarily used to pick up JPA and Spring Data entities that are used then to pre-initialize the mapping context/EntityManager",
                "time": "2020-07-16 15:33:37",
                "index": 2,
                "user": "mp911de"
            },
            {
                "id": "5f108b4c26b22649722524d6",
                "text": "> `@EntityScan` is primarily used to pick up JPA and Spring Data entities that are used then to pre-initialize the mapping context/EntityManager\n\nThanks Mark, that sounds very familiar with the kind of objects that have a @PlanningEntity annotation (ussually they have a JPA @Entity annotation too), so I think my current approach is fine.",
                "time": "2020-07-16 17:15:56",
                "index": 10,
                "user": "ge0ffrey"
            },
            {
                "id": "5f10be0d343f5d69495518e6",
                "text": "@ge0ffrey  You might look at `EntityScanner` and how it's used in eg. `MongoDataConfiguration`... I think this would automatically allow you to inherit the JPA entity-scanning rules for your own annotation.",
                "time": "2020-07-16 20:52:29",
                "index": 12,
                "user": "jeffbswope"
            }
        ]
    },
    {
        "id": 609,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e9b5df6a1284c4f209ecbc2",
                "text": "What is the best way to identify the `Duplicate entry` field name from exception, inside a Spring-data-jpa powered project. The framework throws the `DataIntegrityViolationException` exception which doesn\u2019t tell about the field for which contraint failed. \nI am handling it by parsing the String and getting `\"email_UNIQUE\u201d` for email constraint.\nI I find a match, that means  duplicate `email` has been passed to the DB.\n\nAnything Spring-data-jpa provides out of the box?",
                "time": "2020-04-18 20:07:18",
                "index": 0,
                "user": "Puspendert"
            },
            {
                "id": "5e9c23ad47110862054297f9",
                "text": "@Puspendert : I know that Hibernate has an `org.hibernate.exception.spi.ViolatedConstraintNameExtracter` and converts the SQLException to an ConstraintViolationException here `org.hibernate.exception.internal.SQLStateConversionDelegate#convert`. This exception should be the root cause of your DataIntegrityViolationException",
                "time": "2020-04-19 10:10:53",
                "index": 2,
                "user": "srempfer"
            },
            {
                "id": "5e9c643e74bfed5a1b4b36b1",
                "text": "@srempfer the root cause is `java.sql.SQLIntegrityConstraintViolationException`. This doesn\u2019t have any info about the failed constraint. Instead `getCause` returns `org.hibernate.exception.ConstraintViolationException` which has `constraintName` field.",
                "time": "2020-04-19 14:46:22",
                "index": 5,
                "user": "Puspendert"
            }
        ]
    },
    {
        "id": 610,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f199cd5361e295cf021dbc5",
                "text": "I have an idea, but maybe I'm missing something that already exists. \nThere are beans (regular beans, but mostly `@Configuration`-annotated beans in my experience) that  should be included in a specific test slice. \nFor example, a configuration class that implements WebMvcConfigurer is automatically included in WebMvc tests. But a configuration class that declares a `@Bean`-annotated method that returns a WebMvcConfigurer is not, and the configurer is thus not included either. \nThat's surprising, but understandable. \nTo fix it, AFAIK, I can `@Import` this configuration class in the MVC tests, or import it into a meta annotation and use that meta annotation instead or in addition to WebMvcTest. \nWouldn't it be more elegant to be able to annotate the configuration class itself to make it part of a slice, automatically? Something like `@Slice(\"WebMvc\")` (of course Spring could define constants for the standard slice names).",
                "time": "2020-07-23 14:21:09",
                "index": 0,
                "user": "jnizet"
            },
            {
                "id": "5f199d196279c91f420a91c8",
                "text": "You can add an entry to `spring.factories` to include any configuration in a test slice",
                "time": "2020-07-23 14:22:17",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5f199d87361e295cf021dd8c",
                "text": "You could either list it under the `org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest` key or the `org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureWebMvc` key. The latter will work as the former is meta-annotated with `@AutoConfigureWebMvc`.",
                "time": "2020-07-23 14:24:07",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5f199e1043d5173b8c137ae2",
                "text": "Hmm. I didn't know that. Is it documented somewhere? It feels a bit magical and not easy to discover when maintaining code and looking at a class, but that could be solved by adding a comment.",
                "time": "2020-07-23 14:26:24",
                "index": 3,
                "user": "jnizet"
            },
            {
                "id": "5f199e50a573e564fed24382",
                "text": "Yeah, I can see why it would feel magical. A benefit of it is that it avoids having test-specific annotations in main code which I think is what your `@Slice` idea would require.",
                "time": "2020-07-23 14:27:28",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5f199f10a4b25c73c1e5c6eb",
                "text": "It's only documented in the javadoc of `@ImportAutoConfiguration` which probably doesn't help with the feeling of magic.",
                "time": "2020-07-23 14:30:40",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5f199f1b273e723b7ffd6020",
                "text": "Agreed, although it also look a bit like a stereotype, documenting which technical slice of the application a bean is part of. But I'll remember the spring.factories trick. Thanks Andy! ",
                "time": "2020-07-23 14:30:51",
                "index": 6,
                "user": "jnizet"
            }
        ]
    },
    {
        "id": 611,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5de4e439b065c6433c229f7f",
                "text": "Hi, is there a Slack or a Discord for the Spring Community ? :)",
                "time": "2019-12-02 10:15:21",
                "index": 0,
                "user": "qbeek42"
            },
            {
                "id": "5de4e809d75ad3721d3bec22",
                "text": "@qbeek42 Not that we (the Spring team) are aware of.",
                "time": "2019-12-02 10:31:37",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5de4e83526eeb8518f53c837",
                "text": "Hi @wilkinsona thanks so Gitter is the place to be.",
                "time": "2019-12-02 10:32:21",
                "index": 2,
                "user": "qbeek42"
            },
            {
                "id": "5de4eaf808d0c961b7d7311e",
                "text": "@qbeek42 Yep",
                "time": "2019-12-02 10:44:08",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 612,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5de7d3fdf65fec1c8ebf7ab9",
                "text": "hello, I would like to know if I can listen for AuditApplicationEvents in a reactive application?  I see this interesting blurb on their notes, but don't know what they are saying: https://github.com/spring-projects/spring-boot/wiki/Reactive-Actuator#auditevents",
                "time": "2019-12-04 15:42:53",
                "index": 0,
                "user": "obarat"
            },
            {
                "id": "5de7e82e9319bb5190dfbe73",
                "text": "@obarat That's an internal design document from a couple of years ago. I wouldn't pay much attention to it. Regardless, listening to events is really unrelated to the actuator and its endpoints. You can listen to `AuditApplicationEvent` using an `@EventListener` method that takes the event as an argument.",
                "time": "2019-12-04 17:09:02",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5de7f088c3d6795b9f21e015",
                "text": "@wilkinsona does this work in a reactive application?",
                "time": "2019-12-04 17:44:40",
                "index": 4,
                "user": "obarat"
            },
            {
                "id": "5de7f4445506624598699f68",
                "text": "It depends on where the events are being published, the configuration of Framework's event multicaster, and what you do in your listener. https://github.com/spring-projects/spring-framework/issues/21025 may be of interest",
                "time": "2019-12-04 18:00:36",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5de8024208d0c961b7ee79b5",
                "text": "@wilkinsona I'm running into a hairy situation where I need to log the cases where the authentication has failed, I try to use an accessDeniedHandler, but at that point the principal is not present in the context.  I wonder if you are aware of any solutions for this.",
                "time": "2019-12-04 19:00:18",
                "index": 6,
                "user": "obarat"
            }
        ]
    },
    {
        "id": 613,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd3a28b8eed7957522cff35",
                "text": "Is there a way to intercept the return values of controller methods, so I can modify (or even replace) them? HandlerInterceptors  seem to take  action only after the value was already serialized, so this doesn't help. I want to add/modify information on the return value after the handler method was called, but before it is serialized into the response",
                "time": "2019-11-19 08:06:35",
                "index": 0,
                "user": "Stummi"
            },
            {
                "id": "5dd3b78b6ba2347d2dbf244d",
                "text": "@Stummi You can consider `ResponseBodyAdvice`, see https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web.html#mvc-handlermapping-interceptor",
                "time": "2019-11-19 09:36:11",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5dd3cb7565affb0e0ce43899",
                "text": "@bclozel Thanks this seems to do the trick",
                "time": "2019-11-19 11:01:09",
                "index": 14,
                "user": "Stummi"
            }
        ]
    },
    {
        "id": 614,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ca672ccb34ccd69e765f930",
                "text": "Hi, what's the difference between having a `@Configuration` class in `spring.factories` and having it discovered by `ComponentScan`?",
                "time": "2019-04-04 21:10:36",
                "index": 0,
                "user": "cthlo"
            },
            {
                "id": "5ca71db331aec969e8560f16",
                "text": "@cthlo the former is to register Auto-Configurations (I guess?) while the latter is used for regular user-configurations. Don\u2019t use component scan in auto-configurations",
                "time": "2019-04-05 09:19:47",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5ca773fd3ebbdc55b3681c14",
                "text": "@snicoll Thank you!",
                "time": "2019-04-05 15:27:57",
                "index": 7,
                "user": "cthlo"
            }
        ]
    },
    {
        "id": 615,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbee812ef4afc4f285381d2",
                "text": "Can anyone help me out for logging implementation in spring boot. Best way of logging log time in the controller. We used log4j and Lombok slf4 annotations for logging. I saw couple of blog they were used aspects, filters, advice controller. Which on is the best usages. Great, if you can share any link.",
                "time": "2018-10-11 06:05:06",
                "index": 0,
                "user": "vajpai"
            },
            {
                "id": "5bbee91582893a2f3bc8f314",
                "text": "Sorry typo *control advice",
                "time": "2018-10-11 06:09:25",
                "index": 1,
                "user": "vajpai"
            },
            {
                "id": "5bbf10dbe65a634336bc0c49",
                "text": "@vajpai request processing time is already mornitored automatically by micrometer, check the doc",
                "time": "2018-10-11 08:59:07",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bbf131dbbdc0b2505209682",
                "text": "@snicoll  thanks. I will go through the doc ",
                "time": "2018-10-11 09:08:45",
                "index": 5,
                "user": "vajpai"
            },
            {
                "id": "5bbf23a4c7bf7c3662f0eb42",
                "text": "@snicoll my requirement is just want to add in log ,method processing duration and request url if required. etc( only in the rest controller) . But micrometre will give full statistics that is not required and more ever need to Prometheus dependency along with actuator. ",
                "time": "2018-10-11 10:19:16",
                "index": 13,
                "user": "vajpai"
            },
            {
                "id": "5bbf23d2ef4afc4f28554a4b",
                "text": "It doesn\u2019t need prometeheus",
                "time": "2018-10-11 10:20:02",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5bbf23d6ae7be940163a1aa9",
                "text": "What makes you think that?",
                "time": "2018-10-11 10:20:06",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5bbf23ff1c100a4f2968a87f",
                "text": "@snicoll it's metrics collector ",
                "time": "2018-10-11 10:20:47",
                "index": 16,
                "user": "vajpai"
            },
            {
                "id": "5bbf240c435c2a518e89f5fc",
                "text": "I know what it is. It\u2019s not mandatory",
                "time": "2018-10-11 10:21:00",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5bbf24c1435c2a518e89f9f4",
                "text": "If you don\u2019t want to rely on metrics, you can have some inspiration looking at `WebMvcMetricsFilter` but that\u2019s more work on your end",
                "time": "2018-10-11 10:24:01",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5bbf250d82893a2f3bca0f28",
                "text": "@snicoll thanks. For my application we need to see in splunk log with the uri and request process time etc... How to handle this scenario with micrometre",
                "time": "2018-10-11 10:25:17",
                "index": 19,
                "user": "vajpai"
            },
            {
                "id": "5bbf264482893a2f3bca1488",
                "text": "@snicoll is it  causes any performance issues in production ?? ",
                "time": "2018-10-11 10:30:28",
                "index": 20,
                "user": "vajpai"
            }
        ]
    },
    {
        "id": 616,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5bd84dff069fca52a5b961f9",
                "text": "SDKMAN remark - I see `2.1.0.RELEASE` published and available but it appears that it wasn't marked as the default release.",
                "time": "2018-10-30 12:26:39",
                "index": 0,
                "user": "vpavic"
            },
            {
                "id": "5bd8534fbbdc0b2505c311bd",
                "text": "Interesting. Thanks, @vpavic. I'll take a look.",
                "time": "2018-10-30 12:49:19",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bd8543aef4afc4f28f570ec",
                "text": "@vpavic Should be fixed now I believe",
                "time": "2018-10-30 12:53:14",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bd86e77c08b8b306797f9aa",
                "text": "> Should be fixed now I believe\n\n@wilkinsona I can confirm - SDKMAN has offered me to update to `2.1.0.RELEASE`. Thanks!",
                "time": "2018-10-30 14:45:11",
                "index": 37,
                "user": "vpavic"
            }
        ]
    },
    {
        "id": 617,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c4fc42c54f21a71a1c1631c",
                "text": "I was trying spring boot test\n\nI am trying controller testing \n\nI have a test, which has below annotations, but TestRestTemplate is not autowiring\n\n```\n@RunWith(SpringRunner.class)\n@ContextConfiguration(classes = UserServiceApplication.class)\n@WebMvcTest(UserController.class)\n```",
                "time": "2019-01-29 03:10:36",
                "index": 0,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c4fc45eceb5a2264f59a567",
                "text": "```\n@Autowired\n    TestRestTemplate testRestTemplate;\n\n    @LocalServerPort\n    private int port;\n```",
                "time": "2019-01-29 03:11:26",
                "index": 1,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c4fc46a9221b9382ddb04e4",
                "text": "both of them is throwing error.",
                "time": "2019-01-29 03:11:38",
                "index": 2,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c4fc481454aad4df7bb88b8",
                "text": "TestRestTemplate is null and port is java.lang.NumberFormatException: For input string: \"${local.server.port}\"",
                "time": "2019-01-29 03:12:01",
                "index": 3,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c4fc48741775971a09e0331",
                "text": "Any guesses ?",
                "time": "2019-01-29 03:12:07",
                "index": 4,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c5004dbc2dba5382ea6335e",
                "text": "@rajjaiswalsaumya  @ContextConfiguration shouldn\u2019t be used together with @WebMvcTest",
                "time": "2019-01-29 07:46:35",
                "index": 5,
                "user": "4shael"
            },
            {
                "id": "5c5005b341775971a09f9e5c",
                "text": "if you need ful application context in test, then you @SpringBootTest annotaion. (Read more here: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html#boot-features-testing-spring-boot-applications)",
                "time": "2019-01-29 07:50:11",
                "index": 6,
                "user": "4shael"
            },
            {
                "id": "5c503174c2dba5382ea75b02",
                "text": "I was using SpringBootTest, but it fails to inject  MockMvc. I read somewhere on stackoverflow, that ContextConfiguration is required for this.",
                "time": "2019-01-29 10:56:52",
                "index": 7,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c5032d3f46373406a1b65a2",
                "text": "```\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.boot.test.web.client.TestRestTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\n\n```",
                "time": "2019-01-29 11:02:43",
                "index": 8,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c5032e941775971a0a0de52",
                "text": "```\n@RunWith(SpringRunner.class)\n@SpringBootTest\n@AutoConfigureMockMvc\n```",
                "time": "2019-01-29 11:03:05",
                "index": 9,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c5032f4ceb5a2264f5c7e8d",
                "text": "Abive are my annotations now",
                "time": "2019-01-29 11:03:16",
                "index": 10,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c5032f88aa5ca5abf4d75c5",
                "text": "above*",
                "time": "2019-01-29 11:03:20",
                "index": 11,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c5033219221b9382dddc719",
                "text": "can this be related to spring cloud any way ? I guess it should not.",
                "time": "2019-01-29 11:04:01",
                "index": 12,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c503341454aad4df7be4291",
                "text": "https://www.baeldung.com/spring-boot-testresttemplate",
                "time": "2019-01-29 11:04:33",
                "index": 13,
                "user": "4shael"
            },
            {
                "id": "5c5033599221b9382dddc927",
                "text": "just create new instance of TestRestTemplate explicity",
                "time": "2019-01-29 11:04:57",
                "index": 14,
                "user": "4shael"
            }
        ]
    },
    {
        "id": 618,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d415ae320f75e7ba55a0ed9",
                "text": "hi ",
                "time": "2019-07-31 09:09:55",
                "index": 0,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d415aef1dc3324670d99317",
                "text": "I have problem.",
                "time": "2019-07-31 09:10:07",
                "index": 1,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d415b3db0bf183ea3730a0d",
                "text": "i am using from spring boot and angular .  i will use ldap from authentication . spring boot running on tomcat and angular running on apache",
                "time": "2019-07-31 09:11:25",
                "index": 2,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d415b5c5a72fc7ba4cc13d6",
                "text": "i will redirect in to angular page in spring security config for login but ",
                "time": "2019-07-31 09:11:56",
                "index": 3,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d415b773e05746cc8994703",
                "text": "> 'http:localhost:4200/auth?error' is not a valid redirect URL\n\n",
                "time": "2019-07-31 09:12:23",
                "index": 4,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d415bb345775115b370fedc",
                "text": "this spring security config : \n package org.sap;\n\n import org.springframework.context.annotation.Configuration;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n import org.springframework.security.crypto.password.LdapShaPasswordEncoder;\n\n @Configuration\n public class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n     @Override\n     protected void configure(HttpSecurity http) throws Exception {\n         http.authorizeRequests().antMatchers(\"/auth\").permitAll().\n                 antMatchers(\"/**\").fullyAuthenticated().and().formLogin().loginPage(\"http:localhost:4200/auth\").successForwardUrl(\"/\");\n     }\n\n     @Override\n     public void configure(AuthenticationManagerBuilder auth) throws Exception{\n         auth.ldapAuthentication().userDnPatterns(\"uid={0}\")\n                 .contextSource().url(\"ldap://dc.msv.net:389/dc=msv,dc=net\");\n     } \n }\n",
                "time": "2019-07-31 09:13:23",
                "index": 5,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d415c2651d80b6c6507dedd",
                "text": "@snicoll   @shivanshugoyal0111   @tomicarsk6  please help me\n",
                "time": "2019-07-31 09:15:18",
                "index": 6,
                "user": "Seyed_zia_twitter"
            },
            {
                "id": "5d41642951d80b6c65081c8d",
                "text": "@Seyed_zia_twitter https://howtodoinjava.com/spring5/security5/security-java-config-enablewebsecurity-example/ try this ",
                "time": "2019-07-31 09:49:29",
                "index": 7,
                "user": "shivanshugoyal0111"
            }
        ]
    },
    {
        "id": 619,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bab7b9601fb5f4ae125d3db",
                "text": " ```\n@GetMapping\nfun getIdentities(payload: IdentitySearchRequest, pageable: Pageable) =\n        service.searchProcess(payload, pageable)\n```\nI'm trying to map the query string of the request to this class. But it doesn't work. Any idea? (its kotlin)",
                "time": "2018-09-26 12:29:10",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5bab7e9741177e0bc7ac8e58",
                "text": "@ofabricio did you register your data type to the `WebDataBinder`?",
                "time": "2018-09-26 12:41:59",
                "index": 2,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab7fcc7bd81c5b9db7cbc5",
                "text": "@marcosbarbero do i need it? I have another project (java) that does exact the same and it works",
                "time": "2018-09-26 12:47:08",
                "index": 3,
                "user": "ofabricio"
            },
            {
                "id": "5bab7fd801fb5f4ae125f321",
                "text": "kotlin stuff?",
                "time": "2018-09-26 12:47:20",
                "index": 4,
                "user": "ofabricio"
            },
            {
                "id": "5bab803253c31c11116947c8",
                "text": "not sure, it has been a while since I used a custom type as requestParam and maybe something changed since then",
                "time": "2018-09-26 12:48:50",
                "index": 5,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab804153c31c111169487b",
                "text": "back then it was necessary, even with java",
                "time": "2018-09-26 12:49:05",
                "index": 6,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab8064691dc567dba79f33",
                "text": "ill try anyway",
                "time": "2018-09-26 12:49:40",
                "index": 7,
                "user": "ofabricio"
            },
            {
                "id": "5bab806556877c463a88676a",
                "text": "@ofabricio if you are trying to map the fields of some POJO as request params you need to tag it with `@ModelAttribute`",
                "time": "2018-09-26 12:49:41",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5bab80b98196693171b9b3d1",
                "text": "@edeandrea i tried that too eric",
                "time": "2018-09-26 12:51:05",
                "index": 9,
                "user": "ofabricio"
            },
            {
                "id": "5bab80ce8196693171b9b49b",
                "text": "isn't `@ModelAttribute` meant to be used with `POST` request?",
                "time": "2018-09-26 12:51:26",
                "index": 10,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab80dcaedb375b9c4c94d9",
                "text": "usually with forms",
                "time": "2018-09-26 12:51:40",
                "index": 11,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab80eaaedb375b9c4c94f2",
                "text": "i guess you mean RequestBody?",
                "time": "2018-09-26 12:51:54",
                "index": 12,
                "user": "ofabricio"
            },
            {
                "id": "5bab80fc691dc567dba7a377",
                "text": "you said querystring of the request right?",
                "time": "2018-09-26 12:52:12",
                "index": 13,
                "user": "edeandrea"
            },
            {
                "id": "5bab81048196693171b9b640",
                "text": "yes",
                "time": "2018-09-26 12:52:20",
                "index": 14,
                "user": "ofabricio"
            },
            {
                "id": "5bab810b8ddf5867dc77fd7c",
                "text": "`@RequestBody` will bind the body of the request to the POJO",
                "time": "2018-09-26 12:52:27",
                "index": 15,
                "user": "edeandrea"
            },
            {
                "id": "5bab81128ddf5867dc77fd85",
                "text": "yes",
                "time": "2018-09-26 12:52:34",
                "index": 16,
                "user": "ofabricio"
            },
            {
                "id": "5bab81188196693171b9b6d4",
                "text": "`@ModelAttribute` will bind any request params to your POJO",
                "time": "2018-09-26 12:52:40",
                "index": 17,
                "user": "edeandrea"
            },
            {
                "id": "5bab81248196693171b9b6eb",
                "text": "it din`t work :( ",
                "time": "2018-09-26 12:52:52",
                "index": 18,
                "user": "ofabricio"
            },
            {
                "id": "5bab8139fe37781110fe0488",
                "text": "i guess its something to do with kotlin",
                "time": "2018-09-26 12:53:13",
                "index": 19,
                "user": "ofabricio"
            },
            {
                "id": "5bab815756877c463a886f54",
                "text": "I don\u2019t know much about Kotlin - but I use `@ModelAttribute` in my Spring MVC controllers to bind request params a lot",
                "time": "2018-09-26 12:53:43",
                "index": 20,
                "user": "edeandrea"
            },
            {
                "id": "5bab8182aedb375b9c4c9928",
                "text": "mainly for search-type functions, where you can pass in a few different params. doing it this way also allows you to write a `Validator` to validate your params (i.e. one param is required if another has a particular value, etc)",
                "time": "2018-09-26 12:54:26",
                "index": 21,
                "user": "edeandrea"
            },
            {
                "id": "5bab81ebeba8e60bc64a1d7f",
                "text": "its spring boot tho",
                "time": "2018-09-26 12:56:11",
                "index": 22,
                "user": "ofabricio"
            },
            {
                "id": "5bab828998245f4ae087e760",
                "text": "spring boot is just a layer that sits on top of spring mvc\u2026your controller is spring mvc",
                "time": "2018-09-26 12:58:49",
                "index": 23,
                "user": "edeandrea"
            },
            {
                "id": "5bab8302691dc567dba7b159",
                "text": "it doesn`t work :( ",
                "time": "2018-09-26 13:00:50",
                "index": 24,
                "user": "ofabricio"
            },
            {
                "id": "5bab844301fb5f4ae12611ca",
                "text": "I don\u2019t know what the parameter `payload` in your function is",
                "time": "2018-09-26 13:06:11",
                "index": 25,
                "user": "edeandrea"
            },
            {
                "id": "5bab84434d320a463bf7f2a5",
                "text": "`@RequestParam payload : MultiValueMap<String, String>` this generic form works",
                "time": "2018-09-26 13:06:11",
                "index": 26,
                "user": "ofabricio"
            },
            {
                "id": "5bab8459691dc567dba7bb6a",
                "text": "what do you mean?",
                "time": "2018-09-26 13:06:33",
                "index": 27,
                "user": "ofabricio"
            },
            {
                "id": "5bab84684d320a463bf7f302",
                "text": "it is a custom class obj",
                "time": "2018-09-26 13:06:48",
                "index": 28,
                "user": "ofabricio"
            },
            {
                "id": "5bab84b953c31c1111696662",
                "text": "it instantiates the class, but it does not fill the fields",
                "time": "2018-09-26 13:08:09",
                "index": 29,
                "user": "ofabricio"
            },
            {
                "id": "5bab84d1eba8e60bc64a33a2",
                "text": "so for example i have in one of my projects something like this:\n\n```java\n@ApiModel(description = \"Search options for policies\")\npublic class PoliciesSearchOptions implements Serializable {\n  @ApiModel(description = \"Options defining the kind of fetching to do\")\n  public enum FetchType { ALL, ONLY_FOR_EXISTING_CUSTOMERS, SINGLE_CUSTOMER }\n  \n  @ApiModelProperty(\"The type of fetching to do\")\n  private FetchType fetchType = FetchType.ALL;\n  \n  @ApiModelProperty(\"The customer id to fetch\")\n  private long customerId = Long.MIN_VALUE;\n  \n  public FetchType getFetchType() {\n    return fetchType;\n  }\n  \n  public void setFetchType(FetchType fetchType) {\n    this.fetchType = fetchType;\n  }\n  \n  public long getCustomerId() {\n    return customerId;\n  }\n  \n  public void setCustomerId(long customerId) {\n    if (customerId >= 0) {\n      // If a customer id is set then switch our fetch type to SINGLE_CUSTOMER\n      this.fetchType = FetchType.SINGLE_CUSTOMER;\n      this.customerId = customerId;\n    }\n    else {\n      this.customerId = Long.MIN_VALUE;\n    }\n  }\n}\n\n// In my @RestController class\n@GetMapping(produces = { MediaTypes.POLICIES_V1_JSON_VALUE, MediaTypes.POLICIES_V1_XML_VALUE })\n  public Policies getPolicies(@ApiParam(\"Policies search options\") @Validated @ModelAttribute PoliciesSearchOptions searchOptions) {\n```",
                "time": "2018-09-26 13:08:33",
                "index": 30,
                "user": "edeandrea"
            },
            {
                "id": "5bab85277bd81c5b9db7f0ae",
                "text": "and the `PoliciesSearchOptions` parameters are bound based on what appears on the query string (i.e. `?fetchType=ALL&customerId=345`)",
                "time": "2018-09-26 13:09:59",
                "index": 31,
                "user": "edeandrea"
            },
            {
                "id": "5bab85477bd81c5b9db7f189",
                "text": "yes, in a java project i have the same (it works even without ModelAttribute). But kotlin :( ",
                "time": "2018-09-26 13:10:31",
                "index": 32,
                "user": "ofabricio"
            },
            {
                "id": "5bab8d9e41177e0bc7acf944",
                "text": "@edeandrea  @marcosbarbero you won' believe. I had to use `var` instead of `val` in order to work :sweat_smile: ",
                "time": "2018-09-26 13:46:06",
                "index": 48,
                "user": "ofabricio"
            },
            {
                "id": "5bab8db58196693171ba0cda",
                "text": "```\nclass IdentitySearchRequest  (\n    var status: Status? = null\n)```",
                "time": "2018-09-26 13:46:29",
                "index": 49,
                "user": "ofabricio"
            },
            {
                "id": "5bab8dc498245f4ae0883881",
                "text": "subtle",
                "time": "2018-09-26 13:46:44",
                "index": 50,
                "user": "ofabricio"
            },
            {
                "id": "5bab8df8cdc5013172577c19",
                "text": "good to know!",
                "time": "2018-09-26 13:47:36",
                "index": 51,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab8df9cdc5013172577c1d",
                "text": ":)",
                "time": "2018-09-26 13:47:37",
                "index": 52,
                "user": "marcosbarbero"
            },
            {
                "id": "5bab8e4f7bd81c5b9db831cb",
                "text": "that makes sense, since `val` would make your attribute immutable",
                "time": "2018-09-26 13:49:03",
                "index": 53,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 620,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5cb99d39e416b84519a4e6c0",
                "text": "I start a new job next week working with Spring Boot. I picked up \"Pro Spring Boot 2\" from Amazon, can anyone recommend any other tutorial format resources to learn from?",
                "time": "2019-04-19 10:04:41",
                "index": 0,
                "user": "noitagen_twitter"
            },
            {
                "id": "5cb99ede8790b0307ec79c12",
                "text": "in my experience https://www.baeldung.com/ has very good and clear-cut tutorials",
                "time": "2019-04-19 10:11:42",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5cb9a0e72e2caa1aa6835057",
                "text": "Yes, I've seen a few of those. I will take another look thanks.",
                "time": "2019-04-19 10:20:23",
                "index": 2,
                "user": "noitagen_twitter"
            },
            {
                "id": "5cb9a18c990feb4518c944a6",
                "text": "but i mean, spring by itself so pretty huge so just reading books about it.. i don't see much value in that especially if you haven't used it at all - you have no context for the more intricate parts.\n\njust set up a clean project, add SB as a dependency and start hacking.",
                "time": "2019-04-19 10:23:08",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5cb9a4d44b4cb471d920afb9",
                "text": "I have created a couple of Spring Boot apps. Just not anything enterprise grade.",
                "time": "2019-04-19 10:37:08",
                "index": 4,
                "user": "noitagen_twitter"
            }
        ]
    },
    {
        "id": 621,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cf669164dfb4240047a0b3b",
                "text": "Hi, anyone has any clue about this exception? \n\n```\n.a.catalina.session.StandardManager     : Exception loading sessions from persistent storage\n\njava.lang.ClassCastException: java.lang.StackTraceElement cannot be cast to java.lang.String\n\n```\nMy app was working fine and today this popped up... the session is lost in every server restart (live reload / devtools)\nNo files from my project appear in the stack trace",
                "time": "2019-06-04 12:50:30",
                "index": 0,
                "user": "cemivb"
            },
            {
                "id": "5cf67ef0ff3f016baaa3542c",
                "text": "@cemivb What's the stack trace of the `ClassCastException`?",
                "time": "2019-06-04 14:23:44",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cf67fa5cea8295279efa187",
                "text": "@wilkinsona https://pastebin.com/13mKkb9D\n",
                "time": "2019-06-04 14:26:45",
                "index": 2,
                "user": "cemivb"
            },
            {
                "id": "5cf68083f3a60a79a4518461",
                "text": "I just noticed the only file that appears in the stack trace, is the application's main class. Yesterday I had the same exception, and it was something related to the scanBasePackages thing that I fixed including a class from every high level project package. Sessions persistence between every restart was working\n\nthis morning  I started the server again without adding any new class, and the exception came back. I have tried cleaning the project (I se eclipse), deleting the sessions.ser files, and all suggestions that I found on stackoverflow but the error remains there",
                "time": "2019-06-04 14:30:27",
                "index": 3,
                "user": "cemivb"
            },
            {
                "id": "5cf68aeb9b50f639357f33c0",
                "text": "@cemivb Looks like https://github.com/spring-projects/spring-boot/issues/9457. You've added something to your HTTP session that isn't serialisable.",
                "time": "2019-06-04 15:14:51",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5cf68b854dfb4240047b2937",
                "text": "@wilkinsona Right before the persistent storage error I get this, dunno if it has something to do with it. Im not adding anything to the HTTP session manually...\n\n```\n2019-06-04 15:16:47.338  WARN 3188 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Cannot deserialize session attribute [com.vaadin.flow.server.VaadinSession.springServlet] for session [02271020D914A57B192E4D1F80EF3224]\n\n```",
                "time": "2019-06-04 15:17:25",
                "index": 6,
                "user": "cemivb"
            },
            {
                "id": "5cf68c34faac6439343c0296",
                "text": "I suspect it does. Looks like you're using Vaadin and it's storing stuff in the HTTP session. You might want to speak to them about it and if they expect Vaadin to work with DevTools.",
                "time": "2019-06-04 15:20:20",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5cf68ce69b50f639357f4108",
                "text": "Indeed it works, I have been using them together for 4 months now and the only problem I having is the session persistence with devtools. I made a small project to test spring security with Vaadin together and it works perfectly, the problem came when adding the same functionality to my big project. Im gonna just redo everything I did yesterday to see If Im able to get to the point I was when everything worked good...",
                "time": "2019-06-04 15:23:18",
                "index": 8,
                "user": "cemivb"
            },
            {
                "id": "5cf68d199b50f639357f4342",
                "text": "Im not explicitly storing anything in the session",
                "time": "2019-06-04 15:24:09",
                "index": 9,
                "user": "cemivb"
            },
            {
                "id": "5cf69edcf3a60a79a452796f",
                "text": "@wilkinsona Can you give some hint about how to debug this kind of stuff, and if theres any way I can see what attributes are getting stored in the session ?",
                "time": "2019-06-04 16:39:56",
                "index": 10,
                "user": "cemivb"
            },
            {
                "id": "5cf6bef7bf4cbd167c2e4dff",
                "text": "@cemivb There are a few pointers in the issue that I linked to earlier. If you debug your app with a breakpoint in `org.apache.catalina.session.StandardSession.doWriteObject(ObjectOutputStream)` you'll be able to see when serialisation fails. You could also put a breakpoint in `org.apache.catalina.session.StandardSession.setAttribute(String, Object, boolean)` to see everything that's being added.",
                "time": "2019-06-04 18:56:55",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5cf6ca44e41fe15e75114491",
                "text": "@wilkinsona I saw the link. The author exposed a case when a non serializable object is set explicitely to the session, in my case Im not... Thanks for the feedback, Im already watching the setAttribute method and Vaadin seems to be adding its own stuff by itself to the session, so Ill have to figure out why is not working in my main project but does work in the simplest one",
                "time": "2019-06-04 19:45:08",
                "index": 12,
                "user": "cemivb"
            }
        ]
    },
    {
        "id": 622,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5ef5f18f6c06cd1bf456b4c7",
                "text": "Hi! I\u2019ve read in Spring Boot\u2019s documentation that using embedded Tomcat max thread pool size is 200 by default and it can be configured with `server.tomcat.max-threads` property.  I wonder if you\u2019ve got any resource about how to set that property based on number of CPU Cores, average response time, etc. Thanks for you fantastic job you\u2019re doing! ",
                "time": "2020-06-26 13:01:03",
                "index": 0,
                "user": "itelleria"
            },
            {
                "id": "5ef6f57ba813c72dcf11ad28",
                "text": "@itelleria That really depends on your app, what it does, how many simultaneous users it will have, etc. The generally recommended approach is to create a benchmark that simulates your typical load and establish a performance baseline. You then tune things from there, comparing the performance of each change against the baseline.",
                "time": "2020-06-27 07:30:03",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 623,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c525a67f04ef00644b40269",
                "text": "Hi I was wondering if anybody knows how to add a directory to antmatchers outside of the jar? I'm using spring.thymeleaf.prefix=file:./templates/ to serve up my templates which works fine however I'm server up nodejs from a directory above that (relative to templates ../static/app.js) \n\nIt works fine on localhost I guess because it can access that file, but not here. Anyone have any ideas?",
                "time": "2019-01-31 02:16:07",
                "index": 0,
                "user": "Redmancometh"
            },
            {
                "id": "5c525aef454aad4df7ccf1c5",
                "text": "oh it's only working fine on localhost because app.js got packaged into the jar somehow",
                "time": "2019-01-31 02:18:23",
                "index": 1,
                "user": "Redmancometh"
            },
            {
                "id": "5c525c2cc2dba5382eb618bc",
                "text": "uhhh is there any way to serve up my app.js from outside the jar? the src=\"app.js\" in the index.html is still relative to the WAR root not the template prefix",
                "time": "2019-01-31 02:23:40",
                "index": 2,
                "user": "Redmancometh"
            },
            {
                "id": "5c525cd1f206e32ef917e9d9",
                "text": "@Redmancometh if you don\u2019t need spring to render your content .. then just use a webserver like nginx or apache",
                "time": "2019-01-31 02:26:25",
                "index": 3,
                "user": "mateothegreat"
            },
            {
                "id": "5c525d189221b9382dec9aa5",
                "text": "huh so I could just serve the npm data from nginx and reference it from the index.html thymeleaf is using and that'd work?",
                "time": "2019-01-31 02:27:36",
                "index": 4,
                "user": "Redmancometh"
            },
            {
                "id": "5c525d2f9221b9382dec9ab1",
                "text": "because it's using a lot of java functions from npm",
                "time": "2019-01-31 02:27:59",
                "index": 5,
                "user": "Redmancometh"
            },
            {
                "id": "5c525d5bf46373406a29e225",
                "text": "I just inherited this project and it packages everything into /static/classes everytime, and the node_modules take like 5 minutes to package, and I uh....hate it",
                "time": "2019-01-31 02:28:43",
                "index": 6,
                "user": "Redmancometh"
            },
            {
                "id": "5c525dbcf2511c625cbe58af",
                "text": " not sure I follow exactly",
                "time": "2019-01-31 02:30:20",
                "index": 7,
                "user": "mateothegreat"
            },
            {
                "id": "5c525dcbf206e32ef917e9dc",
                "text": "yea I\u2019d skip node_modules",
                "time": "2019-01-31 02:30:35",
                "index": 8,
                "user": "mateothegreat"
            },
            {
                "id": "5c525dd5f2511c625cbe58b1",
                "text": "and just symlink it or something",
                "time": "2019-01-31 02:30:45",
                "index": 9,
                "user": "mateothegreat"
            },
            {
                "id": "5c525de8ceb5a2264f6b3b61",
                "text": "So at the moment it uses the maven resource plugin to take everything from npm and the templates then sticks them into classes/static before packaging the WAR and packages them into the war",
                "time": "2019-01-31 02:31:04",
                "index": 10,
                "user": "Redmancometh"
            },
            {
                "id": "5c525dedf46373406a29e52b",
                "text": "So that's where the thymeleaf template root was",
                "time": "2019-01-31 02:31:09",
                "index": 11,
                "user": "Redmancometh"
            },
            {
                "id": "5c525e0241775971a0afacba",
                "text": "Now I have the thymeleaf template root outside of the jar, but the app.js won't resolve because references from index.html still resolve to classes/static inside the WAR",
                "time": "2019-01-31 02:31:30",
                "index": 12,
                "user": "Redmancometh"
            },
            {
                "id": "5c525e0ec2dba5382eb62399",
                "text": "Basically I just want NPM to be outside of the WAR",
                "time": "2019-01-31 02:31:42",
                "index": 13,
                "user": "Redmancometh"
            },
            {
                "id": "5c5267c754f21a71a1d3126a",
                "text": "nvm I got it",
                "time": "2019-01-31 03:13:11",
                "index": 14,
                "user": "Redmancometh"
            },
            {
                "id": "5c5267d1f2511c625cbe58b3",
                "text": "what\u2019d you end up with btw?",
                "time": "2019-01-31 03:13:21",
                "index": 15,
                "user": "mateothegreat"
            },
            {
                "id": "5c5267ed8c0f56692df601bc",
                "text": "@Redmancometh from the woodlands over here ;)",
                "time": "2019-01-31 03:13:49",
                "index": 16,
                "user": "mateothegreat"
            }
        ]
    },
    {
        "id": 624,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5e2b206f01914e3e043f811f",
                "text": "Question for the community but we are running into very slow spring boot startup times when deploying a spring boot docker image through kubernetes (up to 120 seconds).  I have looked at the Spring Boot Benchmark that Dave Syer has provided (https://github.com/dsyer/spring-boot-startup-bench) but in my environment, the CPU settings used are still significantly faster than what have/use.  Does anyone have any documentation/best practices or anything on improving Spring Boot startup times?  We are also starting to evaluate GraalVM to see if we can get some performance improvements as well but wanting to get some feedback from the Spring Boot team if possible.",
                "time": "2020-01-24 16:50:55",
                "index": 0,
                "user": "miller79"
            },
            {
                "id": "5e2b25d7a9b30639e2dc9eae",
                "text": "@miller79 GraalVM is super nice, but it's really a different problem space. Profiling what's happening for your app at startup time might uncover the issue. Do you have logs, profiling data that we could take a look at?",
                "time": "2020-01-24 17:13:59",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5e2b2e88e177666195c0a00f",
                "text": "@bclozel I can grab some of our tests, but specifically the issue is based on the CPU allocated to the startup of the application.  There was a specific amount we could allocate that would allow the application to boot in 1-2 seconds.  But once we hit that threshold, it would increase significantly (up to 120 seconds).  The application we were testing with specifically was a basic Spring Boot application through start.spring.io with just Spring Web.  We ran a docker image of it with a setting similar to this: docker run --cpus=\".4\" spring_min:latest and it showed similar startup times locally.  I'll post more information about our tests when I can get the latest copy of it.",
                "time": "2020-01-24 17:51:04",
                "index": 2,
                "user": "miller79"
            },
            {
                "id": "5e2b6286dc07667042e8815f",
                "text": "@bclozel I have checked in a benchmark application to directly show the performance we are seeing here:  https://github.com/miller79/spring-boot-benchmark  I have ran on my box with .4 CPU and seeing 30 seconds plus start up time.  This is as bare of an application I could create but would like some feedback on if there are any other enhancements we can do to increase performance.  My current CPU is an i7-7600U @ 2.8GHz with 16 GB of ram.",
                "time": "2020-01-24 21:32:54",
                "index": 3,
                "user": "miller79"
            },
            {
                "id": "5e2b6636a9b30639e2de7cb7",
                "text": "I don't have the benchmark code from these tests we have done here but here is some comparisons someone has done in our Org comparing with other frameworks with relatively small amount of code: https://github.com/miller79/spring-boot-benchmark/blob/master/various-framework-benchmark.md",
                "time": "2020-01-24 21:48:38",
                "index": 4,
                "user": "miller79"
            }
        ]
    },
    {
        "id": 625,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bfa033797a8982b9a5d4520",
                "text": "Hi folks, I am trying to compile the springframework on my machine and deploy it on my local maven. If I run `./gradlew install` it does send all the module to my local mavel. But when I try to compile a project using the version I just generated, it does not recognises the dependencies in the local maven. Am I missing something?",
                "time": "2018-11-25 02:04:39",
                "index": 0,
                "user": "leandroBorgesFerreira"
            },
            {
                "id": "5bfa040cfa7bbb3fe0fc9cd8",
                "text": "@leandroBorgesFerreira are you saying that you're building the source of spring itself? why are you doing that? just ref the artifacts. otherwise, you'll have to provide actual details.",
                "time": "2018-11-25 02:08:12",
                "index": 1,
                "user": "davidmichaelkarr"
            },
            {
                "id": "5bfa04da97a8982b9a5d4e54",
                "text": "I am trying to make an integration with Spring and an open source project. So be able to change the source code and run it on my machine would help a lot to understand how it works.",
                "time": "2018-11-25 02:11:38",
                "index": 2,
                "user": "leandroBorgesFerreira"
            },
            {
                "id": "5bfa0576958fc53895e54138",
                "text": "s",
                "time": "2018-11-25 02:14:14",
                "index": 3,
                "user": "davidmichaelkarr"
            },
            {
                "id": "5bfa0599d24f9324d24b71c1",
                "text": "@leandroBorgesFerreira this is a grade question.",
                "time": "2018-11-25 02:14:49",
                "index": 4,
                "user": "davidmichaelkarr"
            },
            {
                "id": "5bfa05a697a8982b9a5d5171",
                "text": "gradle.",
                "time": "2018-11-25 02:15:02",
                "index": 5,
                "user": "davidmichaelkarr"
            },
            {
                "id": "5bfa05cbed6bcf1ef856b0c8",
                "text": "Uhm, indeed. There's a room for that. Thanks David!",
                "time": "2018-11-25 02:15:39",
                "index": 6,
                "user": "leandroBorgesFerreira"
            }
        ]
    },
    {
        "id": 626,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bd7291b1e23486b933843c0",
                "text": "is there a way automatically increment the version of the generated spring boot artifact? I tried to search for everything I could think of and didn't find an answer?",
                "time": "2018-10-29 15:36:59",
                "index": 0,
                "user": "venkatasreekanth"
            },
            {
                "id": "5bd72ff43844923661b8c01f",
                "text": "@venkatasreekanth I have a gradle plugin that increments based on git tag... not really an auto increment though, if you're doing semver, auto-incrementing would mean you'd have to describe what kind of release",
                "time": "2018-10-29 16:06:12",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5bd73035ae7be94016d5e1c9",
                "text": "I say increments, but really it just uses the git tag...",
                "time": "2018-10-29 16:07:17",
                "index": 2,
                "user": "xenoterracide"
            },
            {
                "id": "5bd730e064cfc273f944b30e",
                "text": "we use maven builds, I  have dabbled a bit in gradle but never  used it really",
                "time": "2018-10-29 16:10:08",
                "index": 3,
                "user": "venkatasreekanth"
            },
            {
                "id": "5bd73540bbdc0b2505bbfbd4",
                "text": "either way... I'd say what you're really looking for is a build tool plugin, afaik Spring Boot doesn't provide one",
                "time": "2018-10-29 16:28:48",
                "index": 4,
                "user": "xenoterracide"
            },
            {
                "id": "5bd7369fab17df26310ced7a",
                "text": "Seems like this is more something related to the build environment and not the application being built. Most CI tools (Jenkins/etc) produce unique build numbers for each build. You\u2019d want to listen for that within the environment.",
                "time": "2018-10-29 16:34:39",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5bd736edef4afc4f28eeb8c1",
                "text": "for us we implement an environment variable `BUILD_VERSION` so that the actual version being built is not tied to any particular build tool (we have Maven, Gradle, Ant, etc). The build job injects the version label into the build and its up to the build tool to \u201cgrab\u201d it and label its build accordingly",
                "time": "2018-10-29 16:35:57",
                "index": 6,
                "user": "edeandrea"
            },
            {
                "id": "5bd73c52c7bf7c36628c606b",
                "text": "sure, and even with git, most CI services that use git can set the tag as an env var... ",
                "time": "2018-10-29 16:58:58",
                "index": 7,
                "user": "xenoterracide"
            }
        ]
    },
    {
        "id": 627,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5dbc53a32f8a0343571905b8",
                "text": "just a general question, is there a gitter channel for spring-batch ?                                                        ",
                "time": "2019-11-01 15:47:47",
                "index": 0,
                "user": "jarmaker"
            },
            {
                "id": "5dbc53cf3d669b28a017b3d6",
                "text": "@jarmaker https://gitter.im/spring-batch/Lobby :smile: ",
                "time": "2019-11-01 15:48:31",
                "index": 1,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 628,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd768c6ae7be94016d74f92",
                "text": "due to the... uh... strange documentation of spring boot on occasion",
                "time": "2018-10-29 20:08:38",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5bd768d9271506518d8dd118",
                "text": "`@EnableScheduling ` `@EnableJms` are these needed in boot? or will they override boots sane defaults",
                "time": "2018-10-29 20:08:57",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5bd7706264cfc273f94640f1",
                "text": "Generally just having those dependencies on the classpath is good enough",
                "time": "2018-10-29 20:41:06",
                "index": 2,
                "user": "pbriggs28"
            },
            {
                "id": "5bd77094435c2a518e25875a",
                "text": "Run your spring boot app with `--debug` and check the autconfig setup. It will tell you what configuration classes got wired up and which ones did not.",
                "time": "2018-10-29 20:41:56",
                "index": 3,
                "user": "pbriggs28"
            },
            {
                "id": "5bd7709bbbdc0b2505bd82b7",
                "text": "@xenoterracide ",
                "time": "2018-10-29 20:42:03",
                "index": 4,
                "user": "pbriggs28"
            }
        ]
    },
    {
        "id": 629,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e23407a4c1f9679ec0aed93",
                "text": "hi i get mock server which is jar but i'm getting problem to start webscoket i always get 101 error  can someone quickly point me where i can check  cors ?",
                "time": "2020-01-18 17:29:30",
                "index": 0,
                "user": "dadochudy"
            },
            {
                "id": "5e2342263ea53f0f66472310",
                "text": "101 is not error (if you mean http code)",
                "time": "2020-01-18 17:36:38",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5e2342c8ea55e3623e780d27",
                "text": "websocket uses http handshake",
                "time": "2020-01-18 17:39:20",
                "index": 2,
                "user": "dadochudy"
            },
            {
                "id": "5e2342ed3ea53f0f66472958",
                "text": "ti should switch from http handshake to websocket connection if understand it correctly",
                "time": "2020-01-18 17:39:57",
                "index": 3,
                "user": "dadochudy"
            },
            {
                "id": "5e2345fadd1429262d497443",
                "text": "i assume that you're talking about http code, and thi is a part of typical websocket connection process",
                "time": "2020-01-18 17:52:58",
                "index": 4,
                "user": "boda2004"
            },
            {
                "id": "5e23462a8e073f465f13a33d",
                "text": "like\n```\nHTTP/1.1 101 Switching Protocols\nUpgrade: websocket \nConnection: Upgrade\n```",
                "time": "2020-01-18 17:53:46",
                "index": 5,
                "user": "boda2004"
            },
            {
                "id": "5e2346e64c1f9679ec0b159d",
                "text": "i'm not java developer i just get the mockserver but when i try to connect from front end to webscoket i get error 101",
                "time": "2020-01-18 17:56:54",
                "index": 6,
                "user": "dadochudy"
            },
            {
                "id": "5e23470aea55e3623e782ae2",
                "text": "if i unzip jar file and add some dependency do i need to compile it :D ",
                "time": "2020-01-18 17:57:30",
                "index": 7,
                "user": "dadochudy"
            }
        ]
    },
    {
        "id": 630,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c6d7cbfc82c68509e0a453a",
                "text": "Hi, I have a question about the MIME type, I couldn't get the correct content-type in the response header if I have parameters in the Accept header, here is the question : https://stackoverflow.com/questions/54638218/will-get-incorrect-content-type-when-having-parameters-in-accept-header-even-if ",
                "time": "2019-02-20 16:13:51",
                "index": 0,
                "user": "zdz0123"
            },
            {
                "id": "5c6d7d50b6c74f1e2e828135",
                "text": "It seems that spring is using isCompatible() to match the requestedMediaTypes and producibleMediaTypes, but if I have parameters in accept-header, it will be considered as the more specific media type, anyone had this problem before?",
                "time": "2019-02-20 16:16:16",
                "index": 1,
                "user": "zdz0123"
            },
            {
                "id": "5c6d868dab952d3085627127",
                "text": "@zdz0123 as mentioned in your question, Spring doesn't take into account media types parameters  right now during negotiation. This is going to be supported with https://github.com/spring-projects/spring-framework/issues/21670",
                "time": "2019-02-20 16:55:41",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5c6d86a4a378ef11f60ffb25",
                "text": "@zdz0123 I don't know what to add besides that it's going to be solved and that I don't see any way to support that in the meantime",
                "time": "2019-02-20 16:56:04",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5c6d918c9155d45d9047dc3a",
                "text": "@bclozel  Do you think that is possible to use a filter or interceptor to reset the Content-Type? I tried to override the `HttpServletResponseWrapper` and the `setContentType()` method, it works but the Encoding part is missing now.",
                "time": "2019-02-20 17:42:36",
                "index": 4,
                "user": "zdz0123"
            },
            {
                "id": "5c6d926b00aa630d9ae37836",
                "text": "I'm confused - in your question you mentioned changing the accept header in the request with a filter",
                "time": "2019-02-20 17:46:19",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5c6d9286c4da4a11f5895b2e",
                "text": "I guess it all depends on your application",
                "time": "2019-02-20 17:46:46",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5c6d92929155d45d9047e493",
                "text": "and the number of endpoints and how media types are mapped there",
                "time": "2019-02-20 17:46:58",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c6d92c79155d45d9047e5d1",
                "text": "the servlet filter could work, but there you don't get a clear picture of the matching process. The request contains the matching pattern as a request attribute though. In that case, you'd need to duplicate the mapping information on your controllers, and in that filter",
                "time": "2019-02-20 17:47:51",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5c6d92da35c7a50422839942",
                "text": "the interceptor is a bit closer in the sense that the matching process already took place",
                "time": "2019-02-20 17:48:10",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5c6d92f17667931e2fd25a36",
                "text": "so you can change the response content type, but I don't think changing the request accept header at that point will change anything",
                "time": "2019-02-20 17:48:33",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5c6d931d00aa630d9ae37d14",
                "text": "at that point, I guess that a custom solution in an interceptor is your best bet until this is resolved in some way in Framework",
                "time": "2019-02-20 17:49:17",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5c6dbbb2a7d733509d9bc34b",
                "text": "@bclozel Sorry for the confusion, I've already give up changing the request-header since spring doesn't give any setters() here, and as you said, I need to duplicate the mapping info in my controllers but there is no way to get the `producibleMediaTypes` which I want to do the comparison with in controller. Now I'm trying to put some work in the filter to update the response-header, that's why I overrided the HttpServletResponseWrapper, but spring will automatically add the charset to the `Content-Type` using `HttpMessageConverter`, any idea about how to add charset if I set the Content-Type  by myself? Thanks for your help.",
                "time": "2019-02-20 20:42:26",
                "index": 14,
                "user": "zdz0123"
            }
        ]
    },
    {
        "id": 631,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5f1e95d9f8dfed4382c04761",
                "text": "hi all,\nafter upgrade from spring boot 2.1 to 2.2 I experience higher memory usage. Initially, under load, the application had pretty constant memory footprint, but now it is constantly growing.. I have done a heap dump and tried to analyze it but there is not much there, the content shows quite high number of empty `java.lang.ref.ReferenceQueue` instances and the only thing Eclipse Memory Analyzer showed is a high number of `java.lang.ref.Finalizer` instances.. weird that the count of instances of both types is pretty equal.. what else can I check?",
                "time": "2020-07-27 08:52:41",
                "index": 0,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f1e95f625cae90e6d83c8f5",
                "text": "What version of 2.2 is that?",
                "time": "2020-07-27 08:53:10",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5f1e963849bae2060121153b",
                "text": "@snicoll, it is 2.2.8.RELEASE",
                "time": "2020-07-27 08:54:16",
                "index": 2,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f1e9f5aa050df43001b4b00",
                "text": "@snicoll, there is also one pretty interesting finding I just got in GC roots, I see there `RealConnectionPool` (okhttp) being referenced quite a lot and moreover with this upgrade to a new spring boot we jumped from okhttp 3.11.0 to 3.14.9..",
                "time": "2020-07-27 09:33:14",
                "index": 6,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f1e9f743eef7e1ffe38327b",
                "text": "Interesting. Can you try downgrading okhttp ?",
                "time": "2020-07-27 09:33:40",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 632,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c4983a4c45b986d11af6d46",
                "text": "hi all, i want to ask a question, this is my spring boot yaml conf,\n```\nyaml-conf:\n  abc.com: 123\n```\nbut i can not get field 'abc.com' , i can only get 'abc' , who can help me how can get 'abc.com'",
                "time": "2019-01-24 09:21:40",
                "index": 0,
                "user": "caorui31"
            },
            {
                "id": "5c49847035350772cf7fc2d5",
                "text": "```\nyaml-conf:\n  \"abc.com\": 123\n```\n",
                "time": "2019-01-24 09:25:04",
                "index": 1,
                "user": "BenEfrati"
            },
            {
                "id": "5c498631ba355012a48c6dae",
                "text": "@BenEfrati i tried , but it does not work\n```\nyaml-conf:\n  abccom: 123\n```\nif the conf don't have point, it can work as expected\uff0c but if the conf have point, it can not work",
                "time": "2019-01-24 09:32:33",
                "index": 13,
                "user": "caorui31"
            },
            {
                "id": "5c49866120b78635b6745411",
                "text": "is `yaml-conf` a map?",
                "time": "2019-01-24 09:33:21",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5c4986890a491251e348711a",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config-relaxed-binding",
                "time": "2019-01-24 09:34:01",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5c4986a420b78635b67454eb",
                "text": "```\n@Component\n@RefreshScope\n@ConfigurationProperties(prefix = \"yaml-conf\")\npublic class WhiteListSettings {\n    private HashMap<String, Set<Integer>> whiteList = new HashMap<>();\n}\n```\n\n",
                "time": "2019-01-24 09:34:28",
                "index": 16,
                "user": "caorui31"
            },
            {
                "id": "5c4986c39bfa375aab504e32",
                "text": "your yaml sample does not match that code",
                "time": "2019-01-24 09:34:59",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5c4986e47a0f4d5b19fc8da8",
                "text": "anyway, please see the link above, key with dots in them must be wrapped in brackets",
                "time": "2019-01-24 09:35:32",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5c498701cb47ec300093b4f3",
                "text": "that is an example\ntrue conf is \n```\nyaml-conf:\n  white-list:\n    \"abc.com\": 10009\n```",
                "time": "2019-01-24 09:36:01",
                "index": 19,
                "user": "caorui31"
            },
            {
                "id": "5c4987f0dab15872cee453ab",
                "text": "@snicoll thans, let me take a look at the link above.",
                "time": "2019-01-24 09:40:00",
                "index": 23,
                "user": "caorui31"
            }
        ]
    },
    {
        "id": 633,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3e220432a8370605d7d8c3",
                "text": "Hi! I am relatively new to Spring/Spring Boot, I am working on a project where I would like to keep a singleton key-value dictionary that can use for lookup. Is building a singleton service that returns me the dictionary the  best approach to solve this?",
                "time": "2019-01-15 18:10:12",
                "index": 0,
                "user": "rbidanta"
            },
            {
                "id": "5c3e2c40f780a1521f1601e1",
                "text": "Why not a @Component that manages internally a map?",
                "time": "2019-01-15 18:53:52",
                "index": 1,
                "user": "nightswimmings"
            },
            {
                "id": "5c3e2cd91cb70a372ae3942d",
                "text": "yeah that sounds good\u2026 Spring Boot component will return me a singleton object of this component from where I can access the map right?",
                "time": "2019-01-15 18:56:25",
                "index": 2,
                "user": "rbidanta"
            },
            {
                "id": "5c3e2e2539596c372be8322b",
                "text": "All beans have Singleton scope by default, so as long as it is not accessed  by different threads (then something like Collections.synchronizedMap is useful), no problem on integrity",
                "time": "2019-01-15 19:01:57",
                "index": 3,
                "user": "nightswimmings"
            },
            {
                "id": "5c3e2e698318994524f50671",
                "text": "cool\u2026 let me try that out",
                "time": "2019-01-15 19:03:05",
                "index": 4,
                "user": "rbidanta"
            },
            {
                "id": "5c3e2e8295e17b4525580c07",
                "text": "@nightswimmings  thanks for pointers",
                "time": "2019-01-15 19:03:30",
                "index": 5,
                "user": "rbidanta"
            }
        ]
    },
    {
        "id": 634,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b92750acff55e5617beb854",
                "text": "Hello, is it possible to have in spring-web two methods for same url (e.g. /contacts/parcels) but with different payloads? For example is it possible to distinguish them by some request-header? I want to create one method for mobile and another for browser. Bot of that methods should be of same type ...for example POST",
                "time": "2018-09-07 12:54:34",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5b92759a1d3a5711b6fa70a6",
                "text": "you can simply put HttpServletRequest request into the parameters of your method and then differentiate using if (request.) {} else {} ",
                "time": "2018-09-07 12:56:58",
                "index": 1,
                "user": "christianbuerckert"
            },
            {
                "id": "5b927603e5b40332ab5a6773",
                "text": "if it's in the headers you can use @GetMapping (headers = ...) ",
                "time": "2018-09-07 12:58:43",
                "index": 2,
                "user": "christianbuerckert"
            },
            {
                "id": "5b9276fcd457a1406cb3bfa8",
                "text": "@christianbuerckert thanks that's what I was searching for",
                "time": "2018-09-07 13:02:52",
                "index": 3,
                "user": "bilak"
            }
        ]
    },
    {
        "id": 635,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d305c50b74a8716e275a7f7",
                "text": "Is it correct that a bean returning a `Optional<MyBean>` is always injected as `Optional.empty`. I have a hard time figuring out if this is expected behaviour or a bug.",
                "time": "2019-07-18 11:47:28",
                "index": 0,
                "user": "peter-janssen"
            },
            {
                "id": "5d30819c7dbfff3242ce6f86",
                "text": "Returning `Optional` on a bean factory method isn\u2019t supported as far as I know",
                "time": "2019-07-18 14:26:36",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5d3081a2e1909039360a3842",
                "text": "In Spring Boot you use conditions for that",
                "time": "2019-07-18 14:26:42",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5d30896e7dbfff3242ceb18d",
                "text": "@snicoll Thanks! that is what I was suspected. I didn't find these kind of limitations in the documentation.",
                "time": "2019-07-18 14:59:58",
                "index": 3,
                "user": "peter-janssen"
            }
        ]
    },
    {
        "id": 636,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf6ac51e25cc2740526fc5d",
                "text": "```\n@Component\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@ComponentScan(basePackages = { \"org.usermgmt.core\" })\n@Documented\npublic @interface EnableSecurityConfiguration {\n\n}\n```\ni have created this custom annotation to activate the component scan which i have mentioned just above the @Documented annotation\n\nis it the right configuration as i am not achieving\n",
                "time": "2018-11-22 13:17:05",
                "index": 0,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6ac58c6cf4524d15caa64",
                "text": "@wilkinsona ",
                "time": "2018-11-22 13:17:12",
                "index": 1,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6ade0ed6bcf1ef841f250",
                "text": "Are you adding this annotation to a class that also has `@Configuration`?",
                "time": "2018-11-22 13:23:44",
                "index": 2,
                "user": "corneil"
            },
            {
                "id": "5bf6b07c958fc53895d0c74d",
                "text": "yes @corneil il",
                "time": "2018-11-22 13:34:52",
                "index": 3,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6b083ced7003fe16aca2f",
                "text": "i did that",
                "time": "2018-11-22 13:34:59",
                "index": 4,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6b100ed6bcf1ef842076d",
                "text": "@SubhamAshish remove `@Component`",
                "time": "2018-11-22 13:37:04",
                "index": 6,
                "user": "corneil"
            },
            {
                "id": "5bf6b221f59704348ee7a31e",
                "text": "@SubhamAshish Having `@Component` on your annotation should be fine. `@Configuration` is a specialisation of `@Component` so I don't think it'll make any difference",
                "time": "2018-11-22 13:41:53",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5bf6b244a115c91ef775c27f",
                "text": "What does \"I am not achieving\" mean? What did you expect to achieve and how have to identified that it isn't working?",
                "time": "2018-11-22 13:42:28",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5bf6b297b6c07010526d9b8a",
                "text": "actually i am using  a jar file concept inside it  i have this annotation configured \nso i want once i enable that annotation\nthe component what i have mention above my annotation should scan",
                "time": "2018-11-22 13:43:51",
                "index": 16,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6b29af048fa1051063a62",
                "text": "@wilkinsona ",
                "time": "2018-11-22 13:43:54",
                "index": 17,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6b3a6d24f9324d2370c3b",
                "text": "@corneil  i tried too\nbut as mentioned above it makes no difference while removing @Component too",
                "time": "2018-11-22 13:48:22",
                "index": 18,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6b407ed6bcf1ef8421b5b",
                "text": "@SubhamAshish does the scan packages contain other `@Configuration` classes?",
                "time": "2018-11-22 13:49:59",
                "index": 20,
                "user": "corneil"
            },
            {
                "id": "5bf6b424958fc53895d0e153",
                "text": "@corneil  no no its not",
                "time": "2018-11-22 13:50:28",
                "index": 21,
                "user": "SubhamAshish"
            },
            {
                "id": "5bf6bd27f048fa105106840f",
                "text": "@SubhamAshish I can't see why it wouldn't work from what you've shared thus far. That said, I would caution against enabling component scanning in a library. It's something that we avoid in all of Boot's auto-configuration in favour of just `@Import`ing exactly what we need. If you'd like to pursue the `@ComponentScan` approach and you'd like some more help, can you please share a minimal example that reproduces the problem?",
                "time": "2018-11-22 14:28:55",
                "index": 22,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 637,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e8ad180f450c25cc8bf8d17",
                "text": "I'm using latest spring boot version and I have my app properties in application.yml under `/src/main/resources` (as always). When it comes to unit testing all of my @Value() properties are null. I feel I have read somewhere that YAML files don't work with spring boot tests but can't seem to find that quote. I've looked at the spring boot reference documentation but can't find anything about it there either. I have used @SpringBootTest but without any success and I've also tried to have an identical application.yml in `src/test/resources` but that didn't make a difference either. Can somebody please point me to the place in the documentation that mentions how to do this? I'm afraid the lockdown has made me gone blind :-) Cheers",
                "time": "2020-04-06 06:51:44",
                "index": 0,
                "user": "AndersClausen"
            },
            {
                "id": "5e8ade4ccc370f0b07c66176",
                "text": "@AndersClausen `application.yaml` should work in the same way as `application.properties` in a `@SpringBootTest` as long as you have SnakeYAML on the classpath.",
                "time": "2020-04-06 07:46:20",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5e8aed8f5b98016d6a18d5ac",
                "text": "@wilkinsona SnakeYAML (vesion 1.25) is definitely on the path but does it matter that we spell the file extension `yml`?",
                "time": "2020-04-06 08:51:27",
                "index": 4,
                "user": "AndersClausen"
            },
            {
                "id": "5e8aef21f87c5956a23d4660",
                "text": "No, either will work. It's worth checking that the SnakeYAML jar hasn't been corrupted.",
                "time": "2020-04-06 08:58:09",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5e8aef3cfea5216d695e44b7",
                "text": "If it works when you run your app normally (rather than in a test), then that can't be the problem.",
                "time": "2020-04-06 08:58:36",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5e8af224c52b6a38abc918b0",
                "text": "The app definitely works, so I don't suspect the jar being corrupt. OK, at least you've confirmed that yml should work, so I'll continue working on it. Thanks",
                "time": "2020-04-06 09:11:00",
                "index": 7,
                "user": "AndersClausen"
            }
        ]
    },
    {
        "id": 638,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5e2ff7456f9d3d3498f160ca",
                "text": "Hi all",
                "time": "2020-01-28 08:56:37",
                "index": 0,
                "user": "gabac"
            },
            {
                "id": "5e2ff78658f02e349734d7dc",
                "text": "Was just trying out the new feature OCI in spring boot 2.3.0.M1 and its awesome :) Now my question is: Can I also push the docker image directly to a registry. Somehow I'm missing the pieces to get that working",
                "time": "2020-01-28 08:57:42",
                "index": 1,
                "user": "gabac"
            },
            {
                "id": "5e2ff861433e1d4039686292",
                "text": "@gabac that's probably registry specific, i tend to think you can push docker image as you usually would do ",
                "time": "2020-01-28 09:01:21",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5e2ff9776f9d3d3498f16cac",
                "text": "@boda2004 sure but I was wondering if this could be archived through `spring-boot:build-image` somehow as well",
                "time": "2020-01-28 09:05:59",
                "index": 3,
                "user": "gabac"
            },
            {
                "id": "5e2ffb29f301780b833990c0",
                "text": "not necessarily it's correct approach https://medium.com/@TimvanBaarsen/first-look-at-cloud-native-buildpacks-support-in-spring-boot-2-3-milestone-1-ece8e72ed93f basiclly push is manual, but there is a plenty maven plugins. Answering your initial question - i don't know, just my two cents on the matter :)",
                "time": "2020-01-28 09:13:13",
                "index": 4,
                "user": "boda2004"
            },
            {
                "id": "5e2fff2fd9895b17c3a20760",
                "text": "Yes I was just wondering if this is going to be part of this plugin as well",
                "time": "2020-01-28 09:30:23",
                "index": 5,
                "user": "gabac"
            }
        ]
    },
    {
        "id": 639,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5efb8c047ba3965373db4b1e",
                "text": "I am trying to set iso values for default date encoding but nothing seems to work ",
                "time": "2020-06-30 19:01:24",
                "index": 0,
                "user": "sabareeshkkanan"
            },
            {
                "id": "5efb8c05e0e5673398e48263",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#date-time-conversion-in-web-applications",
                "time": "2020-06-30 19:01:25",
                "index": 1,
                "user": "sabareeshkkanan"
            },
            {
                "id": "5efb8c3f54d7862dc4bb043b",
                "text": "It is always returning linux time stamp over iso date time format iso-8601",
                "time": "2020-06-30 19:02:23",
                "index": 2,
                "user": "sabareeshkkanan"
            },
            {
                "id": "5efb8c59405be935cdd11020",
                "text": "I am using webflux ",
                "time": "2020-06-30 19:02:49",
                "index": 3,
                "user": "sabareeshkkanan"
            },
            {
                "id": "5efb8ddfd65a3b0292bd0fe0",
                "text": "@sabareeshkkanan It's hard to say what's happening without some more details. Perhaps you can share some code?",
                "time": "2020-06-30 19:09:19",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 640,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be0c8a67660cf07ca74bbdb",
                "text": "Hello Everyone, I have a question regarding `SmartLifeCycle` and `DisposableBean`. Is implementing `SmartLifeCycle`(phase 0) the same as implementing `DisposableBean` and `InitializingBean`? We implement SmartLifeCycle if we want to do some thing on startup and shutdown in phase other than 0 right? Am I making sense? Can some one give an example where we want to implement SmartLifeCycle vs InitializingBean and DisposableBean. Thanks in advance",
                "time": "2018-11-05 22:48:06",
                "index": 0,
                "user": "sivaalli"
            },
            {
                "id": "5be1449e9c65e607e708667b",
                "text": "`SmartLifecycle` lets you start/stop a bean while the context is running rather than tying that to the application context lifecycyle. Phase is relative to others `SmartLifecycle` implementations. ",
                "time": "2018-11-06 07:37:02",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 641,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ef5b898a813c72dcf0eb4e0",
                "text": "Hi all. Can anybody help me how to include a lib that is using spring-parent older that the parent of my project",
                "time": "2020-06-26 08:58:00",
                "index": 0,
                "user": "marios390"
            },
            {
                "id": "5ef5ce93613d3b33940c89a7",
                "text": "Just include it. The newer dependencies will take precedence.",
                "time": "2020-06-26 10:31:47",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ef5d288e0e5673398d6aa64",
                "text": "I did it but some conflicts show up that I can not resolve. Once I use the same version of parent as the lib is using the issue is resolved but this not what I want",
                "time": "2020-06-26 10:48:40",
                "index": 2,
                "user": "marios390"
            },
            {
                "id": "5ef5d2c147fdfd21ede7ac8f",
                "text": "If they're incompatible then you need to either update or shade the older lib",
                "time": "2020-06-26 10:49:37",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5ef5d4a8b8152d3484653224",
                "text": "ok thanks!",
                "time": "2020-06-26 10:57:44",
                "index": 4,
                "user": "marios390"
            }
        ]
    },
    {
        "id": 642,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ceeb655481ef4167b98d3dc",
                "text": "I'm using spring-data-elasticsearch and when running the application, I get the following error. \n\n```\nfailed to load elasticsearch nodes : org.elasticsearch.client.transport.NoNodeAvailableException: None of the configured nodes are available: [{#transport#-1}{2SA3tnkFSIeuc6RxpQnFwA}{127.0.0.1}{127.0.0.1:9200}]\n```\n\nI get the similar error when I'm trying with port 9300.  I have tried both using Port 9300 and 9200. \nHere is my spring-data-elasticsearch code\n\n\n config.java \n```\n@Configuration\npublic class Config {\n\t\n\t@Bean(destroyMethod = \"close\")\n    public RestHighLevelClient client() {\n    \t\n    \tRestHighLevelClient restClient = new RestHighLevelClient(RestClient.builder(new HttpHost(\"127.0.0.1\", 9200, \"http\")));\n\n    \treturn restClient;\n    }\n\n}\n```\n\n UserController.java file.\n\n```\n@RestController\n@RequestMapping(\"/api\")\npublic class UserController {\n\t\n\t@Autowired\n\tprivate UserService userService;\n\t\n\t@GetMapping(\"/showUsers\")\n\tpublic String getUsers() {\n\t\t\n\t\treturn \"here is the list of users\";\n\t}\n\t\n    @PostMapping(\"/create\")\n    public ResponseEntity<User> create(@RequestBody User user) throws IOException {\n    \t\n    \tSystem.out.println(\"inside rest user create ....\");\t\n    \t\n    \tuserService.save(user);\n        return new ResponseEntity<User>(userService.save(user), HttpStatus.CREATED);\n    }\n\n}\n```\n\nUser.java\n```\n@Document(indexName = \"users\", type = \"emp\")\npublic class User {\n\n\tprivate String id;\n\tprivate String name;\n\tprivate String age;\n\tprivate String email;\n\n\tpublic String getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getAge() {\n\t\treturn age;\n\t}\n\n\tpublic void setAge(String age) {\n\t\tthis.age = age;\n\t}\n\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n}\n```\n\nUserRepository.java\n\n```\npublic interface UserRepository extends ElasticsearchRepository<User, String> {\n\t\n\tList<User> findByName(String name);\n\tUser findByEmail(String email);\n\n}\n```\n\nUserService.java\n\n```\npublic interface UserService {\n\t\n\tUser save(User user);\n\tIterable<User> findAll();\n\tList<User> findByName(String name);\n\tUser findByEmail(String email);\n\n}\n```\n\nUserServiceImpl.java\n\n```\n@Service\npublic class UserServiceImpl implements UserService {\n\t\n\tprivate UserRepository userRepository;\n\t\n\t@Autowired\n\tpublic void setUserRepository(UserRepository userRepository) {\n\t\tthis.userRepository = userRepository;\n\t}\n\n\t@Override\n\tpublic User save(User user) {\n\t\treturn userRepository.save(user);\n\t}\n\n\t@Override\n\tpublic Iterable<User> findAll() {\n\n\t\treturn userRepository.findAll();\n\t}\n\n\t@Override\n\tpublic List<User> findByName(String name) {\n\t\t\n\t\treturn userRepository.findByName(name);\n\t}\n\n\t@Override\n\tpublic User findByEmail(String email) {\n\n\t\treturn userRepository.findByEmail(email);\n\t}\n\n}\n```\n\napplication.properties\n\n```\nspring.data.elasticsearch.repositories.enabled = true\nspring.data.elasticsearch.cluster-nodes =127.0.0.1:9200\nspring.data.elasticsearch.cluster-name=esusers\n``` \n",
                "time": "2019-05-29 16:41:57",
                "index": 0,
                "user": "vikpandey"
            },
            {
                "id": "5ceeb66afaac64393408a333",
                "text": "pom.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.5.RELEASE</version>\n        <relativePath /> <!-- lookup parent from repository -->\n    </parent>\n    <groupId>cache</groupId>\n    <artifactId>cache</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>cache</name>\n    <description>demo for elasticsearch</description>\n\n    <properties>\n        <java.version>1.8</java.version>\n        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId> org.elasticsearch.client</groupId>\n            <artifactId>elasticsearch-rest-high-level-client</artifactId>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```",
                "time": "2019-05-29 16:42:18",
                "index": 1,
                "user": "vikpandey"
            },
            {
                "id": "5ceeda4ee41fe15e75dcb040",
                "text": "@vikpandey Where is Elasticsearch running? It looks like it's not available on localhost so it's a problem with where it's running or your configuration properties rather than you code.",
                "time": "2019-05-29 19:15:26",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5ceeeb366fc5846bab2cdcf2",
                "text": "@wilkinsona  its running on localhost \n\n```\n{\n\"name\": \"vikas\",\n\"cluster_name\": \"esusers\",\n\"cluster_uuid\": \"lBGO1CwoTOya3SFZJRJryQ\",\n\"version\": {\n\"number\": \"7.0.1\",\n\"build_flavor\": \"default\",\n\"build_type\": \"zip\",\n\"build_hash\": \"e4efcb5\",\n\"build_date\": \"2019-04-29T12:56:03.145736Z\",\n\"build_snapshot\": false,\n\"lucene_version\": \"8.0.0\",\n\"minimum_wire_compatibility_version\": \"6.7.0\",\n\"minimum_index_compatibility_version\": \"6.0.0-beta1\"\n},\n\"tagline\": \"You Know, for Search\"\n}\n```",
                "time": "2019-05-29 20:27:34",
                "index": 13,
                "user": "vikpandey"
            },
            {
                "id": "5ceef26b9b50f639354d54d0",
                "text": "@vikpandey is the app or the elasticsearch instance running in a separate VM, or container?",
                "time": "2019-05-29 20:58:19",
                "index": 16,
                "user": "bclozel"
            },
            {
                "id": "5cefe3ac702b7e5e76fe8da3",
                "text": "@bclozel  I am running an elasticsearch instance on my local",
                "time": "2019-05-30 14:07:40",
                "index": 37,
                "user": "vikpandey"
            }
        ]
    },
    {
        "id": 643,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5dbba64b14d55a3785b19dd7",
                "text": "Spring Boot + Angular + Lucene\n\nI have searched lot of projects in github and other places. I don't find a good UI demo with spring with lucene and angular.\n\nCan someone help me with a good reference?\n\nThanks.",
                "time": "2019-11-01 03:28:11",
                "index": 0,
                "user": "prog20901"
            },
            {
                "id": "5dbbb5a99825bd6bac0587a9",
                "text": "> Spring Boot + Angular + Lucene\n> \n> I have searched lot of projects in github and other places. I don't find a good UI demo with spring with lucene and angular.\n> \n> Can someone help me with a good reference?\n> \n> Thanks.\n**sorry,but you can try to use the specified plug-in of github to find it ~**",
                "time": "2019-11-01 04:33:45",
                "index": 1,
                "user": "YUbuntu0109"
            },
            {
                "id": "5dbbb77ef26ea4729d3205ef",
                "text": "such as the plug-in of `Awesome Autocomplete for GitHub` @prog20901 ",
                "time": "2019-11-01 04:41:34",
                "index": 2,
                "user": "YUbuntu0109"
            }
        ]
    },
    {
        "id": 644,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f1ab261fe6ecd28886e679c",
                "text": " Hi all, In Spring WebFLux, what is the exact difference between   Mono.fromCallable   and Mono.fromSupplier? ",
                "time": "2020-07-24 10:05:21",
                "index": 0,
                "user": "prasanthkumar2392"
            },
            {
                "id": "5f1ab6dd77eccd0e14704248",
                "text": "what are the scenarios for using the same as both does lazy loading",
                "time": "2020-07-24 10:24:29",
                "index": 1,
                "user": "prasanthkumar2392"
            },
            {
                "id": "5f1abb58cd7bed0e3789d6a8",
                "text": "@prasanthkumar2392 There's no difference, other than the type that's used to supply the value. `Callable` will let you throw a checked exception. That's it. You should use whichever one is the best fit for your needs.",
                "time": "2020-07-24 10:43:36",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5f1abb71f8dfed4382b80996",
                "text": "@wilkinsona  Thanks Andy",
                "time": "2020-07-24 10:44:01",
                "index": 3,
                "user": "prasanthkumar2392"
            },
            {
                "id": "5f1abb8377eccd0e14704d98",
                "text": "BTW, https://gitter.im/reactor/reactor is a better place for Reactor questions that aren't specific to Spring Boot.",
                "time": "2020-07-24 10:44:19",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 645,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dcd9ebb50010612b2baefd9",
                "text": "Does anybody know how to get Implementation-Version to show up in the MANIFEST.MF when using the spring boot gradle plugin? I can get buildInfo to work, but that still doesn't allow the StartupInfoLogger to print my application version",
                "time": "2019-11-14 18:36:43",
                "index": 0,
                "user": "Sineaggi"
            },
            {
                "id": "5dcda31752b73c7cb21a182e",
                "text": "Found it, it's not documented but it works.",
                "time": "2019-11-14 18:55:19",
                "index": 1,
                "user": "Sineaggi"
            },
            {
                "id": "5dcda31a35889012b10ac78e",
                "text": "```\nbootJar {\n    manifest {\n        attributes 'Implementation-Version': archiveVersion.get()\n    }\n}\n```",
                "time": "2019-11-14 18:55:22",
                "index": 2,
                "user": "Sineaggi"
            },
            {
                "id": "5dcdaa065eb2e813db24e289",
                "text": "@Sineaggi Glad to see you worked it out. I'm curious to learn why you consider it to be undocumented. `BootJar` is an subclass of Gradle's `Jar` task so it's documented in Gradle's docs. See https://docs.gradle.org/current/userguide/building_java_projects.html#sec:jar_manifest for example.",
                "time": "2019-11-14 19:24:54",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5dcdb4e35eb2e813db2537ce",
                "text": "@wilkinsona That the getStartupMessage function in StartupInfoLogger reads `Implementation-Version` for application startup, and that the buildInfo, while it contains the application version, does not get queried for application startup.",
                "time": "2019-11-14 20:11:15",
                "index": 4,
                "user": "Sineaggi"
            },
            {
                "id": "5dcdd2f9091dd14a0ebeee33",
                "text": "@Sineaggi, what he means is that the functionality to add that attribute to the Manifest is purely a Gradle thing, it has nothing to do with the plugin nor spring. The `bootJar` task is an extension of Gradle's Java plugin `jar` task",
                "time": "2019-11-14 22:19:37",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5dce6fe452b73c7cb21feb94",
                "text": "@Sineaggi Thank you. We document it for the banner (https://docs.spring.io/spring-boot/docs/2.2.x/reference/htmlsingle/#boot-features-banner) but not for the general startup info. I've opened https://github.com/spring-projects/spring-boot/issues/19026 to improve things. Build info isn't used as it's an Actuator concept and the startup info is logged too early for Actuator to be involved.",
                "time": "2019-11-15 09:29:08",
                "index": 11,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 646,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e9188a2f450c25cc8d214ce",
                "text": "I have met a probleam like this,my question is what causes this?  \"ERROR org.springframework.web.server.adapter.HttpWebHandlerAdapter Line:213 - Unhandled failure: Connection has been closed, response already set (status=null)\"",
                "time": "2020-04-11 09:06:42",
                "index": 0,
                "user": "fengjiagang"
            },
            {
                "id": "5e91a1d0fea5216d6970a15a",
                "text": "@fengjiagang hard to say without more context. We had similar exception messages in previous Spring Framework versions but they should be suppressed now. See https://github.com/spring-projects/spring-framework/issues/21790",
                "time": "2020-04-11 10:54:08",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5e91a1fcfea5216d6970a1ca",
                "text": "ok,Thanks so much!",
                "time": "2020-04-11 10:54:52",
                "index": 2,
                "user": "fengjiagang"
            }
        ]
    },
    {
        "id": 647,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ec41b400f31e03a30759101",
                "text": "In our project we are using spring boot gradle plugin 2.3.0.RELEASE with Gradle 6.3 and trying to use `layeredJar` option. This is scala application which uses spring boot for packaging. Without `layeredJar` option build works fine and boot jar gets build. However after enabled `layeredJar` option it fails with following option\n\n```\nExecution failed for task ':standalone:bootJar'.\n> Could not resolve all dependencies for configuration ':standalone:incrementalScalaAnalysisFormain'.\n   > Could not resolve org.rogach:scallop_2.13:3.3.1.\n     Required by:\n         project :standalone\n      > Unable to find a matching variant of org.rogach:scallop_2.13:3.3.1:\n          - Variant 'compile' capability org.rogach:scallop_2.13:3.3.1:\n              - Incompatible attribute:\n                  - Required org.gradle.usage 'incremental-analysis' and found incompatible value 'java-api'.\n              - Other attributes:\n                  - Found org.gradle.category 'library' but wasn't required.\n                  - Found org.gradle.libraryelements 'jar' but wasn't required.\n                  - Found org.gradle.status 'release' but wasn't required.\n```\n\nAny pointers on what may be wrong. Gradle uses following plugin\n\n```\nplugins {\n    id \"scala\"\n    id \"org.springframework.boot\"\n    id \"com.gorylenko.gradle-git-properties\"\n}\n```",
                "time": "2020-05-19 17:45:36",
                "index": 0,
                "user": "chetanmeh"
            },
            {
                "id": "5ec43a4d7da13f3a0ac3cda0",
                "text": "@chetanmeh Building a layered jar will resolve configurations to get dependencies group ID and artifact ID so that they can be included in different layers. I'd guess, and it's only a guess, that it's this resolution that's failing. I can't explain why, however, as we do nothing more than ask Gradle to resolve the configuration. If you can provide a minimal sample that reproduces the problem, please open a Spring Boot issue and we'll take a look.",
                "time": "2020-05-19 19:58:05",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5ec43aa47da13f3a0ac3ce82",
                "text": "Thanks @wilkinsona for looking into this. Would try to isolate the issue in a minimal project",
                "time": "2020-05-19 19:59:32",
                "index": 11,
                "user": "chetanmeh"
            },
            {
                "id": "5ec443570f31e03a30760494",
                "text": "Created https://github.com/spring-projects/spring-boot/issues/21511",
                "time": "2020-05-19 20:36:39",
                "index": 12,
                "user": "chetanmeh"
            },
            {
                "id": "5ec4e58a990d343a5f3c357c",
                "text": "@wilkinsona I followed your suggested workaround for https://github.com/spring-projects/spring-boot/issues/21511 and now jar gets built. Normal execution works fine\n\n```bash\n$ java -jar build/libs/spring-book-scala-demo.jar\nhello world\n```\n\nBut when trying to launch with `jarmode` it fails with CNFE\n\n```bash\n$ java -jar -Djarmode=layertools build/libs/spring-book-scala-demo.jar\nException in thread \"main\" java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:109)\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:58)\n\tat org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88)\nCaused by: java.lang.NoClassDefFoundError: org/springframework/util/ClassUtils\n\tat org.springframework.boot.loader.jarmode.JarModeLauncher.main(JarModeLauncher.java:40)\n\t... 8 more\nCaused by: java.lang.ClassNotFoundException: org.springframework.util.ClassUtils\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n\tat org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:129)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\t... 9 more\n```\n\nIf I see the listing of generated jar I can see `spring-boot-jarmode-layertools-2.3.0.RELEASE.jar`\n\n```\n$ unzip -l build/libs/spring-book-scala-demo.jar\nArchive:  build/libs/spring-book-scala-demo.jar\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n        0  05-20-2020 13:17   META-INF/\n      321  05-20-2020 13:17   META-INF/MANIFEST.MF\n        0  02-01-1980 00:00   org/\n        0  02-01-1980 00:00   org/springframework/\n        0  02-01-1980 00:00   org/springframework/boot/\n        0  02-01-1980 00:00   org/springframework/boot/loader/\n...\n        0  05-20-2020 13:17   BOOT-INF/\n        0  05-20-2020 13:17   BOOT-INF/classes/\n        0  05-20-2020 13:17   BOOT-INF/classes/com/\n        0  05-20-2020 13:17   BOOT-INF/classes/com/example/\n      687  05-20-2020 13:17   BOOT-INF/classes/com/example/Main$.class\n      654  05-20-2020 13:17   BOOT-INF/classes/com/example/Main.class\n        0  05-20-2020 13:17   BOOT-INF/lib/\n   356471  04-26-2020 23:25   BOOT-INF/lib/scallop_2.13-3.3.1.jar\n  5865349  04-26-2020 23:24   BOOT-INF/lib/scala-library-2.13.2.jar\n    30650  05-20-2020 13:17   BOOT-INF/lib/spring-boot-jarmode-layertools-2.3.0.RELEASE.jar\n       56  05-20-2020 13:17   BOOT-INF/classpath.idx\n      212  05-20-2020 13:17   BOOT-INF/layers.idx\n---------                     -------\n  6478030                     83 files\n```",
                "time": "2020-05-20 08:08:42",
                "index": 16,
                "user": "chetanmeh"
            },
            {
                "id": "5ec4e724b0256038f9dec316",
                "text": "Looks like https://github.com/spring-projects/spring-boot/blob/e513fe4666acb99c97fdbedd85afb85849bb753f/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jarmode/JarModeLauncher.java depends on Spring classes and as in my app there are no spring dependencies getting packaged it causes issue. Probably would need to include some spring dependencies also",
                "time": "2020-05-20 08:15:32",
                "index": 17,
                "user": "chetanmeh"
            },
            {
                "id": "5ec4ecd92f83c139ef9182fe",
                "text": "@chetanmeh That's correct. The jar mode support assumes that you are developing a Spring-based application. You'll need to add a dependency on `spring-core`",
                "time": "2020-05-20 08:39:53",
                "index": 19,
                "user": "wilkinsona"
            },
            {
                "id": "5ec4efb2940fa238d603a79f",
                "text": "Adding them gets it going. Would now try the Docker part.",
                "time": "2020-05-20 08:52:02",
                "index": 21,
                "user": "chetanmeh"
            }
        ]
    },
    {
        "id": 648,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf27b6a1665691e0fc89806",
                "text": "Can anyone suggest a way of making a HTTP header received in a REST request available to a Jackson custom bean serializer?",
                "time": "2018-11-19 08:59:22",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5bf28299b86c70503f541c20",
                "text": "@mplanchant It sounds like a slightly brittle thing to do. Putting that aside, you could use Spring MVC's RequestContextHolder to get the current request and get the headers from there",
                "time": "2018-11-19 09:30:01",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bf28578ddad8777ef89235c",
                "text": "@wilkinsona yes, that's what I've been looking at. In what way would this be brittle? I'd probably be looking at a session property rather than the HTTP header itself. Can you suggest an alternative?",
                "time": "2018-11-19 09:42:16",
                "index": 6,
                "user": "mplanchant"
            },
            {
                "id": "5bf2888b2ef5b06e408ce48b",
                "text": "It's the increased coupling introduced by tying a (de)serialiser to HTTP and Spring MVC that feels brittle to me. I'd also be a little bit concerned about allow a client to have control over how (de)serialisation is performed. It's hard to suggest alternatives without know more about what you're trying to do.",
                "time": "2018-11-19 09:55:23",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5bf290446183a977eede4645",
                "text": "@wilkinsona yep, that makes sense.  The header would not be added by the client. It would be added by an API gateway after the user has authenticated with it. I'm trying to devise a way to provide custom responses for different user groups. We'd previously been using `@JsonView`  annotations which worked well but the DTOs got quite complicated once the number of consumers increased and we needed a way of configuring the returned fields through properties rather than code.",
                "time": "2018-11-19 10:28:20",
                "index": 8,
                "user": "mplanchant"
            },
            {
                "id": "5bf2908380652945c3863cb9",
                "text": "@mplanchant this sounds a lot like custom media types; we're doing this for start.spring.io",
                "time": "2018-11-19 10:29:23",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5bf291c94720c11e0e8dadb6",
                "text": "@bclozel wouldn't I then need to create a custom DTO for each of my media types (or consumer groups)? I'm trying to move information about which fields are included in a response from code to configuration.",
                "time": "2018-11-19 10:34:49",
                "index": 10,
                "user": "mplanchant"
            },
            {
                "id": "5bf292d3951402310a6f2358",
                "text": "@mplanchant yes, that or views; I'm wondering if custom serializers could be doable as well",
                "time": "2018-11-19 10:39:15",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5bf293fc4bad337eb9026f07",
                "text": "@mplanchant I'm not 100% sure about what you're trying to do, but maybe using a `ResponseBodyAdvice` would work in your case. You get a chance to modify the object returned from the controller handler before it's handed to the message converter. See https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web.html#mvc-handlermapping-interceptor",
                "time": "2018-11-19 10:44:12",
                "index": 12,
                "user": "bclozel"
            },
            {
                "id": "5bf294184720c11e0e8dbb8d",
                "text": "(Json views are supported that way, actually)",
                "time": "2018-11-19 10:44:40",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5bf2967f9f5a9e6e410b7c85",
                "text": "thanks @bclozel I'll take a look at `ResponseBodyAdvice`",
                "time": "2018-11-19 10:54:55",
                "index": 14,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 649,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e1c059dcb2aaa2d782c928c",
                "text": "Did anyone have a problem with 414 responses via webClient? In my scenario consuming api returns HTML (nginx) default response (unexpected - it should be some kind of json), and it is even bearable - the worse is that it only occurs on production... because in my environment the request just hungs down (or response actually). I am on windows, production is on ubuntu",
                "time": "2020-01-13 05:52:29",
                "index": 0,
                "user": "Azbesciak"
            },
            {
                "id": "5e1c2ec20aba1f0d802671d9",
                "text": "@Azbesciak this might help you https://stackoverflow.com/questions/1067334/how-to-set-the-allowed-url-length-for-a-nginx-request-error-code-414-uri-too",
                "time": "2020-01-13 08:48:02",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5e2035e90dbd9379ed456fd0",
                "text": "@boda2004 the problem is that that nginx is not mine - I am using this API, only. And pay for it...",
                "time": "2020-01-16 10:07:37",
                "index": 47,
                "user": "Azbesciak"
            }
        ]
    },
    {
        "id": 650,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e9232d8fea5216d6971f192",
                "text": "How do I configure multiple datasources in spring boot. Something like if the first datasource doesn't connect to  fallback to the other one? I was wondering I could configure it via Tomcat?",
                "time": "2020-04-11 21:12:56",
                "index": 0,
                "user": "jeevan1133"
            },
            {
                "id": "5e92b1f538198d56a1983474",
                "text": "https://medium.com/@joeclever/using-multiple-datasources-with-spring-boot-and-spring-data-6430b00c02e7",
                "time": "2020-04-12 06:15:17",
                "index": 1,
                "user": "akkida746"
            },
            {
                "id": "5e92b2c1f450c25cc8d4a7b5",
                "text": "you need to create two separate packages having entities managed by each entity manager. Create two config classes and initialize entity managers persisting entities from different packages.",
                "time": "2020-04-12 06:18:41",
                "index": 2,
                "user": "akkida746"
            },
            {
                "id": "5e935f611aaf8e4b8e7a650f",
                "text": "@akkida746  the way you described doesn't work as a fallback datasource method. I wanted more like if the first datasource is down, connect to the other datasource",
                "time": "2020-04-12 18:35:13",
                "index": 3,
                "user": "jeevan1133"
            },
            {
                "id": "5e94497de7ca460b06588ed8",
                "text": "@jeevan1133  you can use ha-jdbc https://github.com/lievendoclo/hajdbc-spring-boot",
                "time": "2020-04-13 11:14:05",
                "index": 8,
                "user": "swapy"
            }
        ]
    },
    {
        "id": 651,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd3baeb52b73c7cb244004e",
                "text": "Currently we evaluate our application with `BlockHound` and it seems there is something blocking our event loop that's somehow tied to Spring Core Session stuff. Our stack trace looks like\n```\njava.lang.Error: Blocking call! java.io.FileInputStream#readBytes\n\tat reactor.blockhound.BlockHound$Builder.lambda$new$0(BlockHound.java:196) ~[blockhound-1.0.1.RELEASE.jar:na]\n\tat reactor.blockhound.BlockHound$Builder.lambda$install$6(BlockHound.java:318) ~[blockhound-1.0.1.RELEASE.jar:na]\n\tat reactor.blockhound.BlockHoundRuntime.checkBlocking(BlockHoundRuntime.java:46) ~[na:na]\n\tat java.base/java.io.FileInputStream.readBytes(FileInputStream.java) ~[na:na]\n\tat java.base/java.io.FileInputStream.read(FileInputStream.java:279) ~[na:na]\n\tat java.base/java.io.FilterInputStream.read(FilterInputStream.java:133) ~[na:na]\n\tat java.base/sun.security.provider.NativePRNG$RandomIO.readFully(NativePRNG.java:424) ~[na:na]\n\tat java.base/sun.security.provider.NativePRNG$RandomIO.ensureBufferValid(NativePRNG.java:526) ~[na:na]\n\tat java.base/sun.security.provider.NativePRNG$RandomIO.implNextBytes(NativePRNG.java:545) ~[na:na]\n\tat java.base/sun.security.provider.NativePRNG.engineNextBytes(NativePRNG.java:220) ~[na:na]\n\tat java.base/java.security.SecureRandom.nextBytes(SecureRandom.java:741) ~[na:na]\n\tat java.base/java.util.UUID.randomUUID(UUID.java:150) ~[na:na]\n\tat org.springframework.util.JdkIdGenerator.generateId(JdkIdGenerator.java:31) ~[spring-core-5.1.11.RELEASE.jar:5.1.11.RELEASE]\n\tat org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession.<init>(InMemoryWebSessionStore.java:165) ~[spring-web-5.1.11.RELEASE.jar:5.1.11.RELEASE]\n\tat org.springframework.web.server.session.InMemoryWebSessionStore.lambda$createWebSession$0(InMemoryWebSessionStore.java:116) ~[spring-web-5.1.11.RELEASE.jar:5.1.11.RELEASE]\n\tat reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:56) ~[reactor-core-3.2.12.RELEASE.jar:3.2.12.RELEASE]\n...\n```\nAnyone an idea what's going on?",
                "time": "2019-11-19 09:50:35",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5dd3c89092a84f79fe950a03",
                "text": "@kschlesselmann That looks like a bug to me and I've passed it on to the Framework team. They've suggested whitelisting `InMemoryWebSessionStore$InMemoryWebSession.<init>` with BlockHound as a temporary workaround for now",
                "time": "2019-11-19 10:48:48",
                "index": 9,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 652,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cb87c4ab489bb6ed7849d3b",
                "text": "Hello! Updating from Spring Boot 2.1.3 to 2.1.4 I\u2019m getting this exception on startup:\n```\n org.springframework.beans.NotWritablePropertyException: Invalid property 'escapeCharacter' of bean class [MyRepositoryFactoryBean]: Bean property 'escapeCharacter' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n```\nAny idea what might be causing this?",
                "time": "2019-04-18 13:31:54",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5cb87dd46a84d76ed8b45b53",
                "text": "Reverting back to 2.1.3 the app starts fine.",
                "time": "2019-04-18 13:38:28",
                "index": 1,
                "user": "heruan"
            },
            {
                "id": "5cb87de68446a6023e37aed9",
                "text": "@heruan http://lmgtfy.com/?q=%22is+not+writable+or+has+an+invalid+setter+method.+Does+the+parameter+type+of+the+setter+match+the+return+type+of+the+getter%3F%22",
                "time": "2019-04-18 13:38:46",
                "index": 2,
                "user": "konstantinblaesi"
            },
            {
                "id": "5cb87df58446a6023e37aefc",
                "text": "guessing that your class lacks setter/getter for escapeCharacter ?",
                "time": "2019-04-18 13:39:01",
                "index": 3,
                "user": "konstantinblaesi"
            },
            {
                "id": "5cb87e5797dcb371d8d2d9e0",
                "text": "@konstantinblaesi No need to Google that for me, I\u2019ve already passed a couple of hours looking for that. I\u2019ve no `escapeCharacter` field in my class, it just extends Spring\u2019s own `TransactionalRepositoryFactoryBeanSupport`.",
                "time": "2019-04-18 13:40:39",
                "index": 4,
                "user": "heruan"
            },
            {
                "id": "5cb87e9ce416b845199d8333",
                "text": "Something must have changed somewhere between 2.1.3 and 2.1.4, breaking this.",
                "time": "2019-04-18 13:41:48",
                "index": 5,
                "user": "heruan"
            },
            {
                "id": "5cb87f863b6cb0686a12bc5d",
                "text": "well where is that MyRepositoryFactoryBean coming from then",
                "time": "2019-04-18 13:45:42",
                "index": 6,
                "user": "konstantinblaesi"
            },
            {
                "id": "5cb87fa58790b0307ec03fb5",
                "text": "It\u2019s my class, which extends `TransactionalRepositoryFactoryBeanSupport`.",
                "time": "2019-04-18 13:46:13",
                "index": 7,
                "user": "heruan"
            },
            {
                "id": "5cb880015b3f941aa550a63e",
                "text": "maybe one of the classes you extend from has escapeCharacter and for some weird reason spring DI now wants to set it ?",
                "time": "2019-04-18 13:47:45",
                "index": 8,
                "user": "konstantinblaesi"
            },
            {
                "id": "5cb8806b375bac7470c5897f",
                "text": "I couldn\u2019t find that property in the hierarchy, unfortunately. Could be something corrupted on my side, I\u2019ll try to flush the Maven cache and rebuild the whole thing.",
                "time": "2019-04-18 13:49:31",
                "index": 9,
                "user": "heruan"
            }
        ]
    },
    {
        "id": 653,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bbcbeb2ae7be9401628a2fc",
                "text": "any idea why the ```spring-boot-starter-tomcat``` does not use centralized managed tomcat dependencies? they are not defined in spring-bom and also do not use a property for the version.",
                "time": "2018-10-09 14:44:02",
                "index": 0,
                "user": "thackel"
            },
            {
                "id": "5bbcc07d38449236610ccf52",
                "text": "https://github.com/spring-projects/spring-boot/blob/fa47073d1142dd683806a95dac013bb28377da4b/spring-boot-project/spring-boot-dependencies/pom.xml#L1714-L1752",
                "time": "2018-10-09 14:51:41",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bbcc23a5331811c2e75980f",
                "text": "@snicoll but they are not used in the pom of the tomcat starter, at least not in 2.0.5",
                "time": "2018-10-09 14:59:06",
                "index": 2,
                "user": "thackel"
            },
            {
                "id": "5bbcc26ec7bf7c3662dfacc2",
                "text": "They are. Perhaps we could take a step back and describe what problem you\u2019re actually facing?",
                "time": "2018-10-09 14:59:58",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bbcc4ade65a634336ab5e4d",
                "text": "@snicoll i have a manual (test)inclusion of an EL impl. and i wondered why i had a fixed version here instead of relying on the bom of boot. but now i figured out that the pom which is shown in _eclipse_ when diving into jar dependencies does not contain any ```${properties}``` they are always substituted. so i had the wrong impression that there where no ```${version.properties}``` for tomcat. sorry for wasting your time",
                "time": "2018-10-09 15:09:33",
                "index": 7,
                "user": "thackel"
            },
            {
                "id": "5bbcc4d0271506518de127d9",
                "text": "@thackel always use the command line first as the IDE may mess things up",
                "time": "2018-10-09 15:10:08",
                "index": 8,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 654,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5bbf59d5bbdc0b250522db16",
                "text": "I was wondering: Are there any plans for spring-boot-actuator to support the HealthCheck API from the HealthCheck 1.0 Specs?\n https://github.com/eclipse/microprofile-health",
                "time": "2018-10-11 14:10:29",
                "index": 0,
                "user": "mcbeelen_twitter"
            },
            {
                "id": "5bc0496e271506518dfa9f25",
                "text": "@mcbeelen_twitter No",
                "time": "2018-10-12 07:12:46",
                "index": 9,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 655,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ce3ac089d64e537bce59735",
                "text": "Hello, can anyone offer some advice on how I should handle monetary values in the request body of a REST API? My feeling is that I should only accept these as Strings which match a pattern (so to enforce two decimal places and avoid loss of precision) but that the properties on my DTO should be BigDecimals with a custom deserializer converting from String to BigDecimal.  What's the best approach here?",
                "time": "2019-05-21 07:43:04",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5ce3ae9fecdf942b4c1c86bc",
                "text": "how about `spring.jackson.deserialization.USE_BIG_DECIMAL_FOR_FLOATS=true`",
                "time": "2019-05-21 07:54:07",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3af399d64e537bce5ad4c",
                "text": "that will automatically give you BigDecimals in your request body POJO.\n\nalso, are you really sure about the two decimal place restriction? fractions smaller than 1/100 of a dollar do exist..",
                "time": "2019-05-21 07:56:41",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3b2827c363c75a7190ad8",
                "text": "@tonisostrat My request body POJO has properties which are BigDecimals so I don't think that's an issue. I'm in the UK and will only ever be receiving GBP.",
                "time": "2019-05-21 08:10:42",
                "index": 6,
                "user": "mplanchant"
            },
            {
                "id": "5ce3b43cad024978c601e9b6",
                "text": "but if they're already BigDecimal then what's the problem?",
                "time": "2019-05-21 08:18:04",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3b54ab313d72314016913",
                "text": "I'm using `@Digits` on the `BigDecimal` properties to enforce two decimals places",
                "time": "2019-05-21 08:22:34",
                "index": 8,
                "user": "mplanchant"
            },
            {
                "id": "5ce3b56b83ae782aeea50d1e",
                "text": "but the OAS spec which SpringFox is generating doesn't include this validation",
                "time": "2019-05-21 08:23:07",
                "index": 9,
                "user": "mplanchant"
            },
            {
                "id": "5ce3b58d879f4478c7b6e93a",
                "text": "probably because it's not possible using OAS 2.0",
                "time": "2019-05-21 08:23:41",
                "index": 10,
                "user": "mplanchant"
            },
            {
                "id": "5ce3b6f39404bf2aed828c84",
                "text": "you can use `@Digits` to cap the precision in your code but i think the only way to get that limit to also be displayed in the spec file is to use a regex-pattern",
                "time": "2019-05-21 08:29:39",
                "index": 11,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3b74a879f4478c7b6f528",
                "text": "the properties have type `number` in the spec though",
                "time": "2019-05-21 08:31:06",
                "index": 13,
                "user": "mplanchant"
            },
            {
                "id": "5ce3b7e5ef853135c8f90ad7",
                "text": "in that case you're out of luck - OAS doesn't have a specific format for capped-precision numbers.",
                "time": "2019-05-21 08:33:41",
                "index": 18,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3b8df6366992a94f61423",
                "text": "@tonisostrat yep, that's what I though. I was hoping there was a way  around this by forcing the requests to include monetary values as Strings then implicitly converting them to BigDecimal if they were valid (i.e. matched  a pattern)",
                "time": "2019-05-21 08:37:51",
                "index": 19,
                "user": "mplanchant"
            },
            {
                "id": "5ce3c83f0ac9852a95154693",
                "text": "that's basically the only way to do it, yes.",
                "time": "2019-05-21 09:43:27",
                "index": 20,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3c8ff63dea422b4bce87f",
                "text": "but honestly the string+pattern thing is overkill. just leave it as a number in the spec and add a note to the documentation stating that since it's a monetary value you only accept 1/100 precision and everything after that gets cut off and then add a custom validator annotation in the POJO that either rounds up or throws an Exception if the precision is smaller than 1/100",
                "time": "2019-05-21 09:46:39",
                "index": 21,
                "user": "tonisostrat"
            },
            {
                "id": "5ce3c955ef853135c8f98993",
                "text": "@tonisostrat yep, that's my plan",
                "time": "2019-05-21 09:48:05",
                "index": 22,
                "user": "mplanchant"
            },
            {
                "id": "5ce3c9b175d9a575a61b810c",
                "text": "I have the relevant properties annotated with `@Digits(integer = 6, fraction = 2)` in my DTOs",
                "time": "2019-05-21 09:49:37",
                "index": 23,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 656,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be0352c076992347abc6a3f",
                "text": "I have an application using webflux and reactor-netty. I would like to return a protobuf object from a rest api.  I created a bean for ProtobufJsonFormatHttpMessageConverter. How do I register this convert for a service that produces application/x-protobuf? This service is currenty defaulting to jackson, which fails.",
                "time": "2018-11-05 12:18:52",
                "index": 0,
                "user": "wjohnst3"
            },
            {
                "id": "5be03687b9c9191954a5040e",
                "text": "@wjohnst3 are you using Spring Boot 2.1.0? If so, it's now supported out of the box with https://jira.spring.io/browse/SPR-15776",
                "time": "2018-11-05 12:24:39",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5be0370225b9875faed87251",
                "text": "@wjohnst3 If you want to support that yourself, Spring WebFlux is using `EncoderHttpMessageWriter` implementations - `HttpMessageConverter` implementations are blocking and designed for Spring MVC",
                "time": "2018-11-05 12:26:42",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5be03c4a995818347ba7f3c6",
                "text": "Nice. Thanks for the info @bclozel. I 'll check out 2.1.0.",
                "time": "2018-11-05 12:49:14",
                "index": 3,
                "user": "wjohnst3"
            }
        ]
    },
    {
        "id": 657,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5edbb0fcdaf4cf366ee6675b",
                "text": "Hi all. Before filing a bug/feature request, I'd like to check if what I had is really a bug, or if it's a feature. If I have liquibase in the classpath, but `spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration` in the application.yml file, Liquibase is indeed excluded when running the app, but not when executing tests annotated with `@DataJpaTest`. I would have expected the exclusion to be also applicable to the tests. The workaround is trivial: use `@DataJpaTest(excludeAutoConfiguration = LiquibaseAutoConfiguration.class)`. ",
                "time": "2020-06-06 15:06:36",
                "index": 0,
                "user": "jnizet"
            },
            {
                "id": "5edbfc73a3a1b13679d00d5a",
                "text": "@jnizet I think that\u2019s a bug (although I wonder who we may break if we fix it). `@DataJpaTest` is, effectively, doing an `@ImportAutoConfigurarion` for `LiquibaseAutoConfiguration` and the exclude isn\u2019t being considered. Please open an issue so we can figure out what to do.",
                "time": "2020-06-06 20:28:35",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5edc0b1e22dd444224028654",
                "text": "Thanks @wilkinsona . Done: https://github.com/spring-projects/spring-boot/issues/21736",
                "time": "2020-06-06 21:31:10",
                "index": 4,
                "user": "jnizet"
            },
            {
                "id": "5edc855822dd44422403717f",
                "text": "Thanks",
                "time": "2020-06-07 06:12:40",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 658,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e1f1a5394656d7d5706c39f",
                "text": "Hi, in spring-boot-dependencies version 2.2.2 the following incompatible libraries are being managed: org.eclipse.jetty:jetty-util:9.4.24.v2191120 and org.glassfish.jersey.containers:jersey-container-jetty-http:2.29.1\nThe incompatibility was fixed in jersey version 2.30 (see https://github.com/eclipse-ee4j/jersey/commit/1504174ace92ff8cbeb13f5b588edd598466e18b)\nIs this the right channel to report the issue? According to the github issue template I shouldn't raise an issue in github to upgrade a library.",
                "time": "2020-01-15 13:57:39",
                "index": 0,
                "user": "NielsDoucet"
            },
            {
                "id": "5e1f1a7cbe66165ecbd465f8",
                "text": "the error resulting from this combination of libraries is: java.lang.IllegalAccessError: org.glassfish.jersey.jetty.JettyHttpContainerFactory$JettyConnectorThreadPool.newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;",
                "time": "2020-01-15 13:58:20",
                "index": 1,
                "user": "NielsDoucet"
            },
            {
                "id": "5e1f1a91df9e137d58ea5967",
                "text": "@NielsDoucet Thanks for the feedback. An incompatiblity is more a bug than a dependency upgrade request. If you can provide more details, we\u2019d like an issue please",
                "time": "2020-01-15 13:58:41",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5e1f1aa7df9e137d58ea598a",
                "text": "will do, thanks :+1: ",
                "time": "2020-01-15 13:59:03",
                "index": 3,
                "user": "NielsDoucet"
            }
        ]
    },
    {
        "id": 659,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c3465ea1491b27876db9c6c",
                "text": "Hi, I have created a common jar file to be included in my multiple spring-boot applications. This common jar has class annotated with`ControllerAdvice` for handling exception but when I include the jar in my project other beans (`Services`, `Configurations`, `Component`) get autowired but `ControllerAdvice` doesn't get injected. Even if I use `ComponentScan` to include the `ControllerAdvice` annotation the exceptions are not being caught.",
                "time": "2019-01-08 08:57:14",
                "index": 0,
                "user": "TaimoorChoudhary"
            },
            {
                "id": "5c354b4926d86e4d5648dee5",
                "text": "@TaimoorChoudhary problem resolved?",
                "time": "2019-01-09 01:15:53",
                "index": 100,
                "user": "Vassilio"
            },
            {
                "id": "5c358714bd592b2e6e753d42",
                "text": "@Vassilio No I am still facing the issue",
                "time": "2019-01-09 05:31:00",
                "index": 102,
                "user": "TaimoorChoudhary"
            },
            {
                "id": "5c358a4a57c6883f9b865475",
                "text": "@TaimoorChoudhary   Is the construct of  the class with  @ControllerAdvice  invoked?",
                "time": "2019-01-09 05:44:42",
                "index": 103,
                "user": "Vassilio"
            },
            {
                "id": "5c358c431d1c2c3f9ce4a4fb",
                "text": "@Vassilio no the constructor of the @ControllerAdvice class is not invoked. If I create a new class in my project and extend it with the my @ControllerAdvice class  (which is present in a JAR file) then the class gets invoked.",
                "time": "2019-01-09 05:53:07",
                "index": 104,
                "user": "TaimoorChoudhary"
            }
        ]
    },
    {
        "id": 660,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ebbc4833c51a11913f881d8",
                "text": "Hey guys, is JavaTimeModule automatically included and register to the default ObjectMapper in newer Spring versions, my googlefu mostly finds older questions.",
                "time": "2020-05-13 09:57:23",
                "index": 0,
                "user": "Asamsig"
            },
            {
                "id": "5ebbe1a8852efc0adad68cf3",
                "text": "@Asamsig Yes. As described in Boot's reference docs, we create the `ObjectMapper` using Framework's `Jackson2ObjectMapperBuilder` and it will automatically register `JavaTimeModule` if it's found on the classpath",
                "time": "2020-05-13 12:01:44",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 661,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d07435ebb789747fb1b9f71",
                "text": "Hi guys, please help to how to remove boot-inf folder  from spring-boot (v-2.x) assembly??",
                "time": "2019-06-17 07:38:06",
                "index": 0,
                "user": "anishjha93"
            },
            {
                "id": "5d078f9fa8d9871b32a2a7ba",
                "text": "@anishjha93 If you don't want the `BOOT-INF` jar layout, you probably want to build your jar with something other than Boot's Maven or Gradle plugin.",
                "time": "2019-06-17 13:03:27",
                "index": 12,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 662,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bcfeb81600c5f6423fa905a",
                "text": "hello, i created Spring boot application. now i want to create notification system in my project.  if occurred some error in back-end I want to show Notification in front-end. do i have some plugin or something?  ",
                "time": "2018-10-24 03:48:17",
                "index": 0,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bd00f5b38449236618bed4c",
                "text": "u should config @ControllerAdivce and fire some messagebox mail",
                "time": "2018-10-24 06:21:15",
                "index": 1,
                "user": "geercode"
            },
            {
                "id": "5bd00f5fef4afc4f28c1ebff",
                "text": "@bhagyaperera123 ",
                "time": "2018-10-24 06:21:19",
                "index": 2,
                "user": "geercode"
            }
        ]
    },
    {
        "id": 663,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc4187b9c39821509fc5110",
                "text": "In an SQS listener, how can I call my controller's endpoints to utilize the thread pool in Spring without making an HttpRequest?",
                "time": "2019-11-07 13:13:31",
                "index": 0,
                "user": "mowol"
            },
            {
                "id": "5dc41f30e469ef4358dc7c3d",
                "text": "@mowol Which thread pool are you referring to when you say \"the thread pool\"?",
                "time": "2019-11-07 13:42:08",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dc41f91e469ef4358dc7eb9",
                "text": "@wilkinsona the thread pool that spring boot uses to handle multiple incoming requests. It is the netty thread pool",
                "time": "2019-11-07 13:43:45",
                "index": 4,
                "user": "mowol"
            },
            {
                "id": "5dc424917477946bad454474",
                "text": "@mowol That's could be a risky thing to do. Netty's thread pool is very small and relies on those threads never being blocked. Why do you want to use Netty's thread pool specifically and what sort of work do you want to run on it?",
                "time": "2019-11-07 14:05:05",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5dc425647477946bad454990",
                "text": "@wilkinsona I would like incoming messages on the SQS to be considered incoming requests to my controllers. In this way I can reuse any logic I might have in the controllers",
                "time": "2019-11-07 14:08:36",
                "index": 8,
                "user": "mowol"
            },
            {
                "id": "5dc42582ef84ab378611a9f3",
                "text": "@mowol that's what a `@Service` layer is for",
                "time": "2019-11-07 14:09:06",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5dc425a37477946bad454ae8",
                "text": "@OrangeDog If i use the methods in my Service layer i won't be able to reuse the logic from my controllers",
                "time": "2019-11-07 14:09:39",
                "index": 10,
                "user": "mowol"
            },
            {
                "id": "5dc425b110bd4128a1d7c20b",
                "text": "the logic that is reusable goes in the service",
                "time": "2019-11-07 14:09:53",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5dc425d2a3f0b17849030470",
                "text": "only web stuff goes in the controller, which is of no use for SQS",
                "time": "2019-11-07 14:10:26",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5dc4260ae469ef4358dcb3e6",
                "text": "Ok fair enough. But if i call methods in my service layer directly, the SQS listener will be blocked until the call is completed",
                "time": "2019-11-07 14:11:22",
                "index": 14,
                "user": "mowol"
            },
            {
                "id": "5dc42652a03ae1584f83ff3e",
                "text": "only if you do it synchronously",
                "time": "2019-11-07 14:12:34",
                "index": 15,
                "user": "OrangeDog"
            },
            {
                "id": "5dc426a9e469ef4358dcb7e9",
                "text": "use `@Async` or reactor ",
                "time": "2019-11-07 14:14:01",
                "index": 16,
                "user": "OrangeDog"
            },
            {
                "id": "5dc426d62f8a034357512ba9",
                "text": "I am using reactor. Are you saying the listener will automatically be asynchronous then?",
                "time": "2019-11-07 14:14:46",
                "index": 17,
                "user": "mowol"
            },
            {
                "id": "5dc42927fb4dab784a7e47f2",
                "text": "@mowol there are several ways to schedule synchronous work with reactor, see https://projectreactor.io/docs/core/release/reference/#faq.wrap-blocking",
                "time": "2019-11-07 14:24:39",
                "index": 18,
                "user": "bclozel"
            },
            {
                "id": "5dc429532f8a034357513ed7",
                "text": "Ah okay like that :)",
                "time": "2019-11-07 14:25:23",
                "index": 19,
                "user": "mowol"
            },
            {
                "id": "5dc429562f8a034357513ede",
                "text": "Thanks ",
                "time": "2019-11-07 14:25:26",
                "index": 20,
                "user": "mowol"
            }
        ]
    },
    {
        "id": 664,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dcbb5e550010612b2acd30d",
                "text": "Hi all how to implement JWT AuthorizationFilter in spring cloud gateway",
                "time": "2019-11-13 07:51:01",
                "index": 0,
                "user": "angeljohny87"
            },
            {
                "id": "5dcc0d62ca778c1fbff67f3d",
                "text": "@angeljohny87 if u have oauth2, u need the first 4 steps https://www.baeldung.com/spring-security-oauth-jwt",
                "time": "2019-11-13 14:04:18",
                "index": 1,
                "user": "ronaimate"
            },
            {
                "id": "5dccea49091dd14a0eb83572",
                "text": "@ronaimate  HI, I am not using oauth2. just spring security + database + jwt. So how to validate the JWT token in spring cloud gateway?",
                "time": "2019-11-14 05:46:49",
                "index": 34,
                "user": "angeljohny87"
            }
        ]
    },
    {
        "id": 665,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cd1aa1f2e2caa1aa6248888",
                "text": "Hi, I\u2019m using flyway in a spring boot app and I rely on the auto  configuration. I have a bean that depends on the schema to be migrated and I added ```@DependsOn({\"flyway\", \"flywayInitializer\u201d})```. The problem is that sometimes the app is not starting and it throws an error: ```\u2019bean name\u2019 depends on missing bean 'flyway'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'flyway\u2019 available```. Any idea?",
                "time": "2019-05-07 15:54:07",
                "index": 0,
                "user": "Melozzola"
            },
            {
                "id": "5cd1ac31e416b8451947b1fe",
                "text": "perhaps flyway wasn\u2019t auto-configured for those cases",
                "time": "2019-05-07 16:02:57",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cd1ba6f990feb45186bb31e",
                "text": "Uhm, @snicoll flyway autoconfiguration is alway on. My question then is: Is it save to use @DependsOn with beans that are defined by spring auto configurations? In my particular case flyway?",
                "time": "2019-05-07 17:03:43",
                "index": 4,
                "user": "Melozzola"
            },
            {
                "id": "5cd2777cda34620ff904423e",
                "text": "@Melozzola It doesn\u2019t matter how the bean was contributed, `@DependsOn` is a core framework feature. If you get the exception, the bean is most probably not available. There might be a bug of course. If you can reproduce in a small sample we can have a look",
                "time": "2019-05-08 06:30:20",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5cd28616252dbb75151d9958",
                "text": "Thanks @snicoll I\u2019ll see if I can write an example that reproduces it. Anyway, re-defining the flyway bean in my config seems to solve the problem for now. ",
                "time": "2019-05-08 07:32:38",
                "index": 12,
                "user": "Melozzola"
            }
        ]
    },
    {
        "id": 666,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc58f4e5eb2e813dbeb2845",
                "text": "Hi, we recently upgraded to spring boot 2.2.1.RELEASE and are seeing  `Exceeded limit on max bytes to buffer` when making a call with `WebClient`. I was trying to see if there is a configuration property to change the max buffer size. Anyone able to help with this?",
                "time": "2019-11-08 15:52:46",
                "index": 0,
                "user": "dylmeadows"
            },
            {
                "id": "5dc59620add5717a88d0bff7",
                "text": "@dylmeadows yes, see https://github.com/spring-projects/spring-boot/issues/18828 and you should be using `spring.codec.max-in-memory-size`; it's pretty new so feel free to share your experience and what you were doing while hitting that limit.",
                "time": "2019-11-08 16:21:52",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5dc599784adf071a84f3bae2",
                "text": "@bclozel I actually stumble upon it by traveling through the debugger and seeing how it was getting set. I'm actually setting it now but it's still defaulting to `256 * 1024` for the Jackson2XmlDecoder. And we are recalling order data from an Oracle database and the orders are large. We actually had to role back our production traffic to the version before the upgrade because we were pretty consistently exceeding the buffer limit \ud83d\ude05",
                "time": "2019-11-08 16:36:08",
                "index": 4,
                "user": "dylmeadows"
            },
            {
                "id": "5dc599ba5a979223c398bdf7",
                "text": "@dylmeadows Thanks for your feedback!",
                "time": "2019-11-08 16:37:14",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5dc59a51add5717a88d0dcdf",
                "text": "@bclozel I'm seeing where the decoder used by the WebClient is not having that property set.",
                "time": "2019-11-08 16:39:45",
                "index": 6,
                "user": "dylmeadows"
            },
            {
                "id": "5dc59a895eb2e813dbeb82ae",
                "text": "@dylmeadows are you instantiating your own `WebClient` with `WebClient.create()` or are you injecting a `WebClient.Builder` configured by Spring Boot?",
                "time": "2019-11-08 16:40:41",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5dc59af8fd6fe41fc04b1f42",
                "text": "@bclozel we are instantiating our own using `WebClient.builder()`. I had no idea there was a `WebClient.Builder` bean available.",
                "time": "2019-11-08 16:42:32",
                "index": 8,
                "user": "dylmeadows"
            },
            {
                "id": "5dc59b014adf071a84f3c758",
                "text": "@bclozel is that new or was that always the case?",
                "time": "2019-11-08 16:42:41",
                "index": 9,
                "user": "dylmeadows"
            },
            {
                "id": "5dc59b20add5717a88d0e33f",
                "text": "it's been the case for quite a while, we're applying the codec configuration to the client for you (like jackson preferences and so on)",
                "time": "2019-11-08 16:43:12",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5dc59b3768ad1c4a0f8e9685",
                "text": "you can either build the client from a Builder provided by Spring Boot, or you can configure the codecs on your own",
                "time": "2019-11-08 16:43:35",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5dc59b8a35889012b1d1cd99",
                "text": "Gotcha! Thanks for the guidance. Using the builder bean fixed it \ud83d\udc4d",
                "time": "2019-11-08 16:44:58",
                "index": 12,
                "user": "dylmeadows"
            },
            {
                "id": "5dc59d68fd6fe41fc04b3167",
                "text": "Just for reference, you can achieve the same manually:\n```\nExchangeStrategies exchangeStrategies = ExchangeStrategies.builder()\n\t\t\t\t.codecs(configurer -> configurer.defaultCodecs().maxInMemorySize(1024 * 10)).build();\n\t\tWebClient webClient = WebClient.builder().exchangeStrategies(exchangeStrategies).build();\n```",
                "time": "2019-11-08 16:52:56",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5dc59da5ca778c1fbfc952d4",
                "text": "Thanks \ud83d\udc4d",
                "time": "2019-11-08 16:53:57",
                "index": 14,
                "user": "dylmeadows"
            }
        ]
    },
    {
        "id": 667,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8e8d03f86b741b050a389a",
                "text": "Is it possible to have Json pretty print for spring reactive web project. My api returns `Flux<User>` with delay interval of 1 sec. But the ouput is not  rendered as pretty print for each user. Each user is returned as single line string.",
                "time": "2018-09-04 13:47:47",
                "index": 0,
                "user": "Sarvesh-D"
            },
            {
                "id": "5b8e8da4d8d36815e5d55f64",
                "text": "I have set the `content-type` for `ServerResponse` as `MediaType.APPLICATION_STREAM_JSON`.",
                "time": "2018-09-04 13:50:28",
                "index": 1,
                "user": "Sarvesh-D"
            },
            {
                "id": "5b8e986611227d711d148869",
                "text": "@Sarvesh-D I don't think this is possible, since `application/stream+json` is using CRLF as a meaning to split messages; I believe pretty-printing involves adding CRLF and breaking that contract",
                "time": "2018-09-04 14:36:22",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5b8ea75dc9500b4bab7fc861",
                "text": "@snicoll thanks that worked..",
                "time": "2018-09-04 15:40:13",
                "index": 9,
                "user": "Sarvesh-D"
            }
        ]
    },
    {
        "id": 668,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cf7c0726f530d3b613ea0f8",
                "text": "Query query = em.createQuery(criteriaQuery);\n\t        \n\t        //javax.persistence.Query q = em.createQuery(cq);\n\t\t\tquery.setMaxResults(criteria.getEndRange() - criteria.getStartRange());\n\t\t\tquery.setFirstResult(criteria.getStartRange());\n\t\t\tList<Object[]> result = query.getResultList();",
                "time": "2019-06-05 13:15:30",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5cf7c07d9b50f63935872aa9",
                "text": "How can I log this query",
                "time": "2019-06-05 13:15:41",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5cf7c08a82c2dc79a5555f25",
                "text": "Something is wrong with my query I need  debug it",
                "time": "2019-06-05 13:15:54",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5cf7c0a76f530d3b613ea2bc",
                "text": "I need to enable logging in hibernate layer",
                "time": "2019-06-05 13:16:23",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5cf7c0f0e41fe15e751788a2",
                "text": "`spring.jpa.show-sql=true` in application.properties will show you the Hibernate prepared statements",
                "time": "2019-06-05 13:17:36",
                "index": 4,
                "user": "glammr1"
            },
            {
                "id": "5cf7c103481ef4167bd42382",
                "text": "if you're using Spring JPA",
                "time": "2019-06-05 13:17:55",
                "index": 5,
                "user": "glammr1"
            },
            {
                "id": "5cf7c12e4dfb424004834139",
                "text": "if you need to see the exact queries you would need to turn on your database system's query logs",
                "time": "2019-06-05 13:18:38",
                "index": 6,
                "user": "glammr1"
            },
            {
                "id": "5cf7c1df702b7e5e7632e111",
                "text": "Ok.. thanks",
                "time": "2019-06-05 13:21:35",
                "index": 7,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 669,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c33bd485ec8fe5a8519205a",
                "text": "Hi Spring-Booters :), ",
                "time": "2019-01-07 20:57:44",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5c33bdce73360b4d55d33ad0",
                "text": "I'll need some insights about this issue raised after upgraded from Spring Boot 2.0 to Spring Boot 2.1.1 : https://stackoverflow.com/questions/54080567/spring-boot-2-1-exception-thrown-in-webmvcconfigureraddformatters-not-ca",
                "time": "2019-01-07 20:59:58",
                "index": 1,
                "user": "akuma8"
            },
            {
                "id": "5c33c048aac7082e6feca8a3",
                "text": "should your handler method be `public`?",
                "time": "2019-01-07 21:10:32",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5c33c0ff5ec8fe5a851938a7",
                "text": "@edeandrea Not necessarly since all `ResponseEntityExceptionHandler.class` are `protected` so I try to follow the same rule.",
                "time": "2019-01-07 21:13:35",
                "index": 3,
                "user": "akuma8"
            },
            {
                "id": "5c33c11b5ec8fe5a85193931",
                "text": "They aren\u2019t annotated with `@ExceptionHandler`",
                "time": "2019-01-07 21:14:03",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5c33c1238b6399655e226d77",
                "text": "Only `public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) throws Exception` is",
                "time": "2019-01-07 21:14:11",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5c33c127aac7082e6fecae2a",
                "text": "and it delegates to the others",
                "time": "2019-01-07 21:14:15",
                "index": 6,
                "user": "edeandrea"
            },
            {
                "id": "5c33c1ac8b6399655e227075",
                "text": "I've defined several  `protected` methods annotated with `@ExceptionHandler` and they are invoked. ",
                "time": "2019-01-07 21:16:28",
                "index": 8,
                "user": "akuma8"
            },
            {
                "id": "5c33c1bc1948ad07e803f488",
                "text": "Only this case doesn't work",
                "time": "2019-01-07 21:16:44",
                "index": 9,
                "user": "akuma8"
            },
            {
                "id": "5c33c1ec12db9607e750b840",
                "text": "do you have any that handle `Exception.class` or `RuntimeException.class`?",
                "time": "2019-01-07 21:17:32",
                "index": 10,
                "user": "edeandrea"
            },
            {
                "id": "5c33c2444ed182787774f04a",
                "text": "Yes, and I've just changed `protected` to `public` same result",
                "time": "2019-01-07 21:19:00",
                "index": 11,
                "user": "akuma8"
            },
            {
                "id": "5c33c29382a6c30b909e4e9b",
                "text": "do you have more than one `@RestControllerAdvice` class (or do you have more than one class in your application that has an `@ExceptionHandler` method)?",
                "time": "2019-01-07 21:20:19",
                "index": 12,
                "user": "edeandrea"
            },
            {
                "id": "5c33c2fd4ed182787774f4e5",
                "text": "if you put a breakpoint in your exception handler for `Exception.class` or `RuntimeException.class`, does it hit there instead of your `@ExceptionHandler(StatusNotFoundException .class)`?",
                "time": "2019-01-07 21:22:05",
                "index": 13,
                "user": "edeandrea"
            },
            {
                "id": "5c33c3361d1c2c3f9cd96fe8",
                "text": "Yes I have several  `@RestControllerAdvice` and each one has a `basePackages`",
                "time": "2019-01-07 21:23:02",
                "index": 14,
                "user": "akuma8"
            },
            {
                "id": "5c33c3b057c6883f9b7b2860",
                "text": "The breakpoint is never hit",
                "time": "2019-01-07 21:25:04",
                "index": 15,
                "user": "akuma8"
            },
            {
                "id": "5c33c444bd592b2e6e6a397e",
                "text": "All other cases works perfectly but this one. I didn't had the issue in Java 8/Spring Boot 2.0  but got it with Java 11/Spring Boot 2.1.1",
                "time": "2019-01-07 21:27:32",
                "index": 16,
                "user": "akuma8"
            },
            {
                "id": "5c33c4a857c6883f9b7b2e6c",
                "text": "hmmm off the top of my head i\u2019m not sure\u2026could be lots of different things\u2026if i worked on the spring team i\u2019d probably ask to put together as small of a sample as possible that reproduces it to look at - but i dont work on the spring team and i dont have a lot of time to work on other people\u2019s projects :(",
                "time": "2019-01-07 21:29:12",
                "index": 17,
                "user": "edeandrea"
            },
            {
                "id": "5c33c51f3cf6c35a84a806ee",
                "text": "what is actually returned? a 500 with your custom exception as the cause?",
                "time": "2019-01-07 21:31:11",
                "index": 18,
                "user": "edeandrea"
            },
            {
                "id": "5c33c546aac7082e6fecca29",
                "text": "I understand don't worry ;) ",
                "time": "2019-01-07 21:31:50",
                "index": 19,
                "user": "akuma8"
            },
            {
                "id": "5c33c5533cf6c35a84a8082e",
                "text": "It's returned 400",
                "time": "2019-01-07 21:32:03",
                "index": 20,
                "user": "akuma8"
            },
            {
                "id": "5c33c58573360b4d55d36dd9",
                "text": "is there a stack trace?",
                "time": "2019-01-07 21:32:53",
                "index": 21,
                "user": "edeandrea"
            },
            {
                "id": "5c33c5918b6399655e228c49",
                "text": "Nothing ",
                "time": "2019-01-07 21:33:05",
                "index": 22,
                "user": "akuma8"
            },
            {
                "id": "5c33c5ab1491b27876d7df30",
                "text": "what about this? https://stackoverflow.com/questions/46426161/spring-framework-swallows-exception-of-custom-converters",
                "time": "2019-01-07 21:33:31",
                "index": 23,
                "user": "edeandrea"
            },
            {
                "id": "5c33c6246370df0b91a65354",
                "text": "Maybe, I try now and let you know ",
                "time": "2019-01-07 21:35:32",
                "index": 24,
                "user": "akuma8"
            },
            {
                "id": "5c33c645aac7082e6fecd18f",
                "text": "are any of the other `@ExceptionHandler` methods you have catching exceptions thrown from with formatters/converters?",
                "time": "2019-01-07 21:36:05",
                "index": 25,
                "user": "edeandrea"
            },
            {
                "id": "5c33c66d3cf6c35a84a80dce",
                "text": "Yes and all aren't invoked ",
                "time": "2019-01-07 21:36:45",
                "index": 26,
                "user": "akuma8"
            },
            {
                "id": "5c33c68f57c6883f9b7b3ade",
                "text": "seems to me maybe there is some change in behavior in that scenario",
                "time": "2019-01-07 21:37:19",
                "index": 27,
                "user": "edeandrea"
            },
            {
                "id": "5c33c77473360b4d55d3781e",
                "text": "would be pretty easy to put together some sample project that tests that scenario. your converter could simply be a `Converter<String, String>` and just throw some custom runtime exception",
                "time": "2019-01-07 21:41:08",
                "index": 28,
                "user": "edeandrea"
            },
            {
                "id": "5c33c7c257c6883f9b7b427b",
                "text": "Same result but now the exception is directly sent back to the client ",
                "time": "2019-01-07 21:42:26",
                "index": 29,
                "user": "akuma8"
            },
            {
                "id": "5c33c81a1948ad07e8041b61",
                "text": "After removing  `extends ResponseEntityExceptionHandler `",
                "time": "2019-01-07 21:43:54",
                "index": 30,
                "user": "akuma8"
            },
            {
                "id": "5c33c82482a6c30b909e7804",
                "text": "Strange behavior",
                "time": "2019-01-07 21:44:04",
                "index": 31,
                "user": "akuma8"
            },
            {
                "id": "5c33c8b682a6c30b909e7a91",
                "text": "I'll make a sample for the Spring Boot team.",
                "time": "2019-01-07 21:46:30",
                "index": 32,
                "user": "akuma8"
            },
            {
                "id": "5c33ce74aac7082e6fed07ac",
                "text": "Put a break point in ResponseEntityExceptionHandler.handleException and see if it's hit, both when your class extends it and when your class doesnt\n",
                "time": "2019-01-07 22:11:00",
                "index": 33,
                "user": "edeandrea"
            },
            {
                "id": "5c33cebf73360b4d55d3a7b0",
                "text": "Which exception?",
                "time": "2019-01-07 22:12:15",
                "index": 34,
                "user": "akuma8"
            },
            {
                "id": "5c33cf094ed1827877753bfd",
                "text": "Any exception. I'm trying to figure out what exception is actually getting caught (rather than your custom one) and where it is being caught. Returning a 400 means something is catching it somewhere",
                "time": "2019-01-07 22:13:29",
                "index": 35,
                "user": "edeandrea"
            },
            {
                "id": "5c33cf691491b27876d81f21",
                "text": "My guess is that your custom one is getting wrapped in a TypeMismatch or some other custom exception that the default ResponseEntityExceptionHandler is catching",
                "time": "2019-01-07 22:15:05",
                "index": 36,
                "user": "edeandrea"
            },
            {
                "id": "5c33cf7a4ed1827877753df3",
                "text": "Because you are throwing it from within a converter",
                "time": "2019-01-07 22:15:22",
                "index": 37,
                "user": "edeandrea"
            },
            {
                "id": "5c33cffb26d86e4d563fb92c",
                "text": "I'm away from the computer for the rest of the evening ",
                "time": "2019-01-07 22:17:31",
                "index": 38,
                "user": "edeandrea"
            },
            {
                "id": "5c33d0063cf6c35a84a847a0",
                "text": "But can check back tomorrow",
                "time": "2019-01-07 22:17:42",
                "index": 39,
                "user": "edeandrea"
            },
            {
                "id": "5c33d02c8b6399655e22d1cc",
                "text": "Right, I am making some tests and let you know",
                "time": "2019-01-07 22:18:20",
                "index": 40,
                "user": "akuma8"
            },
            {
                "id": "5c33d127aac7082e6fed180b",
                "text": "You right ,",
                "time": "2019-01-07 22:22:31",
                "index": 41,
                "user": "akuma8"
            },
            {
                "id": "5c33d14812db9607e7511f9d",
                "text": "about the TypeMismatch ",
                "time": "2019-01-07 22:23:04",
                "index": 42,
                "user": "akuma8"
            },
            {
                "id": "5c33d2225ec8fe5a8519a91d",
                "text": "That makes sense. During marshalling and unmarshalling if a field can't be resolved that's what you get. Similar to what a custom converter is doing",
                "time": "2019-01-07 22:26:42",
                "index": 43,
                "user": "edeandrea"
            },
            {
                "id": "5c33d2383cf6c35a84a856a8",
                "text": "My custom exception is totaly ignored, after its throwing  `ResponseEntityExceptionHandler.handleException` is called just after",
                "time": "2019-01-07 22:27:04",
                "index": 44,
                "user": "akuma8"
            },
            {
                "id": "5c33d27126d86e4d563fcbe1",
                "text": "But my exception was thrown first",
                "time": "2019-01-07 22:28:01",
                "index": 45,
                "user": "akuma8"
            },
            {
                "id": "5c33d27b8b6399655e22dfce",
                "text": "What I do is I override the underlying protected methods from ResponseEntityExceptionHandler and then check the cause of the exception. Your customer one should be the cause",
                "time": "2019-01-07 22:28:11",
                "index": 46,
                "user": "edeandrea"
            },
            {
                "id": "5c33d29773360b4d55d3c1c2",
                "text": "Your custom exception should be the cause of it",
                "time": "2019-01-07 22:28:39",
                "index": 47,
                "user": "edeandrea"
            },
            {
                "id": "5c33d2ac6370df0b91a6a0b1",
                "text": "Which to me actually seems like expected behavior",
                "time": "2019-01-07 22:29:00",
                "index": 48,
                "user": "edeandrea"
            },
            {
                "id": "5c33d2bfbd592b2e6e6a8f76",
                "text": "Would be considered a type conversion error",
                "time": "2019-01-07 22:29:19",
                "index": 49,
                "user": "edeandrea"
            },
            {
                "id": "5c33d2d54ed1827877755228",
                "text": "The request flow should stop after my custom exception, am I wrong?",
                "time": "2019-01-07 22:29:41",
                "index": 50,
                "user": "akuma8"
            },
            {
                "id": "5c33d30b57c6883f9b7b8891",
                "text": "I hope it doesn't try to convert the exception ^^ ",
                "time": "2019-01-07 22:30:35",
                "index": 51,
                "user": "akuma8"
            },
            {
                "id": "5c33d32ebd592b2e6e6a9176",
                "text": "I think what's happening is spring is catching your exception and because it's happening during type conversion it's creating a type conversion exception with your custom one as the cause and throwing that. No different than if the payload had a string field that was supposed to be mapped to an int",
                "time": "2019-01-07 22:31:10",
                "index": 52,
                "user": "edeandrea"
            },
            {
                "id": "5c33d35857c6883f9b7b8aec",
                "text": "You can't convert a string to an int, so the end result would be the samr",
                "time": "2019-01-07 22:31:52",
                "index": 53,
                "user": "edeandrea"
            },
            {
                "id": "5c33d3c23cf6c35a84a86090",
                "text": "`Failed to convert value of type 'java.lang.String' to required type 'org.lemarche.models.Status'` ",
                "time": "2019-01-07 22:33:38",
                "index": 54,
                "user": "akuma8"
            },
            {
                "id": "5c33d3f926d86e4d563fd581",
                "text": "That's what I thought",
                "time": "2019-01-07 22:34:33",
                "index": 55,
                "user": "edeandrea"
            },
            {
                "id": "5c33d40057c6883f9b7b8ee4",
                "text": "I know this but why it wrapps my exception?  For me it's not a normal behavior ",
                "time": "2019-01-07 22:34:40",
                "index": 56,
                "user": "akuma8"
            },
            {
                "id": "5c33d47a82a6c30b909ec634",
                "text": "It actually seems somewhat logical to me. You are throwing an exception during type conversion (just like Jackson would be doing if it failed to do type conversion). Spring is handling it consistently",
                "time": "2019-01-07 22:36:42",
                "index": 57,
                "user": "edeandrea"
            },
            {
                "id": "5c33d47a73360b4d55d3cb0b",
                "text": "User's exceptions should always take precedence",
                "time": "2019-01-07 22:36:42",
                "index": 58,
                "user": "akuma8"
            },
            {
                "id": "5c33d4a31948ad07e8046627",
                "text": "Spring doesn't know your exception versus any other library's exception. It does the same thing for input validation",
                "time": "2019-01-07 22:37:23",
                "index": 59,
                "user": "edeandrea"
            },
            {
                "id": "5c33d4dc57c6883f9b7b9614",
                "text": "I don't know what the change was between boot 2.0 and 2.1 (actually seems like a spring MVC change between 5.1 & 5.2)",
                "time": "2019-01-07 22:38:20",
                "index": 60,
                "user": "edeandrea"
            },
            {
                "id": "5c33d4ed5ec8fe5a8519bcf6",
                "text": "It should know it, in the case of that situation,",
                "time": "2019-01-07 22:38:37",
                "index": 61,
                "user": "akuma8"
            },
            {
                "id": "5c33d4f25ec8fe5a8519bcfe",
                "text": "But I could argue the fact that it was working before was actually a bug and they have fixed it",
                "time": "2019-01-07 22:38:42",
                "index": 62,
                "user": "edeandrea"
            },
            {
                "id": "5c33d5331948ad07e80469fb",
                "text": "So how do I manage to send a custom message to the client instead of sending the stacktrace ",
                "time": "2019-01-07 22:39:47",
                "index": 63,
                "user": "akuma8"
            },
            {
                "id": "5c33d53473360b4d55d3cedf",
                "text": "I really have to sign off for the evening but can continue a conversation about it tomorrow if you'd like",
                "time": "2019-01-07 22:39:48",
                "index": 64,
                "user": "edeandrea"
            },
            {
                "id": "5c33d54026d86e4d563fddc9",
                "text": "?",
                "time": "2019-01-07 22:40:00",
                "index": 65,
                "user": "akuma8"
            },
            {
                "id": "5c33d5444ed1827877756310",
                "text": "Yes ",
                "time": "2019-01-07 22:40:04",
                "index": 66,
                "user": "akuma8"
            },
            {
                "id": "5c33d55582a6c30b909ecba7",
                "text": "Feel free to message me directly if you'd like",
                "time": "2019-01-07 22:40:21",
                "index": 67,
                "user": "edeandrea"
            },
            {
                "id": "5c33d57e3cf6c35a84a86c07",
                "text": "Sure, as I need to find a solution to send a custom error message ",
                "time": "2019-01-07 22:41:02",
                "index": 68,
                "user": "akuma8"
            },
            {
                "id": "5c33d6085ec8fe5a8519c214",
                "text": "You can override the habdleTypeMismatch from ResponseEntityExceptionHandler and do whatever you want",
                "time": "2019-01-07 22:43:20",
                "index": 69,
                "user": "edeandrea"
            },
            {
                "id": "5c33d63baac7082e6fed3ed8",
                "text": "I have so many converters...",
                "time": "2019-01-07 22:44:11",
                "index": 70,
                "user": "akuma8"
            },
            {
                "id": "5c33d6615ec8fe5a8519c2f7",
                "text": "If you call getCause from the typemismatchexception it should be your custom one",
                "time": "2019-01-07 22:44:49",
                "index": 71,
                "user": "edeandrea"
            },
            {
                "id": "5c33d6a41d1c2c3f9cd9ee4e",
                "text": "Right, thanks I'll try this solution and let you know. thank you for your time.",
                "time": "2019-01-07 22:45:56",
                "index": 72,
                "user": "akuma8"
            },
            {
                "id": "5c33d6bd57c6883f9b7ba06e",
                "text": "No problem! Now I'm really off for the evening! Good luck!",
                "time": "2019-01-07 22:46:21",
                "index": 73,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 670,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c99ecef81b15c5e4b8b4915",
                "text": "Hey, I have a question about `ConfigurationProperties`. I would like to use them as beans. However, their name is computed. Is there a way to generate an alias for those beans?",
                "time": "2019-03-26 09:12:15",
                "index": 0,
                "user": "filiphr"
            },
            {
                "id": "5c99ee4a9d9cc8114a232246",
                "text": "@filiphr Why do you need to control their names to use them as beans?",
                "time": "2019-03-26 09:18:02",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c99eec9d0133e21e5193813",
                "text": "If you want to control the name, you can use `@Component` or a `@Bean` method to expose the type annotated with `@ConfigurationProperties` rather than `@EnableConfigurationProperties(ExampleProperties.class)`",
                "time": "2019-03-26 09:20:09",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5c99ef8f8126720abc468b83",
                "text": "I want to control the name since I want to use them in a thymeleaf template. Yes I tried with `@Bean` and it worked, but I the metadata was not being generated for them. I might be doing something wrong though",
                "time": "2019-03-26 09:23:27",
                "index": 3,
                "user": "filiphr"
            },
            {
                "id": "5c99efa949fdaa0d811a651f",
                "text": "As I just remembered, that I have a place where I do similar and the metadata is there",
                "time": "2019-03-26 09:23:53",
                "index": 4,
                "user": "filiphr"
            },
            {
                "id": "5c99f0446a3d2e230d290f80",
                "text": "OK it was my fault. When I use `@Bean` and `@ConfigurationProperties` for the bean it works fine. Thanks @wilkinsona ",
                "time": "2019-03-26 09:26:28",
                "index": 5,
                "user": "filiphr"
            },
            {
                "id": "5c99f0708126720abc4690f4",
                "text": "Do you think that it would be worthwhile to provide additional names via `@ConfiugrationProperties`? For usages within expressions?",
                "time": "2019-03-26 09:27:12",
                "index": 6,
                "user": "filiphr"
            },
            {
                "id": "5c99fa0f3dd8171149535acc",
                "text": "I'm not sure I'd want to introduce the extra complexity. You already have one way to do what you want, another would be to use another bean specifically intended for use in your MVC model that derives its value from a configuration properties bean.",
                "time": "2019-03-26 10:08:15",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5c9a1a010d719050576aa845",
                "text": "Makes sense @wilkinsona. Thanks for the help. I am going with the `@Bean` approach. I would like to avoid the duplication of the beans",
                "time": "2019-03-26 12:24:33",
                "index": 14,
                "user": "filiphr"
            }
        ]
    },
    {
        "id": 671,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bdc5797995818347b90b8a2",
                "text": "Hi! Spring-boot github issues says not to rise an issue for dependency updates.. Just wondering if there is a reason for not upgrading the mssql-jdbc dependency to 7.0.0 released in July? I'm using the spring boot parent for dependency management in a non-boot application, and ran into issues with Hibernate Envers ddl generation on v6.4.2 of the driver. The problem went away after overriding mssql-jdbc to 7.0.0. I'm using spring boot parent 2.1.0 btw",
                "time": "2018-11-02 13:56:39",
                "index": 0,
                "user": "janfrodeh_twitter"
            },
            {
                "id": "5bdc5a945905a91955420960",
                "text": "Sorry.. mssql-jdbc 6.4.0 is the version of the dependency in spring boot 2.1.0. I found a issue in the mssql project that might be related to my problems. Indicating a collation-bug in the driver that was fixed in 6.4.2",
                "time": "2018-11-02 14:09:24",
                "index": 1,
                "user": "janfrodeh_twitter"
            },
            {
                "id": "5bdc5dae0445e15fad1142af",
                "text": "@janfrodeh_twitter looking now",
                "time": "2018-11-02 14:22:38",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5bdc5dfc4775f53eb32dc5e6",
                "text": "looks like an oversight to me, I\u2019ll double check with @wilkinsona when he\u2019s back",
                "time": "2018-11-02 14:23:56",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bdc5e18538a1c1971619138",
                "text": "You can override the version in the time being as for any other dependency ",
                "time": "2018-11-02 14:24:24",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bdc5e62538a1c19716193ef",
                "text": "Thanks. I have changed the version to 7.0.0 in my app, no problem. Was just wondering if there was a valid reason for not upgrading.",
                "time": "2018-11-02 14:25:38",
                "index": 5,
                "user": "janfrodeh_twitter"
            },
            {
                "id": "5bdc5e765905a91955422791",
                "text": "I don\u2019t see any right now. We can reconsider for 2.2",
                "time": "2018-11-02 14:25:58",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bdc87ded3442e19727bcd87",
                "text": "@janfrodeh_twitter IIRC, I didn't upgrade to 7.0 of the driver as it would have been a new major version in a new minor of Boot",
                "time": "2018-11-02 17:22:38",
                "index": 13,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 672,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e357c9bea9ba00b84a5febd",
                "text": "Is there any way to set up SpringSecurty the way to not redirect unauthorized requests to /login from a part of all URIs? e.g. my app contains API URIs as subURIs of `/api/` and regular URIs (processed with ThymeLeaf) as all others URIs. And I want my app to send redirections only from regular URIs but not from API URIs. ",
                "time": "2020-02-01 13:26:51",
                "index": 0,
                "user": "bvn13"
            },
            {
                "id": "5e358f3ae8a83835590cc7bc",
                "text": "@bvn13 why don't you write your own interceptor to authorize or create one authorization handler to handle it?",
                "time": "2020-02-01 14:46:18",
                "index": 1,
                "user": "prog20901"
            },
            {
                "id": "5e359cb7bfe65274ead3a492",
                "text": "@prog20901 I have one for JWT token authorization. But it is to perform `SecurityContextHolder.getContext().setAuthentication(...)` or to clear spring security's context.",
                "time": "2020-02-01 15:43:51",
                "index": 2,
                "user": "bvn13"
            },
            {
                "id": "5e35a54ff6945f41ef51f460",
                "text": "what's the problem with the above method?",
                "time": "2020-02-01 16:20:31",
                "index": 3,
                "user": "prog20901"
            },
            {
                "id": "5e35ae2cf301780b835d9bfc",
                "text": "@prog20901 it redirects me to `/login'` from API URIs and non-API URIs both. But I need 403 error code from API URIs and redirect from regular URIs",
                "time": "2020-02-01 16:58:20",
                "index": 4,
                "user": "bvn13"
            },
            {
                "id": "5e35c999594a0517c25f4992",
                "text": "got fixed it up with `defaultAuthenticationEntryPointFor` on spring-security",
                "time": "2020-02-01 18:55:21",
                "index": 5,
                "user": "bvn13"
            },
            {
                "id": "5e377db658f02e34975cede3",
                "text": "@bvn13 can u please share me the code to see how you have done it..you can remove your own proprietary code if anything exist",
                "time": "2020-02-03 01:56:06",
                "index": 15,
                "user": "prog20901"
            },
            {
                "id": "5e37e095594a0517c263c86a",
                "text": "@prog20901 here is a screenshot of `class SecurityConfig extends WebSecurityConfigurerAdaptor` http://i.imgur.com/7K2w1Ae.png",
                "time": "2020-02-03 08:57:57",
                "index": 19,
                "user": "bvn13"
            }
        ]
    },
    {
        "id": 673,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd4e0f45eb2e813db594705",
                "text": "Hi guys, so far I've been using an OAuth2FeignRequestInterceptor from my applications to bind an oauth2 token to Feign requests . But it's problematic when I need to make a request anonymously, it always try to get a token for the unauthentified user and it fails. \n\nI used this configuration :\n\n    @Autowired\n    private SecurityPropertiesConfig config;\n\n    @Bean\n    protected OAuth2ProtectedResourceDetails resource() {\n\n        AuthorizationCodeResourceDetails resource = new AuthorizationCodeResourceDetails();\n\n        resource.setAccessTokenUri(config.getAccessTokenUri());\n        resource.setUserAuthorizationUri(config.getUserAuthorizationUri());\n        resource.setClientId(config.getClientId());\n        resource.setClientSecret(config.getClientSecret());\n\n        return resource;\n    }\n\n    @Bean\n    public RequestInterceptor oauth2FeignRequestInterceptor(OAuth2ClientContext oauth2ClientContext,\n                                                            OAuth2ProtectedResourceDetails resource) {\n        return new OAuth2FeignRequestInterceptor(oauth2ClientContext, resource);\n    }\n\nI've been able to fix it using another RequestInterceptor like this : \n\n    @Bean\n    public RequestInterceptor requestTokenBearerInterceptor() {\n\n        return requestTemplate -> {\n\n            Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n\n            if (!principal.equals(\"anonymousUser\")) {\n\n                OAuth2AuthenticationDetails details = (OAuth2AuthenticationDetails)\n                        SecurityContextHolder.getContext().getAuthentication().getDetails();\n\n                requestTemplate.header(\"Authorization\", \"bearer \" + details.getTokenValue());\n            }\n        };\n    }\n\nBut is there a possibility to avoid to make a request to the oauth2 server with the OAuth2FeignRequestInterceptor a not to bind the token  when the user is not connected ?\n\n",
                "time": "2019-11-20 06:45:08",
                "index": 0,
                "user": "kaizokun"
            },
            {
                "id": "5dd51126f54b9b6c1926df6a",
                "text": "@kaizokun If you're looking for Security expertise, https://gitter.im/spring-projects/spring-security is probably a better place to ask",
                "time": "2019-11-20 10:10:46",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dd515069c9fca147cffd063",
                "text": "@wilkinsona  thanks",
                "time": "2019-11-20 10:27:18",
                "index": 3,
                "user": "kaizokun"
            }
        ]
    },
    {
        "id": 674,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cdcf4dcef853135c8ca1317",
                "text": "java.lang.IllegalStateException: Failed to load ApplicationContext\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\n\tat com.trgr.cobalt.dataroom.common.test.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:38)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'purgeEnterpriseInfoPersistorImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'purgeEnterpriseInfoRepositoryImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.hibernate.SessionFactory] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}\n\tat org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:311)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBean",
                "time": "2019-05-16 05:27:56",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcfc1d83ae782aee76bb80",
                "text": "@DoraRajappan There's no `SessionFactory` bean in your application context but `purgeEnterpriseInfoPersistorImpl` needs one. I can't tell why there isn't a `SessionFactory` without some more information.",
                "time": "2019-05-16 05:58:53",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5cdcfc550ec37966a178afd6",
                "text": "Thats true... I changed the component scan expression and it got it.. thanks...",
                "time": "2019-05-16 05:59:49",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcfc8e63dea422b48e04d8",
                "text": "java.lang.IllegalStateException: Failed to load ApplicationContext\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\n\tat com.trgr.cobalt.dataroom.common.test.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:38)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)\nCaused by: org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from class path resource [test-beans-context.xml]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'externalMetadataDTO.JsonUtilFactory' for bean class [com.trgr.cobalt.dataroom.common.externalmetadata.ExternalMetadataDTO$JsonUtilFactory] conflicts with existing, non-compatible bean definition of same name and class [com.trgr.cobalt.dataroom.userdocuments.client.ExternalMetadataDTO$JsonUtilFactory]\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:414)\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)\n\tat org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)\n\tat org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(Abst",
                "time": "2019-05-16 06:00:46",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcfe38d22ba766a2a4e6e6",
                "text": "Im trying <context:component-scan base-package=\"com.trgr.cobalt.dataroom.batchpurge.enterprisepurge , com\">\n\t\t<context:exclude-filter type=\"annotation\"\n\t\t\texpression=\"com.trgr.cobalt.dataroom.publishing.tracker.spec.PublishJobClientStub\" />\n\t\t\t<context:exclude-filter type=\"assignable\"\n\t\t\texpression=\"com.trgr.cobalt.dataroom.recents.filtering.RecentsQueryMappings\" />\n\t\t\t<context:exclude-filter type=\"assignable\"\n\t\t\texpression=\"com.trgr.cobalt.dataroom.recents.items.ContainerItemRepositoryImpl\" />\n\t\t\t<context:exclude-filter type=\"assignable\"\n\t\t\texpression=\"com.trgr.cobalt.dataroom.recents.util.TokenReplacementUtility\" />\n\t\t\t<context:exclude-filter type=\"assignable\"\n\t\t\texpression=\"com.trgr.cobalt.dataroom.userdocuments.client.ExternalMetadataDTO$JsonUtilFactory\" />\n\t\t\t\n\t\t\t\n\t</context:component-scan> ",
                "time": "2019-05-16 06:07:52",
                "index": 6,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcfe5c7c363c75a7ea049a",
                "text": "Whats wrong with this test-beans-context.xml",
                "time": "2019-05-16 06:08:28",
                "index": 7,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcff4e63dea422b48e13e0",
                "text": "@wilkinsona ",
                "time": "2019-05-16 06:12:30",
                "index": 8,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcff64ad024978c6d3ac78",
                "text": "I need to  inject lots of beans for integration test",
                "time": "2019-05-16 06:12:52",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcff74509b1035c7574bd6",
                "text": "THe dependcies are conflicting",
                "time": "2019-05-16 06:13:08",
                "index": 10,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdcff7cd522695bba4f513d",
                "text": "component scan is going crazy",
                "time": "2019-05-16 06:13:16",
                "index": 11,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdd40db63dea422b48ffc96",
                "text": "@DoraRajappan Sorry, I can't tell without some more context. Related, but probably not the cause of your problem: it's quite unusual to be using XML configuration, even just for tests, in a Spring Boot app. Is there something stopping you from using Java config instead? If you can share a complete, minimal example I can take a closer look.",
                "time": "2019-05-16 10:52:11",
                "index": 17,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 675,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb5ebc9ae7be94016fd1362",
                "text": "If a client makes a valid request to my server and my server relies on an external API that is down but I can still handle the request (in a different way) which status code should I use for the response?",
                "time": "2018-10-04 10:30:33",
                "index": 0,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bb5ed61435c2a518e4d8758",
                "text": "i think it\u2019s a matter of personal preference",
                "time": "2018-10-04 10:37:21",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5ed781c100a4f292c39e0",
                "text": "and probably some business or product unit may also decide on that",
                "time": "2018-10-04 10:37:44",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5ed7b600c5f642350a6dc",
                "text": "that\u2019s how we do it here",
                "time": "2018-10-04 10:37:47",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5edb5c7bf7c3662b44821",
                "text": "Example: my service runs some business logic and asynchronously sends an email/sms. i don\u2019t care if those services work so i return a success response to a consumer because from my pov i was able to process the request.",
                "time": "2018-10-04 10:38:45",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5eef96e5a401c2d15a13b",
                "text": "Thanks @chad_d_stud_twitter ",
                "time": "2018-10-04 10:44:09",
                "index": 5,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bb5f71d435c2a518e4dcb01",
                "text": "@jagjeevanjohal if a client calls service A which then calls service B, service A should return a 502/Bad Gateway to the client",
                "time": "2018-10-04 11:18:53",
                "index": 7,
                "user": "edeandrea"
            },
            {
                "id": "5bb5f74cc7bf7c3662b48650",
                "text": "or if service A is using/has a circuit breaker around it, then perhaps it returns some sensible default with a 2xx status",
                "time": "2018-10-04 11:19:40",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5bb5f78ee65a634336809889",
                "text": "like @chad_d_stud_twitter mentions though there is no \u201cstandard\u201d way to handle it. Really up to you to decide what is best",
                "time": "2018-10-04 11:20:46",
                "index": 9,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 676,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d1c652fb8926b674fd369c7",
                "text": "Hi all,\n\nWhy do projects generated using https://start.spring.io/ contain both legacy and new styles of enabling plugins in `build.gradle`:\n\n```groovy\nplugins {\n    id 'org.springframework.boot' version '2.1.6.RELEASE'\n    id 'java'\n}\n\napply plugin: 'io.spring.dependency-management'\n```\n\nIs using the `apply` syntax for the `io.spring.dependency-management` plugin intentional?",
                "time": "2019-07-03 08:19:59",
                "index": 0,
                "user": "behrangsa"
            },
            {
                "id": "5d1cbd7c84cbda1764c156c3",
                "text": "@behrangsa  Yes, it's intentional. `apply` isn't legacy. `buildscript` with a dependency in the `classpath` configuration is legacy. `apply` is how you apply a plugin that's already on the classpath, which it is in this case as it's a transitive dependency of Boot's plugin.",
                "time": "2019-07-03 14:36:44",
                "index": 10,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 677,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ceef7089b50f639354d72c4",
                "text": "Hi All, I'm migrating sboot  from 1.5.9 to 2.1.4 version. \n*Issue:* The actuator refresh properties endpoint throws follow error:\n",
                "time": "2019-05-29 21:18:00",
                "index": 0,
                "user": "max-macalupu"
            },
            {
                "id": "5ceef733bf4cbd167cfaf2f7",
                "text": "```\norg.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'webDs': Could not bind properties to 'HikariDataSource' : prefix=web.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'web.datasource' to javax.sql.DataSource\n\n```",
                "time": "2019-05-29 21:18:43",
                "index": 1,
                "user": "max-macalupu"
            },
            {
                "id": "5ceef74e7c1dab468c6b33cf",
                "text": "DatasourceConfig.java\n```\n@Configuration\n@EnableTransactionManagement\npublic class DatasourceConfig {\n\n  @Bean(name = \"webDs\")\n  @Qualifier(\"webDs\")\n  @Primary\n  @ConfigurationProperties(prefix = \"web.datasource\")\n  public DataSource dataSource() {\n    return DataSourceBuilder.create().build();\n  }\n}\n\n\n```",
                "time": "2019-05-29 21:19:10",
                "index": 2,
                "user": "max-macalupu"
            },
            {
                "id": "5ceef7b482c2dc79a51afb70",
                "text": "In sboot 1.5.9 version the actuator refresh properties endpoint works fine,  Wonder if has somebody had that issue before?",
                "time": "2019-05-29 21:20:52",
                "index": 3,
                "user": "max-macalupu"
            },
            {
                "id": "5cef809bff3f016baa74f664",
                "text": "@max-macalupu The refresh endpoint is part of Spring Cloud (https://gitter.im/spring-cloud/spring-cloud). Without know what the stack trace is of the binding failure it's hard to know if the problem's in Cloud, Boot, or your own code.",
                "time": "2019-05-30 07:04:59",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5cf15a65e41fe15e75ed3ef1",
                "text": "Thanks Andy Wilkinson!",
                "time": "2019-05-31 16:46:29",
                "index": 76,
                "user": "max-macalupu"
            }
        ]
    },
    {
        "id": 678,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ce663b7ad024978c6144b5d",
                "text": "how can  I increment a non auto increment id (primary key ) field while inserting the data?",
                "time": "2019-05-23 09:11:19",
                "index": 0,
                "user": "naveenchirayath"
            },
            {
                "id": "5ce6640913e9854e3350f8fa",
                "text": "@naveenchirayath by turning it into an auto increment id :-)",
                "time": "2019-05-23 09:12:41",
                "index": 1,
                "user": "vanseverk"
            },
            {
                "id": "5ce6643aef853135c80b3819",
                "text": "any other option? by taking the max value + 1",
                "time": "2019-05-23 09:13:30",
                "index": 2,
                "user": "naveenchirayath"
            },
            {
                "id": "5ce6644d7c363c75a72b62af",
                "text": "how can I Implement that logic in the entity class?",
                "time": "2019-05-23 09:13:49",
                "index": 3,
                "user": "naveenchirayath"
            },
            {
                "id": "5ce664610ac9852a95270fff",
                "text": "Well, why would you want to do so if you could just turn it into an auto increment? ",
                "time": "2019-05-23 09:14:09",
                "index": 4,
                "user": "vanseverk"
            },
            {
                "id": "5ce6647913e9854e3350fcca",
                "text": "Trying to apply that logic in your application will very likely get you into trouble when dealing with concurrency",
                "time": "2019-05-23 09:14:33",
                "index": 5,
                "user": "vanseverk"
            },
            {
                "id": "5ce664986366992a94087a24",
                "text": "ok thank you",
                "time": "2019-05-23 09:15:04",
                "index": 6,
                "user": "naveenchirayath"
            }
        ]
    },
    {
        "id": 679,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0d0988d1aaa16964e2c4c6",
                "text": "I need to transparently add headers to any outgoing http calls made within junit tests. Any clever strategy you could think of that could serve well for this purpose?",
                "time": "2019-06-21 16:44:56",
                "index": 0,
                "user": "tatumalenko"
            },
            {
                "id": "5d0d0c3d4b0b7b477b3583fe",
                "text": "@tatumalenko declare a filter bean in your tests",
                "time": "2019-06-21 16:56:29",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5d0d0c6cd16b28559f608408",
                "text": "I can't remember if you'd also need to manually add it to the MockMvc",
                "time": "2019-06-21 16:57:16",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5d0d0cb7d1aaa16964e2e59c",
                "text": "Thanks! That will be a good place to start!",
                "time": "2019-06-21 16:58:31",
                "index": 3,
                "user": "tatumalenko"
            },
            {
                "id": "5d0d2f024b0b7b477b36af7c",
                "text": "The Filter suggestion worked wonders! Thanks @OrangeDog ",
                "time": "2019-06-21 19:24:50",
                "index": 4,
                "user": "tatumalenko"
            },
            {
                "id": "5d0d2f85bc834f76a4b9f592",
                "text": "Now I have a new obstacle. I would like to get the test method name that issued the filter to activate. I tried using the StackWalker API, however it keeps capturing the current thread's stack frame only, whereas the method resides in a completely separate stack frame from what I can gather from my debug terminal in IntelliJ. Any ideas if this is even feasible?",
                "time": "2019-06-21 19:27:01",
                "index": 5,
                "user": "tatumalenko"
            },
            {
                "id": "5d0df692cedb297a81985be5",
                "text": "@tatumalenko If you use JUnit 5, you can inject a `TestInfo` instance that gives you access to the test method's name",
                "time": "2019-06-22 09:36:18",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5d1381e4b3f22a4b2a3dc4f1",
                "text": "@wilkinsona Regarding the TestInfo instance, from what I can tell it would only be valid within the test class's context, right? I wouldn't be able to have access to the TestInfo instance within a `doFilter` method context, correct?",
                "time": "2019-06-26 14:32:04",
                "index": 73,
                "user": "tatumalenko"
            },
            {
                "id": "5d13919638c2bf757dbee720",
                "text": "@tatumalenko `TestInfo` is injected into the test method, but you can then pass it on however you like so it would be possible to set it on a filter that uses it in its `doFilter` method.",
                "time": "2019-06-26 15:39:02",
                "index": 74,
                "user": "wilkinsona"
            },
            {
                "id": "5d13a8004e13324f8b9325ba",
                "text": "@wilkinsona ahh, problem is doFilter needs to be overridden by the one defined in the Filter interface, not sure how I could pass TestInfo to it and still have everything wire up automatically without breaking IoC",
                "time": "2019-06-26 17:14:40",
                "index": 77,
                "user": "tatumalenko"
            }
        ]
    },
    {
        "id": 680,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dc37cc9196ffb4db91da9ac",
                "text": "For Spring boot\n\nWith `spring.main.allow-bean-definition-overriding=false`\n\nIf I have entry point class `Foo` and a bean with name `Foo.java` with `@Service` annotation. It silently overrides beans without crashing it.\n\nIs it a bug in SB?",
                "time": "2019-11-07 02:09:13",
                "index": 0,
                "user": "JigarJoshi"
            },
            {
                "id": "5dc37cd19c39821509f7f2de",
                "text": "@wilkinsona ",
                "time": "2019-11-07 02:09:21",
                "index": 1,
                "user": "JigarJoshi"
            },
            {
                "id": "5dc37e623d669b28a04b73b5",
                "text": "```\npackage a.b;\npublic class Foo{ \n  public static void main(String[] args){ \n  new SpringApplicationBuilder(Foo.class)\n        .run(args);\n  }\n}\n```\n\nand\n\n```\npackage a.c;\n\n@Service\npublic class Foo{\n}\n```\n\nwith `spring.main.allow-bean-definition-overriding=false` or with technique shown here https://stackoverflow.com/a/38797859/3833308 (programmatically)\n\nI expect crash because of bean override attempt. But it does not crash and it overrides the beans (one of them wins)\n\n\n",
                "time": "2019-11-07 02:16:02",
                "index": 2,
                "user": "JigarJoshi"
            },
            {
                "id": "5dc3c51d196ffb4db91fa37b",
                "text": "@JigarJoshi Could you open a Spring Framework issue for that please? `ClassPathBeanDefinitionScanner` considers the bean definitions for `a.b.Foo` and `a.c.Foo` to be compatible so it keeps the first one (`a.b.Foo`) and ignores the second one. That doesn't seem right to me.",
                "time": "2019-11-07 07:17:49",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5dc450a010bd4128a1d904a6",
                "text": "@wilkinsona Thank you I have filed it here https://github.com/spring-projects/spring-boot/issues/18933",
                "time": "2019-11-07 17:13:04",
                "index": 48,
                "user": "JigarJoshi"
            }
        ]
    },
    {
        "id": 681,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5df137fc55d9392300f32838",
                "text": "Hello, I am using a H2 database in a spring boot application 2.x.\nWhen using Spring Boot 2.0.x (Hibernate 5.2.x(JPA 2.1)) java.time.LocalTime is mapped as a TIME type in H2. as expected.\nWhen using Spring Boot 2.1.x/2.2.x (Hibernate 5.3.x(JPA 2.2)/Hibernate 5.4.x ) java.time.LocalTime is mapped as a TIMESTAMP type in H2, this an unexpected behavior. \nIsn't java.time.LocalTime supposed to be mapped as TIME with JPA 2.2 ? Cheers",
                "time": "2019-12-11 18:39:56",
                "index": 0,
                "user": "Sebourg"
            },
            {
                "id": "5df172c10616d6515e2216fc",
                "text": "> Hello, I am using a H2 database in a spring boot application 2.x.\n> When using Spring Boot 2.0.x (Hibernate 5.2.x(JPA 2.1)) java.time.LocalTime is mapped as a TIME type in H2. as expected.\n> When using Spring Boot 2.1.x/2.2.x (Hibernate 5.3.x(JPA 2.2)/Hibernate 5.4.x ) java.time.LocalTime is mapped as a TIMESTAMP type in H2, this an unexpected behavior. \n> Isn't java.time.LocalTime supposed to be mapped as TIME with JPA 2.2 ? Cheers\n\n@Sebourg My mistake, I had some AttributeConverter in place that were interfering and not needed anymore with JPA 2.2.",
                "time": "2019-12-11 22:50:41",
                "index": 20,
                "user": "Sebourg"
            },
            {
                "id": "5df33165578ecf4b1f955631",
                "text": "@Sebourg Does your entity object use the tobuider annotation of the \"lombok plugin\"? I also encountered the same error, just comment out the \"toBuilder\" annotation. Looking at the source code, I found that adding the \"toBuilder\" annotation will generate a full parameter construction method that affects the process of instantiating mybatis objects. My English is not good. I use Google Translate. There may be many errors.",
                "time": "2019-12-13 06:36:21",
                "index": 42,
                "user": "DioptricCoast22"
            }
        ]
    },
    {
        "id": 682,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5e0e2ac7d5a7f357e6c28e3a",
                "text": "Any chance for a non-milestone release of spring-boot-r2dbc now that spring-data-r2dbc is GA? Would like to not have to depend upon milestone repo",
                "time": "2020-01-02 17:39:19",
                "index": 0,
                "user": "steven-sheehy"
            },
            {
                "id": "5e0f20d81c3a592052c3d099",
                "text": "@steven-sheehy nope, sorry. The integration is still experimental at this point. It should be included in the next Spring Data release train that\u2019s barely starting",
                "time": "2020-01-03 11:09:12",
                "index": 1,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 683,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5bd73e251c100a4f2902a87f",
                "text": "[Kotlin 1.3 is out](https://blog.jetbrains.com/kotlin/2018/10/kotlin-1-3), is there a plan to make the default version of Kotlin 1.3 for upcoming 2.1.0 release? I believe Kotlin folks would be excited if we do so :smiley: ",
                "time": "2018-10-29 17:06:45",
                "index": 0,
                "user": "unlimitedsola"
            },
            {
                "id": "5bd82be7600c5f64232deaea",
                "text": " @unlimitedsola timing was too short to release Spring Boot 2.1 against Kotlin 1.3. We're testing for compatibility at the Framework level so you should be able to run Spring Boot 2.1 apps on Kotlin 1.3. There's still work to do on the Framework side for full Kotlin 1.3 features support (see https://jira.spring.io/browse/SPR-16399 and https://jira.spring.io/browse/SPR-15413).",
                "time": "2018-10-30 10:01:11",
                "index": 42,
                "user": "bclozel"
            },
            {
                "id": "5bd84d45600c5f64232ecce5",
                "text": "@bclozel appreciate your clarification! subscribed the issues you mentioned.",
                "time": "2018-10-30 12:23:33",
                "index": 79,
                "user": "unlimitedsola"
            }
        ]
    },
    {
        "id": 684,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c336886bd592b2e6e67bd5f",
                "text": "```\n@SpringBootTest\n@SpringJUnitConfig\ninternal class EmrPublisherTest @Autowired constructor(\n    @MockBean val repo: EmrRepo,\n    @SpyBean val ctrl: EmrPublisher,\n    @Value(EmrPublisher.PLACEHOLDER) val duration: String\n) {\n    private val now = Instant.now()\n    private val timeout: Long = 500000\n\n    @BeforeEach\n    fun setup() {\n        val entity = Emr()\n        entity.id = 1\n        entity.mrn = \"abc123\"\n        entity.description = \"mydesc\"\n        entity.timestamp = now.minus(Duration.parse(duration)).plusSeconds(2)\n        entity.units = \"mg\"\n        entity.value = \"25\"\n\n        val ret = setOf(entity)\n\n        Mockito.`when`(repo.findByTimestampIsAfter(Mockito.any())).thenReturn(ret, ret, ret)\n    }\n\n    @Test\n    fun publish() {\n        ctrl.publish()\n    }\n}\n```\n\n```\norg.springframework.beans.factory.BeanCreationException: Could not inject field: private com.potrero.ph.emr.repo.EmrRepo com.potrero.ph.emr.event.EmrPublisherTest.repo; nested exception is java.lang.IllegalStateException: The field private com.potrero.ph.emr.repo.EmrRepo com.potrero.ph.emr.event.EmrPublisherTest.repo cannot have an existing value\n```\n\n",
                "time": "2019-01-07 14:56:06",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5c33694626d86e4d563d005b",
                "text": "it's not because the class isn't open.. hmm... tried changing `val` to `var` that didn't fix it either",
                "time": "2019-01-07 14:59:18",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5c336965aac7082e6fea5f24",
                "text": "injected attributes need to be lazyinit",
                "time": "2019-01-07 14:59:49",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5c3369ce1491b27876d57267",
                "text": "lateinit i mean",
                "time": "2019-01-07 15:01:34",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c336a75aac7082e6fea6666",
                "text": "@edeandrea ```\nError:(20, 15) Kotlin: 'lateinit' modifier is not allowed on primary constructor parameters``` :/ so how do I write this?",
                "time": "2019-01-07 15:04:21",
                "index": 4,
                "user": "xenoterracide"
            },
            {
                "id": "5c336aa273360b4d55d10b90",
                "text": "i\u2019ve always added attributes directly to the class without using the constructor",
                "time": "2019-01-07 15:05:06",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5c336aa312db9607e74e6cdc",
                "text": "like ",
                "time": "2019-01-07 15:05:07",
                "index": 6,
                "user": "edeandrea"
            },
            {
                "id": "5c336ac05ec8fe5a8516ec6d",
                "text": "```kotlin\n@Autowired\nprivate lateinit var myObj: MyObject\n```",
                "time": "2019-01-07 15:05:36",
                "index": 7,
                "user": "edeandrea"
            },
            {
                "id": "5c336bac26d86e4d563d1333",
                "text": "@edeandrea ok thanks, I was hoping to use constructor injection, but I guess that's not possible with kotlin in tests :/",
                "time": "2019-01-07 15:09:32",
                "index": 8,
                "user": "xenoterracide"
            },
            {
                "id": "5c3377ae357dd7655d2fafaa",
                "text": "```\norg.mockito.exceptions.misusing.UnfinishedVerificationException: \nMissing method call for verify(mock) here:\n-> at com.potrero.ph.emr.event.EmrPublisherTest.publish(EmrPublisherTest.kt:43)\n\nExample of correct verification:\n    verify(mock).doSomething()\n\nAlso, this error might show up because you verify either of: final/private/equals()/hashCode() methods.\nThose methods *cannot* be stubbed/verified.\nMocking methods declared on non-public parent classes is not supported.\n```\n\n```\n@SpringBootTest\n@SpringJUnitConfig\ninternal open class EmrPublisherTest {\n    @MockBean lateinit var repo: EmrRepo\n    @SpyBean lateinit var ctrl: EmrPublisher\n    @Value(EmrPublisher.PLACEHOLDER) lateinit var duration: String\n    private val now = Instant.now()\n    private val timeout: Long = 500000\n\n    @BeforeEach\n    fun setup() {\n        val entity = Emr()\n        entity.id = 1\n        entity.mrn = \"abc123\"\n        entity.description = \"mydesc\"\n        entity.timestamp = now.minus(Duration.parse(duration)).plusSeconds(2)\n        entity.units = \"mg\"\n        entity.value = \"25\"\n\n        val ret = setOf(entity)\n\n        Mockito.`when`(repo.findByTimestampIsAfter(Mockito.any())).thenReturn(ret, ret, ret)\n    }\n\n    @Test\n    fun publish() {\n        Mockito.verify(ctrl, times(3)).publishCreatedEmr(any()) //43\n        ctrl.publish()\n    }\n}\n```\n\n```\n@Service\nopen class EmrPublisher(private val repo: EmrRepo, @Value(PLACEHOLDER) val duration: Duration) {\n\n    private val log = LogManager.getLogger(this.javaClass)\n\n    @Transactional(readOnly = true)\n    @Scheduled(fixedRateString = PLACEHOLDER)\n    open fun publish() {\n        val lastRun = Instant.now().minus(this.duration)\n        log.debug(\"find emrs after {}\", lastRun)\n        publishCreatedEmrs(repo.findByTimestampIsAfter(lastRun))\n    }\n\n\n    private fun publishCreatedEmrs(emrs: Collection<Emr>) {\n        emrs.forEach { publishCreatedEmr(it) }\n    }\n\n    @SendTo(EMR)\n    open fun publishCreatedEmr(emr: Emr): EmrCreated {\n        log.debug(emr)\n        return EmrCreated(emr)\n    }\n\n    companion object {\n        internal const val EMR = \"emr\"\n        internal const val CREATED_SCHEDULE_PROPERTY = \"event.schedule.emr.created\"\n        const val PLACEHOLDER = \"\\${$CREATED_SCHEDULE_PROPERTY}\"\n    }\n}\n```",
                "time": "2019-01-07 16:00:46",
                "index": 9,
                "user": "xenoterracide"
            }
        ]
    },
    {
        "id": 685,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba4a67cbe4f300626c6dac2",
                "text": "Hello, please can somebody give me an idea how to test som `ApplicationListener<ContextRefreshedEvent>` class? I have an autoconfiguration `LBSAutoconfiguration` which autoconfigures class `LBSChecker`. If some conditions are not met inside `LBSChecker` it will throw exception and application won't start.  I want to create two cases (one failing and one ok) where I can controll this providing spring property e.g. `lbs.checker.context=1`.",
                "time": "2018-09-21 08:06:20",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5ba4a86c0cfe7f30f1c767e7",
                "text": "I don\u2019t understand the question",
                "time": "2018-09-21 08:14:36",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ba4a8777dca30650331d1d6",
                "text": "If you start a context with the relevant listener, it will be invoked",
                "time": "2018-09-21 08:14:47",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5ba4a92ce6046343f3943bd6",
                "text": "@snicoll  how can I start that context inside `@Test` method?",
                "time": "2018-09-21 08:17:48",
                "index": 6,
                "user": "bilak"
            },
            {
                "id": "5ba4a9365df5194734efa216",
                "text": "with additional properties<",
                "time": "2018-09-21 08:17:58",
                "index": 7,
                "user": "bilak"
            },
            {
                "id": "5ba4a9378909f71f7506fbe2",
                "text": "`ApplicationContextRunner`",
                "time": "2018-09-21 08:17:59",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5ba4a944913ba7799b20d2b7",
                "text": "Aha, I'll test that...thanks",
                "time": "2018-09-21 08:18:12",
                "index": 9,
                "user": "bilak"
            },
            {
                "id": "5ba4a94eb9531f2dfa9baf23",
                "text": "Don\u2019t use `@SpringBootTest` and the like to test auto-configurations",
                "time": "2018-09-21 08:18:22",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5ba4a965b4990c30eee8b0bb",
                "text": "This is also a useful resource: https://spring.io/blog/2018/03/07/testing-auto-configurations-with-spring-boot-2-0",
                "time": "2018-09-21 08:18:45",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5ba4a967e5c2cc56adbff380",
                "text": "@nicoglp  Is `ApplicationContextRunner` available in boot 1.5.x<",
                "time": "2018-09-21 08:18:47",
                "index": 12,
                "user": "bilak"
            },
            {
                "id": "5ba4a96eb4990c30eee8b0d9",
                "text": "No",
                "time": "2018-09-21 08:18:54",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ba4a9771043315947c2d8e0",
                "text": "oh...and is there alternative for that<",
                "time": "2018-09-21 08:19:03",
                "index": 14,
                "user": "bilak"
            },
            {
                "id": "5ba4a98433da0f649e2fc225",
                "text": "And https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-test-autoconfig",
                "time": "2018-09-21 08:19:16",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5ba4a9968909f71f7506fe33",
                "text": "Just create the context yourself. There are a gazillion of tests in our codebase that do that",
                "time": "2018-09-21 08:19:34",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5ba4a9cf7dca30650331db65",
                "text": "I was trying with this `final ConfigurableApplicationContext ctx = new SpringApplication(new Object[] {LBSAutoConfiguration.class}).run(args);` inside test, but that didn't invoked what I wanted",
                "time": "2018-09-21 08:20:31",
                "index": 17,
                "user": "bilak"
            },
            {
                "id": "5ba4a9e1e6046343f3944052",
                "text": "Maybe the class `LBSAutoConfiguration.class` shouldn't be there as source",
                "time": "2018-09-21 08:20:49",
                "index": 19,
                "user": "bilak"
            },
            {
                "id": "5ba4a9f3b9531f2dfa9bb1ab",
                "text": "Yeah no surprise there. We\u2019re using the app classloader. Wonder how we can teach hibernate to do the same",
                "time": "2018-09-21 08:21:07",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5ba4aa0cf7e1580625020d82",
                "text": "@bilak That\u2019s indeed wrong. Perhaps you could look at our tests as I\u2019ve indicated?",
                "time": "2018-09-21 08:21:32",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5ba4aa217dca30650331de43",
                "text": "Can you please point me to one?",
                "time": "2018-09-21 08:21:53",
                "index": 22,
                "user": "bilak"
            }
        ]
    },
    {
        "id": 686,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5efc6a7a6c06cd1bf4664532",
                "text": "I'm working on a java compiler API to create a new extension as AutoCompiler which will solve all compile time error automatically without manually looking into the code.\nSee this here https://github.com/pawarashish564/AutoCompiler new contributors are always welcomed.",
                "time": "2020-07-01 10:50:34",
                "index": 0,
                "user": "pawarashish564"
            },
            {
                "id": "5efc8cf5c3362026a90a64a8",
                "text": "Nice idea. You plan to quickfix the simple typo errors or also complicated cases?",
                "time": "2020-07-01 13:17:41",
                "index": 1,
                "user": "pcornelissen"
            },
            {
                "id": "5efc8d197b466b3bf704816b",
                "text": "I\u2019d suggest to add a comment when your extension fixed something, so you can see that as developer in case of errors",
                "time": "2020-07-01 13:18:17",
                "index": 2,
                "user": "pcornelissen"
            },
            {
                "id": "5efc8d1b3baf5366e476ce24",
                "text": "Like:\n```\nLog.info(\u201efoo\u201c)\n```\n=>\n```\nLog.info(\u201efoo\u201c);/*fixed by auto compiler*/\n```",
                "time": "2020-07-01 13:18:19",
                "index": 3,
                "user": "pcornelissen"
            },
            {
                "id": "5efc99f154d7862dc4bd96f4",
                "text": "check out the readme I;ve done adding some missing symbols ",
                "time": "2020-07-01 14:13:05",
                "index": 4,
                "user": "pawarashish564"
            },
            {
                "id": "5efc9a00fa0c9221fc703b3d",
                "text": "any contributions will be more than welcomed",
                "time": "2020-07-01 14:13:20",
                "index": 5,
                "user": "pawarashish564"
            },
            {
                "id": "5efc9abe613d3b33941ce793",
                "text": "@pcornelissen I'm using java compiler API for this type of error correction.",
                "time": "2020-07-01 14:16:30",
                "index": 6,
                "user": "pawarashish564"
            },
            {
                "id": "5efca7c9d65a3b0292bfc134",
                "text": "It is literally impossible to automatically solve \"all compile time error\" though. ",
                "time": "2020-07-01 15:12:09",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5efca7f6e0e5673398e74b29",
                "text": "And no real developer needs a separate tool to add semicolons and close brackets to their code",
                "time": "2020-07-01 15:12:54",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5efca858e73f7169498691c3",
                "text": "Well, the problem is that everyone using the code needs to have your plugin in this case. So for example when your plugin ceases to work and someone needs to compile teh code, he will have to fix mabe hundreds of missing semicolons etc.",
                "time": "2020-07-01 15:14:32",
                "index": 9,
                "user": "pcornelissen"
            },
            {
                "id": "5efca8a5613d3b33941d1750",
                "text": "It's just cementing the inability to write basic Java",
                "time": "2020-07-01 15:15:49",
                "index": 10,
                "user": "OrangeDog"
            },
            {
                "id": "5efca8f0c3362026a90a64bc",
                "text": "Right. If it would alter the files, it would help for fixing mistakes. Just as workaround for missing semicolons it will lead to more problems in th elong run",
                "time": "2020-07-01 15:17:04",
                "index": 11,
                "user": "pcornelissen"
            },
            {
                "id": "5efcd0cfbb149531ede1f8c5",
                "text": "of course it isn't possible to solve all the compile time errors automatically but my milestone for AutoCompiler is to solve minimal errors such as missing bracket missing symbols and other . ",
                "time": "2020-07-01 18:07:11",
                "index": 13,
                "user": "pawarashish564"
            }
        ]
    },
    {
        "id": 687,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d4d3af690bba62a1245021f",
                "text": "Hello guys, \nMaybe someone could help me;\nI have spring boot web application running on 2.1.0.RELEASE\nI have also actuator enabled via spring-boot-starter-actuator\nAnd exposed as:\nmanagement.endpoints.web.base-path=/boot\nmanagement.endpoints.web.exposure.include=*\n\nThe issue - I am not able to change log levels via actuator;\nRequest example: \ncurl -i -X POST -H 'Content-Type: application/json' -d '{\"configuredLevel\": \"DEBUG\"}' http://localhost:8080/boot/loggers/ROOT\n\nThank you in advance\n",
                "time": "2019-08-09 09:20:54",
                "index": 0,
                "user": "ikalinin1"
            },
            {
                "id": "5d4d67b44e17537f52ffb087",
                "text": "@By-ivan What is the error/output you are getting because I could do it",
                "time": "2019-08-09 12:31:48",
                "index": 3,
                "user": "deepakmehra10"
            },
            {
                "id": "5d4d778ed03a7c63e6f95ba6",
                "text": "@deepakmehra10 no any errors, response returned logger details without changes",
                "time": "2019-08-09 13:39:26",
                "index": 4,
                "user": "ikalinin1"
            },
            {
                "id": "5d50f11cd03a7c63e610fcb6",
                "text": "@By-ivan I managed to change the log level on the fly from Info to Trace with the same endpoint you mentioned but with only one change which is without /actuator as I am using basepath as /",
                "time": "2019-08-12 04:54:52",
                "index": 16,
                "user": "deepakmehra10"
            }
        ]
    },
    {
        "id": 688,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb3c75d5af48530684f08ea",
                "text": "Is it possible to generate openApi (swagger) docs with spring rest docs? Can it auto-generate the swagger-ui like springfox does?",
                "time": "2018-10-02 19:30:37",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5bb3c796c7bf7c3662a71a75",
                "text": "No, it\u2019s not possible ",
                "time": "2018-10-02 19:31:34",
                "index": 1,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb3c7a0ef4afc4f280bb486",
                "text": "They are different things ",
                "time": "2018-10-02 19:31:44",
                "index": 2,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb3c83cae7be94016f00f4f",
                "text": "@marcosbarbero Maybe I'm asking the wrong way. Can spring rest docs generate openApi compliant api descriptions? I don't care so much about the ui and all that, just would really like to be able to automate creation of api descriptions in a standards-compliant way.",
                "time": "2018-10-02 19:34:20",
                "index": 3,
                "user": "springroll12"
            },
            {
                "id": "5bb3ccc1bbdc0b2505d771f7",
                "text": "Based on this open issue https://github.com/spring-projects/spring-restdocs/issues/213 I think it\u2019s still not possible ",
                "time": "2018-10-02 19:53:37",
                "index": 4,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb3d59de65a634336739748",
                "text": "@marcosbarbero Thanks. That thread lead to some interesting alternatives. Do you know which of the various auto-documentation components other than spring rest docs are preferred these days? There seem to be quite a few...",
                "time": "2018-10-02 20:31:25",
                "index": 5,
                "user": "springroll12"
            },
            {
                "id": "5bb3d6173844923661d509f0",
                "text": "I\u2019m actually a big fan of spring rest docs and using something else was never a requirement for me, sorry :/",
                "time": "2018-10-02 20:33:27",
                "index": 6,
                "user": "marcosbarbero"
            },
            {
                "id": "5bb3de095af48530684f9ece",
                "text": "@marcosbarbero no worries, thanks for your help!",
                "time": "2018-10-02 21:07:21",
                "index": 7,
                "user": "springroll12"
            }
        ]
    },
    {
        "id": 689,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5c9bed0e1f98a87112aef747",
                "text": "Hi Spring Booters,\nAn issue about dev-tools. In a multi-module project, when I modify a bean and build to trigger autostarting, I have this exception:\n ```\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type ... \n```\nThe type in question is the bean just modified, when I restart the application manually everything works fine. Any idea?",
                "time": "2019-03-27 21:37:18",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5c9cd8038df8b02f0474d4a1",
                "text": "@akuma8 On the face of it, that sounds like a bug. Can you share some code that reproduces the problem?",
                "time": "2019-03-28 14:19:47",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5ca256c20aad6350190fde61",
                "text": "Hi @wilkinsona sorry to answer late. My project's code is a bit huge, so I don't see what part exactly should I extract for you to be able to reproduce the issue. \nThe only thing I configured is to set this property:\n```\nspring.devtools.restart.trigger-file=devtools-trigger.properties\n```\nAnd inside that file I set dumb values (just for triggering the restart), which are:\n```\n#fichier servant de trigger pour devtools\nspring.devtools.reload.trigger-file=Ne jamais changer cette valeur sinon tout va p\u00e9ter\n```",
                "time": "2019-04-01 18:21:54",
                "index": 83,
                "user": "akuma8"
            },
            {
                "id": "5ca321941f6e900d5ec5382a",
                "text": "@akuma8 Thanks. Unfortunately, I don't have time to try to reproduce the problem without a bit more indication of where it might be. If you get a chance to strip things down a bit, or create some projects with similar structure that reproduce the problem, I'd be happy to spend some time investigating.",
                "time": "2019-04-02 08:47:16",
                "index": 87,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 690,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e0df5eeeac8d1511e9d13be",
                "text": "Hello, my Spring boot is suddenly exhibiting very odd behavior. I installed the spring-cloud-starter-aws dependency to test AWS and now after removing that dependency my @COnfiguration classes are not being instantiated and also the tomcat web server is not opening up my port 8081. Has anyone experienced anything like this? I have @SpringBootApplication, @EnableAutoConfiguration(), @EnableWebMvc, @ComponentScan, @EntityScan, and @EnableJpaRepositories defined in my main class",
                "time": "2020-01-02 13:53:50",
                "index": 0,
                "user": "zsyphon"
            },
            {
                "id": "5e0df66189701b511d4f0237",
                "text": "@zsyphon hard to help with the info you\u2019ve provided. Why do you need `@EnableWebMvc`? that\u2019s swtiching off the auto-config",
                "time": "2020-01-02 13:55:45",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e0df68307a1a67d1d9cd354",
                "text": "THank you was just trying anything, pretty new to spring boot everything was working",
                "time": "2020-01-02 13:56:19",
                "index": 2,
                "user": "zsyphon"
            },
            {
                "id": "5e0df6a9eaa2cd096fe08a01",
                "text": "`@EnableAutoConfiguration` is useless, so is `@ComponentScan` and `@EntityScan`. I would advise to add something to config only when it\u2019s actually necessary",
                "time": "2020-01-02 13:56:57",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5e0df6f6052986049828e660",
                "text": "ok thank you trying that",
                "time": "2020-01-02 13:58:14",
                "index": 4,
                "user": "zsyphon"
            },
            {
                "id": "5e0df7136ff7ae03fc8a9551",
                "text": "Same for `@EnableJpaRepositories` actually",
                "time": "2020-01-02 13:58:43",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5e0df76f0fd3413f4c94ecc1",
                "text": "This is my pom.\n```<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>com.cam.integration.api</groupId>\n\t\t<artifactId>service</artifactId>\n\t\t<version>1.0-SNAPSHOT</version>\n\t</parent>\n\t<groupId>com.cam.integration</groupId>\n\t<artifactId>cam-orchestration</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>cam-orchestration</name>\n\t<packaging>jar</packaging>\n\n\t<properties>\n\t\t<java.version>1.8</java.version>\n\t</properties>\n\n\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>com.cam.integration</groupId>\n\t\t\t<artifactId>cam-integration-models</artifactId>\n\t\t\t<version>0.0.1-SNAPSHOT</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.cam.integration</groupId>\n\t\t\t<artifactId>cam-integration-daos</artifactId>\n\t\t\t<version>0.0.1-SNAPSHOT</version>\n\t\t</dependency>\n\t\t<!-- Spring Boot -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-undertow</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-actuator</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-activemq</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-redis</artifactId>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>io.lettuce</groupId>\n\t\t\t\t\t<artifactId>lettuce-core</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t<!-- https://mvnrepository.com/artifact/redis.clients/jedis -->\n\t\t<dependency>\n\t\t\t<groupId>redis.clients</groupId>\n\t\t\t<artifactId>jedis</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.postgresql</groupId>\n\t\t\t<artifactId>postgresql</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.camel</groupId>\n\t\t\t<artifactId>camel-activemq</artifactId>\n\t\t\t<version>3.0.0</version>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-integration</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>com.ibm.mq</groupId>\n\t\t\t<artifactId>mq-jms-spring-boot-starter</artifactId>\n\t\t\t<version>2.0.0</version>\n\t\t</dependency>\n\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.camel.springboot</groupId>\n\t\t\t<artifactId>camel-salesforce-starter</artifactId>\n\t\t\t<version>3.0.0</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t<artifactId>guava</artifactId>\n\t\t\t<version>28.1-jre</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.olingo</groupId>\n\t\t\t<artifactId>olingo-odata2-jpa-processor-core</artifactId>\n\t\t\t<version>2.0.7</version>\n\t\t</dependency>\n\t\t<!-- dependency>\n\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t<artifactId>spring-cloud-starter-aws</artifactId>\n\t\t\t<version>2.2.0.RELEASE</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t<artifactId>spring-cloud-starter-aws-jdbc</artifactId>\n\t\t\t<version>2.2.0.RELEASE</version>\n\t\t</dependency-->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t</project>```",
                "time": "2020-01-02 14:00:15",
                "index": 6,
                "user": "zsyphon"
            },
            {
                "id": "5e0df81f89701b511d4f0ada",
                "text": "@zsyphon sorry but that\u2019s not really helpful. If you can share a small sample that reproduces the problem (a link to a GitHub repo or a zip) we can have a look. Pasting large amount of text here isn\u2019t great.",
                "time": "2020-01-02 14:03:11",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5e0df84cb4ed68096e1b619e",
                "text": "Sorry. It's a private repo, unfortunately. I'll figure something out. Thank you!",
                "time": "2020-01-02 14:03:56",
                "index": 8,
                "user": "zsyphon"
            },
            {
                "id": "5e0df865833c373f4d991975",
                "text": "I am not asking for your actual project. A sample that reproduces the problem",
                "time": "2020-01-02 14:04:21",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5e0e03262d574c7d1efaa911",
                "text": "@snicoll I was able to create a test that reproduces the problem and put it here: https://github.com/zsyphon/cam-test\nI am running it in eclipse ",
                "time": "2020-01-02 14:50:14",
                "index": 10,
                "user": "zsyphon"
            },
            {
                "id": "5e0e0333fd580457e7b1e208",
                "text": "Thank you for any insight you can bring",
                "time": "2020-01-02 14:50:27",
                "index": 11,
                "user": "zsyphon"
            },
            {
                "id": "5e0e0352eaa2cd096fe0db29",
                "text": "I had this working with integration endpoints and APIs returned data. ",
                "time": "2020-01-02 14:50:58",
                "index": 12,
                "user": "zsyphon"
            },
            {
                "id": "5e0e037907a1a67d1d9d2841",
                "text": "Thank you again!",
                "time": "2020-01-02 14:51:37",
                "index": 13,
                "user": "zsyphon"
            },
            {
                "id": "5e0e03af833c373f4d99672c",
                "text": "how do I reproduce the problem?",
                "time": "2020-01-02 14:52:31",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5e0e03ff07a1a67d1d9d2bc6",
                "text": "I have been running it as a spring boot application. Then go to http://localhost:8080/ it will not respond. ",
                "time": "2020-01-02 14:53:51",
                "index": 15,
                "user": "zsyphon"
            },
            {
                "id": "5e0e04176ff7ae03fc8ae4f1",
                "text": "oh the config for the db is still defined I wil lhave to remove that",
                "time": "2020-01-02 14:54:15",
                "index": 16,
                "user": "zsyphon"
            },
            {
                "id": "5e0e04220c3aeb107d92644a",
                "text": "it does respond to me",
                "time": "2020-01-02 14:54:26",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5e0e04286ff7ae03fc8ae597",
                "text": "perhaps I should uncomment the aws dependencies?",
                "time": "2020-01-02 14:54:32",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5e0e0435b4ed68096e1bad8b",
                "text": "sure",
                "time": "2020-01-02 14:54:45",
                "index": 19,
                "user": "zsyphon"
            },
            {
                "id": "5e0e04380fd3413f4c954931",
                "text": "?",
                "time": "2020-01-02 14:54:48",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5e0e043e89701b511d4f5d6c",
                "text": "yes",
                "time": "2020-01-02 14:54:54",
                "index": 21,
                "user": "zsyphon"
            },
            {
                "id": "5e0e047904a1900497f0678a",
                "text": "```Error creating bean with name 'amazonRDS': Invocation of init method failed; nested exception is java.lang.IllegalStateException: There is no EC2 meta data available, because the application is not running in the EC2 environment. Region detection is only possible if the application is running on a EC2 instance```",
                "time": "2020-01-02 14:55:53",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5e0e048cb4ed68096e1bafdc",
                "text": "I get ERR_CONNECTION_REFUSED when I visit http://localhost:8080",
                "time": "2020-01-02 14:56:12",
                "index": 23,
                "user": "zsyphon"
            },
            {
                "id": "5e0e049efd580457e7b1eca9",
                "text": "the app does not start so I am not surprised about that",
                "time": "2020-01-02 14:56:30",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5e0e0516b4ed68096e1bb3bf",
                "text": "I never finished the aws config. Maybe it's the db settings that were lef tin",
                "time": "2020-01-02 14:58:30",
                "index": 25,
                "user": "zsyphon"
            },
            {
                "id": "5e0e0d3289701b511d4f998f",
                "text": "@snicoll  Thank you for looking at the repo. I was able to get back up and running back just checking out the code I had previously committed. ",
                "time": "2020-01-02 15:33:06",
                "index": 26,
                "user": "zsyphon"
            }
        ]
    },
    {
        "id": 691,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d1c90cc5ce02535b0156b9b",
                "text": "how can we execute a query which is passes as a requestbody using spring data mongodb?",
                "time": "2019-07-03 11:26:04",
                "index": 0,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5d1ca8f9dd5b167204e82c27",
                "text": "@a-c-sreedhar-reddy very carefully",
                "time": "2019-07-03 13:09:13",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5d1cb6fc07bf5635af1e0b48",
                "text": "@OrangeDog ????",
                "time": "2019-07-03 14:09:00",
                "index": 4,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5d1cb73a99847a1a59e8fa7b",
                "text": "@a-c-sreedhar-reddy if you execute raw queries that somebody sends to you, that's a huge security risk",
                "time": "2019-07-03 14:10:02",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5d1cb7545ce02535b016ef40",
                "text": "yeah changed the plan. Thanks",
                "time": "2019-07-03 14:10:28",
                "index": 6,
                "user": "a-c-sreedhar-reddy"
            }
        ]
    },
    {
        "id": 692,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c5bf31c1b62f12650b7bdad",
                "text": "Hi, what exactly does spring.config.name do?",
                "time": "2019-02-07 08:58:04",
                "index": 0,
                "user": "hazcod"
            },
            {
                "id": "5c5bf57aa59de252b04e984c",
                "text": "@HazCod spring.config.name can be used to change the base name of the properties file which defaults to application",
                "time": "2019-02-07 09:08:10",
                "index": 1,
                "user": "mateothegreat"
            },
            {
                "id": "5c5bf5b01b62f12650b7cf71",
                "text": "so spring.config.name=test will result in application-test.properties to be loaded?",
                "time": "2019-02-07 09:09:04",
                "index": 2,
                "user": "hazcod"
            },
            {
                "id": "5c5bf5c87b68f94102865210",
                "text": "And what if I use java -jar --spring.config.location='/app/tmp/default.properties,classpath:/src/main/resources/' /app/source/app.jar ?",
                "time": "2019-02-07 09:09:28",
                "index": 3,
                "user": "hazcod"
            },
            {
                "id": "5c5bf712f04ef00644f3801c",
                "text": "@HazCod no, it would result in `test.properties` to be used. the postfix in the name is the profile.",
                "time": "2019-02-07 09:14:58",
                "index": 4,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c5bf748975714406bab5743",
                "text": "so, your properties for the profile test would be `test-test.properties` then",
                "time": "2019-02-07 09:15:52",
                "index": 5,
                "user": "styx_hcr_twitter"
            }
        ]
    },
    {
        "id": 693,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e3ad68c159413355859919c",
                "text": "Hi guys, I'm using OpenFeign in my Spring Boot application to consume an external service that requires OAuth2.0 client credentials, so I put in `spring-cloud-starter-oauth2`, but this drags in Spring Security and makes my application require auth for endpoints etc. I don't actually want that, I just want the module to hook up my webclient with an OAuth2 interceptor. I've spent way too long, trying to figure this out, and I feel pretty clearly I'm just being clueless, does anyone have some enlightning tips? :)",
                "time": "2020-02-05 14:51:56",
                "index": 0,
                "user": "Asamsig"
            },
            {
                "id": "5e3afdff433e1d40399982e2",
                "text": "@Asamsig You could try excluding the security auto-configuration using the `exclude` attribute on `@SpringBootApplication`. I'm not sure if that will have the desired effect as I'm not sure how much, if at all, `spring-cloud-starter-oauth2` relies upon what Boot's security auto-configuration does.",
                "time": "2020-02-05 17:40:15",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5e3bb1e26f9d3d34982387a9",
                "text": "@wilkinsona Yeah, that is what I ended up doing, after finding the correct things to exclude, for reference, it was both `org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration` and `org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration`",
                "time": "2020-02-06 06:27:46",
                "index": 8,
                "user": "Asamsig"
            }
        ]
    },
    {
        "id": 694,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5b8e5c86c2bd5d117a18d30d",
                "text": "where can i find documentation on how to enable and use ssl on spring boot / rest ?",
                "time": "2018-09-04 10:20:54",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5b8e5d04c2bd5d117a18d69b",
                "text": "@chad_d_stud_twitter The reference documentation describes how to configure SSL",
                "time": "2018-09-04 10:23:00",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5b8e5d0c11227d711d12f053",
                "text": "core?",
                "time": "2018-09-04 10:23:08",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5b8e5d15e5b40332ab4188c5",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-configure-ssl",
                "time": "2018-09-04 10:23:17",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5b8e5d5c4be56c5918dd3e63",
                "text": "gotcha",
                "time": "2018-09-04 10:24:28",
                "index": 5,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5b8e5d5de5b40332ab418a71",
                "text": "thanks",
                "time": "2018-09-04 10:24:29",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5b8e5d68e5b40332ab418aed",
                "text": "This room isn\u2019t intended as a substitute for doing some basic searching on Google or in the reference documentation. Given that it\u2019s the Spring Boot room, checking the Spring Boot reference documentation to see if it answers your question is a good step to take before posting here.",
                "time": "2018-09-04 10:24:40",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5b8e5db9c9500b4bab7dc8ba",
                "text": "i actually used the spring search engine",
                "time": "2018-09-04 10:26:01",
                "index": 8,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5b8e5dc71d3a5711b6e15e09",
                "text": "but the results where overwhelming",
                "time": "2018-09-04 10:26:15",
                "index": 9,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 695,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e11128ccbd2c97eff8f1985",
                "text": "Can someone please point me source code for spring intializr plugin of intellij which is used to generate spring boot projects ?",
                "time": "2020-01-04 22:32:44",
                "index": 0,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5e12e77d3062aa3e8d0398a6",
                "text": "@rajjaiswalsaumya I don't think it's open source, as it's part of the commercial offering in IDEA.",
                "time": "2020-01-06 07:53:33",
                "index": 9,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 696,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b987bd5f59e0c1555e55682",
                "text": "how can I make a starter that support both webflux and servlet stacks? (I'm using Gradle btw)",
                "time": "2018-09-12 02:37:09",
                "index": 0,
                "user": "unlimitedsola"
            },
            {
                "id": "5b98d5e0cddb292dff5ff049",
                "text": "@unlimitedsola it depends on your starter and what it does. You can certainly annotate your auto-configuration classes with `ConditionalOnWebApplication`, which takes a type `ALL`, `SERVLET`, `REACTIVE`. So you can restrict it to certain types of web apps. If it's about the client side, then it's a bit different.",
                "time": "2018-09-12 09:01:20",
                "index": 9,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 697,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e8d7b12e24b4d6c44f39dec",
                "text": "Hi ,\nI want to develop cache eviction as an independent rest service . if my cache configurations in  some project named 'A' how can i  manage or sync the cache eviction as caching in happening in  Project A .\nThoughts please?",
                "time": "2020-04-08 07:19:46",
                "index": 0,
                "user": "murali474"
            },
            {
                "id": "5e8dbc951aaf8e4b8e6bf4a4",
                "text": "@murali474 a simple solution is use an shared redis or memcached instance, or other cache service. Another solution is your aplication `A`  use some kind of message broker, like rabbitmq that listen events from other services and do the cache evict when a specific event was triggered. Maybe theres a better solution, with spring cloud related services, or something like that.",
                "time": "2020-04-08 11:59:17",
                "index": 4,
                "user": "ramonPires"
            }
        ]
    },
    {
        "id": 698,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bf45633d24f9324d227e08a",
                "text": "Hi folks,\nCreate a stackoverflow question about an issue I am having with the PCF Integration of Spring Boot Applications via Actuator (on the fly log levels, health checks in the UI etc). https://stackoverflow.com/questions/53399500/pcf-integration-for-actuator-with-custom-context-path\nSidenote: We are running SB 1.5.x\n\nTLDR:\n* Our apps have a custom context path /api/v1\n* I copied the code provided in the relating github issue https://github.com/spring-projects/spring-boot/issues/9081 (see https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/cloudfoundry/CloudFoundryCustomContextPathExample.java)\n* It fixes the issue by forwarding request to the  the /cloudfoundryapplication path also to the one in /api/v1/cloudfoundryapplication.\n\nAfter adding the Bean my RestControllers are not behaving like expected:\n```\npublic ResponseEntity<byte[]> getSomeImage(HttpServletResponse response, ..){ \n    ... getData\n    response.setContentType(\"image/png\");\n    return ResponseEntity.ok().body(bytes);\n}\n```\n\nIs not working anymore - it seems that it is not able to set the contentType (IntegrationTest throwing an error: \n`Expected content-type \"image/png\" doesn't match actual content-type \"application/octet-stream;charset=UTF-8\".`\n)\n",
                "time": "2018-11-20 18:45:07",
                "index": 0,
                "user": "eiselems"
            },
            {
                "id": "5bf457b0958fc53895c1b8d3",
                "text": "Any help would greatly be appreciated, I am a bit in the dark it seems",
                "time": "2018-11-20 18:51:28",
                "index": 1,
                "user": "eiselems"
            },
            {
                "id": "5bf468f7e25cc27405187729",
                "text": "I'm struggling to see any connection between the two. Can you share a minimal example that behaves as you've described?",
                "time": "2018-11-20 20:05:11",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bf4720bf59704348ed92bf7",
                "text": "@wilkinsona same for me, I will try. It is just so strange that it breaks as soon as I add this bean",
                "time": "2018-11-20 20:43:55",
                "index": 3,
                "user": "eiselems"
            },
            {
                "id": "5bf47de4ced7003fe15c8305",
                "text": "@wilkinsona thanks for letting me build a POC, think I found the issue :see_no_evil: ",
                "time": "2018-11-20 21:34:28",
                "index": 4,
                "user": "eiselems"
            },
            {
                "id": "5bf47ec4a3d89f7406dc7c72",
                "text": "seems that mixing ResponseEntity as a return type and HttpServletResponse is not a good idea?",
                "time": "2018-11-20 21:38:12",
                "index": 5,
                "user": "eiselems"
            },
            {
                "id": "5bf48bf8ed6bcf1ef8347627",
                "text": "@wilkinsona still I found a way to reach what I wanted ... got a lot of different settings here.\nStill I would be curious if this is documented somewhere for spring security ...\n\nI wanted to add max-age CacheControl Headers and by default spring security is always adding pragma and cache-control headers (at least on Spring Boot 1.5.9 - so I even have two cacheControl Headers with different values).\n\nIf I switch over to Srping Boot 1.5.17 - it behaves differently and the headers by spring security are omitted oO.\n\nFeel free to have a look: https://github.com/eiselems/cloudfoundryActuator  try to run the Integration Test (which should be green) and then downgrade the SpringBoot Version to 1.5.9 and run it again.",
                "time": "2018-11-20 22:34:32",
                "index": 6,
                "user": "eiselems"
            },
            {
                "id": "5bf524b5a115c91ef76bb8a6",
                "text": "@eiselems there were several issues around that in Spring Security (including a regression IIRC); see https://github.com/spring-projects/spring-security/issues/5004",
                "time": "2018-11-21 09:26:13",
                "index": 13,
                "user": "bclozel"
            },
            {
                "id": "5bf59811a115c91ef76ee736",
                "text": "@bclozel thanks a lot, and I guessed it was just me \ud83d\ude05",
                "time": "2018-11-21 17:38:25",
                "index": 23,
                "user": "eiselems"
            }
        ]
    },
    {
        "id": 699,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bcdc4d9600c5f6423ec55db",
                "text": "Hi guys, how can I use spring 2.1 rc1 ?",
                "time": "2018-10-22 12:38:49",
                "index": 0,
                "user": "ekarlso"
            },
            {
                "id": "5bcdc4e11c100a4f29c6a94e",
                "text": "using gradle for building",
                "time": "2018-10-22 12:38:57",
                "index": 1,
                "user": "ekarlso"
            },
            {
                "id": "5bcdc657c7bf7c36624ff685",
                "text": "@ekarlso you can try start.spring.io and select the RC1 version and gradle as a build tool. You can use the generated project directly or just pick the relevant pieces from the created `build.gradle` file",
                "time": "2018-10-22 12:45:11",
                "index": 3,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 700,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bc4faa982893a2f3be89fce",
                "text": "Hi,\ncould someone have a look at this please: https://stackoverflow.com/questions/52797602/spring-boot-application-with-context-hierarchy-tries-to-start-an-embedded-tomcat\n\nI'm not sure if I'm doing something wrong there, or if it's a bug in spring-boot.",
                "time": "2018-10-15 20:38:01",
                "index": 0,
                "user": "larsgrefer"
            },
            {
                "id": "5bc505686e5a401c2d794c31",
                "text": "@larsgrefer can you try with snapshot?",
                "time": "2018-10-15 21:23:52",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bc5164d82893a2f3be95346",
                "text": "@snicoll With `2.1.0.BUILD-SNAPSHOT` the same error occurs",
                "time": "2018-10-15 22:35:57",
                "index": 2,
                "user": "larsgrefer"
            },
            {
                "id": "5bc51970ef4afc4f287d54e3",
                "text": "The problem even occurs on `2.0.5.RELEASE` and `1.5.16.RELEASE`",
                "time": "2018-10-15 22:49:20",
                "index": 3,
                "user": "larsgrefer"
            },
            {
                "id": "5bc59a4382893a2f3bec51f5",
                "text": "@larsgrefer that setup is quite unusual. Not sure you can  do that in a war mode actually. I can have a look to the sample but not today. Since you have a MCVE, you can raise an issue in the tracker later this week if you don\u2019t get an answer (please make sure to edit your SO question then)",
                "time": "2018-10-16 07:58:59",
                "index": 4,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 701,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd80e90afacdc4de4568dd0",
                "text": "@wilkinsona @snicoll if I opened a ticket to include a property to increase the timeout for WebTestClient would it stay open?",
                "time": "2019-11-22 16:36:32",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5dd80ebdb010e622764f0751",
                "text": "5 seconds is way too short for a debugger and I feel like it's much more \"complicated\" to increase than it should be",
                "time": "2019-11-22 16:37:17",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5dd81856f3ea522f264bdec7",
                "text": "@xenoterracide In the first instance at least, I think that should be suggested to the Framework team. There's nothing Boot-specific about a longer timeout being useful when debugging. They may consider changing the default or making it easier to configure it. If that doesn't work out then we could consider making it easier to configure in Boot somehow.",
                "time": "2019-11-22 17:18:14",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dd82b06afacdc4de4575f45",
                "text": "@wilkinsona I was thinking just a property to set it... which seems like boot territory, IIRC to do it now it requires you to create a bean, I don't think it's a particularly hard bean to create",
                "time": "2019-11-22 18:37:58",
                "index": 3,
                "user": "xenoterracide"
            },
            {
                "id": "5dd82b1ab010e622764fd8f6",
                "text": "but I can suggest to them",
                "time": "2019-11-22 18:38:18",
                "index": 4,
                "user": "xenoterracide"
            }
        ]
    },
    {
        "id": 702,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bbd7b56ae7be940162df5f4",
                "text": "Today i upgrade my spring boot project open Jdk version and spring boot starter  version.\nOpenJdk:11\nSpring boot starter : 2.0.5.RELEASE\n\nafter this configuration i had few error. i fixed that all. but now i have this error with test cases. i don't have any idea about this error. Anyone can help me please!!!\n\n###########################################################################\n\nMockito can only mock non-private & non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 11\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 11+24-Ubuntu-118.04\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 11+24-Ubuntu-118.04\nJVM info           : mixed mode, sharing\nOS name            : Linux\nOS version         : 4.16.18-041618-generic\n\n\nUnderlying exception : java.lang.UnsupportedOperationException: Cannot define class using reflection\nCaused by: java.lang.UnsupportedOperationException: Cannot define class using reflection\nCaused by: java.lang.IllegalStateException: Could not find sun.misc.Unsafe\nCaused by: java.lang.NoSuchMethodException: sun.misc.Unsafe.defineClass(java.lang.String, [B, int, int, java.lang.ClassLoader, java.security.ProtectionDomain)\n#################################################################################\n",
                "time": "2018-10-10 04:08:54",
                "index": 0,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbd89bee65a634336b0f58e",
                "text": "i added this lib for it. but doesn't work.\n\n<dependency>\n    <groupId>org.mockito</groupId>\n    <artifactId>mockito-core</artifactId>\n    <version>2.23.0</version>\n    <scope>test</scope>\n</dependency>\n",
                "time": "2018-10-10 05:10:22",
                "index": 1,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbd8a583844923661128cd7",
                "text": "@bhagyaperera123 Hey but on which mock does it fail?",
                "time": "2018-10-10 05:12:56",
                "index": 2,
                "user": "Ziemowit"
            },
            {
                "id": "5bbd8bb6e65a634336b102e7",
                "text": "juts now i found the error. can't mock final classes. i had mocked TimeUnit class. i removed mock annotation and ran. its work well.  Thank you @Ziemowit  ",
                "time": "2018-10-10 05:18:46",
                "index": 3,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbd8c03f659e677728cbcc4",
                "text": "No problemo senior! ;]",
                "time": "2018-10-10 05:20:03",
                "index": 4,
                "user": "Ziemowit"
            },
            {
                "id": "5bbd8c19e65a634336b105bc",
                "text": "haha im not senior beginner lol ",
                "time": "2018-10-10 05:20:25",
                "index": 5,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbd9658600c5f642381a90b",
                "text": "@bhagyaperera123 https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-with-Java-9-and-above",
                "time": "2018-10-10 06:04:08",
                "index": 6,
                "user": "vajpai"
            },
            {
                "id": "5bbd9d6f82893a2f3bc30c12",
                "text": "@vajpai thanks.\n",
                "time": "2018-10-10 06:34:23",
                "index": 7,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbd9d91600c5f642381d8a2",
                "text": "Spring boot 2.1.0 supports java 11. ",
                "time": "2018-10-10 06:34:57",
                "index": 8,
                "user": "vajpai"
            },
            {
                "id": "5bbd9da6f659e677728d2e6d",
                "text": "Now i have this Waring message in my console.\n####\nWARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils$1 (file:/home/bhagya/.m2/repository/org/springframework/spring-core/5.0.9.RELEASE/spring-core-5.0.9.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils$1\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n####",
                "time": "2018-10-10 06:35:18",
                "index": 9,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbd9dd8e65a634336b17e19",
                "text": "@vajpai now i don't have any errors. i fixed above error. 2.0.5.RELEASE working with java 11",
                "time": "2018-10-10 06:36:08",
                "index": 10,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbdae87ef4afc4f284a9e07",
                "text": "@bhagyaperera123 please read the doc, Java 11 is not supported with Spring Boot 2.0.x",
                "time": "2018-10-10 07:47:19",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bbdb19d435c2a518e7f4641",
                "text": "oh? i don't understand how its working with 2.0.5.RELEASE  ",
                "time": "2018-10-10 08:00:29",
                "index": 13,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbdb1ce64cfc273f9b73a4c",
                "text": "I didn\u2019t say it wasn\u2019t working. I said it\u2019s not officially supported (which explains why you have to override certain versions to make it work). If you use 2.1, the proper mockito version is provided",
                "time": "2018-10-10 08:01:18",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5bbdb22dbbdc0b25051674f8",
                "text": "ah i understand! \n\n```\n .AnnotationConfigServletWebServerApplicationContext@1a20270e: startup date [Wed Oct 10 16:58:52 JST 2018]; root of context hierarchy\nWARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils$1 (file:/home/bhagya/.m2/repository/org/springframework/spring-core/5.0.9.RELEASE/spring-core-5.0.9.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils$1\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n2018-Oct-10 16:58:54.379 INFO  [main] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring\n2018-Oct-10 16:58:54.533 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c15af167] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n2018-Oct-10 16:58:54.860 INFO  [main] o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)\n2018-Oct-10 16:58:54.878 INFO  [main] o.a.c.c.StandardService - Starting service [Tomcat]\n2018-Oct-10 16:58:54.878 INFO  [main] o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34\n2018-Oct-10 16:58:54.882 INFO  [localhost-startStop-1] o.a.c.c.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]\n2018-Oct-10 16:58:55.018 INFO  [localhost-startStop-1] o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext\n2018-Oct-10 16:58:55.019 INFO  [localhost-startStop-1] o.s.w.c.ContextLoader - Root WebApplicationContext: initialization completed in 2095 ms\n2018-Oct-10 16:58:55.237 INFO  [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]\n2018-Oct-10 16:58:55.238 INFO  [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]\n2018-Oct-10 16:58:55.238 INFO  [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]\n2018-Oct-10 16:58:55.238 INFO  [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]\n2018-Oct-10 16:58:55.238 INFO  [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]\n2018-Oct-10 16:58:55.239 INFO  [localhost-startStop-1] o.s.b.w.s.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]\n2018-Oct-10 16:58:55.239 INFO  [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]\n2018-Oct-10 16:58:55.239 INFO  [localhost-startStop-1] o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]\n2018-Oct-10 16:58:55.362 INFO  [main] c.z.h.HikariDataSource - HikariPool-1 - Starting...\n2018-Oct-10 16:58:55.391 INFO  [main] c.z.h.HikariDataSource - HikariPool-1 - Start completed.\n2018-Oct-10 16:58:55.418 INFO  [main] o.s.o.j.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'\n2018-Oct-10 16:58:55.425 INFO  [main] o.h.j.i.u.LogHelper - HHH000204: Processing PersistenceUnitInfo [\n\tname: default )\n```",
                "time": "2018-10-10 08:02:53",
                "index": 15,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbdb289c7bf7c3662e65d9a",
                "text": "Can you please avoid pasting logs here, this breaks the conversation. If you really have to do it please wrap that in three backticks (```)",
                "time": "2018-10-10 08:04:25",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5bbdb3a81c100a4f295e21f5",
                "text": "@bhagyaperera123 Please follow spring boot guidelines.",
                "time": "2018-10-10 08:09:12",
                "index": 17,
                "user": "vajpai"
            },
            {
                "id": "5bbdb72d271506518de7b99a",
                "text": "@snicoll  do you have any idea about this Waring?",
                "time": "2018-10-10 08:24:13",
                "index": 18,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbdb745271506518de7ba2d",
                "text": "@vajpai thank ill ",
                "time": "2018-10-10 08:24:37",
                "index": 19,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbdb74e600c5f64238292ce",
                "text": "Upgrade to Spring Boot 2.1",
                "time": "2018-10-10 08:24:46",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5bbdb77aef4afc4f284ae82a",
                "text": "ok ill upgrade than you!",
                "time": "2018-10-10 08:25:30",
                "index": 21,
                "user": "bhagyaperera123"
            },
            {
                "id": "5bbdb83c600c5f642382985b",
                "text": "@bhagyaperera123 It just the warning. You can live with it. Spring Boot 2.1 is still under development. Our 12 different micro-services work with this warning and nothing bad happens.  ",
                "time": "2018-10-10 08:28:44",
                "index": 22,
                "user": "Ziemowit"
            },
            {
                "id": "5bbdb90bc7bf7c3662e68f30",
                "text": "@Ziemowit  thank you so much! i understand! ill skip it :) ",
                "time": "2018-10-10 08:32:11",
                "index": 23,
                "user": "bhagyaperera123"
            }
        ]
    },
    {
        "id": 703,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cdfeff7ef853135c8dfa0e3",
                "text": "\n<context:component-scan base-package=\"com.trgr.cobalt.dataroom, com\"\n                            name-generator=\"com.trgr.cobalt.dataroom.common.config.DataRoomBeanNameGenerator\" \n                            use-default-filters=\"false\" >\n        <context:exclude-filter type=\"annotation\" expression=\"org.springframework.stereotype.Controller\"/>\n        <context:exclude-filter type=\"assignable\" expression=\"com.trgr.cobalt.dataroom.publishing.tracker.spec.PublishJobClientStub\"/>\n           \n    </context:component-scan>\n    <aop:aspectj-autoproxy />\n\n    <tx:annotation-driven />\n\n    <context:mbean-export />\n  \n\t<bean id=\"PublishJobClient\" class=\"com.trgr.cobalt.dataroom.publishing.tracker.spec.PublishJobClient\" />\n\t\nI want to exclude this class PublishJobClientStub  and thats not happening .... why\nI have a dependency jar in which two components with same name PublishJobClient... and want to exclude one not happening\nAny help?",
                "time": "2019-05-18 11:43:51",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5cdffaa4ef853135c8dfebf7",
                "text": "How can I scan a class from a dependent jar?",
                "time": "2019-05-18 12:29:24",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce104a56366992a94e3890f",
                "text": "@DoraRajappan, add the base package to `@ComponentScan`",
                "time": "2019-05-19 07:24:21",
                "index": 3,
                "user": "tonisostrat"
            },
            {
                "id": "5ce1466383ae782aee949cc3",
                "text": "@tonisostrat  i added com to component scan still the scanning is not proper",
                "time": "2019-05-19 12:04:51",
                "index": 7,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce14b3f9d64e537bcd575aa",
                "text": " from dependency jars",
                "time": "2019-05-19 12:25:35",
                "index": 8,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce150a775d9a575a60a8e71",
                "text": "@snicoll  please let me know how to scan dependent jars",
                "time": "2019-05-19 12:48:39",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce1a2910ac9852a950694c0",
                "text": "@DoraRajappan, do the classses in the .jar have any detectable annotation (`@Service`, `@Component`)?",
                "time": "2019-05-19 18:38:09",
                "index": 11,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2aed57c363c75a711fc81",
                "text": "@tonisostrat  yes jar has most serverside annotations",
                "time": "2019-05-20 13:42:45",
                "index": 17,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2aff57c363c75a71207e5",
                "text": "@DoraRajappan, if you have\n* that third-party jar on the classpath\n* spring annotations in that jar\n* a local class with `@ComponentScan` pointing to the base package in that jar\n* that class also getting picked up by Spring's annotation scan\n\nthen it should just work. if it doesn't then one of the things i listed is obviously missing.",
                "time": "2019-05-20 13:47:33",
                "index": 18,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2aff513e9854e3337b6a7",
                "text": " I have to autowire one by one",
                "time": "2019-05-20 13:47:33",
                "index": 19,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b04def853135c8f20547",
                "text": "Sorry I have to specify beans ond by one in context configuration",
                "time": "2019-05-20 13:49:01",
                "index": 20,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b057ad024978c6faf5a4",
                "text": "Its working",
                "time": "2019-05-20 13:49:11",
                "index": 21,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b0b59d64e537bcdee90f",
                "text": "How will spring scan and create beans having only one or more argument constructors",
                "time": "2019-05-20 13:50:45",
                "index": 22,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b0fe0ac9852a950daca2",
                "text": "By itself... We obviously  have specify them in the configuration context right",
                "time": "2019-05-20 13:51:58",
                "index": 23,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b11975d9a575a6140f5c",
                "text": "if those constructor arguments aren't also spring-managed beans then you need to instantiate those classes manually",
                "time": "2019-05-20 13:52:25",
                "index": 24,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2b14583ae782aee9e10fe",
                "text": "For integration testing I had to specifics hell lot of beans having no argument constructor is a pain",
                "time": "2019-05-20 13:53:09",
                "index": 25,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b19983ae782aee9e12e1",
                "text": "Wonderful thanks.",
                "time": "2019-05-20 13:54:33",
                "index": 26,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b1cc75d9a575a6141419",
                "text": "Got a call now chat later",
                "time": "2019-05-20 13:55:24",
                "index": 27,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b50a63dea422b4b5a318",
                "text": "If I give a package that exists in dependent jar and not base package will it work...?",
                "time": "2019-05-20 14:09:14",
                "index": 28,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b5aeef853135c8f230b2",
                "text": "@DoraRajappan, sorry I don't understand what you mean",
                "time": "2019-05-20 14:11:58",
                "index": 29,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2b753ef853135c8f23bd4",
                "text": "I meant will the component scan work if I give a package that exists in the dependent jar but not a base package",
                "time": "2019-05-20 14:18:59",
                "index": 30,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b7c30ec37966a1a0b314",
                "text": "yes, that's the point of that annotation\n\nif your code is in `com.my.app` and you have a class annotated with\n```\n@Configuration\n@ComponentScan(\"some.random.package\")\n```\nthen it will automatically scan `some.random.package` for any beans",
                "time": "2019-05-20 14:20:51",
                "index": 32,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2b7cb0ec37966a1a0b3d2",
                "text": "I need to know  if I can eg when specifying a session factory bean in configuration set property data source refer to an alresdy",
                "time": "2019-05-20 14:20:59",
                "index": 33,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b81aef853135c8f23ee2",
                "text": "Existing corebucketable data source.. if so how ref:corebucketable isn't working..,",
                "time": "2019-05-20 14:22:18",
                "index": 34,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b85a879f4478c7b010c1",
                "text": "sorry but from what you've written it seems like you have no idea how the component scanning and DI in Spring works.",
                "time": "2019-05-20 14:23:22",
                "index": 35,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2b883879f4478c7b0126f",
                "text": "Yes little idea",
                "time": "2019-05-20 14:24:03",
                "index": 36,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b8b20ac9852a950def13",
                "text": "I'm very confused at the moment",
                "time": "2019-05-20 14:24:50",
                "index": 37,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b903d22ba766a2ccc6e3",
                "text": "Please throw some light or quick reading  material",
                "time": "2019-05-20 14:26:11",
                "index": 38,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b913ad024978c6fb341f",
                "text": "Thank u",
                "time": "2019-05-20 14:26:27",
                "index": 39,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b93763dea422b4b5c55d",
                "text": "Ref: works if I specified in the configurTion",
                "time": "2019-05-20 14:27:03",
                "index": 40,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2b9540ac9852a950df34e",
                "text": "https://www.baeldung.com/inversion-control-and-dependency-injection-in-spring",
                "time": "2019-05-20 14:27:32",
                "index": 41,
                "user": "tonisostrat"
            },
            {
                "id": "5ce2b9c3ad024978c6fb38bf",
                "text": "Thank u very much Tonis\n",
                "time": "2019-05-20 14:29:23",
                "index": 42,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2ba09d22ba766a2ccce4e",
                "text": "Between if u could solve my data source problem it's gr8",
                "time": "2019-05-20 14:30:33",
                "index": 43,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2bc5d6366992a94ef2737",
                "text": "The data source corebucketable data source is created in a dependent jar . It sets the host, service, username , password etc",
                "time": "2019-05-20 14:40:29",
                "index": 44,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2bcf36366992a94ef2bed",
                "text": "How can I set that data source beAn having name corebucketabledatasource to my sessionfactory bean which I specify in the configuration context",
                "time": "2019-05-20 14:42:59",
                "index": 45,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2bddaecdf942b4c16324e",
                "text": "If I specify a newdatadource bean in my configuration context it fails that the universalconnectionpool cannot be instantiated twice...hope u got my problem at least...",
                "time": "2019-05-20 14:46:50",
                "index": 46,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d2b675d9a575a6151f6d",
                "text": "I completely read the link",
                "time": "2019-05-20 16:15:50",
                "index": 49,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d30b13e9854e3338baf7",
                "text": "You should be able to specify the data source with name corebucketabledatasource...",
                "time": "2019-05-20 16:17:15",
                "index": 50,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d341509b1035c78036ae",
                "text": "I try that tomorrow thanks....",
                "time": "2019-05-20 16:18:09",
                "index": 51,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d4ea9404bf2aed7caac6",
                "text": "Not by ref but value or something...will try Tomo\n",
                "time": "2019-05-20 16:25:14",
                "index": 52,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d6ee0ac9852a950edf09",
                "text": "In my scenario the integration test extends a base test in a dependent jar",
                "time": "2019-05-20 16:33:50",
                "index": 53,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d72275d9a575a6153ff4",
                "text": "Where the corebucketabledatasource registration takes place....",
                "time": "2019-05-20 16:34:42",
                "index": 54,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d73b9404bf2aed7cbc07",
                "text": "Anyone can help me",
                "time": "2019-05-20 16:35:07",
                "index": 55,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2d747ef853135c8f346ae",
                "text": "Appreciate it....",
                "time": "2019-05-20 16:35:19",
                "index": 56,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2db3d7c363c75a7135b1f",
                "text": "There is developer build that I run and   that will throw error if I specify the data source again in the configuration context",
                "time": "2019-05-20 16:52:13",
                "index": 57,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce2ddcb63dea422b4b6e78f",
                "text": "If r in just this test from Eclipse it wont complain me registering a data source beAn in configuration context\nWorks like a charm",
                "time": "2019-05-20 17:03:07",
                "index": 61,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce3b219879f4478c7b6d437",
                "text": "@DoraRajappan Have you tried using [`@Primary`](https://www.baeldung.com/spring-primary) or [`@Qualifier`](https://www.baeldung.com/spring-autowire#disambiguation) for disambiguation?",
                "time": "2019-05-21 08:08:57",
                "index": 67,
                "user": "Awes0meM4n"
            }
        ]
    },
    {
        "id": 704,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e858965285b325400631696",
                "text": "Good morning all. One of my requirements for my API is that it returns all documents from an Elasticsearch index. I thought the easiest thing would be to create a ReactiveCrudRepository like this `public interface VesselsRepository extends ReactiveCrudRepository<Vessel, String>`and then call the findAll() operation on it like this `return vesselsRepository.findAll().map(this::transformVessel);`. Unfortunately I get the following error `org.springframework.core.io.buffer.DataBufferLimitException: Exceeded limit on max bytes to buffer : 262144`. I'm using the latest spring boot/spring-data versions and I'm using WebFlux. From what I've read I have to increase the memory buffer size like this `spring.codec.max-in-memory-size=10MB`but that doesn't seem to make any difference even though my data is no more than 1MB. Any ideas to what I should do different in order to be able to return all documents? Thank you",
                "time": "2020-04-02 06:42:45",
                "index": 0,
                "user": "AndersClausen"
            },
            {
                "id": "5e859492b50d9745fb3047a3",
                "text": "@AndersClausen I suspect the failure is occurring in the Elasticsearch client. At the moment `spring.codec.max-in-memory-size` only applies to web requests. We're planning some changes in this area in 2.3: https://github.com/spring-projects/spring-boot/pull/20205. In the meantime, you'll need to provide your own bean to take control of the buffer size. The changes in the pull request hopefully give an indication of what needs to be done.",
                "time": "2020-04-02 07:30:26",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5e8597a4045cde25e1e8a8da",
                "text": "Cheers @wilkinsona I appreciate that",
                "time": "2020-04-02 07:43:32",
                "index": 2,
                "user": "AndersClausen"
            },
            {
                "id": "5e862d0a252ae83163ddbe36",
                "text": "> @AndersClausen I suspect the failure is occurring in the Elasticsearch client. At the moment `spring.codec.max-in-memory-size` only applies to web requests. We're planning some changes in this area in 2.3: https://github.com/spring-projects/spring-boot/pull/20205. In the meantime, you'll need to provide your own bean to take control of the buffer size. The changes in the pull request hopefully give an indication of what needs to be done.\n\n@wilkinsona I missed out on this particular information https://docs.spring.io/spring-data/elasticsearch/docs/current/reference/html/#elasticsearch.clients.reactive on the spring-data-elasticsearch, which is similar to what you hinted at above. I tried it out and it works really well :-)",
                "time": "2020-04-02 18:20:58",
                "index": 25,
                "user": "AndersClausen"
            }
        ]
    },
    {
        "id": 705,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e301482bfe65274eab04cee",
                "text": "Hi all..! I'm totally new to spring boot. Could anyone suggest me beginner friendly documentation to follow up.",
                "time": "2020-01-28 11:01:22",
                "index": 0,
                "user": "buddhikac96"
            },
            {
                "id": "5e3061f9f301780b833c9b5b",
                "text": "@buddhikac96 It really depends on how you like to learn and what you'd like to achieve. https://spring.io/guides may be of interest.",
                "time": "2020-01-28 16:31:53",
                "index": 11,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 706,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dea75c2d75ad3721d65a863",
                "text": "Hello,\n\nI'm trying to adapt reactive approach to postgresql database. Unfortunatelly i cannot find an solution to my problem. Please check details in attached code.\n\nhttps://bitbucket.org/wites342/dhub-reactive/src/master/",
                "time": "2019-12-06 15:37:38",
                "index": 0,
                "user": "wites342"
            },
            {
                "id": "5dea763008d0c961b70060fa",
                "text": "I got an \u201dReactive Repositories are not supported by JPA\u201d. I attached my code above. Please help me to solve the issue.",
                "time": "2019-12-06 15:39:28",
                "index": 1,
                "user": "wites342"
            },
            {
                "id": "5dea8a8408d0c961b7010381",
                "text": "@wites342 Didn't you already ask this on GitHub? https://github.com/spring-projects/spring-boot/issues/19320. Posting the same question without considering the suggestion you've already been given just runs the risk of wasting the time of the next person who tries to help.",
                "time": "2019-12-06 17:06:12",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5deabe429319bb5190f10e7f",
                "text": "@wites342 take a look on my pr0keyscrawler repository (https://github.com/Chr3is/pr0KeyCrawler/blob/master/src/main/java/com/pr0gramm/keycrawler/config/DatabaseConfig.java) it uses postgres in an reactive way. Check the pom.xml and the repository with the SQL statements",
                "time": "2019-12-06 20:46:58",
                "index": 9,
                "user": "Chr3is"
            },
            {
                "id": "5deabf20f65fec1c8ed4b72e",
                "text": "You will also need the @EnableR2dbcRepositories annotation on your spring boot application class",
                "time": "2019-12-06 20:50:40",
                "index": 10,
                "user": "Chr3is"
            },
            {
                "id": "5deb8b276a85195b9e131c50",
                "text": "@wilkinsona i asked by if you check what the advice was it is already done in task an the solution is not really a solution. I already did it in my code. Still ask for help",
                "time": "2019-12-07 11:21:11",
                "index": 14,
                "user": "wites342"
            },
            {
                "id": "5debaa6ef65fec1c8edb0113",
                "text": "@wites342 Then please take the time to explain the problem that you're facing. Some information about what you're trying to do and what specifically doesn't work makes it far more likely that someone will have the time to help you.",
                "time": "2019-12-07 13:34:38",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5debe85b6a85195b9e15c75d",
                "text": "@wilkinsona I tried to use non-blocking reactive paradigm in my project. The main purpose was to connect postgresql DB with spring boot app with reactive driver. I attached dependencies\n```\nplugins {\n\tid 'org.springframework.boot' version '2.2.1.RELEASE'\n\tid 'io.spring.dependency-management' version '1.0.8.RELEASE'\n\tid 'java'\n}\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n    implementation 'org.springframework.boot:spring-boot-starter-webflux'\n    implementation 'org.springframework.boot.experimental:spring-boot-starter-data-r2dbc'\n    implementation 'org.springframework.boot:spring-boot-starter-webflux'\n    implementation 'io.r2dbc:r2dbc-postgresql:0.8.0.RELEASE'\n}\n```\n\nI implemented spring-data reactive repository but when i tried to start the app i got an exception *Reactive Repositories are not supported by JPA*.\n\n```\npublic interface ClientRepository extends ReactiveCrudRepository<Client, String> {\n\n    Mono<Client> findByPrimaryKey_partyId(String partyId);\n}\n```\n",
                "time": "2019-12-07 17:58:51",
                "index": 17,
                "user": "wites342"
            },
            {
                "id": "5debf3d11659720ca817a281",
                "text": "@wites342 Please use R2DBC. The R2DBC Guide (https://spring.io/guides/gs/accessing-data-r2dbc/) explains how to get started.",
                "time": "2019-12-07 18:47:45",
                "index": 18,
                "user": "mp911de"
            },
            {
                "id": "5dec3f815ac7f22fb57d0744",
                "text": "@wites342 I linked you my repository pls take a look it uses the r2dbc postgres approach",
                "time": "2019-12-08 00:10:41",
                "index": 19,
                "user": "Chr3is"
            },
            {
                "id": "5ded1532d64a052fb6da4c00",
                "text": "@Chr3is @wilkinsona big tkanks for help. i almost made it work but finally I cannot create any composite keys in r2dbc. I found an discussion of it here  but its from march. Did anything change in this subject?",
                "time": "2019-12-08 15:22:26",
                "index": 22,
                "user": "wites342"
            },
            {
                "id": "5ded1559c3d6795b9f46622c",
                "text": "https://stackoverflow.com/questions/55349082/is-it-possible-to-implement-a-pojo-in-spring-boot-that-has-a-field-representing https://stackoverflow.com/questions/55349082/is-it-possible-to-implement-a-pojo-in-spring-boot-that-has-a-field-representing",
                "time": "2019-12-08 15:23:05",
                "index": 23,
                "user": "wites342"
            }
        ]
    },
    {
        "id": 707,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d0bcb655bc3210bb766ff8e",
                "text": "Hi.. if i use undertow access log with the following setting .. ",
                "time": "2019-06-20 18:07:33",
                "index": 0,
                "user": "mohanrao"
            },
            {
                "id": "5d0bcb66bc834f76a4ae08ff",
                "text": "server.undertow.accesslog.rotate=true",
                "time": "2019-06-20 18:07:34",
                "index": 1,
                "user": "mohanrao"
            },
            {
                "id": "5d0bcb7841654c559eca02a0",
                "text": "on what bases it rotates ?",
                "time": "2019-06-20 18:07:52",
                "index": 2,
                "user": "mohanrao"
            },
            {
                "id": "5d0bcb84bc834f76a4ae09e1",
                "text": "And also can we limit the overall size of the logs folder?",
                "time": "2019-06-20 18:08:04",
                "index": 3,
                "user": "mohanrao"
            },
            {
                "id": "5d0be69d7456db0bb821dcb7",
                "text": "@mohanrao by default it rotates based on the age of the log file. https://github.com/undertow-io/undertow/blob/master/core/src/main/java/io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver.java#L172",
                "time": "2019-06-20 20:03:41",
                "index": 12,
                "user": "javaman20"
            },
            {
                "id": "5d0be751fd4aa914b5100d5e",
                "text": "@mohanrao It rotates once a day. Undertow doesn't have any built-in support limiting the size of the logs folder.",
                "time": "2019-06-20 20:06:41",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5d0c0b5a207f6e6963cfddbc",
                "text": "@wilkinsona What is the suggested approach to clean up old files for spring boot if use undertow with accesslog",
                "time": "2019-06-20 22:40:26",
                "index": 30,
                "user": "mohanrao"
            },
            {
                "id": "5d0c86a65bc3210bb76cc6de",
                "text": "@mohanrao I'd use whatever facility your OS provides and that you are familiar with. For example you could combine cron and find as described [here](https://askubuntu.com/a/789637).",
                "time": "2019-06-21 07:26:30",
                "index": 37,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 708,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ebdd73b2ac6ef4e88c85685",
                "text": "I'm changing a boot-app from a .war deployment where really the only change is:\n```\n+@SpringBootApplication\n+class Application\n \n-    override fun configure(builder: SpringApplicationBuilder): SpringApplicationBuilder {\n-        return builder.sources(Application::class.java)\n-    }\n+fun main(args: Array<String>) {\n+    runApplication<Application>(*args)\n }\n```\n\nbut mvc won't play along:\n```\n2020-05-15 01:36:32,706 [main][][][][][][][] ERROR org.springframework.boot.SpringApplication - Application run failed\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'resourceHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerMapping]: Factory method 'resourceHandlerMapping' threw exception; nested exception is java.lang.IllegalStateException: No ServletContext set\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)\n\tat com.edb.fs.tac.jfr.srv.ApplicationKt.main(Application.kt:13)\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerMapping]: Factory method 'resourceHandlerMapping' threw exception; nested exception is java.lang.IllegalStateException: No ServletContext set\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)\n\t... 19 common frames omitted\nCaused by: java.lang.IllegalStateException: No ServletContext set\n\tat org.springframework.util.Assert.state(Assert.java:73)\n\tat org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.res\n```",
                "time": "2020-05-14 23:41:47",
                "index": 0,
                "user": "davidkarlsen"
            },
            {
                "id": "5ebdd7ca28b531314907861d",
                "text": "also adding spring-boot-starter-web (and excluding tomat) + adding sb-starter-jetty",
                "time": "2020-05-14 23:44:10",
                "index": 1,
                "user": "davidkarlsen"
            },
            {
                "id": "5ebe81fd347a503172f13829",
                "text": "@davidkarlsen can you provide more information (especially your build file?)",
                "time": "2020-05-15 11:50:21",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5ebf2ff9347a503172f309d1",
                "text": "@bclozel too bit to attach here, I tried stripping it down - removing spr security++ cxf is in there. the strange thing is that it worked just fine before moving to embedded\n\n",
                "time": "2020-05-16 00:12:41",
                "index": 57,
                "user": "davidkarlsen"
            },
            {
                "id": "5ec079f16675d830b1ae11b8",
                "text": "@bclozel it boiled down to the converter service aready being registered making mvc malfunction",
                "time": "2020-05-16 23:40:33",
                "index": 58,
                "user": "davidkarlsen"
            }
        ]
    },
    {
        "id": 709,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d441b067c87746165faa597",
                "text": "Any idea how to resolved this problem...",
                "time": "2019-08-02 11:14:14",
                "index": 0,
                "user": "vrgkwd"
            },
            {
                "id": "5d441b134b8ca519c9cfd4f9",
                "text": "***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nAn attempt was made to call a method that does not exist. The attempt was made from the following location:\n\n    springfox.documentation.spring.web.plugins.DocumentationPluginsManager.createContextBuilder(DocumentationPluginsManager.java:152)\n\nThe following method did not exist:\n\n    org.springframework.plugin.core.PluginRegistry.getPluginFor(Ljava/lang/Object;Lorg/springframework/plugin/core/Plugin;)Lorg/springframework/plugin/core/Plugin;\n\nThe method's class, org.springframework.plugin.core.PluginRegistry, is available from the following locations:\n\n    jar:file:/C:/Users/vrgaikwad/.m2/repository/org/springframework/plugin/spring-plugin-core/2.0.0.M1/spring-plugin-core-2.0.0.M1.jar!/org/springframework/plugin/core/PluginRegistry.class\n\nIt was loaded from the following location:\n\n    file:/C:/Users/vrgaikwad/.m2/repository/org/springframework/plugin/spring-plugin-core/2.0.0.M1/spring-plugin-core-2.0.0.M1.jar\n\n\nAction:\n\nCorrect the classpath of your application so that it contains a single, compatible version of org.springframework.plugin.core.PluginRegistry\n\n",
                "time": "2019-08-02 11:14:27",
                "index": 1,
                "user": "vrgkwd"
            },
            {
                "id": "5d441b273d8f1f29e0facbee",
                "text": "Any idea how to resolved this problem...                                                                                                                                         ",
                "time": "2019-08-02 11:14:47",
                "index": 2,
                "user": "vrgkwd"
            },
            {
                "id": "5d46c4654b8ca519c9e2162b",
                "text": "@vrgkwd it\u2019s telling that you have incompatible versions on the class path. Make sure that the springfox version you\u2019re using is compatible with the spring boot version",
                "time": "2019-08-04 11:41:25",
                "index": 17,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 710,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5df8cf7ce7265623015d6191",
                "text": "In the 0.9.0.RELEASE version of reactor netty the functionality was added to capture client and server metrics ie (https://github.com/reactor/reactor-netty/issues/797). Are there any ongoing discussions around integrate/enabling these features in spring boot?",
                "time": "2019-12-17 12:52:12",
                "index": 0,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5df8e494dbf24d0bec066fcb",
                "text": "@michaelmcfadyen I don't think we have an issue tracking that. Feel free to create an issue for that.",
                "time": "2019-12-17 14:22:12",
                "index": 1,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 711,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e2734f19797b560f2c660ed",
                "text": "Hi I'm upgrading spring-boot from 2.1.X to 2.2.4.Release and I had a custom `Endpoint` which is removed from exposure.exclude and added into exposure.include in a BeanPostProcessor. Now that I'm moving away from `@ConditionalOnEnabledEndpoint` to `@ConditionalOnAvailableEndpoint` it's returning 404 and is not actually exposed. I guess available endpoint is the combination of enabled and exposed. With `@ConditionalOnEnabledEndpoint` it works fine, so I assume it's enabled. It's also exposed in the BeanPostProcessor. My guess of the problem is that by the time of Condition is evaluated, the bean processor has not exposed it. But how to solve this problem? FYI, this is in an internal spring-boot library.",
                "time": "2020-01-21 17:29:21",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5e275f016ced65043b5bc269",
                "text": "@asgarj Can you expand a bit on what exactly your BPP is doing please?",
                "time": "2020-01-21 20:28:49",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5e281c0f42ae383fa967d99e",
                "text": "@wilkinsona The BPPs are exposing those `@Endpoint`s. When I expose it in the properties file in tests, it works fine as those properties are resolved and evaluated before `AutoConfiguration` decides with `@ConditionalOnAvailableEndpoint`, however, I want to avoid forcing everyone to manually put some configs, and rather I expose it programmatically",
                "time": "2020-01-22 09:55:27",
                "index": 12,
                "user": "asgarj"
            },
            {
                "id": "5e281c4245c0577cffabba8a",
                "text": "@asgarj Sorry, I don't understand what you mean by exposing. Is you BPP setting some properties? Calling methods on the endpoints? Something else?",
                "time": "2020-01-22 09:56:18",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5e281c9e3b40ea043c800e13",
                "text": "Yes it's removing it from `WebEndpointProperties` exposure exclude and add into include. Btw, the main problem happens with prometheus metrics as it's declared as ConditionalOnAvailableEndpoint in its AutoConfig",
                "time": "2020-01-22 09:57:50",
                "index": 14,
                "user": "asgarj"
            },
            {
                "id": "5e281cc9258edf397bc854c6",
                "text": "Since prometheus is not exposed by default. I want to programmatically expose it at the start up in our shared library",
                "time": "2020-01-22 09:58:33",
                "index": 15,
                "user": "asgarj"
            },
            {
                "id": "5e281cfe6b64bc54d12ef821",
                "text": "To prevent asking every micro-service to expose in their `application.yml`",
                "time": "2020-01-22 09:59:26",
                "index": 16,
                "user": "asgarj"
            },
            {
                "id": "5e281e9b3b40ea043c801d43",
                "text": "@wilkinsona I'm talking about [this](https://docs.spring.io/spring-boot/docs/2.2.4.RELEASE/reference/html/production-ready-features.html#production-ready-endpoints-exposing-endpoints) when I say exposure",
                "time": "2020-01-22 10:06:19",
                "index": 18,
                "user": "asgarj"
            },
            {
                "id": "5e281f2f3b40ea043c802179",
                "text": "My BPP is exposing prometheus metrics on `/metrics` endpoint. Bydefault, it's `/actuator/prometheus`",
                "time": "2020-01-22 10:08:47",
                "index": 19,
                "user": "asgarj"
            },
            {
                "id": "5e281f4a258edf397bc8678b",
                "text": "@wilkinsona Is the problem clear now?",
                "time": "2020-01-22 10:09:14",
                "index": 20,
                "user": "asgarj"
            },
            {
                "id": "5e281fac258edf397bc86a1f",
                "text": "@mickeelm  ok ",
                "time": "2020-01-22 10:10:52",
                "index": 21,
                "user": "koyaja"
            },
            {
                "id": "5e282034b674071d4ed690b1",
                "text": "@wilkinsona here's the discussion in github about how it's evolved https://github.com/spring-projects/spring-boot/issues/16169 @bclozel @snicoll",
                "time": "2020-01-22 10:13:08",
                "index": 22,
                "user": "asgarj"
            },
            {
                "id": "5e28306d78472574f4610b07",
                "text": "@asgarj Yes, it's clear now thank you. I'd avoid altering `WebEndpointProperties` in a bean post-processor if you can. I think an `EnvironmentPostProcessor` registered via `spring.factories` that adds a `PropertySource` with the appropriate settings would be a better approach.",
                "time": "2020-01-22 11:22:21",
                "index": 28,
                "user": "wilkinsona"
            },
            {
                "id": "5e2831803fd0cc7cfe170734",
                "text": "@wilkinsona beautiful!! Is that `EnvironmentPostProcessor` gets evaluated before those `@Conditional...`s are evaluated? 2. If I add it there, then if clients want to say exclude it in their `application.yml`, then what's the behaviour? what takes the precedence? My guess is that it can be handled in the `EnvironmentPostProcessor ` :)",
                "time": "2020-01-22 11:26:56",
                "index": 29,
                "user": "asgarj"
            },
            {
                "id": "5e2867ff42ae383fa96a22aa",
                "text": "@asgarj You can decide what has precedence by the position of the property source within the environment. The first source with a particular property wins.",
                "time": "2020-01-22 15:19:27",
                "index": 33,
                "user": "wilkinsona"
            },
            {
                "id": "5e2894b36ced65043b64542b",
                "text": "@wilkinsona There's one nuance with `management.endpoints.web.exposure.include` is that it takes a comma-separated list. So in this case, if you add a new property source for each endpoint (in my case they are in different modules and each has its own EnvPostProcessor), then the one which is first in the order, is the one that's exposed, and the rest is not exposed. In this case, is it fair to solution to scan through `environment.propertySources` and find the first instance where `management.endpoints.web.exposure.include` is defined and alter (append new endpoint) it there? Or is there a better way?",
                "time": "2020-01-22 18:30:11",
                "index": 36,
                "user": "asgarj"
            },
            {
                "id": "5e29792344c076313cd000c5",
                "text": "@asgarj Given the complexity of your arrangement, it's starting to sound like you would be better off implementing your own condition. ",
                "time": "2020-01-23 10:44:51",
                "index": 42,
                "user": "wilkinsona"
            },
            {
                "id": "5e29901c01914e3e043448e8",
                "text": "@wilkinsona The Endpoints that I'm adding are fine. I may choose not to put any condition on them. However, the problem is with PrometheusMetrics that has been changed to `@ConditionalOnAvailableEndpoint` which forces me to expose it in runtime at the beginning. ",
                "time": "2020-01-23 12:22:52",
                "index": 43,
                "user": "asgarj"
            },
            {
                "id": "5e29990dda04a624f46bd3c7",
                "text": "@asgarj I don't think I understand your problem then. Earlier you talked about a property source per endpoint, but now you're saying the problem is a single endpoint.",
                "time": "2020-01-23 13:01:01",
                "index": 44,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 712,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bc0b4b1435c2a518e95acba",
                "text": "what is the proper way to define boot (autoconfiguration) properties programatically? i need to set one property early in some project and not in the final project application.properties. i want to use the spring-batch autoconfiguration but set a single value in BatchProperties (```BatchProperties.initializeSchema.ALWAYS```). just defining the bean will fail because two beans exists afterwards (spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties).",
                "time": "2018-10-12 14:50:25",
                "index": 0,
                "user": "thackel"
            },
            {
                "id": "5bc0b4e5ae7be94016460426",
                "text": "You mean set the property whenever a given jar is present or something?",
                "time": "2018-10-12 14:51:17",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bc0b505435c2a518e95af07",
                "text": "Have you read this? https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-customize-the-environment-or-application-context",
                "time": "2018-10-12 14:51:49",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5bc0b6c4ae7be94016461608",
                "text": "i think there is no other way than avoiding autoconfiguration and provide a fixed configuration. i just don't want to configure a single property in the \"final\" app.properties. redundancy is not wanted. the final creator of the project may not choose this behaviour. the schema needs to be created all the time. i a fine with creating the batch configuration \"manually\" in a central @Configuration class. you can _feed_ the properties from zillion sources (JNDI, files, env etc) but never from instantiated @ConfigurationProperty objects",
                "time": "2018-10-12 14:59:16",
                "index": 3,
                "user": "thackel"
            },
            {
                "id": "5bc0bb1ee65a634336c88f60",
                "text": "no. a project is assembled of lots of sub projects where the \"final\" web app is only one of them. one behaviour (spring-batch) is defined in a sub project and it always requires to create the schema. the schema creation is controlled by BatchProperties.initializeSchema of the batch autoconfiguration. in the final application.properties this should not appear as its a default value. the overriding of the property just may not be part of the final project (application.properties, maven arg etc). but its OK to skip the autoconfiguration and replicate the class with a \"manual\" BatchProperties instead of  the ```@EnableConfigurationProperties(BatchProperties.class)``` behaviour",
                "time": "2018-10-12 15:17:50",
                "index": 4,
                "user": "thackel"
            },
            {
                "id": "5bc0c7b56e5a401c2d5e0cfa",
                "text": "@thackel you lost me. I am not sure I understood your question",
                "time": "2018-10-12 16:11:33",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bc0c7be1c100a4f2974ff5d",
                "text": "`EnvPP` has nothing to do with auto-configuration",
                "time": "2018-10-12 16:11:42",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 713,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c5a084a7b68f94102793573",
                "text": "Hi all,  I'm working on a Spring based application where I need to  dynamically inject and use different implementations of a Service interface at runtime depending on application level condition. Note that I might have to inject and use different implementations not just once during system startup but post start-up as well. Currently all of the beans in the application have singleton scope.  I would like to get some suggestions on how to achieve this. Thanks in advance. ",
                "time": "2019-02-05 22:03:54",
                "index": 0,
                "user": "srionline_gitlab"
            },
            {
                "id": "5c5a08a87b68f9410279375e",
                "text": " @srionline_gitlab Use BEAN ID in each of your Impl classes and call your interface by using the @Qualifier annotation with BEAN ID value",
                "time": "2019-02-05 22:05:28",
                "index": 1,
                "user": "abhishekransingh"
            },
            {
                "id": "5c5a08ba7b68f941027937f1",
                "text": "That will help you achieve the scenario you have mentioned",
                "time": "2019-02-05 22:05:46",
                "index": 2,
                "user": "abhishekransingh"
            },
            {
                "id": "5c5a0be1f46373406a5bd228",
                "text": "@abhishekransingh I believe @Qualifier would help in differentiating which implementation to inject if there are two singleton beans of the same type. But in my case, i would like to inject or use the appropriate bean based on an application level logic. ",
                "time": "2019-02-05 22:19:13",
                "index": 4,
                "user": "srionline_gitlab"
            },
            {
                "id": "5c5a0e6241775971a0e1ef9c",
                "text": "Please take a look at the below approach. This is one way to handle the scenario mentioned. I would like to know if there are better and probably more cleaner ways to do.\n```\npublic interface MyInterface {\n    void execute();\n}\n```\nThe implementations are as follows:\n```\n@Service\nclass ImplA implements MyInterface {\n  \n  @Override  \n  void execute() {\n        // ImplA specific logic\n   }\n}\n```\nOne of the implementations is marked as @Primary\n```\n@Service\n@Primary\nclass ImplB extends ImplA {\n  \n  @Override  \n  void execute() {\n        if ( <IMPLB_CONDITION_IS_TRUE) {\n                  // ImplB specific logic\n        } else {\n                super.execute();\n       }\n\n   }\n}\n```\nUsage of MyInterface\n```\n@Service\npublic class MyService {\n\n@Autowired\n private MyInterface serviceImpl;     \n\n public void doSomething() {\n       this.serviceImpl.execute();\n }\n}\n```\n",
                "time": "2019-02-05 22:29:54",
                "index": 5,
                "user": "srionline_gitlab"
            }
        ]
    },
    {
        "id": 714,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e8c02fed021c45cc7cc4a89",
                "text": "When using websocket with Spring is it normal that by default it is not possible to publish message to all clients?\n```\npublic class WebsocketHandler extends AbstractWebSocketHandler {\n    @Override\n    protected void handleTextMessage(WebSocketSession session, TextMessage message) throws IOException {\n        System.out.println(message.getPayload()+\"\\n\");\n        session.sendMessage(message);\n    }\n\n    @Override\n    protected void handleBinaryMessage(WebSocketSession session, BinaryMessage message) throws IOException {\n        System.out.println(\"New Binary Message Received\");\n        session.sendMessage(message);\n    }\n}\n```\nThis code I have is able to send/receive websocket messages only per client, other clients connected cannot receive messages is that normal? How can that be fixed? ",
                "time": "2020-04-07 04:35:10",
                "index": 0,
                "user": "incube8r"
            },
            {
                "id": "5e8c1bb6f87c5956a2407e74",
                "text": "@incube8r is there any server, where you can send messages by \"broadcast\"? I think that websocket, as an tcp thing, is client oriented...",
                "time": "2020-04-07 06:20:38",
                "index": 1,
                "user": "luvarqpp"
            },
            {
                "id": "5e8d038d16f84f046162b737",
                "text": "@luvarqpp Not sure if I understand what you mean, what I know a WS server should be able to broadcast message to those clients who subscribed to the channel, so I am wondering why a Spring Websocket is not behaving like that. ",
                "time": "2020-04-07 22:49:49",
                "index": 36,
                "user": "incube8r"
            },
            {
                "id": "5e8d7ef2d021c45cc7d072a6",
                "text": "@incube8r I see that WS server does support broadcast. But have a look at sample code: https://github.com/websockets/ws#server-broadcast It does iterate IMHO through all clients, which are connected in global register. You have perhaps implement such service in springboot on your own.... On the other side, perhaps such functionality does exist. Try to have a look at https://stackoverflow.com/questions/26465135/spring-how-to-broadcast-message-to-connected-clients-using-websockets (I am out of ideas. Someone else can come with better help)",
                "time": "2020-04-08 07:36:18",
                "index": 38,
                "user": "luvarqpp"
            },
            {
                "id": "5e8f2658e7ca460b064c65dd",
                "text": "@incube8r hi, \"broadcast\" to many, many, clients approach can be also like this one (video presentation) https://www.infoq.com/presentations/linkedin-play-akka-distributed-systems/",
                "time": "2020-04-09 13:42:48",
                "index": 62,
                "user": "luvarqpp"
            }
        ]
    },
    {
        "id": 715,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e9e902fc7dcfc14e2d861d0",
                "text": "Hello, I am looking if spring-data-r2dbc have JPA like annotations for entity objects like - `@GeneratedValue`, `@ManyToOne`, `OneToMany`?",
                "time": "2020-04-21 06:18:23",
                "index": 0,
                "user": "kalaria_dhruv_twitter"
            },
            {
                "id": "5e9e9060c38aa05a1a8e6d48",
                "text": "@kalaria_dhruv_twitter no",
                "time": "2020-04-21 06:19:12",
                "index": 1,
                "user": "62mkv"
            },
            {
                "id": "5e9e9084c7dcfc14e2d86295",
                "text": "@62mkv so how do you manage the relationships for such foreign keys?",
                "time": "2020-04-21 06:19:48",
                "index": 2,
                "user": "kalaria_dhruv_twitter"
            },
            {
                "id": "5e9e908b74bfed5a1b53cb22",
                "text": "any idea?",
                "time": "2020-04-21 06:19:55",
                "index": 3,
                "user": "kalaria_dhruv_twitter"
            },
            {
                "id": "5e9e908ec7dcfc14e2d862ab",
                "text": "spring-data-r2dbc has only Spring Data Commons annotations ",
                "time": "2020-04-21 06:19:58",
                "index": 4,
                "user": "62mkv"
            },
            {
                "id": "5e9e90e3c38aa05a1a8e6e62",
                "text": "Thank you!",
                "time": "2020-04-21 06:21:23",
                "index": 5,
                "user": "kalaria_dhruv_twitter"
            },
            {
                "id": "5e9e90ef8e987f3a5e344b2d",
                "text": "https://docs.spring.io/spring-data/commons/docs/current/reference/html/",
                "time": "2020-04-21 06:21:35",
                "index": 6,
                "user": "62mkv"
            },
            {
                "id": "5e9e9137c38aa05a1a8e709f",
                "text": "by the way there's a https://gitter.im/spring-projects/spring-data room for that",
                "time": "2020-04-21 06:22:47",
                "index": 7,
                "user": "62mkv"
            },
            {
                "id": "5e9e918774bfed5a1b53cde4",
                "text": "Ah i see, thank you for pointing out!",
                "time": "2020-04-21 06:24:07",
                "index": 8,
                "user": "kalaria_dhruv_twitter"
            }
        ]
    },
    {
        "id": 716,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cec19620ac9852a954e6159",
                "text": "does anyone know if the application.properties of a dependency can be used within an application, or must the application necessary make use of the `PropertySource` annotation to use the dependencies' application.properties",
                "time": "2019-05-27 17:07:46",
                "index": 0,
                "user": "tatumalenko"
            },
            {
                "id": "5cecfc3c6366992a9435b67b",
                "text": "@tatumalenko Dependencies shouldn't have an `application.properties` file. As the name suggests, that file should be used by the application, not by its dependencies. If you have a dependency that wants to configure some properties, it should use an `EnvironmentPostProcessor` registered via `spring.factories` instead.",
                "time": "2019-05-28 09:15:40",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5cedac7b481ef4167b920648",
                "text": "Thanks @wilkinsona, I ended up doing just that and so far so good! Any idea on how to query the application's `application.properties` or `.yml`? I tried `environment.getProperty(..)` but to no avail.",
                "time": "2019-05-28 21:47:39",
                "index": 28,
                "user": "tatumalenko"
            },
            {
                "id": "5cee3f276fc5846bab281bca",
                "text": "@tatumalenko Properties configured in `application.properties` and `application.yml` are added to the environment so `environment.getProperty(\u2026)` should allow you to get the back out again. Having said that, I'd recommend using `@ConfigurationProperties` and having the properties bound automatically rather than programatically querying them.",
                "time": "2019-05-29 08:13:27",
                "index": 30,
                "user": "wilkinsona"
            },
            {
                "id": "5cee7a156f530d3b6100cfe6",
                "text": "@wilkinsona  It's odd because I see my bootstrap.yml properties in the environment propertySources, but no application.yml. I already have my properties class annotates with @ConfigurationProperties, but the method I have to override `postProcessEnvironment` only takes arguments of type `ConfigurableEnvironment` and `StringApplication`, so I can't pass it through as an argument. Is there another way of getting access to this properties object within `postProcessEnvironment`?",
                "time": "2019-05-29 12:24:53",
                "index": 31,
                "user": "tatumalenko"
            },
            {
                "id": "5ceea3e46fc5846bab2acd17",
                "text": "@tatumalenko What order does your `EnvironmentPostProcessor` have? It sounds like it's running before the post-processor that adds the property sources for `application.properties` and `application.yml`",
                "time": "2019-05-29 15:23:16",
                "index": 32,
                "user": "wilkinsona"
            },
            {
                "id": "5ceea4076f530d3b6101f9bd",
                "text": "`@Order(Ordered.LOWEST_PRECEDENCE)`",
                "time": "2019-05-29 15:23:51",
                "index": 33,
                "user": "tatumalenko"
            },
            {
                "id": "5ceea52f9b50f639354b2925",
                "text": "That should be fine. If you'd like me to try and figure out why it isn't, I'll need to see some code that reproduces the problem.",
                "time": "2019-05-29 15:28:47",
                "index": 34,
                "user": "wilkinsona"
            },
            {
                "id": "5ceeb01d6fc5846bab2b2855",
                "text": "@wilkinsona Thanks! I uploaded a gist here https://gist.github.com/talenko/77dff13c040bafd13c1f6b33b9c268b3 with the main class in question (see lines 56-57 where I explain how the call to environment.getProperty works when defined in bootstrap.yaml but not when only defined in application.yaml). The code is essentially a modification of the sleuth library (reference of it is here https://github.com/spring-cloud/spring-cloud-sleuth/blob/558900155adb1ae4a732cf450c216e2ff04a3f90/spring-cloud-sleuth-core/src/main/java/org/springframework/cloud/sleuth/autoconfig/TraceAutoConfiguration.java)",
                "time": "2019-05-29 16:15:25",
                "index": 35,
                "user": "tatumalenko"
            },
            {
                "id": "5ceeb039702b7e5e76f6bcf3",
                "text": "If you need to look at the Configuration classes as well let me know, ill upload something more substantial in the afternoon",
                "time": "2019-05-29 16:15:53",
                "index": 36,
                "user": "tatumalenko"
            },
            {
                "id": "5ceed9d665392c3b60883dac",
                "text": "@tatumalenko Can you share a complete, minimal app that reproduces the problem please? There are too many unknown with just the environment post-processors code.",
                "time": "2019-05-29 19:13:26",
                "index": 45,
                "user": "wilkinsona"
            },
            {
                "id": "5cef06d97c1dab468c6b9f0b",
                "text": "@wilkinsona Thanks! Here it is: https://github.com/talenko/simple-open-tracing , thanks for taking the time :)",
                "time": "2019-05-29 22:25:29",
                "index": 60,
                "user": "tatumalenko"
            },
            {
                "id": "5cf02f836fc5846bab350fd2",
                "text": "@wilkinsona have you had the chance to look into my minimal example by chance?",
                "time": "2019-05-30 19:31:15",
                "index": 85,
                "user": "tatumalenko"
            },
            {
                "id": "5cf03d54bf4cbd167c035abd",
                "text": "I even tried to use an ApplicationListener for the ApplicationReadyEvent but it still only loads the bootstrap.yaml into the environment not the application.yaml",
                "time": "2019-05-30 20:30:12",
                "index": 88,
                "user": "tatumalenko"
            },
            {
                "id": "5cf03d7665392c3b60914c92",
                "text": "@tatumalenko It's Spring Cloud's bootstrap context that's causing the problem. Your environment post-processor's actually getting called twice. Once for the bootstrap context and once for the \"proper\" context. You probably want to ignore the first invocation.",
                "time": "2019-05-30 20:30:46",
                "index": 89,
                "user": "wilkinsona"
            },
            {
                "id": "5cf03ddb481ef4167ba2dc1a",
                "text": "How do I ignore an invocation?",
                "time": "2019-05-30 20:32:27",
                "index": 90,
                "user": "tatumalenko"
            },
            {
                "id": "5cf03e00702b7e5e76011554",
                "text": "Return early if properties trying to fetch are null?",
                "time": "2019-05-30 20:33:04",
                "index": 91,
                "user": "tatumalenko"
            },
            {
                "id": "5cf03e43bf4cbd167c035f92",
                "text": "OMG THAT WORKED",
                "time": "2019-05-30 20:34:11",
                "index": 92,
                "user": "tatumalenko"
            },
            {
                "id": "5cf03e4882c2dc79a5235691",
                "text": "THANK YOU SO MUCH <3",
                "time": "2019-05-30 20:34:16",
                "index": 93,
                "user": "tatumalenko"
            },
            {
                "id": "5cf03f146fc5846bab357d0b",
                "text": "My pleasure. You might want to ask in https://gitter.im/spring-cloud/spring-cloud if there's an official way of identifying the bootstrap context in an environment post-processor so that you can skip it reliably",
                "time": "2019-05-30 20:37:40",
                "index": 94,
                "user": "wilkinsona"
            },
            {
                "id": "5cf12bf8cea8295279cc61b9",
                "text": "@wilkinsona It seems that although I am able to add breakpoints and extra the application.properties when the proper context executes EnvironmentPostProcessor and return early if its the cloud context that executes, the setting of `logging.level.pattern` inside the propertySources map does not do nothing. I'm thinking that it's because it uses the cloud context call to do any configurations to the log format and the later call of the other standard context gets ignored somehow. Any idea where the value property value of `logging.level.pattern` is used programmatically so I can try to implement my logic there instead? ",
                "time": "2019-05-31 13:28:24",
                "index": 117,
                "user": "tatumalenko"
            },
            {
                "id": "5cf1400682c2dc79a529f782",
                "text": "@tatumalenko Are you using `logging.level.pattern` in your implementation? The property should be `logging.pattern.level`",
                "time": "2019-05-31 14:53:58",
                "index": 118,
                "user": "wilkinsona"
            },
            {
                "id": "5cf1402e9b50f639355c51f2",
                "text": "yes I'm using logging.pattern.level, typo",
                "time": "2019-05-31 14:54:38",
                "index": 119,
                "user": "tatumalenko"
            },
            {
                "id": "5cf1404fb76eac527a7d8d04",
                "text": "Ok. It's mapped to a system property (`LOG_LEVEL_PATTERN`) by `LoggingSystemProperties`",
                "time": "2019-05-31 14:55:11",
                "index": 120,
                "user": "wilkinsona"
            },
            {
                "id": "5cf1406482c2dc79a529fa5f",
                "text": "That system property is then consumed by Logback (or Log4j2)",
                "time": "2019-05-31 14:55:32",
                "index": 121,
                "user": "wilkinsona"
            },
            {
                "id": "5cf14072b76eac527a7d8e00",
                "text": "ah! is there any possible issues you could foresee by setting this property directly?",
                "time": "2019-05-31 14:55:46",
                "index": 122,
                "user": "tatumalenko"
            },
            {
                "id": "5cf14081e41fe15e75ec8446",
                "text": "*system property that is",
                "time": "2019-05-31 14:56:01",
                "index": 123,
                "user": "tatumalenko"
            },
            {
                "id": "5cf142046f530d3b611365a6",
                "text": "Depending on ordering, there's a chance that Boot will set it to a different value if your customization of `logging.pattern.level` hasn't taken effect",
                "time": "2019-05-31 15:02:28",
                "index": 124,
                "user": "wilkinsona"
            },
            {
                "id": "5cf1429e7c1dab468c7a2f5d",
                "text": "kk thanks!",
                "time": "2019-05-31 15:05:02",
                "index": 125,
                "user": "tatumalenko"
            },
            {
                "id": "5cf14b2a9b50f639355c9b94",
                "text": "Silly question but I could not figure it out for the life of me through searching on Google. How do I mark some property fields in my class using @ConfigurationProperties to allow the property name to be hyphenated and not simply the same name as the variable field name?",
                "time": "2019-05-31 15:41:30",
                "index": 126,
                "user": "tatumalenko"
            },
            {
                "id": "5cf14cf45de053468becd9e4",
                "text": "It should be already, hyphenated and camelCase are treated the same in properties files afaik",
                "time": "2019-05-31 15:49:08",
                "index": 127,
                "user": "Contract16"
            },
            {
                "id": "5cf14d1d481ef4167ba9d130",
                "text": "We're using hyphenated in our `.properties` files and camelCase inside of our `@ConfigurationProperties` without any issues",
                "time": "2019-05-31 15:49:49",
                "index": 128,
                "user": "Contract16"
            },
            {
                "id": "5cf15a44bf4cbd167c0a91e3",
                "text": "thanks Lawrence!",
                "time": "2019-05-31 16:45:56",
                "index": 130,
                "user": "tatumalenko"
            }
        ]
    },
    {
        "id": 717,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dc54a4dca778c1fbfc6da89",
                "text": "hello again folks... I'm still a bit confused about the changes introduced on 2.2.1:\n```\npackage my.domain.package.configuration\n\n@Configuration\n@EnableConfigurationProperties(\n    MyProperties1::class,\n    MyProperties2::class\n)\nclass PropertiesConfiguration\n\n@ConstructorBinding\n@ConfigurationProperties(\"app.props1\")\ndata class MyProperties1(\n    val field: String\n)\n\n@ConstructorBinding\n@ConfigurationProperties(\"app.props2\")\ndata class MyProperties2(\n    val field: String\n)\n```\nto make it work on 2.2.1, I tried to add  `@ConfigurationPropertiesScan(\"my.domain.package.configuration\")` alongside `@SpringBootApplication` but it's still failing to bind the properties.\nwhat I'm still missing here?\nanother thing, what may be the recommendation to remove those class declarations with `@EnableConfigurationProperties`?",
                "time": "2019-11-08 10:58:21",
                "index": 0,
                "user": "aguiarluiz"
            },
            {
                "id": "5dc54d1b5a979223c3969566",
                "text": "I\u2019m getting the usual error after converting my code to webflux\n> Exception in thread \"main\" java.lang.NoClassDefFoundError: javax/servlet/Filter\n\nDoes anyone know of a trick to find out which classes are still using it or a subclass of it?\n",
                "time": "2019-11-08 11:10:19",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc54e99ca778c1fbfc6f9f6",
                "text": "@aguiarluiz I raised this issue a few days ago. You might want to scroll back if it helps",
                "time": "2019-11-08 11:16:41",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc554a1add5717a88cec87f",
                "text": "Ok... found some missing `@ConstructorBinding` declarations in inner data classes used as parameters of Properties classes.\nremoved the `@EnableConfigurationProperties` declaration and everything it's working as expected :tada: ",
                "time": "2019-11-08 11:42:25",
                "index": 5,
                "user": "aguiarluiz"
            },
            {
                "id": "5dc5557c50010612b27ff3bf",
                "text": "where\u2019d you put the contructorbinding?",
                "time": "2019-11-08 11:46:04",
                "index": 6,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc55c87c26e8923c4ea3740",
                "text": "@chad_d_stud_twitter something like this:\n```\n@ConstructorBinding\n@ConfigurationProperties(\"app.props\")\ndata class MyProperties(val customValue: CustomValue)\n\n@ConstructorBinding\ndata class CustomValue(val field: String)\n```\n",
                "time": "2019-11-08 12:16:07",
                "index": 8,
                "user": "aguiarluiz"
            },
            {
                "id": "5dc5677535889012b1d03320",
                "text": "Urgh, how do you disable the new giant advert banner for Hypersistence Optimizer?",
                "time": "2019-11-08 13:02:45",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5dc56c6fca778c1fbfc7dc87",
                "text": "@OrangeDog spring boot banner?",
                "time": "2019-11-08 13:23:59",
                "index": 10,
                "user": "aguiarluiz"
            },
            {
                "id": "5dc56c83c26e8923c4eaac19",
                "text": "```\n13:17:18.427 [main] WARN  Hypersistence Optimizer - You should use Hypersistence Optimizer to speed up your Hibernate application!\n13:17:18.427 [main] WARN  Hypersistence Optimizer - For more details, go to https://vladmihalcea.com/hypersistence-optimizer/\n13:17:18.428 [main] INFO  Hypersistence Optimizer - \n _    _                           _     _\n| |  | |                         (_)   | |\n| |__| |_   _ _ __   ___ _ __ ___ _ ___| |_ ___ _ __   ___ ___\n|  __  | | | | '_ \\ / _ \\ '__/ __| / __| __/ _ \\ '_ \\ / __/ _ \\\n| |  | | |_| | |_) |  __/ |  \\__ \\ \\__ \\ ||  __/ | | | (_|  __/\n|_|  |_|\\__, | .__/ \\___|_|  |___/_|___/\\__\\___|_| |_|\\___\\___|\n         __/ | |\n        |___/|_|\n\n           ____        _   _           _\n          / __ \\      | | (_)         (_)\n         | |  | |_ __ | |_ _ _ __ ___  _ _______ _ __\n         | |  | | '_ \\| __| | '_ ` _ \\| |_  / _ \\ '__|\n         | |__| | |_) | |_| | | | | | | |/ /  __/ |\n          \\____/| .__/ \\__|_|_| |_| |_|_/___\\___|_|\n                | |\n                |_|\n\n```",
                "time": "2019-11-08 13:24:19",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5dc56c9b091dd14a0e834104",
                "text": "wow \ud83d\ude2f ",
                "time": "2019-11-08 13:24:43",
                "index": 12,
                "user": "aguiarluiz"
            },
            {
                "id": "5dc56cb2fd6fe41fc049c976",
                "text": "could just switch the logger off I suppose",
                "time": "2019-11-08 13:25:06",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5dc56cfd4adf071a84f260e0",
                "text": "oh, it's hibernate-types that's doing it, nothing to do with Boot",
                "time": "2019-11-08 13:26:21",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5dc56d0368ad1c4a0f8d39b4",
                "text": "forgot I also upgraded that",
                "time": "2019-11-08 13:26:27",
                "index": 15,
                "user": "OrangeDog"
            },
            {
                "id": "5dc56d31eeb63e1a8378eff6",
                "text": "@aguiarluiz i\u2019m going to try that in a bit",
                "time": "2019-11-08 13:27:13",
                "index": 16,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc56d335a979223c3977590",
                "text": "thanks",
                "time": "2019-11-08 13:27:15",
                "index": 17,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 718,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5beecb8e80652945c36fda68",
                "text": "Can I somehow set the `Content-Type` of `ResponseEntity<VndErrors>` to `application/vnd.error+json` on a global level?",
                "time": "2018-11-16 13:52:14",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5beefb5df9993b42671cf3e4",
                "text": "@kschlesselmann You could create a `VndErrorsResponseEntity extends ResponseEntity<VndErrors>`class that sets its own `Content-Type` header and use that everywhere.",
                "time": "2018-11-16 17:16:13",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5bf25a129f5a9e6e4109ea8f",
                "text": "@wilkinsona Maybe a good idea :-) (The custom `ResponseEntity`)",
                "time": "2018-11-19 06:37:06",
                "index": 51,
                "user": "kschlesselmann"
            },
            {
                "id": "5bf25b956183a977eedcfa80",
                "text": "Could anyone tell my why \n```\n@SpringBootTest\n@AutoConfigureWebTestClient\n@ActiveProfiles(\"test\")\n@ExtendWith(SpringExtension::class)\ninternal class RuleControllerTest(\n        @Autowired val webTestClient: WebTestClient\n) {\n```\nleads to `org.junit.jupiter.api.extension.ParameterResolutionException: Failed to resolve parameter [org.springframework.test.web.reactive.server.WebTestClient webTestClient] in constructor`? It seems that there is no client bean available. I think it should work though: https://github.com/sdeleuze/webflux-kotlin-web-tests/blob/master/src/test/kotlin/com/example/FooIntegrationTests.kt",
                "time": "2018-11-19 06:43:33",
                "index": 52,
                "user": "kschlesselmann"
            },
            {
                "id": "5bf25d41ddad8777ef882ce7",
                "text": "Hm \u2026 could be, that the `spring-boot-starter-hateoas` introduces the problem :-S\n",
                "time": "2018-11-19 06:50:41",
                "index": 53,
                "user": "kschlesselmann"
            },
            {
                "id": "5bf260861ad4155d3ae9253b",
                "text": "OK, simply using `implementation(\"org.springframework.hateoas:spring-hateoas\")` seems to fix it",
                "time": "2018-11-19 07:04:38",
                "index": 54,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 719,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e968764e24b4d6c440c8a00",
                "text": "Hello, does Spring Boot have official support for Java 14 Records?\nI'm trying to run use them in my Rest Controllers, but when I try to run I get\n\n\n> org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [/Users/darek/git/madrasowa/target/classes/pl/madrasowa/catalogue/web/Book.class]; nested exception is java.lang.UnsupportedOperationException: This feature requires ASM8_EXPERIMENTAL",
                "time": "2020-04-15 04:02:44",
                "index": 0,
                "user": "darek1024"
            },
            {
                "id": "5e96a79d9316f34b8da36be7",
                "text": "@darek1024 that exception is not really related to the question I think. It\u2019s ASM telling you you\u2019ve not enabled the preview language features. Spring Boot itself hasn\u2019t support for records yet (i.e. for Configuration properties). The framework team had a look but I am not sure where things stands. Make sure for a start you\u2019ve enabled preview features and that you\u2019re using the latest Spring Boot version.",
                "time": "2020-04-15 06:20:13",
                "index": 2,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 720,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bab86d18ddf5867dc7829ef",
                "text": "Is there a way to have @ExceptionHandler (in an @ControllerAdvice class) match a superclass of exceptions?",
                "time": "2018-09-26 13:17:05",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5bab879098245f4ae0880b72",
                "text": "@springroll12 use the superclass as the method parameter",
                "time": "2018-09-26 13:20:16",
                "index": 1,
                "user": "ofabricio"
            },
            {
                "id": "5bab87daeba8e60bc64a474b",
                "text": "@springroll12 just declare your `@ExceptionHandler` to handle the superclass. See https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.html#handleException-java.lang.Exception-org.springframework.web.context.request.WebRequest- as an example",
                "time": "2018-09-26 13:21:30",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5bab87f598245f4ae0880eb6",
                "text": "the exception class specified in `@ExceptionHandler` can be a base class",
                "time": "2018-09-26 13:21:57",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5bab87fc98245f4ae0880ebf",
                "text": "or an `abstract` class",
                "time": "2018-09-26 13:22:04",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5bab8814eba8e60bc64a4808",
                "text": "@edeandrea  so if I have a bunch of subclasses of that superclass, they should be caught by @ExceptionHandler(Superclass.class) ?",
                "time": "2018-09-26 13:22:28",
                "index": 5,
                "user": "springroll12"
            },
            {
                "id": "5bab8822eba8e60bc64a48c7",
                "text": "maybe I'm doing something incorrectly, but that's not what I'm seeing",
                "time": "2018-09-26 13:22:42",
                "index": 6,
                "user": "springroll12"
            },
            {
                "id": "5bab885941177e0bc7acd383",
                "text": "you have to make sure none of the subclasses are handled anywhere else (i.e. is there some `@ExceptionHandler(Exception.class)` somewhere?",
                "time": "2018-09-26 13:23:37",
                "index": 7,
                "user": "edeandrea"
            },
            {
                "id": "5bab886841177e0bc7acd3f0",
                "text": "any exception class can only be handled by a single `@ExceptionHandler`",
                "time": "2018-09-26 13:23:52",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5bab88f356877c463a88a398",
                "text": "```\npublic class ChildException extends MasterException {\n}\n \npublic class MasterException extends Exception {\n}\n \n \n@ExceptionHandler(MasterException.class)\npublic ResponseEntity<Thing> handleException(MasterException e) {\n  // ChildException should be caught here?\n}\n```",
                "time": "2018-09-26 13:26:11",
                "index": 9,
                "user": "springroll12"
            },
            {
                "id": "5bab891c56877c463a88a43f",
                "text": "I only have one class labelled controlleradvice, and no other exception handlers that I know of",
                "time": "2018-09-26 13:26:52",
                "index": 10,
                "user": "springroll12"
            },
            {
                "id": "5bab8a4701fb5f4ae1263bad",
                "text": "nevermind, it seems it was an error in a subclass that was causing a jackson exception to be thrown first",
                "time": "2018-09-26 13:31:51",
                "index": 11,
                "user": "springroll12"
            },
            {
                "id": "5bab8a54691dc567dba7e154",
                "text": "I think that works. Thanks @edeandrea  and @ofabricio ",
                "time": "2018-09-26 13:32:04",
                "index": 12,
                "user": "springroll12"
            },
            {
                "id": "5bab8a83aedb375b9c4cd5f5",
                "text": "yeah be careful when your `ResponseEntity` is the exception itself. I usually use `@JsonIgnoreProperties({ \"stackTrace\", \"suppressedExceptions\", \"cause\" })`",
                "time": "2018-09-26 13:32:51",
                "index": 13,
                "user": "edeandrea"
            },
            {
                "id": "5bab8a99eba8e60bc64a5a3f",
                "text": "if i want to return the exception itself as the body of the response",
                "time": "2018-09-26 13:33:13",
                "index": 14,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 721,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5b905d5ed457a1406ca7b3e2",
                "text": "Hi gitter community.\nIs there something up with spring boot 2.0.4 and Mongo? I  can't seem to get it to work, and I'm  not sure why",
                "time": "2018-09-05 22:49:02",
                "index": 0,
                "user": "nkrul"
            },
            {
                "id": "5b905d6ff5402f32aae35ae7",
                "text": "bootRun fails",
                "time": "2018-09-05 22:49:19",
                "index": 1,
                "user": "nkrul"
            },
            {
                "id": "5b905d86cff55e5617b27fe6",
                "text": "spring.data:\n  mongodb:\n    uri: mongodbapp:pass@cluster0-elyda.mongodb.net/test?retryWrites=true\n    database: untabled",
                "time": "2018-09-05 22:49:42",
                "index": 2,
                "user": "nkrul"
            },
            {
                "id": "5b905daf11227d711d1fd0fb",
                "text": "Parameter 0 of method mongoDbFactory in org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration required a bean of type 'com.mongodb.MongoClient' that could not be found.\n        - Bean method 'mongo' not loaded because @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.MongoDbFactory' mongoDbFactory\n",
                "time": "2018-09-05 22:50:23",
                "index": 3,
                "user": "nkrul"
            },
            {
                "id": "5b905dceac25fd11b5e82180",
                "text": "formatting fails... but I can't get it to stand up with config, or with no config and flapdoodle",
                "time": "2018-09-05 22:50:54",
                "index": 4,
                "user": "nkrul"
            },
            {
                "id": "5b905e72f5402f32aae35f6b",
                "text": "and with de.flapdoodle.embed.mongo, I get the same",
                "time": "2018-09-05 22:53:38",
                "index": 5,
                "user": "nkrul"
            },
            {
                "id": "5b90d62aac25fd11b5eab49e",
                "text": "@nkrul we\u2019re not aware of any breakage. Please share a small project that reproduces this?",
                "time": "2018-09-06 07:24:26",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5b91b5c0c9500b4bab928ce7",
                "text": "@snicoll my non working config for mongo db is:  https://github.com/nkrul/broken-springboot-mongo  ",
                "time": "2018-09-06 23:18:24",
                "index": 55,
                "user": "nkrul"
            },
            {
                "id": "5b91b5cd1d3a5711b6f620f5",
                "text": "cut down from my mini mess of an app",
                "time": "2018-09-06 23:18:37",
                "index": 56,
                "user": "nkrul"
            },
            {
                "id": "5b91b5edd457a1406caf941f",
                "text": "same error",
                "time": "2018-09-06 23:19:09",
                "index": 57,
                "user": "nkrul"
            },
            {
                "id": "5b91b74060f9ee7aa4eb1728",
                "text": "admittedly, spring boot was at 2.0.0.M7 when I last has this working",
                "time": "2018-09-06 23:24:48",
                "index": 58,
                "user": "nkrul"
            },
            {
                "id": "5b922ad0f5402f32aaedd995",
                "text": "@nkrul why on Earth are you doing this? https://github.com/nkrul/broken-springboot-mongo/blob/8099e0edf78c5418caf0321d87ac6a5e92614310/build.gradle#L46",
                "time": "2018-09-07 07:37:52",
                "index": 60,
                "user": "snicoll"
            },
            {
                "id": "5b922aedd457a1406cb20089",
                "text": "If you had properly cut it to a mini app it would have worked (not sure why you need Spring Security, Spring Boot admin and a bunch of override for this app)",
                "time": "2018-09-07 07:38:21",
                "index": 61,
                "user": "snicoll"
            },
            {
                "id": "5b922b171d3a5711b6f89ee8",
                "text": "If you stop overriding the `spring-context` version (right not you have inncompatible versions on the classpath), this app starts. Please refrain from using versions there (all the overrides you have there are outdated)",
                "time": "2018-09-07 07:39:03",
                "index": 62,
                "user": "snicoll"
            },
            {
                "id": "5b9236a3cff55e5617bd2300",
                "text": "@snicoll Thanks. Will do that.",
                "time": "2018-09-07 08:28:19",
                "index": 65,
                "user": "nkrul"
            }
        ]
    },
    {
        "id": 722,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5cdf1818ef853135c8da402a",
                "text": "Hello all :) I would like to contribute to Spring Boot (currently eyeing https://github.com/spring-projects/spring-boot/issues/16538). I've read the contribution guidelines, if I've understood correctly; all I need to do is sign the agreement, fork the repo and open a pull request when I have implemented the fix?",
                "time": "2019-05-17 20:22:48",
                "index": 0,
                "user": "kstrijbos"
            },
            {
                "id": "5cdfbb54ef853135c8de3e7a",
                "text": "@kstrijbos That's the idea, yes. You can find more information here: https://github.com/spring-projects/spring-boot/blob/master/CONTRIBUTING.adoc",
                "time": "2019-05-18 07:59:16",
                "index": 1,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 723,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d26317c58c6811bf986db72",
                "text": "I have an `entity-library` which has `@Entity`s and `@Repository`s. The tests work, etc. It has a top-level `@Configuration` class that enables JPA repos, component-scans, and `@EnableAutoConfiguration`\nI have a `service-library` which depends on the `entity-library` and uses some of the Repositories. It has a top-level `@Configuration` that Imports the `entity-library` Config, component-scans, and `@EnableAutoConfiguration`.\nWhen running tests in the service library, it complains that there is no `entityManagerFactory` bean when trying to create one of the `entity-library` repositories.\nIs there anything obvious about what I'm doing that's incorrect?",
                "time": "2019-07-10 18:42:04",
                "index": 0,
                "user": "ericjturley"
            },
            {
                "id": "5d2631a5270d2b1bfa733bf4",
                "text": "I would have assumed that bringing in the entity library would bring everything it needs along with it. \nThat's what I'm after, but I guess I'm doing it wrong.",
                "time": "2019-07-10 18:42:45",
                "index": 1,
                "user": "ericjturley"
            },
            {
                "id": "5d2634cfcdb70805c971ddda",
                "text": "I'm not sure how to structure or search for that issue on SO",
                "time": "2019-07-10 18:56:15",
                "index": 2,
                "user": "ericjturley"
            },
            {
                "id": "5d264541bea9f357412f8714",
                "text": "It sounds like the tests in your `service-library` don't have auto-configuration enabled. Assuming that it's a `@SpringBootTest`, it'll look in the test class's package and above for a class annotated with `@SpringBootConfiguration` (which `@SpringBootApplication` is annotated with), and use that as the configuration source for the tests' application context.",
                "time": "2019-07-10 20:06:25",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5d264f58270d2b1bfa740728",
                "text": "@wilkinsona : Well, they're both just libraries (which will be pulled into a Spring Boot Application), so I'm trying to write integration tests for just the libraries. As such, I don't have any classes annotated with `@SpringBootConfiguration` or `@SpringBootApplication`).\nHowever, the \"main\" `@Configuration` classes for **both** libraries are annotated with `@EnableAutoConfiguration`.\nThe test is annotated with `@WebFluxTest`.",
                "time": "2019-07-10 20:49:28",
                "index": 4,
                "user": "ericjturley"
            },
            {
                "id": "5d264f7af827ad6676e3881c",
                "text": "... and just now it's occurring to me that I should also annotate it with `@DataJpaTest` ?",
                "time": "2019-07-10 20:50:02",
                "index": 5,
                "user": "ericjturley"
            },
            {
                "id": "5d265007bea9f357412fd9bc",
                "text": "Oh, but of course, that gives: `Configuration error: found multiple declarations of @BootstrapWith `\nSo maybe `@SpringBootTest` is what I need...",
                "time": "2019-07-10 20:52:23",
                "index": 6,
                "user": "ericjturley"
            },
            {
                "id": "5d2650fbcdb70805c972aa25",
                "text": "Yes - that seems to have sorted it. I'm past that problem.",
                "time": "2019-07-10 20:56:27",
                "index": 7,
                "user": "ericjturley"
            },
            {
                "id": "5d26510817cc7b05caa80e39",
                "text": "/thanks :)",
                "time": "2019-07-10 20:56:40",
                "index": 8,
                "user": "ericjturley"
            },
            {
                "id": "5d26e52a270d2b1bfa77ed5e",
                "text": "@ericjturley If they are libraries, I would not put `@EnableAutoConfiguration` in them. I would let the consumer of the libraries make that decision",
                "time": "2019-07-11 07:28:42",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5d2e31014d750532415996ce",
                "text": "@wilkinsona you said:\n> @ericjturley If they are libraries, I would not put `@EnableAutoConfiguration` in them. I would let the consumer of the libraries make that decision\n\nBut it seems to be the only(?) way to  get Spring **test** context to provide the beans I need (which it ordinarily does), like an H2 datasource, and `entityManagerFactory`, and `webClient` and such.\nI tried to find a different/better way - but I must have missed it.",
                "time": "2019-07-16 20:18:09",
                "index": 111,
                "user": "ericjturley"
            },
            {
                "id": "5d2e42c13e2c7e397099a128",
                "text": "@ericjturley \n> But it seems to be the only(?) way to get Spring test context to provide the beans I need (which it ordinarily does), like an H2 datasource, and entityManagerFactory, and webClient and such.\n> I tried to find a different/better way - but I must have missed it.\n\nYou can add `@SpringBootConfiguration` and `@EnableAutoConfiguration` directly into `src/test/java` (your test packages) so that Spring Boot can find it as a default. I have the same use case as you with developing libraries and those libraries should _not_ have `@EnableAutoConfiguration` anywhere on them.\n\nExample:\nsrc/test/java/com/yourlibrary/somepackage/TestBootConfiguration.java:\n```java\n@SpringBootConfiguration\n@EnableAutoConfiguration\n public class TestBootConfiguration {}\n```\n\nthen once that's in the root, you can create whatever tests in subpackages of that:\nsrc/test/java/com/yourlibrary/somepackage/whatever/SomeSpringTest.java:\n```java\n@SpringBootTest\npublic class SomeSpringTest {\n    @Autowired\n    ApplicationContext appctx;\n\n    @Test\n    public void appCtxContainsBeans() {\n        assertNonNull(appctx.getBean(SomeType.class);\n    }\n}\n```",
                "time": "2019-07-16 21:33:53",
                "index": 113,
                "user": "phillipuniverse"
            },
            {
                "id": "5d2e446754d33839371cc92e",
                "text": "another option would be to not even worry about that top-level class at all and simply  create an inner static `@Configuration` class of your test. Spring's test support will use that to override your context configuration completely, excluding the need for any `@SpringBootConfiguration` to exist:\n\n```java\n@SpringBootTest\npublic class SomeSpringTest {\n\n    @Configuration\n    @EnableAutoConfiguration\n    static class Config {}\n\n    @Autowired\n    ApplicationContext appctx;\n\n    @Test\n    public void appCtxContainsBeans() {\n        assertNonNull(appctx.getBean(SomeType.class);\n    }\n}\n```",
                "time": "2019-07-16 21:40:55",
                "index": 114,
                "user": "phillipuniverse"
            },
            {
                "id": "5d2e45caeab6cd77637f3dc7",
                "text": "@ericjturley one more thing, you mentioned this:\n> The test is annotated with `@WebFluxTest`.\n> ... and just now it's occurring to me that I should also annotate it with `@DataJpaTest` ?\n> Oh, but of course, that gives: `Configuration error: found multiple declarations of @BootstrapWith `\n> So maybe `@SpringBootTest` is what I need...\n\n`@SpringBootTest` is always the largest appctx you can get, with everything assumed to be auto configured across all \"test slices\". Using `@WebFluxTest` means that it will only activate the web side of your application, using `@DataJpaTest` will only activate the JPA side of your application. There are some docs on how test slices work at https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html#boot-features-testing-spring-boot-applications-testing-autoconfigured-tests\n\nIf you want multiple test slices, usually you want to include a single one of the `@*Test` annotations but potentially provide more slices with `@AutoConfigure*` annotations. For instance, maybe you want a `@DataJpaTest` but also want to do things with JSON (like `ObjectMapper`):\n```java\n@DataJpaTest\n@AutoConfigureJson\npublic class JPAAndObjectMapperTest {\n    @Autowired\n    private ApplicationContext applicationContext;\n\n    @Autowired\n    private EntityManager em;\n\n    @Autowired\n    private ObjectMapper mapper;\n\n    @Test\n    public void appCtxLoads() {\n        assertNonNull(applicationContext);\n    }\n}\n```",
                "time": "2019-07-16 21:46:50",
                "index": 115,
                "user": "phillipuniverse"
            },
            {
                "id": "5d2e484654d33839371ce595",
                "text": "@phillipuniverse  Thanks! I'll see about arranging things that way.\nI have questions, I think, but I'll try to work through them.",
                "time": "2019-07-16 21:57:26",
                "index": 116,
                "user": "ericjturley"
            },
            {
                "id": "5d2ee6483e2c7e39709df28d",
                "text": "@ericjturley In addition to the excellent suggestions from @phillipuniverse (thank you), you could also look at `ApplicationContextRunner` for testing auto-configurations.",
                "time": "2019-07-17 09:11:36",
                "index": 118,
                "user": "wilkinsona"
            },
            {
                "id": "5d2f391c3e2c7e3970a07f3e",
                "text": "@phillipuniverse , @wilkinsona Thanks!\nI easily got it working from Phillip's suggestions :)",
                "time": "2019-07-17 15:05:00",
                "index": 138,
                "user": "ericjturley"
            },
            {
                "id": "5d2f39593e2c7e3970a08146",
                "text": "While the docs for testing Spring Boot Applications are pretty clear (and Spring Boot makes it pretty easy anyway), the setup for testing libraries intended to be used in a Spring Boot application is less clear.",
                "time": "2019-07-17 15:06:01",
                "index": 139,
                "user": "ericjturley"
            },
            {
                "id": "5d2f3961f4fe943971253b13",
                "text": "At least, to me.",
                "time": "2019-07-17 15:06:09",
                "index": 140,
                "user": "ericjturley"
            },
            {
                "id": "5d2f3dde7dbfff3242c54936",
                "text": "@ericjturley feel free to raise an issue if you have ideas to improve it or something concrete to report",
                "time": "2019-07-17 15:25:18",
                "index": 141,
                "user": "snicoll"
            },
            {
                "id": "5d2f3f1001621760bccfa0d7",
                "text": "@snicoll Ok, I'll evaluate.\nBut, as far as I can tell there **isn't** any documentation specific to libraries. That is, I never found a section entitled: \"Differences when testing libraries vs applications\" or something like that.\nSo first, if I'm missing anything like that, pls point me to it.",
                "time": "2019-07-17 15:30:24",
                "index": 142,
                "user": "ericjturley"
            },
            {
                "id": "5d2f3f773e2c7e3970a0b227",
                "text": "Not sure why we\u2019d need such a section",
                "time": "2019-07-17 15:32:07",
                "index": 143,
                "user": "snicoll"
            },
            {
                "id": "5d2f40ee54d338393723f01d",
                "text": "We do have some documentation about testing libraries: https://docs.spring.io/spring-boot/docs/2.2.x/reference/htmlsingle/#boot-features-test-autoconfig",
                "time": "2019-07-17 15:38:22",
                "index": 144,
                "user": "wilkinsona"
            },
            {
                "id": "5d2f40eeeab6cd776386420e",
                "text": "My understanding is that there are differences in how the spring context is set up via autoconfiguration in libraries vs applications.\nIn applications, it's all in the production code.\nIn libraries, it's ... mostly(?) in the test code, because you want the app to control  the context at runtime.\nSo it changes which annotations are used, and where they're placed (like the `@EnableAutoConfiguration` annotation - which I don't think I read anywhere that I shouldn't use on library production code).\nAll the above is what I **think** I've discovered - it may be incorrect.",
                "time": "2019-07-17 15:38:22",
                "index": 145,
                "user": "ericjturley"
            }
        ]
    },
    {
        "id": 724,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5b90da00d457a1406caa5a61",
                "text": "@bclozel when the GA suppose to be, planned date ? ",
                "time": "2018-09-06 07:40:48",
                "index": 0,
                "user": "doribd"
            },
            {
                "id": "5b90da16c9500b4bab8d3179",
                "text": "@doribd the planning is available on github",
                "time": "2018-09-06 07:41:10",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5b90da27d8d36815e5e39099",
                "text": "@doribd https://github.com/spring-projects/spring-boot/milestones we don't have a date yet",
                "time": "2018-09-06 07:41:27",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5b90e43411b41f69dbca624c",
                "text": "@bclozel the link you mentioned on M2 above, does it oblige me to use jdk 9 or can it be done with jdk 8 ? ",
                "time": "2018-09-06 08:24:20",
                "index": 3,
                "user": "doribd"
            },
            {
                "id": "5b90e46911b41f69dbca63a6",
                "text": "@doribd JDK8 is just fine; we usually revisit requirements only for major versions (Spring Boot 2.x is JDK8+)",
                "time": "2018-09-06 08:25:13",
                "index": 4,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 725,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c7f770e7851db13497739a5",
                "text": "I have a couple of doubts about AbstractRoutingDataSource",
                "time": "2019-03-06 07:30:22",
                "index": 0,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f77727851db1349773d18",
                "text": "Ummm, hi everyone!",
                "time": "2019-03-06 07:32:02",
                "index": 1,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f779c25e4e24c07229d77",
                "text": "I extended AbstractRoutingDataSource with another class, but it doesn't seem to get called anywhere when a request comes in.",
                "time": "2019-03-06 07:32:44",
                "index": 2,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f77b5bf7990126e595d23",
                "text": "Should the class be made a component?",
                "time": "2019-03-06 07:33:09",
                "index": 3,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f77da0a6b915163e2b0ef",
                "text": "I don't really understand how this really works, the examples on the internet are a little bit confusing when it comes to this part.",
                "time": "2019-03-06 07:33:46",
                "index": 4,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f8f6a86e34a126f95fa87",
                "text": "@kevin-madhu If you want your `AbstractRoutingDataSource` to be used by other components, you'll almost certainly need it to be exposed as a bean. You could do that by marking it with `@Component` or you could return an instance from a `@Bean` method in a `@Configuration` class. Making it a bean will allow it to be injected into other components like Hibernate.",
                "time": "2019-03-06 09:14:18",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5c7f91667851db134977f237",
                "text": "@wilkinsona Is there any magic which is supposed to happen with AbstractRoutingDataSource?",
                "time": "2019-03-06 09:22:46",
                "index": 20,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f918f3162ec7bc7284939",
                "text": "Or we should the other components call it by themselves?",
                "time": "2019-03-06 09:23:27",
                "index": 21,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f91a686e34a126f960a66",
                "text": "As far as the other components are concerned, it's just a `DataSource`.",
                "time": "2019-03-06 09:23:50",
                "index": 22,
                "user": "wilkinsona"
            },
            {
                "id": "5c7f91dc1fae6423ca3d0390",
                "text": "Okay, but if it's exposed as an datasource it'll choose the required datasource by itself, right?",
                "time": "2019-03-06 09:24:44",
                "index": 23,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f922cd1e7281f09e33f30",
                "text": "And in all the examples I've seen, they create another Context using ThreadLocal instead of going for the built-in DataSource mapping, to make it thread-safe I guess.",
                "time": "2019-03-06 09:26:04",
                "index": 24,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f92450a6b915163e36ecd",
                "text": "The default built-in methods are not thread safe?",
                "time": "2019-03-06 09:26:29",
                "index": 25,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f929c3162ec7bc728518a",
                "text": "I see that it has setTargetDataSources() which internally uses a Map.",
                "time": "2019-03-06 09:27:56",
                "index": 26,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f92dac8e5bc5162f5e647",
                "text": "Which one should I use if the tenant gets changed for each request, and the tenant datasource details are stored in another db.",
                "time": "2019-03-06 09:28:58",
                "index": 27,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7f92e53162ec7bc728531f",
                "text": "Each tenant have their own db.",
                "time": "2019-03-06 09:29:09",
                "index": 28,
                "user": "kevin-madhu"
            },
            {
                "id": "5c7fadcc1fae6423ca3dbc33",
                "text": "@kevin-madhu You'll need to decide how you want the routing to be performed. It's specific to your application and its needs.",
                "time": "2019-03-06 11:23:56",
                "index": 32,
                "user": "wilkinsona"
            },
            {
                "id": "5c7fc053293ac75db5614781",
                "text": "@wilkinsona Thanks :) Figured it out.",
                "time": "2019-03-06 12:42:59",
                "index": 37,
                "user": "kevin-madhu"
            }
        ]
    },
    {
        "id": 726,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ce68c5775d9a575a62ea4f1",
                "text": "Hi folks. Is there a way to refresh a `ConfigurableApplicationContext` on a running Spring boot app? We have a central config system which delivers DB configs to local IPC shm, and there is a scheduled job for check whether the config changed. When changed, I need to replace the datasource ",
                "time": "2019-05-23 12:04:39",
                "index": 0,
                "user": "zend"
            },
            {
                "id": "5ce68d8875d9a575a62ead06",
                "text": "I called HikariCP's `softEvictConnections()`,  all the connections are closed but new connection always ignoring the new datasource config.",
                "time": "2019-05-23 12:09:44",
                "index": 1,
                "user": "zend"
            },
            {
                "id": "5ce6912c879f4478c7cab36d",
                "text": "@zend so basically you want to redo your dependency injection at that point? My suggestion would be to call the appropriate setters of the beans that need the replacements. (Unless there's a somewhat cleaner solution available). That's IMHO also one of the only reasons to use setter vs constructor injection.",
                "time": "2019-05-23 12:25:16",
                "index": 3,
                "user": "vanseverk"
            },
            {
                "id": "5ce6926913e9854e33526a40",
                "text": "@zend, i think this is the best way: https://stackoverflow.com/a/45074749/3350516",
                "time": "2019-05-23 12:30:33",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5ce6967dd22ba766a2e757cb",
                "text": "Thanks @tonisostrat , is there a Java api to refresh by code directly instead of a REST api?",
                "time": "2019-05-23 12:47:57",
                "index": 5,
                "user": "zend"
            },
            {
                "id": "5ce697467c363c75a72ce4b2",
                "text": "And I am looking for a light weight solution to change on the fly, adding spring-cloud deps is a bit too heavy for this",
                "time": "2019-05-23 12:51:18",
                "index": 6,
                "user": "zend"
            },
            {
                "id": "5ce6980ad22ba766a2e7625e",
                "text": "@zend well, if you're okay with a full restart, you might as well create a new applicationcontext..",
                "time": "2019-05-23 12:54:34",
                "index": 7,
                "user": "vanseverk"
            },
            {
                "id": "5ce69827d22ba766a2e762f2",
                "text": "    public static void restart() {\n        ApplicationArguments args = context.getBean(ApplicationArguments.class);\n \n        Thread thread = new Thread(() -> {\n            context.close();\n            context = SpringApplication.run(Application.class, args.getSourceArgs());\n        });\n \n        thread.setDaemon(false);\n        thread.start();\n    }",
                "time": "2019-05-23 12:55:03",
                "index": 8,
                "user": "vanseverk"
            },
            {
                "id": "5ce6983a83ae782aeeb8f37b",
                "text": "Ref: https://www.baeldung.com/java-restart-spring-boot-app",
                "time": "2019-05-23 12:55:22",
                "index": 9,
                "user": "vanseverk"
            },
            {
                "id": "5ce6987b13e9854e3352a06e",
                "text": "Although my recommendation would rather be to inject a list of beans that need to have a new dependency injected, and do the injections like that",
                "time": "2019-05-23 12:56:27",
                "index": 10,
                "user": "vanseverk"
            },
            {
                "id": "5ce69905ecdf942b4c309a73",
                "text": "@vanseverk, the problem is that if we're talking about refreshign beans that Spring itself generates (like `DataSource`) then it becomes increasingly more difficult.",
                "time": "2019-05-23 12:58:45",
                "index": 11,
                "user": "tonisostrat"
            },
            {
                "id": "5ce69a4c13e9854e3352ac4d",
                "text": "@tonisostrat good point!",
                "time": "2019-05-23 13:04:12",
                "index": 12,
                "user": "vanseverk"
            },
            {
                "id": "5ce69a66ef853135c80ce0d2",
                "text": "Still though, having all your applications restart concurrently to be able to do the re-wiring would result in a temporary black-out",
                "time": "2019-05-23 13:04:38",
                "index": 13,
                "user": "vanseverk"
            },
            {
                "id": "5ce69b1bb313d72314157e7f",
                "text": "@vanseverk thanks, yes I agree that's simpler, let me have a try.",
                "time": "2019-05-23 13:07:39",
                "index": 14,
                "user": "zend"
            },
            {
                "id": "5ce69cea75d9a575a62f264b",
                "text": "@zend FYI, if you apply an interface on your beans, you can inject a whole list of all the beans with said interface. I.e. \n`\n@Autowired\nList<RewiredBean> rewiredBeans;\n`",
                "time": "2019-05-23 13:15:22",
                "index": 15,
                "user": "vanseverk"
            },
            {
                "id": "5ce69e07879f4478c7cb19da",
                "text": "@vanseverk, the question here is *specifically* about refreshing the `DataSource`, that's the problem.",
                "time": "2019-05-23 13:20:07",
                "index": 16,
                "user": "tonisostrat"
            },
            {
                "id": "5ce69e8d63dea422b4d06204",
                "text": "Restarting the whole `SpringApplication` works.",
                "time": "2019-05-23 13:22:21",
                "index": 17,
                "user": "zend"
            },
            {
                "id": "5ce69f5d879f4478c7cb279b",
                "text": "Don't know why HikariConfigMXBean provides setUsername and setPassword but without setJdbcUrl. When master/slave swapped, we need to change to jdbc url",
                "time": "2019-05-23 13:25:49",
                "index": 18,
                "user": "zend"
            },
            {
                "id": "5ce6a36775d9a575a62f5f48",
                "text": "@tonisostrat I missed that bit before. Might be an interesting thought exercise for the future: how to make it less of a pain to rewire it for Beans provided by SB itself",
                "time": "2019-05-23 13:43:03",
                "index": 19,
                "user": "vanseverk"
            }
        ]
    },
    {
        "id": 727,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5c4651cb1cb70a372a1737b0",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/JetR/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/JetR/image.png)",
                "time": "2019-01-21 23:12:11",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5c4651cf7a0f4d5b19e7c432",
                "text": "Hi all.. I'm trying to use `thymeleaf 3` in spring boot `1.5.19.RELEASE` project and I followed the advice by @snicoll here: https://github.com/spring-projects/spring-boot/issues/4393#issuecomment-233131972\nthe problem I'm facing is in Intellij IDEA, where I can see old thymeleaf dependency and new overridden thymeleaf dependency in External libraries pane\n\n",
                "time": "2019-01-21 23:12:15",
                "index": 1,
                "user": "pmihalcin"
            },
            {
                "id": "5c465211f780a1521f49d6ca",
                "text": "I'd expect old dependencies wouldn't be there as it is the case with Maven, but Gradle in Intellij works like this.. do you have any idea how to overcome this issue?",
                "time": "2019-01-21 23:13:21",
                "index": 2,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e63220b78635b662f291",
                "text": "@snicoll do you have any idea why I'm hitting this problem? I also put together this SO question: https://stackoverflow.com/questions/54305332/upgrade-to-thymeleaf-3-in-spring-boot-1-5-x-gradle-project-opened-in-intellij-id",
                "time": "2019-01-22 09:45:22",
                "index": 7,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e69eba355012a47b126d",
                "text": "@pmihalcin you\u2019ve asked 2 min ago. Let it sink a bit before pinging folks?",
                "time": "2019-01-22 09:47:10",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5c46e6f4f780a1521f4d43ed",
                "text": "I asked on SO now, but I asked here 11 hours ago :)",
                "time": "2019-01-22 09:48:36",
                "index": 10,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e7158ce4bb25b8ef1fe0",
                "text": "Does it work on the command line?",
                "time": "2019-01-22 09:49:09",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5c46e7351cb70a372a1aac28",
                "text": "answering my own question, it does",
                "time": "2019-01-22 09:49:41",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5c46e73783189945242c322b",
                "text": "I tried to run bootRun from Gradle window",
                "time": "2019-01-22 09:49:43",
                "index": 13,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e746cb47ec3000823f6d",
                "text": "and it wasn't working for me",
                "time": "2019-01-22 09:49:58",
                "index": 14,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e74dc45b986d119e2a93",
                "text": "Please edit your answer to mention the IDEA version you\u2019re using. It isn\u2019t a spring boot question  but a gradle integration question in IntelliJ IDEA",
                "time": "2019-01-22 09:50:05",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5c46e75f6f95c01983b7cfd2",
                "text": "define \u201cnot working\u201d .. are you getting an error(s)?",
                "time": "2019-01-22 09:50:23",
                "index": 16,
                "user": "mateothegreat"
            },
            {
                "id": "5c46e7947a0f4d5b19eb45cf",
                "text": "I think the report is very confusing",
                "time": "2019-01-22 09:51:16",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5c46e7a1dab15872ced33d39",
                "text": "you are mentionning the IDE and now you\u2019re saying `bootRun` does not work",
                "time": "2019-01-22 09:51:29",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5c46e7b7cb47ec300082428e",
                "text": "Make sure to edit your question with more details",
                "time": "2019-01-22 09:51:51",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5c46e7d68ce4bb25b8ef2434",
                "text": "yes, I now added intellij idea version",
                "time": "2019-01-22 09:52:22",
                "index": 20,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e7fd7a0f4d5b19eb47ed",
                "text": "yes.. when I execute run configuration in Intellij, it doesn't work",
                "time": "2019-01-22 09:53:01",
                "index": 21,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e807dab15872ced3401d",
                "text": "bootRun also doesn't work as expected",
                "time": "2019-01-22 09:53:11",
                "index": 22,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e811c45b986d119e2f2d",
                "text": "why are you mentionning the IDE at all then",
                "time": "2019-01-22 09:53:21",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5c46e81ae54ed17c41becb37",
                "text": "define \u201cnot working\u201d .. are you getting an error(s)?",
                "time": "2019-01-22 09:53:30",
                "index": 24,
                "user": "mateothegreat"
            },
            {
                "id": "5c46e88e0721b912a5bc9f6a",
                "text": "I mention IDE because I can see external libs what I didn't want to see there",
                "time": "2019-01-22 09:55:26",
                "index": 25,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e89c8ce4bb25b8ef2878",
                "text": "Intellij should not pick it up",
                "time": "2019-01-22 09:55:40",
                "index": 26,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e89ff780a1521f4d4ecb",
                "text": "but it does",
                "time": "2019-01-22 09:55:43",
                "index": 27,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e8ac83189945242c3881",
                "text": "it picks up Thymeleaf 2 libs and Thymeleaf 3 libs as well",
                "time": "2019-01-22 09:55:56",
                "index": 28,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e8b7cb47ec30008249df",
                "text": "if `bootRun` on the command line does not work, the IDE is not related to your problem",
                "time": "2019-01-22 09:56:07",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5c46e8c07a0f4d5b19eb4d1d",
                "text": "You\u2019re just adding noise to the question",
                "time": "2019-01-22 09:56:16",
                "index": 30,
                "user": "snicoll"
            },
            {
                "id": "5c46e91fc45b986d119e38cf",
                "text": "I don't fully agree with that.. I was trying to put as much relevant information there",
                "time": "2019-01-22 09:57:51",
                "index": 31,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e935cb47ec3000824c5c",
                "text": "but I might be wrong as well :)",
                "time": "2019-01-22 09:58:13",
                "index": 32,
                "user": "pmihalcin"
            },
            {
                "id": "5c46e94a35350772cf6e8f79",
                "text": "If `bootRun` does not work, your gradle build must have some sort of problem. Your question is 100% oriented towards the IDE so you\u2019re not helping those who want to spend time helping you",
                "time": "2019-01-22 09:58:34",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5c46ec260721b912a5bcb9e8",
                "text": "`bootRun` executed from Intellij IDEA Gradle pane doesn't work as expected",
                "time": "2019-01-22 10:10:46",
                "index": 34,
                "user": "pmihalcin"
            },
            {
                "id": "5c46ec320a491251e337484c",
                "text": "I will try running it from separate command line",
                "time": "2019-01-22 10:10:58",
                "index": 35,
                "user": "pmihalcin"
            }
        ]
    },
    {
        "id": 728,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ead46b3d898fe7a375f595c",
                "text": "Hi everyone, can someone please tell how does `spring.jpa.properties.hibernate.jdbc.time_zone` work internaly?\n\nI have `spring.jpa.properties.hibernate.jdbc.time_zone = UTC` and it's also working fine. I am into IST and when I `POST` data to my REST API, the `UTC` gets saved into the database. And when I fetch the data from my REST API, I can see the `UTC` being converted to `IST` automatically.\nHow does this happen? I am worried if this would work if I go into production. As of now, everything is local to my system.\n",
                "time": "2020-05-02 10:08:51",
                "index": 0,
                "user": "Puspendert"
            },
            {
                "id": "5eae340414b48f0698a73426",
                "text": "@Puspender Set your JVM to UTC ",
                "time": "2020-05-03 03:01:24",
                "index": 2,
                "user": "akuma8"
            },
            {
                "id": "5eae372b7975db7ebfdeeca8",
                "text": "@akuma8 and then no need to worry?",
                "time": "2020-05-03 03:14:51",
                "index": 3,
                "user": "Puspendert"
            },
            {
                "id": "5eae394522f9c45c2a67784b",
                "text": "Yes if both(jvm+database) are set to UTC you can sleep peacefully. ",
                "time": "2020-05-03 03:23:49",
                "index": 4,
                "user": "akuma8"
            },
            {
                "id": "5eae592a22f9c45c2a67ae10",
                "text": "@akuma8 Thanks buddy :)",
                "time": "2020-05-03 05:39:54",
                "index": 6,
                "user": "Puspendert"
            },
            {
                "id": "5eae71619f0c955d7d9f4ecf",
                "text": "@akuma8 Mysql table contains date in UTC and still I am getting auto converted IST dates just because my DB and JVM is set to IST? ",
                "time": "2020-05-03 07:23:13",
                "index": 7,
                "user": "Puspendert"
            }
        ]
    },
    {
        "id": 729,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5baa019e8196693171b00f53",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-with-Java-9-and-above \u2013 Why do yu have to use a certain version of Spring in order to use Java 9/10/11? Does this only affect feature you use in your code or does it really mean you cannot run Spring Boot 1.5/2.0 on Java 11?",
                "time": "2018-09-25 09:36:30",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5baa033c56877c463a7ecf16",
                "text": "@kschlesselmann  Because the ASM and Cglib version in earlier versions of Spring aren't working on JDK9+... ",
                "time": "2018-09-25 09:43:24",
                "index": 1,
                "user": "mdeinum"
            },
            {
                "id": "5baa0351fe37781110f46a4c",
                "text": "The same applies to some of the other frameworks (hibernate etc.) that spring integrates with. ",
                "time": "2018-09-25 09:43:45",
                "index": 2,
                "user": "mdeinum"
            },
            {
                "id": "5baa03e08196693171b01c7a",
                "text": "@mdeinum Interesting \u2026 does this apply to kotlin as well? I think I have 2.0.5 running in an `openjdk:11` container here :confused: ",
                "time": "2018-09-25 09:46:08",
                "index": 3,
                "user": "kschlesselmann"
            },
            {
                "id": "5baa092e7bd81c5b9dae49a0",
                "text": "2.0 should run fine anything before that shouldn't... You probably get some warnings about reflections. Spring Boot 2.0 uses Spring 5.0 which is compatible with JDK 9/10. ",
                "time": "2018-09-25 10:08:46",
                "index": 4,
                "user": "mdeinum"
            },
            {
                "id": "5baa252f41177e0bc7a3c6af",
                "text": "@mdeinum Yesah, some warnings are there. Otherwise everything else seems fine to me",
                "time": "2018-09-25 12:08:15",
                "index": 5,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 730,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5be20fbba33a6461095c3e21",
                "text": "hello, i need a little help\u2026how can i define following routes in WebFlux?\nRoute-1: Get-by-id: `RequestPredicates.GET(\"/*/{id}\"), getByIdHandler::handle`\nRoute-2: Search: `RequestPredicates.GET(\"/*/?q=\"), searchHandler::handle`\n\nI tried above patterns, `Get-by-id` works, but for `Search` (in my config it looks like `/*/?q=`), Spring is resulting in 404",
                "time": "2018-11-06 22:03:39",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5be2e5413102f1452163ea48",
                "text": "@nnanda2016 you're using query parameters and they're not part of the path matching predicate. You should chain the GET predicate with something like `RequestPredicates.queryParam`",
                "time": "2018-11-07 13:14:41",
                "index": 173,
                "user": "bclozel"
            },
            {
                "id": "5be32972b204ff590c92c0e6",
                "text": "@bclozel i want to add a query param predicate with name `q` and any kind of value and for that i added this\n`.andRoute(RequestPredicates.queryParam(\"q\", \"*\")`",
                "time": "2018-11-07 18:05:38",
                "index": 227,
                "user": "nnanda2016"
            },
            {
                "id": "5be32986b204ff590c92c0e9",
                "text": "but it does not work",
                "time": "2018-11-07 18:05:58",
                "index": 228,
                "user": "nnanda2016"
            },
            {
                "id": "5be329a9513fb277beabbf85",
                "text": "i mean spring threw `404` for URI `/user/?q=age>50`",
                "time": "2018-11-07 18:06:33",
                "index": 229,
                "user": "nnanda2016"
            },
            {
                "id": "5be329b5a59f397c28f60c2b",
                "text": "am i doing something wrong?",
                "time": "2018-11-07 18:06:45",
                "index": 230,
                "user": "nnanda2016"
            },
            {
                "id": "5be32b9462866f7473623d88",
                "text": "@nnanda2016 that `queryParam` method is checking for specific values, not patterns. You should use `RequestPredicates.queryParam(\"q\", StringUtils::hasText);` or even create your own `RequestPredicate`",
                "time": "2018-11-07 18:14:44",
                "index": 231,
                "user": "bclozel"
            },
            {
                "id": "5be32bb7b204ff590c92c0f5",
                "text": "oh\u2026lemme check",
                "time": "2018-11-07 18:15:19",
                "index": 232,
                "user": "nnanda2016"
            },
            {
                "id": "5be332490eb9582bc411566a",
                "text": "Thanks @bclozel it worked...",
                "time": "2018-11-07 18:43:21",
                "index": 234,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 731,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8c273b60f9ee7aa4c961af",
                "text": "is target for @EnableOAuth2Sso set to ElementType.TYPE for purpose?\n\nany reason why the following idiom is not supported?\n```\n@Bean\n@EnableOAuth2Sso\npublic WebSecurityConfigurerAdapter webSecurityConfigurer() { ... }\n```",
                "time": "2018-09-02 18:08:59",
                "index": 0,
                "user": "andreysaksonov"
            },
            {
                "id": "5b8cd2f794f8164c17d55d76",
                "text": "@andreysaksonov why would you want to do that? Adding that stereotype to a bean factory method doesn\u2019t make much sense since it enables a global behaviour.",
                "time": "2018-09-03 06:21:43",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 732,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b96ff9fa04db554a708c4c5",
                "text": "Hey guys... I was doing some research online. I need some help. I was wondering the best way to fetch the current user id. There seems to be some implementations online including one at ",
                "time": "2018-09-10 23:34:55",
                "index": 0,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5b9700041e2b442a25f29555",
                "text": "https://github.com/jhipster/generator-jhipster/pull/2115",
                "time": "2018-09-10 23:36:36",
                "index": 1,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5b9700407189ae6fdda7420c",
                "text": "What is the best way to fetch the current user id or do I have to fetch the username first and then use the username to fetch the Id",
                "time": "2018-09-10 23:37:36",
                "index": 2,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5b9700667ce5f5314f924071",
                "text": "are you using spring security ",
                "time": "2018-09-10 23:38:14",
                "index": 3,
                "user": "onlysolace"
            },
            {
                "id": "5b970252550f8808f58ef9e8",
                "text": "Yes",
                "time": "2018-09-10 23:46:26",
                "index": 4,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5b9702d3e6e309365e33bc2e",
                "text": "I would store the id in your UserDetails implementation and then retrieve it with @AuthenticationPrincipal inside controls ",
                "time": "2018-09-10 23:48:35",
                "index": 5,
                "user": "onlysolace"
            },
            {
                "id": "5b9702dc7ce5f5314f924d26",
                "text": "controllers*",
                "time": "2018-09-10 23:48:44",
                "index": 6,
                "user": "onlysolace"
            },
            {
                "id": "5b97036aa2343433d12d6bc0",
                "text": "Thank you @onlysolace ",
                "time": "2018-09-10 23:51:06",
                "index": 7,
                "user": "PrinceAdeleke"
            }
        ]
    },
    {
        "id": 733,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d482030d7fc95475002d438",
                "text": "Hi, I was naively trying to update the spring boot version from 1.5.8 to 2.0, but I encountered a rather interesting error:  >>> ERROR StatusLogger Log4j2 could not find a logging implementation. Please add log4j-core to the classpath. Using SimpleLogger to log to the console... <<< which I currently cannot wrap my head around it. I use logback as logging mechanism...any thoughts on this? thanks a lot!",
                "time": "2019-08-05 12:25:20",
                "index": 0,
                "user": "vladflore"
            },
            {
                "id": "5d4827274635976e04342882",
                "text": "@vladflore the default in SB2 hasn\u2019t changed and it\u2019s hard to answer without more details I am afraid.",
                "time": "2019-08-05 12:55:03",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5d4828754635976e04343356",
                "text": "@snicoll i can provide some more details. I had this dependency tree: \n\n+- org.springframework.boot:spring-boot-starter-actuator:jar:2.0.0.RELEASE:compile\n[\u001b[1;34mINFO\u001b[m] |  +- org.springframework.boot:spring-boot-starter:jar:2.0.0.RELEASE:compile\n[\u001b[1;34mINFO\u001b[m] |  |  +- org.springframework.boot:spring-boot-starter-logging:jar:2.0.0.RELEASE:compile\n[\u001b[1;34mINFO\u001b[m] |  |  |  +- ch.qos.logback:logback-classic:jar:1.2.3:compile\n[\u001b[1;34mINFO\u001b[m] |  |  |  |  \\- ch.qos.logback:logback-core:jar:1.2.3:compile\n[\u001b[1;34mINFO\u001b[m] |  |  |  +- org.apache.logging.log4j:log4j-to-slf4j:jar:2.10.0:compile\n[\u001b[1;34mINFO\u001b[m] |  |  |  |  \\- org.apache.logging.log4j:log4j-api:jar:2.7:compile\n[\u001b[1;34mINFO\u001b[m] |  |  |  \\- org.slf4j:jul-to-slf4j:jar:1.7.25:compile\n\nI removed the log4j dependencies by excluding them from >>>spring-boot-starter-logging<<< and it worked. Unfortunately I am not that experienced in this area and this is my very first migration of SB :) Thanks a lot!\n",
                "time": "2019-08-05 13:00:37",
                "index": 3,
                "user": "vladflore"
            },
            {
                "id": "5d48291e26e27324461e1e74",
                "text": "Don\u2019t upgrade to `2.0.0` please there are plenty of users reporting issues that we fixed in maintenance releases, why wouldn't you want to benefit from that?",
                "time": "2019-08-05 13:03:26",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5d482948e939ab2447fe127b",
                "text": "The latest is `2.0.9.RELEASE`",
                "time": "2019-08-05 13:04:08",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5d482979d7fc9547500322a3",
                "text": "You shouldn\u2019t have to exclude anything, I am guessing the dependency tree is incomplete so that doesn\u2019t tell me much I am afraid",
                "time": "2019-08-05 13:04:57",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5d482a5e7a151629e129ddbf",
                "text": "ok, I'll give it a try with 2.0.9.RELEASE, thanks for that!",
                "time": "2019-08-05 13:08:46",
                "index": 7,
                "user": "vladflore"
            },
            {
                "id": "5d4879744635976e04369eb5",
                "text": "thanks @snicoll ",
                "time": "2019-08-05 18:46:12",
                "index": 14,
                "user": "ssko1"
            },
            {
                "id": "5d493348475c0a0feb0a9de9",
                "text": "continuing with my migration, I changed SB version to 2.0.9.RELEASE but the app fails starting with the message : \n\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': Initialization of bean failed; nested exception is java.lang.NullPointerException\n...\nCaused by: java.lang.NullPointerException: null\n\tat org.springframework.core.BridgeMethodResolver.findBridgedMethod(BridgeMethodResolver.java:60)\n\nI assume it has to do with some version compatibility, but not quite sure what is not compatible with what. Spring Framework Core and BOM have version 5.0.13. Any hints will be greatly appreciated!",
                "time": "2019-08-06 07:59:04",
                "index": 27,
                "user": "vladflore"
            },
            {
                "id": "5d4933b34635976e043b9ab7",
                "text": "Wow that\u2019s quite messed up",
                "time": "2019-08-06 08:00:51",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5d4933c775c7976e0337ae83",
                "text": "Are you specifying a version for framework?",
                "time": "2019-08-06 08:01:11",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5d493425d7fc9547500a9026",
                "text": "@snicoll  nope, it is the version i see over artifactId : spring-boot-starter-parent -> spring-boot-dependencies -> <spring.version>5.0.13.RELEASE</spring.version>",
                "time": "2019-08-06 08:02:45",
                "index": 30,
                "user": "vladflore"
            },
            {
                "id": "5d49343245da450fecb4886d",
                "text": "Then it\u2019s irrelevant",
                "time": "2019-08-06 08:02:58",
                "index": 31,
                "user": "snicoll"
            },
            {
                "id": "5d49345441d5cd61b5c21059",
                "text": "what did u mean with messed up?",
                "time": "2019-08-06 08:03:32",
                "index": 32,
                "user": "vladflore"
            },
            {
                "id": "5d49346b4635976e043ba008",
                "text": "a NPE is messed up, I don\u2019t expect this to be  a version mismatch",
                "time": "2019-08-06 08:03:55",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5d49347fff59f961b423561d",
                "text": "Have you followed those steps? https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#before-you-start",
                "time": "2019-08-06 08:04:15",
                "index": 34,
                "user": "snicoll"
            },
            {
                "id": "5d49349ea96def4751c78216",
                "text": "oki, kinda new to this so gonna go with ur take on this :)",
                "time": "2019-08-06 08:04:46",
                "index": 35,
                "user": "vladflore"
            },
            {
                "id": "5d4934bd7c877461651ed239",
                "text": "https://stackoverflow.com/questions/47190639/nullpointer-exception-thrown-when-running-sprint-boot-with-spring-mvc",
                "time": "2019-08-06 08:05:17",
                "index": 36,
                "user": "snicoll"
            },
            {
                "id": "5d4934c245da450fecb48c60",
                "text": "Looks like you\u2019re still on 1.5",
                "time": "2019-08-06 08:05:22",
                "index": 37,
                "user": "snicoll"
            },
            {
                "id": "5d4935494635976e043ba489",
                "text": "(perhaps you\u2019re running from your IDE and it hasn\u2019t updated things properly. I would recommend to use the build system when upgrading as the IDE can try to be smart and hide things from you)",
                "time": "2019-08-06 08:07:37",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5d4935c84b8ca519c9f35cd0",
                "text": "thing is i cannot quite identify what is still on 1.5\n\nI have this in the parent pom:\n\n<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.9.RELEASE</version>\n    <relativePath/>\n  </parent>\n\nand in the child module pom the needed artifactsId without version or so...\n\nYes, I use the github link u posted to orient myself...though the app fails pretty soon...",
                "time": "2019-08-06 08:09:44",
                "index": 39,
                "user": "vladflore"
            },
            {
                "id": "5d4935e04b8ca519c9f35e44",
                "text": "Can\u2019t guess based on what you\u2019ve shared, sorry",
                "time": "2019-08-06 08:10:08",
                "index": 40,
                "user": "snicoll"
            },
            {
                "id": "5d4935e07a151629e1313f7a",
                "text": "yes i use intellij, i will give it a try with the build system and clean things up, thanks!",
                "time": "2019-08-06 08:10:08",
                "index": 41,
                "user": "vladflore"
            },
            {
                "id": "5d493658475c0a0feb0ab4fb",
                "text": "I could give u the whole mvn dependencies tree, if u want to...i ll first try the build system for itself though :)",
                "time": "2019-08-06 08:12:08",
                "index": 42,
                "user": "vladflore"
            },
            {
                "id": "5d494e5c4b8ca519c9f40e20",
                "text": "@vladflore alternative guess: in case you're getting 1.5 dependencies, you might have it imported through dependencies to other applications you own. Like company internal lib 1.2.3 having a dependency on Spring Boot 1.5 ",
                "time": "2019-08-06 09:54:36",
                "index": 45,
                "user": "vanseverk"
            },
            {
                "id": "5d494e753d8f1f29e01f14a1",
                "text": "Have seen it happen way too often at clients not to be suspicious about that stuff :)",
                "time": "2019-08-06 09:55:01",
                "index": 46,
                "user": "vanseverk"
            },
            {
                "id": "5d494e8ad7fc9547500b3af1",
                "text": "@vanseverk using proper dependency management should prevent that. @vlad already shared the use of spring-boot-starter-parent",
                "time": "2019-08-06 09:55:22",
                "index": 47,
                "user": "snicoll"
            },
            {
                "id": "5d4998bb41d5cd61b5c4ebe8",
                "text": "@snicoll must have read over that, thanks",
                "time": "2019-08-06 15:11:55",
                "index": 50,
                "user": "vanseverk"
            },
            {
                "id": "5d49a2eb3d8f1f29e0219eb8",
                "text": "@snicoll @vanseverk  thanks for the replies. i have overseen that another proprietary library pulled in the 1.5.x, thought the whole time it had the right spring version in it...oh well...",
                "time": "2019-08-06 15:55:23",
                "index": 51,
                "user": "vladflore"
            },
            {
                "id": "5d49a4264635976e043ec863",
                "text": "@snicoll seems like I was right then ;)",
                "time": "2019-08-06 16:00:38",
                "index": 52,
                "user": "vanseverk"
            },
            {
                "id": "5d49aa2975c7976e033b0590",
                "text": "@snicoll congrats on the release of \"the last of the Spring Boot 1-icans\"",
                "time": "2019-08-06 16:26:17",
                "index": 53,
                "user": "vanseverk"
            },
            {
                "id": "5d49acac757b7b19c867408a",
                "text": "@vanseverk @snicoll both of u were right, using the right starter parent was ... right but obviously not enough, had to make sure no other older version was pulled in by some other God forgotten dependency...that took some time to hunt down :h",
                "time": "2019-08-06 16:37:00",
                "index": 54,
                "user": "vladflore"
            },
            {
                "id": "5d49ae7426e273244628df80",
                "text": "and your problem is fixed...so everyone wins today, yay",
                "time": "2019-08-06 16:44:36",
                "index": 55,
                "user": "vanseverk"
            },
            {
                "id": "5d49aeac41d5cd61b5c5a0b7",
                "text": "Maybe it's time to either upgrade or retire that dependency, @vladflore ;-)",
                "time": "2019-08-06 16:45:32",
                "index": 56,
                "user": "vanseverk"
            },
            {
                "id": "5d4a764a53490e334daa76a6",
                "text": "@vanseverk Hard to say who was right based on what @Vlad has shared. Maybe they\u2019re using the parent and hardcoding versions, what do I know after all? But, yes, mixing 1.5 and 2.0 isn\u2019t going to work very well and my point was that if you properly use the parent, you can\u2019t end up in that situation.",
                "time": "2019-08-07 06:57:14",
                "index": 61,
                "user": "snicoll"
            },
            {
                "id": "5d4a77171db76d0ffe8b5900",
                "text": "@vladflore using the starter is actually enough as long as you don\u2019t override versions. Regarding Spring Boot itself,  if your app is using `spring-boot-starter-parent` I don\u2019t see how it is possible to get a different Spring Boot version on the classpath (as the parent locks down the version). If you do, there\u2019s something else you haven\u2019t shared yet.",
                "time": "2019-08-07 07:00:39",
                "index": 62,
                "user": "snicoll"
            },
            {
                "id": "5d4a7dd64e17537f52ea61d0",
                "text": "@snicoll we r using the boot starter parent and no other hard coded version anywhere...but we also had another proprietary dependency which uses the 1.5 boot starter parent and my guess is that because of this i had that mess. just have to find the newer version of that dependency which is based on >= SB 2 and use it. I guess that problem will then go away.  anyways both ur suggestions helped me in looking in places i took for granted they were fine.... Kinda curious what more awaits after the app runs again. ",
                "time": "2019-08-07 07:29:26",
                "index": 63,
                "user": "vladflore"
            },
            {
                "id": "5d4a7e01c87a0963e728ac14",
                "text": "@vladflore you can\u2019t get a different spring boot version on the classpath if your project is using the spring-boot-parent. Something else must be going on. Having said that, your proprieteray dependency should obviously be updated to SB2 as well before you can upgrade the application",
                "time": "2019-08-07 07:30:09",
                "index": 64,
                "user": "snicoll"
            },
            {
                "id": "5d4a7efb4e17537f52ea6810",
                "text": "@snicoll my assumption is that even if you make it easy for people to do the right thing, they will still manage to break stuff somehow :)",
                "time": "2019-08-07 07:34:19",
                "index": 65,
                "user": "vanseverk"
            },
            {
                "id": "5d4a7f0795071824779525a1",
                "text": "Of course :)",
                "time": "2019-08-07 07:34:31",
                "index": 66,
                "user": "snicoll"
            },
            {
                "id": "5d4a7f13d03a7c63e6e3ba22",
                "text": "I think we\u2019ve assumed the wrong version of Spring Boot was on the classpath but that\u2019s not probably what\u2019s going on here",
                "time": "2019-08-07 07:34:43",
                "index": 67,
                "user": "snicoll"
            },
            {
                "id": "5d4a7f6090bba62a123135cc",
                "text": "Well, what I've noticed at clients is that most  people running in problems during the transition, it's due to other libs within the company having Spring Boot 1 stuff in it. Hence my suggestion :-)",
                "time": "2019-08-07 07:36:00",
                "index": 68,
                "user": "vanseverk"
            },
            {
                "id": "5d4a7fa24e17537f52ea6b5a",
                "text": "And that's also a great excuse to make them upgrade as much as possible ;-)",
                "time": "2019-08-07 07:37:06",
                "index": 69,
                "user": "vanseverk"
            },
            {
                "id": "5d4a7fd12612bb718c23fa84",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#review-dependencies",
                "time": "2019-08-07 07:37:53",
                "index": 70,
                "user": "snicoll"
            },
            {
                "id": "5d4a7fef53490e334daabc8b",
                "text": "What I\u2019ve seen the most is users upgrading to SB2 but keeping the same Spring Cloud version",
                "time": "2019-08-07 07:38:23",
                "index": 71,
                "user": "snicoll"
            },
            {
                "id": "5d4a8071a4efe3718dbc0f74",
                "text": "@snicoll making the post-netflix transition will be fun there too =)",
                "time": "2019-08-07 07:40:33",
                "index": 72,
                "user": "vanseverk"
            },
            {
                "id": "5d4a809753490e334daac1db",
                "text": "Although I haven't heard much people talk about doing that yet...my assumption is that their current concern is more \"how do we get this all running on K8S/Open$hift\"",
                "time": "2019-08-07 07:41:11",
                "index": 73,
                "user": "vanseverk"
            }
        ]
    },
    {
        "id": 734,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5dcc38bec26e8923c41aeb2e",
                "text": "Looking suggestions for Auditing using spring boot",
                "time": "2019-11-13 17:09:18",
                "index": 0,
                "user": "raviipawar"
            },
            {
                "id": "5dcc3d1de75b2d5a19c76b47",
                "text": "@raviipawar https://www.baeldung.com/spring-boot-authentication-audit",
                "time": "2019-11-13 17:27:57",
                "index": 1,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 735,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d1a6f76490abf627a5a5d3d",
                "text": "Hello, i'm wondering if Java is still a good language to use for a new software? Or should I go with something a little newer?",
                "time": "2019-07-01 20:39:18",
                "index": 0,
                "user": "DennisMoraisGregan_gitlab"
            },
            {
                "id": "5d1a6fbf4db9b92ce3890277",
                "text": "completely fine - still widely used and actively worked on by the creators",
                "time": "2019-07-01 20:40:31",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5d1a6ffda611a04ff1b9b09f",
                "text": "Thank you. @tonisostrat ",
                "time": "2019-07-01 20:41:33",
                "index": 2,
                "user": "DennisMoraisGregan_gitlab"
            }
        ]
    },
    {
        "id": 736,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb724951e23486b938fabc3",
                "text": "hello.\nI am following a tutorial that uses `RelaxedPropertyResolver` to get Property.\nBut I think It is not supported anymore in Spring Boot.\nAny idea how to replace it ?\nShall I use `env.getProperty(\"PropertyName)` ?\nSomething like this : \n```\nprivate RelaxedPropertyResolver propertyResolver = new RelaxedPropertyResolver(env, \"spring.datasource.\");\nString url = propertyResolver.getProperty(\"url\")\n\n>>>>>>>> will be replaced By\nString url = env.getProperty(\"url\") \n```",
                "time": "2018-10-05 08:45:09",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5bb725546e5a401c2d1d4513",
                "text": "Yep, get the `Environment` and ask for the property",
                "time": "2018-10-05 08:48:20",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bb7255f1c100a4f2933cb9b",
                "text": "@snicoll ok",
                "time": "2018-10-05 08:48:31",
                "index": 2,
                "user": "amirensit"
            },
            {
                "id": "5bb7257082893a2f3ba1c62e",
                "text": "What tutorial is that?",
                "time": "2018-10-05 08:48:48",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bb725d5c7bf7c3662bbf5d4",
                "text": "a poc about how to apply a multi tenancy in jhipster microservice application",
                "time": "2018-10-05 08:50:29",
                "index": 4,
                "user": "amirensit"
            },
            {
                "id": "5bb725d664cfc273f99b6e13",
                "text": "https://github.com/hcouplet/jhipster-multi-tenancy-poc3-app1",
                "time": "2018-10-05 08:50:30",
                "index": 5,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 737,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cc6a49197dcb371d8303fb0",
                "text": "When running `@DataJpaTest` tests ( default setup ) i have one case where is use `JdbcTemplate` to lookup the values from the DB using a query to ensure the table looks like expected. Only in this case it seems like i run into some encapsulation issues where running the tests on the CI lead to an unexpected value when checking with JDBC, while any other asserts work just fine. Are there any limitations here ?",
                "time": "2019-04-29 07:15:29",
                "index": 0,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6a7d6b489bb6ed7e36d7b",
                "text": "@EugenMayer what do you mean by encapsulation?",
                "time": "2019-04-29 07:29:26",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5cc6b748375bac747023e56c",
                "text": "@snicoll it seems, when running 2 tests classes at the same time with gradle ( i guess they run paralell ) those tests are failing since i operate on the same memory db at the same time. The question no is, should i enforce gradle to no run in paralell or can i annotate the test to always use a fresh instance of that database, instead of reusing the memory db for the test ( which might already be polluted )",
                "time": "2019-04-29 08:35:20",
                "index": 3,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b7ba5b3f941aa5ae6af7",
                "text": "`@DataJpaTest` creates unique database instance by default so I don\u2019t think your analysis is correct",
                "time": "2019-04-29 08:37:14",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5cc6b7d54b4cb471d9777ddc",
                "text": "Well a new instance per Test-Class or per Test-run",
                "time": "2019-04-29 08:37:41",
                "index": 5,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b7ea2e2caa1aa6d994a3",
                "text": "per test context",
                "time": "2019-04-29 08:38:02",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5cc6b80d5b3f941aa5ae6cbc",
                "text": "could you explain a little what a `test-context` is so i can better understand the scope. That wold be very helpful",
                "time": "2019-04-29 08:38:37",
                "index": 7,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b81e5b3f941aa5ae6d0a",
                "text": "(running the test classes each using `--tests` filter works, just saying)",
                "time": "2019-04-29 08:38:54",
                "index": 8,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b82a5b3f941aa5ae6d2e",
                "text": "Not denying the problem",
                "time": "2019-04-29 08:39:06",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5cc6b84d375bac747023eb3a",
                "text": "It depends how your tests are structured but at the end of the day, there is an application context that is created per \u201ckey\u201d (things that you need for a test class)",
                "time": "2019-04-29 08:39:41",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5cc6b855b4700e023def42f8",
                "text": "if the key is the same, the context is the same",
                "time": "2019-04-29 08:39:49",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5cc6b85b5b3f941aa5ae6e40",
                "text": "(and so is the DB)",
                "time": "2019-04-29 08:39:55",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5cc6b866375bac747023eba4",
                "text": "but every context will have a different DB",
                "time": "2019-04-29 08:40:06",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5cc6b8a94b4cb471d977830b",
                "text": "Well in my cases, JUnit5, i have 2 interation tests, one Class is called `GroupRepositoryTest` the other is called `GroupServiceTest` - both are annotated using `DataJapTest`",
                "time": "2019-04-29 08:41:13",
                "index": 14,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b8bee416b84519fc0cf6",
                "text": "Only that?",
                "time": "2019-04-29 08:41:34",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5cc6b8f9a4ef0974711a8e0a",
                "text": "```\n@DataJpaTest(\n    properties = {\n        \"spring.jpa.hibernate.ddl-auto=create-drop\"\n    },\n    showSql = false\n)\n@AutoConfigureDataMongo\n@Tag(\"it\")\n```\n",
                "time": "2019-04-29 08:42:33",
                "index": 16,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b92b375bac747023ef89",
                "text": "I am using a custom annotation though, i guess that wont do any harm\n```\n@DataJpaTest(\n    properties = {\n        \"spring.jpa.hibernate.ddl-auto=create-drop\"\n    },\n    showSql = false\n)\n@AutoConfigureDataMongo\n@Tag(\"it\")\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface SetupIntegrationTest {\n}\n```\n\nand of course then\n\n```\n@SetupIntegrationTest\nclass GroupRepositoryTest {\n```",
                "time": "2019-04-29 08:43:23",
                "index": 17,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b9464b4cb471d977878e",
                "text": "Then they sharing the same context, if you don\u2019t want that, you should use `@DirtiesContext` but that\u2019s going to defeat the purpose of parallelizing them",
                "time": "2019-04-29 08:43:50",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5cc6b97d990feb45181fac0a",
                "text": "why would it?",
                "time": "2019-04-29 08:44:45",
                "index": 19,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b9912e2caa1aa6d9a0ab",
                "text": "creating/closing the context has a cost",
                "time": "2019-04-29 08:45:05",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5cc6b9c23b6cb0686a70cb41",
                "text": "i understand, but i think it would not defeat paralell tests, it makes them more costly, but they are still running in paralell and beside the extra cost of boostrapping /deboostrapping the extra context, anything else runs paralell",
                "time": "2019-04-29 08:45:54",
                "index": 21,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b9d9b489bb6ed7e3eca2",
                "text": "Fine, try that then",
                "time": "2019-04-29 08:46:17",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5cc6b9dba4ef0974711a9475",
                "text": "so i would say your suggestion is better then shutting down parallel tests on the level of gradle",
                "time": "2019-04-29 08:46:19",
                "index": 23,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6b9faa4ef0974711a9513",
                "text": "CI is spinning up :) I have to wait. Thank you alot already",
                "time": "2019-04-29 08:46:50",
                "index": 24,
                "user": "EugenMayer"
            },
            {
                "id": "5cc6bd6e4b4cb471d977a5ba",
                "text": "fixed it @snicoll !",
                "time": "2019-04-29 09:01:34",
                "index": 25,
                "user": "EugenMayer"
            }
        ]
    },
    {
        "id": 738,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5c499595f780a1521f5ecdfd",
                "text": "I've got a question related to the metrics still, from the docs here (https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-metrics-http-clients) I see that there should be metrics by default for rest template calls. \nHowever I'm not seeing such metrics, did I understand the docs wrong?",
                "time": "2019-01-24 10:38:13",
                "index": 0,
                "user": "nWidart"
            },
            {
                "id": "5c499643cb47ec3000942104",
                "text": "I have a rest template configured like this:\n```\n@Bean\n@ConditionalOnMissingBean\nRestTemplate restTemplate(ClientHttpRequestFactory clientHttpRequestFactory,\n  ClientHttpRequestInterceptor httpClientLoggingInterceptor, MeterRegistry registry) {\n    RestTemplate restTemplate = new RestTemplate(clientHttpRequestFactory);\n    restTemplate.setInterceptors(Arrays.asList(httpClientLoggingInterceptor));\n    return restTemplate;\n}\n```\nI tried doing the same using the `RestTemplateBuilder`, but that has the same result (no metrics).",
                "time": "2019-01-24 10:41:07",
                "index": 1,
                "user": "nWidart"
            },
            {
                "id": "5c4997d8ba355012a48cef40",
                "text": "@nWidart having Spring Boot Actuator on the classpath and using `RestTemplateBuilder` to build `RestTemplate` instances should work. Now you should make sure that you're really getting the bean you're expecting. Also, how are you checking those metrics are there? Are you using the actuator endpoints?",
                "time": "2019-01-24 10:47:52",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5c499ae6dab15872cee4cfff",
                "text": "@bclozel Hm weird , this was the code using the builder:\n```\n  @Bean\n  @ConditionalOnMissingBean\n  RestTemplate restTemplate(ClientHttpRequestFactory clientHttpRequestFactory,\n      ClientHttpRequestInterceptor httpClientLoggingInterceptor) {\n    RestTemplateBuilder builder = new RestTemplateBuilder();\n    builder = builder.requestFactory(() -> clientHttpRequestFactory);\n    builder = builder.additionalInterceptors(httpClientLoggingInterceptor);\n    return builder.build();\n  }\n```\nI know it's using that bean because of the logging interceptor, that logs requests/responses.\nI'm checking the metrics in prometheus push gateway. (Someone in spring cloud dataflow channel posted this https://gist.github.com/nWidart/7bba874c4eed506401cb5ea9aec3fdb9 , which explains how to setup the pushgateway)\nWhich is what I'm doing. Manual metrics work, like `metricRegistry.counter(\"something\").increment()` , because they show up in the gateway",
                "time": "2019-01-24 11:00:54",
                "index": 9,
                "user": "nWidart"
            },
            {
                "id": "5c499b5f83189945243e18cf",
                "text": "You are creating the builder yourself so bypassing the auto-configuration",
                "time": "2019-01-24 11:02:55",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5c499b630a491251e348fbdf",
                "text": "@nWidart you should inject the builder; Spring Boot is auto-configuring one for you depending on your environment and configuration. See https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-resttemplate.html#boot-features-resttemplate",
                "time": "2019-01-24 11:02:59",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5c499e8435350772cf807326",
                "text": "hm so it seems like I can't do this either:\n```\n  @Bean\n  @ConditionalOnMissingBean\n  RestTemplate restTemplate(ClientHttpRequestFactory clientHttpRequestFactory,\n      ClientHttpRequestInterceptor httpClientLoggingInterceptor, RestTemplateBuilder builder) {\n    builder.requestFactory(() -> clientHttpRequestFactory);\n    builder.additionalInterceptors(httpClientLoggingInterceptor);\n    return builder.build();\n  }\n\n```\nevery place I use the rest template, I need to inject the builder instead then?",
                "time": "2019-01-24 11:16:20",
                "index": 13,
                "user": "nWidart"
            },
            {
                "id": "5c499f3720b78635b674f5be",
                "text": "@nWidart Are you building a spring boot starter library? Or is it a Spring Boot application? If it's an app, `@ConditionalOnMissingBean` won't work I'm afraid. This is for auto-configuration classes only; see https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.html",
                "time": "2019-01-24 11:19:19",
                "index": 14,
                "user": "bclozel"
            },
            {
                "id": "5c499f859bfa375aab50f4e7",
                "text": "It's a starter yes",
                "time": "2019-01-24 11:20:37",
                "index": 15,
                "user": "nWidart"
            },
            {
                "id": "5c499f860721b912a5ce8cbc",
                "text": "@nWidart You should get injected the builder if you want the Spring Boot auto-configuration (jackson customizations, metrics and more...). If you want to build your own thing, you can do whatever you want.",
                "time": "2019-01-24 11:20:38",
                "index": 16,
                "user": "bclozel"
            },
            {
                "id": "5c499fad746d4a677a02ca4c",
                "text": "`this.restTemplate = restTemplateBuilder.build();` Same when I use this, no metrics though",
                "time": "2019-01-24 11:21:17",
                "index": 17,
                "user": "nWidart"
            },
            {
                "id": "5c499fb6f780a1521f5f0e2b",
                "text": "with injected builder",
                "time": "2019-01-24 11:21:26",
                "index": 18,
                "user": "nWidart"
            },
            {
                "id": "5c49a00020b78635b674f9cf",
                "text": "if it's a starter then you should probably contribute a `RestTemplateCustomizer ` bean to the context and let users build their own `RestTemplate`; we're trying to move away from global `RestTemplate` instances because if everybody does that, things might get hairy for developers",
                "time": "2019-01-24 11:22:40",
                "index": 20,
                "user": "bclozel"
            },
            {
                "id": "5c49a029dab15872cee4f369",
                "text": "I see, but even if I remove that bean from the starter, and inject the resttemplate builder in places I need to RestTemplate class, still no metrics",
                "time": "2019-01-24 11:23:21",
                "index": 22,
                "user": "nWidart"
            },
            {
                "id": "5c49a0451cb70a372a2c9ecf",
                "text": "@nWidart you should make sure to order your auto-configuration",
                "time": "2019-01-24 11:23:49",
                "index": 23,
                "user": "bclozel"
            },
            {
                "id": "5c49a0850721b912a5ce935c",
                "text": "like `@AutoConfigureAfter(RestTemplateAutoConfiguration.class)` on your auto-configuration class",
                "time": "2019-01-24 11:24:53",
                "index": 24,
                "user": "bclozel"
            },
            {
                "id": "5c49a0897a0f4d5b19fd3aae",
                "text": "Hm but I dont have any auto config, I removed it as mentionned for this test. Injecting only the RestTemplateBuilder",
                "time": "2019-01-24 11:24:57",
                "index": 25,
                "user": "nWidart"
            },
            {
                "id": "5c49a0b41cb70a372a2ca197",
                "text": "This is really confusing now; I don't know if you're in an app or an auto-config. Do you have a sample I could take a look at?",
                "time": "2019-01-24 11:25:40",
                "index": 26,
                "user": "bclozel"
            },
            {
                "id": "5c49a0e6f780a1521f5f185d",
                "text": "Well I used to have a starter module, where I configured the RestTemplate bean. You said that wasn't the proper way to do it.\nI removed this bean. \nIn places where I need the restTemplate, I injected the `RestTemplateBuilder` instead",
                "time": "2019-01-24 11:26:30",
                "index": 27,
                "user": "nWidart"
            },
            {
                "id": "5c49a0f5cb47ec30009469ea",
                "text": "this is now the most simple implementation, as in the docs",
                "time": "2019-01-24 11:26:45",
                "index": 28,
                "user": "nWidart"
            },
            {
                "id": "5c49a1010721b912a5ce95fe",
                "text": "constructor example\n```\n  public DisplayClient(RestTemplateBuilder restTemplateBuilder, DisplayProperties displayProperties) {\n    this.restTemplate = restTemplateBuilder.build();\n    this.displayProperties = displayProperties;\n  }\n```",
                "time": "2019-01-24 11:26:57",
                "index": 29,
                "user": "nWidart"
            },
            {
                "id": "5c49a175ba355012a48d31f6",
                "text": "@nWidart we're not making progress here; please create a sample",
                "time": "2019-01-24 11:28:53",
                "index": 30,
                "user": "bclozel"
            },
            {
                "id": "5c49a1951cb70a372a2ca6b9",
                "text": "Aha found the problem :) I had a rest template builder bean still defined :)",
                "time": "2019-01-24 11:29:25",
                "index": 31,
                "user": "nWidart"
            },
            {
                "id": "5c49a510cb47ec30009485b3",
                "text": "Setup the customiser too, working good. :+1: \nJust out of curiosity, you mentioned having a global rest template instance can get hairy, why is this?",
                "time": "2019-01-24 11:44:16",
                "index": 32,
                "user": "nWidart"
            },
            {
                "id": "5c49aa6120b78635b6754f3a",
                "text": "because if other starters do that, spring boot does that, you get multiple ones and it's harder for the user to inject the one they want, or even know which one is doing what",
                "time": "2019-01-24 12:06:57",
                "index": 33,
                "user": "bclozel"
            },
            {
                "id": "5c49aa7bba355012a48d739e",
                "text": "at the application level, developers can choose to create one if they think that's the right choice for their app",
                "time": "2019-01-24 12:07:23",
                "index": 34,
                "user": "bclozel"
            },
            {
                "id": "5c49aaea95e17b4525a13938",
                "text": "I see ok. So by the same logic, I shouldnt create a global `RestTemplateCustomizer` which would apply to all rest template instances, or is that ok? \nI guess, if multiple starters do that, they will all apply to the rest template instance, which is ok",
                "time": "2019-01-24 12:09:14",
                "index": 35,
                "user": "nWidart"
            },
            {
                "id": "5c49b274746d4a677a0350ce",
                "text": "Spring Boot is creating multiple customizers like that; they're applied to the builder but users still have a chance to not use it or customize it even more",
                "time": "2019-01-24 12:41:24",
                "index": 36,
                "user": "bclozel"
            },
            {
                "id": "5c49b38695e17b4525a17984",
                "text": "I see ok, thanks :+1: ",
                "time": "2019-01-24 12:45:58",
                "index": 37,
                "user": "nWidart"
            }
        ]
    },
    {
        "id": 739,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc92bb8c26e8923c40438b5",
                "text": "Hi everyone! Could you tell me, why spring initializer adds `r2dbc-postgresql` packages as runtime only scope?\n```\n  runtimeOnly(\"io.r2dbc:r2dbc-postgresql\")\n  runtimeOnly(\"org.postgresql:postgresql\")\n```\nI need `PostgresqlConnectionFactory` for example, but i have no access to it due to runtimeOnly scope.",
                "time": "2019-11-11 09:36:56",
                "index": 0,
                "user": "pakru"
            },
            {
                "id": "5dc92dc4091dd14a0e9d149a",
                "text": "@pakru The assumption is that you won't be doing anything that's specific to a particular database in your own code. If there's not true in your case, change it to `implementation`",
                "time": "2019-11-11 09:45:40",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5dc9309350010612b29a432e",
                "text": "@wilkinsona Ok, I see. But what is the better way to configure connection to my DB without changing to `implementation`? Configure in `application.properites`?",
                "time": "2019-11-11 09:57:39",
                "index": 4,
                "user": "pakru"
            },
            {
                "id": "5dc93f4eeeb63e1a8392d07d",
                "text": "Yes. There's an example in the README: https://github.com/spring-projects-experimental/spring-boot-r2dbc#postgresql",
                "time": "2019-11-11 11:00:30",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 740,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5eec74e4ec4a341beed7bfe7",
                "text": "Hello, is this the right room to ask a rsocket related question ? ",
                "time": "2020-06-19 08:18:44",
                "index": 0,
                "user": "dnijssen"
            },
            {
                "id": "5eec7561e0e5673398c0b4ed",
                "text": "I've added the following 2 MessageMapping endpoints\n```\n@MessageMapping(\"recipe.find.{identifier}\")\n    public Mono<Recipe> findRecipeByIdentifier(@DestinationVariable String identifier) {\n        return recipeRepository.findById(identifier);\n    }\n\n    @MessageMapping(\"recipe.delete.{identifier}\")\n    public Mono<Void> deleteRecipeByIdentifier(@DestinationVariable String identifier) {\n        return recipeRepository.deleteById(identifier);\n    }\n```\n\n\nBut for some reason my deleteRecipeByIdentifier is not being invoked when I sent the following command via an rsocket client cli:\n`java -jar rsc.jar --debug --fnf --route recipe.delete.5eec7376cb6c8426f9f1e608 tcp://localhost:7000`\n\nhowever the find works perfectly fine:\n`java -jar rsc.jar --debug --request --route recipe.find.5eec7376cb6c8426f9f1e608 tcp://localhost:7000` ",
                "time": "2020-06-19 08:20:49",
                "index": 1,
                "user": "dnijssen"
            },
            {
                "id": "5eec757ec223cc536a221662",
                "text": "What am I doing wrong, I would expect since it returns a Mono<Void>  it would be a fire-and-forget (fnf) ",
                "time": "2020-06-19 08:21:18",
                "index": 2,
                "user": "dnijssen"
            },
            {
                "id": "5eec75bbbb149531edba7cda",
                "text": "But seems it my \"delete\" message needs to be a --request (request/response)  as well. :smirk_cat:  what do I need to change in my method signature to make it a proper FNF ?",
                "time": "2020-06-19 08:22:19",
                "index": 3,
                "user": "dnijssen"
            },
            {
                "id": "5eec80b0bb149531edba9645",
                "text": "@dnijssen looking at the IO cardinality/interaction type here: https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#rsocket-annot-messagemapping\nit seems you should be able to send a fnf to this handler. If you can create a small repro project, then it's definitely good material for an issue on the spring framework issue tracker",
                "time": "2020-06-19 09:09:04",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5eec82a647fdfd21edd1bd43",
                "text": "Oke, yea I think my method signature is almost similair to `io.rsocket.RSocket`   > `default Mono<Void> fireAndForget(Payload payload)` ",
                "time": "2020-06-19 09:17:26",
                "index": 5,
                "user": "dnijssen"
            },
            {
                "id": "5eec82bd54d7862dc49740d1",
                "text": "So I don't understand why its not working, but let me create a simple repo project ",
                "time": "2020-06-19 09:17:49",
                "index": 6,
                "user": "dnijssen"
            },
            {
                "id": "5eec82cba813c72dcff9474b",
                "text": "On which github project shall I create the issue ?",
                "time": "2020-06-19 09:18:03",
                "index": 7,
                "user": "dnijssen"
            },
            {
                "id": "5eecaf33fa0c9221fc4a1fd5",
                "text": "@bclozel created the demo project and issue in the spring framework issue tracker -> https://github.com/spring-projects/spring-framework/issues/25285",
                "time": "2020-06-19 12:27:31",
                "index": 18,
                "user": "dnijssen"
            },
            {
                "id": "5eecaf3b47fdfd21edd2240d",
                "text": "thank you ;) ",
                "time": "2020-06-19 12:27:39",
                "index": 19,
                "user": "dnijssen"
            }
        ]
    },
    {
        "id": 741,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bc5c0bc6e5a401c2d7daee9",
                "text": "i updated my project to spring 2, now my h2 tests are not working. It says:\n> Caused by: org.h2.jdbc.JdbcSQLException: Schema \"MyDb\" not found; SQL statement:\n\nAny idea?\n\n```\nspring:\n    datasource:\n        driver-class-name: org.h2.Driver\n        url: jdbc:h2:mem:MyDb\n        username: sa\n        password:\n```\nthis is my config",
                "time": "2018-10-16 10:43:08",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5bc5d3c364cfc273f9d63e9e",
                "text": "Hard to tell with a code snippet in code. Sharing a minimal sample we can run would be easier. Perhaps https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#updated-default-create-drop-handling ?",
                "time": "2018-10-16 12:04:19",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bc5d655c08b8b3067228e7b",
                "text": " I was using boot 1.5 and it was working, now I updated to boot 2.0 and it's not anymore",
                "time": "2018-10-16 12:15:17",
                "index": 2,
                "user": "ofabricio"
            },
            {
                "id": "5bc5d6726e5a401c2d7e4448",
                "text": "OK",
                "time": "2018-10-16 12:15:46",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bc5d67e435c2a518eb67e85",
                "text": "i already tried all the flags of the universe :(",
                "time": "2018-10-16 12:15:58",
                "index": 4,
                "user": "ofabricio"
            },
            {
                "id": "5bc5d691c7bf7c36621deae5",
                "text": "the only diff error i get is:\n> Caused by: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'scopedTarget.dataSource': Requested bean is currently in creation: Is there an unresolvable circular reference?\n",
                "time": "2018-10-16 12:16:17",
                "index": 5,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 742,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d24b91998934d15a726e1df",
                "text": "Is there a different scheme to use if I just want to pass the path as-is to `Class.getResource()`? Or a way to disable a property editor for a specific property?",
                "time": "2019-07-09 15:56:09",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5d24ea5fcdb70805c9685aec",
                "text": "@OrangeDog There's no per-property way to influence the conversion. Given that `Class.getResource()` takes a `String`, you could make your property a `String`. It would then be bound as-is",
                "time": "2019-07-09 19:26:23",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 743,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5b9295b61d3a5711b6fb51f5",
                "text": "https://github.com/spring-projects/spring-boot/issues/14346 - WDYT? Would a PR be welcomed? If so - should I target 2.0 or 2.1?",
                "time": "2018-09-07 15:13:58",
                "index": 0,
                "user": "davidkarlsen"
            },
            {
                "id": "5b9356727667e11554bff775",
                "text": "@davidkarlsen PR welcome as it has been triaged and it\u2019s not assigned to anyone. `master` only though",
                "time": "2018-09-08 04:56:18",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5b93d5d4728ddf02827afefe",
                "text": "@snicoll ait!",
                "time": "2018-09-08 13:59:48",
                "index": 10,
                "user": "davidkarlsen"
            },
            {
                "id": "5b93e3017667e11554c2fc68",
                "text": "@snicoll https://github.com/spring-projects/spring-boot/pull/14353",
                "time": "2018-09-08 14:56:01",
                "index": 11,
                "user": "davidkarlsen"
            }
        ]
    },
    {
        "id": 744,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c7ee9ad212d0c1e1adaff01",
                "text": "I am using Spring Boot with embedded Undertow. In my application, I want to inject some Undertow handlers to address some of the cross-cutting concerns and then return the control to the Spring Boot Controller to handle the mapping and business logic. Anybody know which Undertow handler class is used by Spring Boot Controller so that I can put this handler as next in the Undertow handler chain? Thanks.",
                "time": "2019-03-05 21:27:09",
                "index": 0,
                "user": "stevehu"
            },
            {
                "id": "5c7f8fb4d3b35423cb726c96",
                "text": "@stevehu All Controllers are called via Spring MVC's `DispatcherServlet`. In Undertow, I believe a servlet is called by a `io.undertow.servlet.handlers.ServletHandler`.",
                "time": "2019-03-06 09:15:32",
                "index": 20,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 745,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5be68c1e2138723405e3b0fc",
                "text": "Hello! I'm used to `mvn spring-boot:run -Dserver.port=9990`, but now I added `spring-boot-devtools` and it tries to bind port `8080`, ignoring the specified `server.port`. Should I use another property, with devtools?",
                "time": "2018-11-10 07:43:26",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5be6ec51bb06d73a9951d105",
                "text": "@heruan You're passing the system property into the JVM that's running Maven and that JVM isn't always the one that runs your app as a new JVM may be forked. You should use `mvn spring-boot:run -Dspring-boot.jvmArguments=\"-Dserver.port=9990\"` instead. I'd recommend always doing that, irrespective of the use of DevTools, so that you're not relying on the forking behaviour.",
                "time": "2018-11-10 14:33:53",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5be6ec8cc0e6da07fe04e333",
                "text": "Thank you @wilkinsona :+1: ",
                "time": "2018-11-10 14:34:52",
                "index": 3,
                "user": "heruan"
            }
        ]
    },
    {
        "id": 746,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5c71618cab952d30857b744f",
                "text": "Hi. I want to start contribute in spring. \u0421an I find issues for beginner and where can I find them?",
                "time": "2019-02-23 15:06:52",
                "index": 0,
                "user": "kulik512"
            },
            {
                "id": "5c72517be5eeec0d9bb8f5db",
                "text": "@kulik512 thank you for the offer. There are two labels you can follow in the Spring Boot issue tracker: \u201cfirst-timers-only\u201d (if you never contributed before) and \u201cideal-for-contribution\u201d: https://github.com/spring-projects/spring-boot/labels",
                "time": "2019-02-24 08:10:35",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5c73c3b17667931e2ff9d471",
                "text": "@snicoll thank you! You really helped me.",
                "time": "2019-02-25 10:30:09",
                "index": 11,
                "user": "kulik512"
            }
        ]
    },
    {
        "id": 747,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cb9cfeda4ef097471c50165",
                "text": "Is there a way to map named sets of properties with Spring? eg   thing.fred.a, thing.fred.b, thing.wilma.a, thing.wilma.b, thing.barney.a, thing.barney.b  where I'd use config prefix of thing and end up with a map of string to object with fields a/b ?",
                "time": "2019-04-19 13:41:01",
                "index": 0,
                "user": "BarDweller"
            },
            {
                "id": "5cb9d39a4b4cb471d921f0e1",
                "text": "`private Map<String, YourPojo> thing` + a getter for it",
                "time": "2019-04-19 13:56:42",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cb9d4736a84d76ed8bd44a6",
                "text": "@BarDweller https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html#boot-features-external-config-complex-type-merge",
                "time": "2019-04-19 14:00:19",
                "index": 2,
                "user": "yeralin"
            },
            {
                "id": "5cb9d5324b4cb471d921fb4d",
                "text": "thanks.. got it working.. I had to add a few more sections to my property names =)",
                "time": "2019-04-19 14:03:30",
                "index": 3,
                "user": "BarDweller"
            },
            {
                "id": "5cb9d55b8790b0307ec926f5",
                "text": "Cool",
                "time": "2019-04-19 14:04:11",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5cb9d5754b4cb471d921fcd3",
                "text": "so I have  thing.namedthings.fred.a  rather than thing.fred.a    but thats because I want to have thing as the prefix on the config properties, so I have have thing.enabled etc ",
                "time": "2019-04-19 14:04:37",
                "index": 5,
                "user": "BarDweller"
            },
            {
                "id": "5cb9dfc2b489bb6ed78de313",
                "text": "Ok.. next question.. now I have that map of string to object, how do I go about publishing beans of those objects named by their keys, so that I can do @Autowired @Qualifier(\"fred\") and get the right version of fred injected? I've tried adding a bean factory post processor, via the app ctx, but that gets driven before the config is populated, so then I have no beans to register.. ",
                "time": "2019-04-19 14:48:34",
                "index": 6,
                "user": "BarDweller"
            },
            {
                "id": "5cb9e5894b4cb471d9226d8d",
                "text": "chasing myself in circles here.. I think the problem is I want to use the info in my @Configuration class, that came from the properties file, to create the bean definitions. I'm either coming along too early, and that hasn't happened yet, or too late, and the autowire somewhere else has already failed, because I didn't get called yet.",
                "time": "2019-04-19 15:13:13",
                "index": 7,
                "user": "BarDweller"
            },
            {
                "id": "5cb9e77ca4ef097471c5ad16",
                "text": "Aha.. cracked it =) @PostConstruct with an @Autowired ConfigurableBeanFactory and then use beanFactory.registerSingleton(entry.getKey(), entry.getValue()) over the map built from the config =)",
                "time": "2019-04-19 15:21:32",
                "index": 8,
                "user": "BarDweller"
            },
            {
                "id": "5cb9e8ad5b3f941aa559d323",
                "text": "Next puzzle, to figure out how to do the equiv of @Qualifer(\"{my.property.id}\") when @Qualifier doesn't support that =)",
                "time": "2019-04-19 15:26:37",
                "index": 9,
                "user": "BarDweller"
            },
            {
                "id": "5cb9e91d990feb4518cb1907",
                "text": "just inject ApplicationContext and get the bean from there",
                "time": "2019-04-19 15:28:29",
                "index": 10,
                "user": "tonisostrat"
            },
            {
                "id": "5cb9ea755b3f941aa559deeb",
                "text": "Aye.. ended up doing that.. made my property a constructor arg to the class, autowired the app ctx, and added a private method to return the bean using getBean",
                "time": "2019-04-19 15:34:13",
                "index": 11,
                "user": "BarDweller"
            },
            {
                "id": "5cb9eacdb489bb6ed78e361d",
                "text": "Step by step =) I'm trying to build a small spring starter that will create named sslcontext beans based on configuration passed in application.properties/yaml, to accept base64 encoded certificates as config for truststore. ",
                "time": "2019-04-19 15:35:41",
                "index": 12,
                "user": "BarDweller"
            },
            {
                "id": "5cb9eb1c4b4cb471d92296ab",
                "text": "Then I can use that, from other starters, (spring cloud connector/java-cfenv extensions) that are given service details (uri/cert-to-trust) etc, to build the sslcontext/sslsocketfactories required =)",
                "time": "2019-04-19 15:37:00",
                "index": 13,
                "user": "BarDweller"
            }
        ]
    },
    {
        "id": 748,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c51b8e8c2dba5382eb1b8d1",
                "text": "Hello everybody",
                "time": "2019-01-30 14:47:04",
                "index": 0,
                "user": "zak905"
            },
            {
                "id": "5c51b91a93fe7d5ac015e1ff",
                "text": "is it possible to return a `Flux<Flux<SomeObject>>` from a controller? ",
                "time": "2019-01-30 14:47:54",
                "index": 1,
                "user": "zak905"
            },
            {
                "id": "5c51bba9c2dba5382eb1ccc4",
                "text": "@zak905 No. What are you trying to achieve?\nIs this something you get out of your application? Or is there something specific you'd like to see supported here in the way the response is handled?",
                "time": "2019-01-30 14:58:49",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5c51bc2b8aa5ca5abf57c482",
                "text": "Yes, I am struggling with merging two Fluxes one from redis, and the second one from mongo, using `.switchIfEmpty` I replace the first one if it is empty",
                "time": "2019-01-30 15:00:59",
                "index": 3,
                "user": "zak905"
            },
            {
                "id": "5c51bcae93fe7d5ac015fbda",
                "text": "I could not really get to flatten to `Flux<SomeObject>`, the reason for that is that `.switchIfEmpty` triggers always after a `flatMap` because it expects a `Mono` or  a`Flux` and not values (null, ..etc)",
                "time": "2019-01-30 15:03:10",
                "index": 4,
                "user": "zak905"
            },
            {
                "id": "5c51bcc078e1ed4103b44423",
                "text": "maybe I should paste the code snippet ",
                "time": "2019-01-30 15:03:28",
                "index": 5,
                "user": "zak905"
            },
            {
                "id": "5c51bd2cca428b0645283991",
                "text": "or maybe this is a reactor specific question :) ?",
                "time": "2019-01-30 15:05:16",
                "index": 6,
                "user": "zak905"
            },
            {
                "id": "5c51bd9d54f21a71a1ce8cbf",
                "text": "@zak905 this sounds like a reactor API question; you should ask that on #reactor (I'm monitoring the channel as well, but the whole reactor team is there so you'll get better answers there)",
                "time": "2019-01-30 15:07:09",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c51bdfeceb5a2264f6708a2",
                "text": "already done, thanks",
                "time": "2019-01-30 15:08:46",
                "index": 8,
                "user": "zak905"
            }
        ]
    },
    {
        "id": 749,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c7568940966d91204ecc770",
                "text": "I\u2019m looking for suggestion (links) for spring boot and containers. Which is the best base image? Any tweaks to reduce footprint and speed up start up? Best embedded server or use tomcat image? Thanks ",
                "time": "2019-02-26 16:25:56",
                "index": 0,
                "user": "andrespontt"
            },
            {
                "id": "5c7569b1c1cab53d6f416b4c",
                "text": "@andrespontt I use openjdk:11-jdk-slim as my FROM image and also make use of spring-boot-thin-maven-plugin to produce a thin docker container. Was reasonably easy to get working.\n",
                "time": "2019-02-26 16:30:41",
                "index": 1,
                "user": "micke-a"
            },
            {
                "id": "5c756a1b65ffa019ea53d50e",
                "text": "Excellent \u2014 I\u2019ll try those ",
                "time": "2019-02-26 16:32:27",
                "index": 2,
                "user": "andrespontt"
            },
            {
                "id": "5c756b01d2d62067b70dfb2b",
                "text": "@micke-a are you using embedded server (jar) or war along with a docket-tomcat image?",
                "time": "2019-02-26 16:36:17",
                "index": 3,
                "user": "andrespontt"
            },
            {
                "id": "5c756ba50966d91204ecde83",
                "text": "Yep, just use the embedded server (pretty much what everyone are doing these days), started like this:\nThis is my Dockerfile which shows how to layer up the libs and to start using the embedded \n```\nFROM openjdk:11-jdk-slim\n\nEXPOSE 80\n\nWORKDIR /app\n\n# 3rd party libs first, these should rarely change\nCOPY libs /app/libs\nCOPY mercurialib /app/libs/repository/com/mercuria\nCOPY nevis-services.jar /app/\n\nCMD [\"java\", \"-Xmx1G\", \"-Dthin.root=/app/libs\", \"-Dthin.offline=true\", \"-jar\", \"nevis-services.jar\"]\n```\nI separate the company libraries from everything else into separate layers.",
                "time": "2019-02-26 16:39:01",
                "index": 4,
                "user": "micke-a"
            },
            {
                "id": "5c756bd5b1503b3d70488a56",
                "text": "@micke-a makes sense. Thanks!",
                "time": "2019-02-26 16:39:49",
                "index": 5,
                "user": "andrespontt"
            }
        ]
    },
    {
        "id": 750,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c77e803608c6f373639ed9f",
                "text": "any recommended CQRS framework? And suggested message broker ? ",
                "time": "2019-02-28 13:54:11",
                "index": 0,
                "user": "andrespontt"
            },
            {
                "id": "5c780d3135c013075352697a",
                "text": "@andrespontt we use Axon (which has spring support). It's fantastic, and the team is great. What are you looking for in a message broker? use cases etc. ",
                "time": "2019-02-28 16:32:49",
                "index": 3,
                "user": "snowe2010"
            }
        ]
    },
    {
        "id": 751,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d1615fea8b20942ba995cef",
                "text": "Hi. How can I inject PooledConnectionFactory (amq) when enable spring.activemq.pool ? It needs JmsPooledConnectionFactory(via org.messagehub dependency). But what I want is an Amq pooledConnectionFactory . Any idea ?",
                "time": "2019-06-28 13:28:30",
                "index": 0,
                "user": "chsi13"
            },
            {
                "id": "5d1618de4db9b92ce3624339",
                "text": "@chsi13 We dropped support for AMQ's pooling as it isn't JMS 2 compliant. Please see [this issue](https://github.com/spring-projects/spring-boot/issues/13927) for details. Why do you want to use AMQ's pool specifically?",
                "time": "2019-06-28 13:40:46",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d161c25676ff14d273fb42c",
                "text": "@wilkinsona because these 2 lines :  ```If you have clustered ActiveMQs, and use failover transport it has been reported that CachingConnectionFactory is not a right choice.``` and this one from javadoc ```Ideally, don't use it with a message listener container at all```",
                "time": "2019-06-28 13:54:45",
                "index": 3,
                "user": "chsi13"
            },
            {
                "id": "5d161c85ffd4b84a8fc5d76f",
                "text": "For first line we have a clustered amq. And for second line I define this in my code ```@Bean\n  public JmsListenerContainerFactory<?> myFactory(final ConnectionFactory connectionFactory,\n                                                  final DefaultJmsListenerContainerFactoryConfigurer configurer) {\n    DefaultJmsListenerContainerFactory factory = new DefaultJmsListenerContainerFactory();\n    factory.setConcurrency(\"10-50\");\n    factory.setCacheLevel(DefaultMessageListenerContainer.CACHE_SESSION);\n    factory.setSessionTransacted(true);\n    configurer.configure(factory, connectionFactory);\n    return factory;\n  }```",
                "time": "2019-06-28 13:56:21",
                "index": 4,
                "user": "chsi13"
            },
            {
                "id": "5d161cd4da128007c686530b",
                "text": "Actually I don't know what are best practices for JmsTemplate and JmsListener connection factory configuration.",
                "time": "2019-06-28 13:57:40",
                "index": 5,
                "user": "chsi13"
            },
            {
                "id": "5d161d25aa095d404cd257fa",
                "text": "Sorry, I don't see the connection. `JmsPoolConnectionFactory` is not a `CachingConnectionFactory`",
                "time": "2019-06-28 13:59:01",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5d161d8b8dff05627b841a59",
                "text": "Furthermore, the `CachingConnectionFactory` is only auto-configured if `spring.activemq.pool` is `false` and you said above that you had enabled it.",
                "time": "2019-06-28 14:00:43",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5d161d95ddd2c007c71e76a6",
                "text": "I just try to understand which kind of connectioFactory I have to use when producing/consuming messages from/to an AMQ broker..  Seems cachingConnectionFactory(default) is not the right choice",
                "time": "2019-06-28 14:00:53",
                "index": 8,
                "user": "chsi13"
            },
            {
                "id": "5d161de6490abf627a3430a2",
                "text": "That's true, but it's also not what you have. And I still don't understand why you specifically want to inject ActiveMQ's pooled connection factory.",
                "time": "2019-06-28 14:02:14",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5d161e45ddd2c007c71e7f57",
                "text": "just because of this : https://stackoverflow.com/questions/19560479/which-is-better-pooledconnectionfactory-or-cachingconnectionfactory",
                "time": "2019-06-28 14:03:49",
                "index": 10,
                "user": "chsi13"
            },
            {
                "id": "5d161e704db9b92ce3627b20",
                "text": "If It is not recommanded to use CachingConnectionFactory and Amq pooledConnectionFactory is not supported anymore.. what I have to use ?",
                "time": "2019-06-28 14:04:32",
                "index": 11,
                "user": "chsi13"
            },
            {
                "id": "5d161f1803d62b4d28a0b1b6",
                "text": "The [documentation](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/htmlsingle/#boot-features-activemq) hopefully explains what to do:\n\n> If you\u2019d rather use native pooling, you can do so by adding a dependency to `org.messaginghub:pooled-jms` and configuring the `JmsPoolConnectionFactory` accordingly, as shown in the following example:\n> ```\n> spring.activemq.pool.enabled=true\n> spring.activemq.pool.max-connections=50\n> ```",
                "time": "2019-06-28 14:07:20",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5d16209cffd4b84a8fc5fe3c",
                "text": "Ok a fork from amq pooling... So a jms2 compliant version of older  AMQ PooledConnectionFactory I guess... ?",
                "time": "2019-06-28 14:13:48",
                "index": 13,
                "user": "chsi13"
            }
        ]
    },
    {
        "id": 752,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cc66b2097dcb371d82ed68b",
                "text": "How to search where spring handle its annotation?",
                "time": "2019-04-29 03:10:24",
                "index": 0,
                "user": "liangxiaoqiao"
            },
            {
                "id": "5cc6928ca4ef0974711986b9",
                "text": "@liangxiaoqiao there isn\u2019t a single answer to that question. Can you share more details?",
                "time": "2019-04-29 05:58:36",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cc6a1d8b4700e023deeabfa",
                "text": "@snicoll  I want to know where spring process its annotation, like @RequestMapping @Controller @Configuration etc. Is there any similar way to find them?",
                "time": "2019-04-29 07:03:52",
                "index": 2,
                "user": "liangxiaoqiao"
            },
            {
                "id": "5cc6a7b3990feb45181f359a",
                "text": "there is a single place is what I am trying to say. You should rather explain what you\u2019re trying to achieve if you want an accurate answer",
                "time": "2019-04-29 07:28:51",
                "index": 4,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 753,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd61ca1e5ea5550f4e370cf",
                "text": "For version 1.5.14, what is the alternative to \n`<dependency> \n             <groupId>org.springframework.boot</groupId> \n             <artifactId>spring-boot-starter-reactor-netty</artifactId> \n</dependency>`\n\nWhen I wa using spring web socket with RabbitMQ message broker, I got `java.lang.ClassNotFoundException: reactor.io.codec.Codec`",
                "time": "2019-11-21 05:12:01",
                "index": 0,
                "user": "ratikanta131"
            },
            {
                "id": "5dd641e4b5e589513e296b8f",
                "text": "@ratikanta131 This starter has been introduced in Spring Boot 2.0.\nFor the 1.5.x generation, you can take a look at: https://docs.spring.io/spring/docs/4.3.x/spring-framework-reference/htmlsingle/#websocket-stomp-handle-broker-relay\nThere's a section mentioning `org.projectreactor:reactor-net` and `io.netty:netty-all` - note the versions, as you can't use the latest reactor versions with that integration.\nAlso worth noting: Spring Boot 1.5.x is EOL and security patches are not backported to that branch, and your application might be vulnerable to several CVEs (https://pivotal.io/security). Please upgrade at your earliest convenience.",
                "time": "2019-11-21 07:51:00",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5dd69096ac81632e65da2298",
                "text": "@bclozel Thanks it worked. Will Upgrade soon to version 2.2.0 soon.",
                "time": "2019-11-21 13:26:46",
                "index": 18,
                "user": "ratikanta131"
            }
        ]
    },
    {
        "id": 754,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bfda323a115c91ef7a18a4e",
                "text": "Hi there. Anyone knows what's the best way to register a custom type converter without having to @EnableMvc and implement WebMvcConfigurer? i'm working on a non-web-application where i would need custom type converters ",
                "time": "2018-11-27 20:03:47",
                "index": 0,
                "user": "pulse00"
            },
            {
                "id": "5bfda91be25cc274055280f7",
                "text": "@pulse00 what do you want to use the converter for?",
                "time": "2018-11-27 20:29:15",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5bfdac53f59704348e139cd0",
                "text": "It converts one POJO to another one. At the end i'd like to make use of it in an apache camel route (which has support for spring type converters). But it seems the FormatterRegistry API is only exposed via web applications ",
                "time": "2018-11-27 20:42:59",
                "index": 2,
                "user": "pulse00"
            },
            {
                "id": "5bfdac61958fc53895fc5f77",
                "text": "either WebMvcConfigurer or RestRepositoryConfigurer ",
                "time": "2018-11-27 20:43:13",
                "index": 3,
                "user": "pulse00"
            },
            {
                "id": "5bfdac657d26db1e83068122",
                "text": "i have neither",
                "time": "2018-11-27 20:43:17",
                "index": 4,
                "user": "pulse00"
            },
            {
                "id": "5bfdae6bced7003fe1965405",
                "text": "The `FormattingConversionService` in `spring-context` is a `FormatterRegistry`",
                "time": "2018-11-27 20:51:55",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bfdaed27d26db1e830693e2",
                "text": "Boot's `ApplicationConversionService` (the context's default conversion service as of Boot 2.1) is a `FormattingConversionService` sub-class",
                "time": "2018-11-27 20:53:38",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5bfdaf21e25cc2740552a74a",
                "text": "Yeah, i've tried something along that line already, but i get  `NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.format.support.FormattingConversionService' available`",
                "time": "2018-11-27 20:54:57",
                "index": 7,
                "user": "pulse00"
            },
            {
                "id": "5bfdaf3d66213138942ab0a2",
                "text": "https://gist.github.com/pulse00/acbf6cc8bd50606cf4d637de20deab27",
                "time": "2018-11-27 20:55:25",
                "index": 8,
                "user": "pulse00"
            },
            {
                "id": "5bfdaf677d26db1e83069722",
                "text": "weird - it looks like the conversion api is really a core spring thing but it's not that simple to add converters to it :) ",
                "time": "2018-11-27 20:56:07",
                "index": 9,
                "user": "pulse00"
            },
            {
                "id": "5bfdb0f8ed6bcf1ef86dceee",
                "text": "Outside Boot, and in Boot 2.0 and earlier, there's no conversion service by default. If you want the context to use one, you should declare a bean named `conversionService` that's configured to meet your needs.",
                "time": "2018-11-27 21:02:48",
                "index": 10,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 755,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c8054271fae6423ca427d7a",
                "text": "hello.\nAny idea how to show beans registred manually ?\n`ApplicationContext.getBeanDefinitionNames()` will not list manually registered beans. ",
                "time": "2019-03-06 23:13:43",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5c80f1e9f895944c085533fd",
                "text": "@amirensit It depends on what you mean by registered manually. `org.springframework.beans.factory.config.SingletonBeanRegistry.getSingletonNames()` may be of use.",
                "time": "2019-03-07 10:26:49",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 756,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d4c5a1390bba62a123eb3b1",
                "text": "hello",
                "time": "2019-08-08 17:21:23",
                "index": 0,
                "user": "zak905"
            },
            {
                "id": "5d4c5a2fbeba830fff59cf65",
                "text": "anybody knows who manages `keycloak-spring-boot-2-starter` and where is the repository",
                "time": "2019-08-08 17:21:51",
                "index": 1,
                "user": "zak905"
            },
            {
                "id": "5d4c66761dadc42a113641a0",
                "text": "https://github.com/keycloak/keycloak",
                "time": "2019-08-08 18:14:14",
                "index": 2,
                "user": "IEnoobong"
            },
            {
                "id": "5d4c668890bba62a123f1bf7",
                "text": "https://github.com/keycloak/keycloak/tree/master/misc/spring-boot-starter/keycloak-spring-boot-starter",
                "time": "2019-08-08 18:14:32",
                "index": 3,
                "user": "IEnoobong"
            },
            {
                "id": "5d4c75fec87a0963e7372a5b",
                "text": "@IEnoobong this is not `keycloak-spring-boot-2-starter`, this is `keycloak-spring-boot-starter`",
                "time": "2019-08-08 19:20:30",
                "index": 4,
                "user": "zak905"
            },
            {
                "id": "5d4c7631029a51607f5c5ea5",
                "text": "they are not the same apparently, the first works for me, while the second does not (I am on spring boot 2.1.0.RELEASE)",
                "time": "2019-08-08 19:21:21",
                "index": 5,
                "user": "zak905"
            },
            {
                "id": "5d4d1eb17d56bc6080206155",
                "text": "@zak905 the `spring-boot-2` name was a mistake so they\u2019ve renamed it at our request. Should be named `keycload-spring-boot-starter` when you upgrade",
                "time": "2019-08-09 07:20:17",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5d4d1ebfa4efe3718dcef641",
                "text": "If you have more question on Keycloak, I\u2019d suggest asking on their forum",
                "time": "2019-08-09 07:20:31",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5d4d2854bb5364334cfd0965",
                "text": "allright thanks @snicoll ",
                "time": "2019-08-09 08:01:24",
                "index": 15,
                "user": "zak905"
            }
        ]
    },
    {
        "id": 757,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bf6216f2f1872707ae05b92",
                "text": "Hello Spring Boot team; is it possible to use embedded Tomcat 9 with JDK 8, Spring Boot 1.5?",
                "time": "2018-11-22 03:24:31",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5bf6743dd24f9324d2357667",
                "text": "@nnanda2016 not officially",
                "time": "2018-11-22 09:17:49",
                "index": 11,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 758,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5bf2af5df9993b42673330a9",
                "text": "I'm investigating a difference in response time for first http request after application startup (WebFlux, Boot 2.0.6) between runnable jar, gradle :bootRun and running the main method from IDE. There is about 1000ms difference between running with gradle plugin vs java  -jar Application.jar (runnable jar is slower); Any ideas what to look for? I'm using PropertiesLauncher for runnable jar.",
                "time": "2018-11-19 12:41:01",
                "index": 0,
                "user": "mzcu"
            },
            {
                "id": "5bf2afc74720c11e0e8e747c",
                "text": "Application startup time is also ~1000ms slower in runnable jar case",
                "time": "2018-11-19 12:42:47",
                "index": 1,
                "user": "mzcu"
            },
            {
                "id": "5bf2b1282735965dfefd102e",
                "text": "It's hard to say, but I would guess that the first request is slower as it triggers some class loading and initialisation. That will be slower when using a jar as there's more to do vs when the jar's contents are available directly on the filesystem. Depending on the size of your application and how much initialisation the first request triggers, I guess it could take an extra 1000ms, although that does sound quite high.",
                "time": "2018-11-19 12:48:40",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bf2b38f4720c11e0e8e8d4b",
                "text": "What's interesting is that some simple endpoints exposed within the same application (e.g. /healthcheck) do not display such drastic slowdown; Also a request which is handled by global exception handler for the app responds fast enough. The problematic endpoint switches to parallel scheduler to do some computation, there could be some initialisation cost there",
                "time": "2018-11-19 12:58:55",
                "index": 3,
                "user": "mzcu"
            },
            {
                "id": "5bf2c39780652945c3878f80",
                "text": "@wilkinsona it was about (Bouncy Castle) class loading indeed; Once I made sure that necessary classes are loaded on startup the issue with first request slowdown was gone; Or, rather, expressed through longer startup time :)",
                "time": "2018-11-19 14:07:19",
                "index": 15,
                "user": "mzcu"
            },
            {
                "id": "5bf2e4a280e46b4266d7bb9a",
                "text": "@mzcu That's interesting. Thanks for sharing your findings.",
                "time": "2018-11-19 16:28:18",
                "index": 20,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 759,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d4775ee75c7976e032b8950",
                "text": "Hi\nPlease, can anyone share some good documentation on spring-boot version upgrade...?\nI'm trying to upgrade spring-boot 1.4.* 2 to 2.1.* and running with sme dependency isssues. I'm not much familired with maven dependencies.",
                "time": "2019-08-05 00:18:54",
                "index": 0,
                "user": "chinnareddy578"
            },
            {
                "id": "5d47c9c2e939ab2447fb449c",
                "text": "@chinnareddy578 here you go, https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide",
                "time": "2019-08-05 06:16:34",
                "index": 1,
                "user": "IEnoobong"
            },
            {
                "id": "5d47ca8741d5cd61b5b7cae8",
                "text": "https://spring.io/blog/2018/10/30/spring-boot-2-1-0",
                "time": "2019-08-05 06:19:51",
                "index": 2,
                "user": "IEnoobong"
            },
            {
                "id": "5d47ca9141d5cd61b5b7caea",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes",
                "time": "2019-08-05 06:20:01",
                "index": 3,
                "user": "IEnoobong"
            }
        ]
    },
    {
        "id": 760,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cdbce6a79d700509974160e",
                "text": "Hey! Given following properties:\n```\nes.clusters[0].name = es1\nes.clusters[0].uris = http://localhost:9201\nes.clusters[1].name = es2\nes.clusters[1].uris = http://localhost:9202\n```\nI am having difficulty in injecting these into `@Value(\"{es.clusters}\") List<EsClusterConfig>` parameter where `EsClusterConfig` is a simple bean as follows:\n```\npublic class EsClusterConfig {\n    private String name;\n    private Set<URI> uris;\n}\n```\nWhen I do this I get `Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type '...es.EsClusterConfig': no matching editors or conversion strategy found` error. What am I missing? Is this possible at all?\n\n",
                "time": "2019-05-15 08:31:38",
                "index": 0,
                "user": "vy"
            },
            {
                "id": "5cdbcf076fd7c11cd8be9819",
                "text": "`@Value` is not really recommended. Have you considered using `@ConfigurationProperties` as explained in the doc?",
                "time": "2019-05-15 08:34:15",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5cdbcfb2252dbb75155d5035",
                "text": "@snicoll When I do the following:\n```\n@Component\n@ConfigurationProperties(prefix = \"es\")\npublic class EsClusterAccessor {\n    public List<EsClusterConfig> clusters;\n}\n```\n`accessor.clusters` return null.",
                "time": "2019-05-15 08:37:06",
                "index": 2,
                "user": "vy"
            },
            {
                "id": "5cdbd037e7f42160fa90c97b",
                "text": "`s/@Component/@Configuration/` doesn't help either.",
                "time": "2019-05-15 08:39:19",
                "index": 3,
                "user": "vy"
            },
            {
                "id": "5cdbd037f52a237516356d83",
                "text": "read the doc? Binding happens on java bean properties (you need getters/setters)",
                "time": "2019-05-15 08:39:19",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5cdbd0a356271260f96509e8",
                "text": "@snicoll Right. Now it works. Sorry for bugging you. Which particular section of the documentation (ocean) are you referring to?",
                "time": "2019-05-15 08:41:07",
                "index": 5,
                "user": "vy"
            },
            {
                "id": "5cdbd0c45a1d435d4644dce7",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html#boot-features-external-config-typesafe-configuration-properties",
                "time": "2019-05-15 08:41:40",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5cdbd0dd5a1d435d4644dda8",
                "text": "both questions are answered in the same section actually",
                "time": "2019-05-15 08:42:05",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5cdbd151b149ca509894c71a",
                "text": "@snicoll Thanks!",
                "time": "2019-05-15 08:44:01",
                "index": 8,
                "user": "vy"
            },
            {
                "id": "5cdbd368da34620ff944d2d3",
                "text": "@snicoll May I ask why is `@Value` not recommended?",
                "time": "2019-05-15 08:52:56",
                "index": 10,
                "user": "vy"
            },
            {
                "id": "5cdbd9a579d70050997467d3",
                "text": "Your configuration becomes scattered throughout your application",
                "time": "2019-05-15 09:19:33",
                "index": 11,
                "user": "Contract16"
            },
            {
                "id": "5cdbd9d70f381d0a76bc3fd0",
                "text": "Configuration as a Service essentially removes this issue and gives you all the benefits, and if you need to update any configuration properties then it's done in a single place",
                "time": "2019-05-15 09:20:23",
                "index": 12,
                "user": "Contract16"
            },
            {
                "id": "5cdbda9c5a887e1cd9ef0f87",
                "text": "And now you can mock any `ConfigurationProperties` classes in tests quite easily as well, which is a nice added bonus :)",
                "time": "2019-05-15 09:23:40",
                "index": 13,
                "user": "Contract16"
            },
            {
                "id": "5cdbdc7556271260f965668d",
                "text": "@Contract16 Though I personally find the necessity to add a getter/setter for every single property sort of overkill. Sometimes you just need a single boolean flag in a bean. Wrapping that flag in a @ConfigProp class with all accessor whistles and bells is too much of a work, IMHO. Am I missing sth?",
                "time": "2019-05-15 09:31:33",
                "index": 14,
                "user": "vy"
            },
            {
                "id": "5cdbde3cbdc3b64fcf4ccdbb",
                "text": "@vy If you change the property name, or use it in another place in future, then you end up doing a string search on the project instead of just opening the config class and updating it there",
                "time": "2019-05-15 09:39:08",
                "index": 16,
                "user": "Contract16"
            },
            {
                "id": "5cdbde8a0f381d0a76bc68c6",
                "text": "@Contract16 Seems fair enough. I know it is a matter of taste, but I personally don't think this single problem justifies `@Value` not being recommended.",
                "time": "2019-05-15 09:40:26",
                "index": 17,
                "user": "vy"
            },
            {
                "id": "5cdbde8e0824230a773a90ef",
                "text": "You shouldn't be scared of making classes, they're there to organise code in a way that's easy to find what you want, and to make it easy to test and refactor later if needed",
                "time": "2019-05-15 09:40:30",
                "index": 18,
                "user": "Contract16"
            },
            {
                "id": "5cdbdec3da34620ff94524e0",
                "text": "It just comes down to a minimal amount of additional coding time (Make a class, annotate it, add a getter and setter) for easily maintainable and cleaner code",
                "time": "2019-05-15 09:41:23",
                "index": 19,
                "user": "Contract16"
            },
            {
                "id": "5cdbdefc56271260f9657ece",
                "text": "Your future self and other people on the project will thank you for it :)",
                "time": "2019-05-15 09:42:20",
                "index": 20,
                "user": "Contract16"
            },
            {
                "id": "5cdbe32ebdc3b64fcf4cf0de",
                "text": "@hbrands I don't think there's much we can do in the testing support. You are creating a second application context in a way that means it's completely hidden so I don't think there's anyway for us to automatically set up a MockMvc instance that knows about it.",
                "time": "2019-05-15 10:00:14",
                "index": 21,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 761,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d233a2bcbe5956568c7fc1a",
                "text": "I'm trying to use the embedded MongoDB in a Docker container but seeing:\n```\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [de.flapdoodle.embed.mongo.MongodExecutable]: Factory method 'embeddedMongoServer' threw exception; nested exception is java.lang.IllegalArgumentException: Could NOT create Directory ?/.embedmongo\n```\nI've tried setting `spring.mongodb.embedded.storage.database-dir` to `/tmp` and starting the container with ` --tmpfs /tmp` but no joy.",
                "time": "2019-07-08 12:42:19",
                "index": 0,
                "user": "mplanchant"
            },
            {
                "id": "5d233ef88b257547eef8a05b",
                "text": "You're using test containers?",
                "time": "2019-07-08 13:02:48",
                "index": 1,
                "user": "Contract16"
            },
            {
                "id": "5d233f3f3b186e65696a51be",
                "text": "@mplanchant ",
                "time": "2019-07-08 13:03:59",
                "index": 2,
                "user": "Contract16"
            },
            {
                "id": "5d23481a3b186e65696a8e61",
                "text": "@mplanchant I haven't seen that specific problem before, but using Embedded Mongo inside a Docker container is an unusual combination. If it's for testing, have you considered using Testcontainers? If it's for usage at runtime, why not use regular Mongo in a container without the embedded stuff if you already have Docker in the picture?",
                "time": "2019-07-08 13:41:46",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5d2349f3905e046c048d6231",
                "text": "@Contract16 no",
                "time": "2019-07-08 13:49:39",
                "index": 4,
                "user": "mplanchant"
            },
            {
                "id": "5d234a1c905e046c048d6404",
                "text": "I'll take a look at Testcontainters thanks",
                "time": "2019-07-08 13:50:20",
                "index": 5,
                "user": "mplanchant"
            },
            {
                "id": "5d234a293b186e65696a986e",
                "text": "@mplanchant Yeah we had issues with embeddedmongo on certain systems, and in the end went with `TestContainers`",
                "time": "2019-07-08 13:50:33",
                "index": 6,
                "user": "Contract16"
            },
            {
                "id": "5d234a74a0efb405eb5873ad",
                "text": "As a bonus, the tests are running against an actual instance of Mongo now instead of an in memory implementation, so you know it behaves like it would in production :)",
                "time": "2019-07-08 13:51:48",
                "index": 7,
                "user": "Contract16"
            },
            {
                "id": "5d234a80273f6558f9a3e0a7",
                "text": ":thumbsup: ",
                "time": "2019-07-08 13:52:00",
                "index": 8,
                "user": "mplanchant"
            },
            {
                "id": "5d234a97fb84b16c059cc6c2",
                "text": "Would end up with something like:\n```\n    @ClassRule\n    public static GenericContainer genericContainer = new GenericContainer(\"mongo:3.6.3\")\n            .withExposedPorts(27017);\n```",
                "time": "2019-07-08 13:52:23",
                "index": 9,
                "user": "Contract16"
            },
            {
                "id": "5d234cc6fb84b16c059cd795",
                "text": "thanks @Contract16 ",
                "time": "2019-07-08 14:01:42",
                "index": 10,
                "user": "mplanchant"
            },
            {
                "id": "5d23555296edbf58f8b77255",
                "text": "@Contract16 Despite its name, Embedded Mongo is an actual instance of Mongo running in a separate process. It downloads the appropriate binary for your OS, unpacks it, and starts it",
                "time": "2019-07-08 14:38:10",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5d23569ecec3292d142b6007",
                "text": "@wilkinsona Ah right, just looking at the source now :) We had issues running with Embedded Mongo that stopped the moment we started using Test Containers, might've just been config but I don't think I'd go back now that spinning up a container with mongo running for my integration tests is as simple as a classrule :)",
                "time": "2019-07-08 14:43:42",
                "index": 12,
                "user": "Contract16"
            },
            {
                "id": "5d23573a21d64247ed0c6d6b",
                "text": "My only concern with using Testcontainers is that we use Concourse for CI/CD. Not sure how Testcontainers will work running inside a Concourse Job. Will just have to give it a try.",
                "time": "2019-07-08 14:46:18",
                "index": 13,
                "user": "mplanchant"
            },
            {
                "id": "5d2357b521d64247ed0c70be",
                "text": "@Contract16 We've had similar problems in Boot's own build when testing our auto-configuration for it",
                "time": "2019-07-08 14:48:21",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5d2357e31b7f5e703286db7d",
                "text": "@mplanchant We use Testcontainers in Boot's build which runs on Concourse. You have to do a bit of setup to get Docker working inside Docker but it is possible and works well in our experience. Take a look a Boot's CI setup to see what we did if you're interested.",
                "time": "2019-07-08 14:49:07",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5d245708270d2b1bfa65ba8d",
                "text": "Thanks @wilkinsona I'll check that out",
                "time": "2019-07-09 08:57:44",
                "index": 24,
                "user": "mplanchant"
            }
        ]
    },
    {
        "id": 762,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ecf73c52c49c45f5aa92672",
                "text": "Hello Team,\n\nI am facing  issue when I am trying to make request containing ';'. The request was rejected because the URL contained a potentially malicious String \\\"%25\\\"\nI did check on stackoverflow and i guess there is an open issue related to this. https://github.com/spring-projects/spring-security/issues/5149\n\n\nIs this issue resolved?\n\nThanks",
                "time": "2020-05-28 08:18:13",
                "index": 0,
                "user": "afnanshirol"
            },
            {
                "id": "5ecf80c7ff7a920a72188b3a",
                "text": "@afnanshirol ,do you want to make sure the request containing ';' not be rejected, or just want to find a way to handle RequestRejectedException? The issue you mentioned is about how to handle RequestRejectedException, and closed with pr https://github.com/spring-projects/spring-security/pull/7052",
                "time": "2020-05-28 09:13:43",
                "index": 1,
                "user": "nkjackzhang"
            },
            {
                "id": "5ecf81e4225dc25f54af08a1",
                "text": "@nkjackzhang  Thanks for the quick reply. \nCurrently the application is responding with Http status 500 Internal Server Error with below response body \n{\n\u00a0 \"timestamp\": \"2020-05-28T10:32:50.217+0000\",\n\u00a0 \"status\": 500,\n\u00a0 \"error\": \"Internal Server Error\",\n\u00a0 \"message\": \"The request was rejected because the URL contained a potentially malicious String \\\"%25\\\"\",\n\u00a0 \"path\": \"/my-api/api/request-path/100%25\"\n}\nI want to handle RequestRejectedException and send Http status 400 Bad Request to the user.\n\nThanks",
                "time": "2020-05-28 09:18:28",
                "index": 2,
                "user": "afnanshirol"
            },
            {
                "id": "5ecf828e225dc25f54af0ac2",
                "text": "@afnanshirol   see pr https://github.com/spring-projects/spring-security/pull/7052",
                "time": "2020-05-28 09:21:18",
                "index": 3,
                "user": "nkjackzhang"
            },
            {
                "id": "5ecf83b0b101510b20215f86",
                "text": "@nkjackzhang  I can see pr spring-projects/spring-security#7052 is been closed but not  able to find in which version of spring security its been released so that i can make use of it.",
                "time": "2020-05-28 09:26:08",
                "index": 4,
                "user": "afnanshirol"
            },
            {
                "id": "5ecf843389941d051a2a572a",
                "text": "Could you please confirm release version of the defect fix?",
                "time": "2020-05-28 09:28:19",
                "index": 5,
                "user": "afnanshirol"
            },
            {
                "id": "5ecf846d2280c80cbfd377cd",
                "text": "@afnanshirol ,as the dever says, the pr was merged into master, maybe will be released at version 5.4, because the source code contains 'since 5.4'.",
                "time": "2020-05-28 09:29:17",
                "index": 6,
                "user": "nkjackzhang"
            },
            {
                "id": "5ecf84f7ff7a920a72189679",
                "text": "@nkjackzhang  Thanks alot for confirming . Appreciate your help. :)",
                "time": "2020-05-28 09:31:35",
                "index": 7,
                "user": "afnanshirol"
            },
            {
                "id": "5ecf8516778fad0b132ff2f5",
                "text": "@afnanshirol , you are welcome.",
                "time": "2020-05-28 09:32:06",
                "index": 8,
                "user": "nkjackzhang"
            }
        ]
    },
    {
        "id": 763,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba934824d320a463be9c701",
                "text": "Is it possible to load a separate yaml file (e.g. not application.properties) with @Configurationproperties? Apparently the `locations` prop was removed?",
                "time": "2018-09-24 19:01:22",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5ba934924d320a463be9c776",
                "text": "I would like to use yaml for configuration, but I would like to use multiple properties files",
                "time": "2018-09-24 19:01:38",
                "index": 1,
                "user": "springroll12"
            },
            {
                "id": "5ba935568ddf5867dc69f3a4",
                "text": "I'm not sure if I followed what you just asked",
                "time": "2018-09-24 19:04:54",
                "index": 2,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba9358daedb375b9c3e4097",
                "text": "do you mean something like:\n - database.yml\n - business.yml\n - whatever.yml\n\nor something like:\n  - application.yml\n  - application-local.yml\n  - application-business.yml",
                "time": "2018-09-24 19:05:49",
                "index": 3,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba9358f53c31c11115b4afc",
                "text": "?",
                "time": "2018-09-24 19:05:51",
                "index": 4,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba935b4fe37781110efe5a9",
                "text": "I would like to have an `application.yml` and a separate `settings.yml` and have the `settings.yml` be read via @ConfigurationProperties(file=\"settings.yml\", prefix=\"abc\") or similar. ",
                "time": "2018-09-24 19:06:28",
                "index": 5,
                "user": "springroll12"
            },
            {
                "id": "5ba935c3eba8e60bc63bee6c",
                "text": "both would be used by the same application at the same time",
                "time": "2018-09-24 19:06:43",
                "index": 6,
                "user": "springroll12"
            },
            {
                "id": "5ba935d256877c463a7a4296",
                "text": "AFAIK it's not possible",
                "time": "2018-09-24 19:06:58",
                "index": 7,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba935d3aedb375b9c3e43cd",
                "text": "essentially I just want to split my configuration into two yml files",
                "time": "2018-09-24 19:06:59",
                "index": 8,
                "user": "springroll12"
            },
            {
                "id": "5ba9364141177e0bc79e5d1f",
                "text": "Is there any other way to keep the yaml separate?",
                "time": "2018-09-24 19:08:49",
                "index": 9,
                "user": "springroll12"
            },
            {
                "id": "5ba9364856877c463a7a45a6",
                "text": "I think it was never possible",
                "time": "2018-09-24 19:08:56",
                "index": 10,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba936a898245f4ae079abff",
                "text": "well, you can try to play around with `@PropertySource` and split your files, I personally wouldn't do that but it's up to you",
                "time": "2018-09-24 19:10:32",
                "index": 11,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba936bc7bd81c5b9da991df",
                "text": "also if nothing has changed it supports only `.properties` file, not yamls",
                "time": "2018-09-24 19:10:52",
                "index": 12,
                "user": "marcosbarbero"
            },
            {
                "id": "5ba9370ceba8e60bc63bf4cb",
                "text": "`@PropertySource` does this fine for `.properties` files. And apparently this was possible in the past with the @ConfigurationProperties `location` prop. I think it might be possible through yaml includes, but it's messy.",
                "time": "2018-09-24 19:12:12",
                "index": 13,
                "user": "springroll12"
            },
            {
                "id": "5ba93794aedb375b9c3e50c2",
                "text": "yeah, apparently it was possible back in 2016",
                "time": "2018-09-24 19:14:28",
                "index": 14,
                "user": "marcosbarbero"
            }
        ]
    },
    {
        "id": 764,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5df8283c42784416abfd9e0b",
                "text": "Hello there,",
                "time": "2019-12-17 00:58:36",
                "index": 0,
                "user": "d4rkr0n1n"
            },
            {
                "id": "5df82868c6ce6027ebd45f3e",
                "text": "I have done complete course on java core and want to move to spring boot. Can anybody guide me what to do?",
                "time": "2019-12-17 00:59:20",
                "index": 1,
                "user": "d4rkr0n1n"
            },
            {
                "id": "5df8905e2cc1b31e3432729f",
                "text": "@mridulroyntl  Hi, i would recommend taking a look of an existing spring boot application. Pet Clinic for example and try to debug it to see what's going on. But if you want to understand of how does spring works..i'd give it a try to https://spring.io/docs ",
                "time": "2019-12-17 08:22:54",
                "index": 5,
                "user": "caliagaa"
            }
        ]
    },
    {
        "id": 765,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5e9d950cd65bcf75b5d89c78",
                "text": "Hello, I am working on a spring boot r2dbc sample (Spring boot version: 2.3.0-M4). I observed that \"src/main/resources/schema.sql\" is not executed during application startup. Is schema creation during startup not supported yet? Or is there any additional configuration I need to make? Can someone please let me know",
                "time": "2020-04-20 12:26:52",
                "index": 0,
                "user": "sudhirtumati"
            },
            {
                "id": "5e9d953f0480c128efd2cc5c",
                "text": "It isn\u2019t supported as documented",
                "time": "2020-04-20 12:27:43",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e9d955ea1284c4f20a6009d",
                "text": "https://docs.spring.io/spring-boot/docs/2.3.0.M4/reference/htmlsingle/#howto-initialize-a-database-using-r2dc",
                "time": "2020-04-20 12:28:14",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5e9da4d22ff88975b4365b95",
                "text": "@snicoll Thank you very much for the information",
                "time": "2020-04-20 13:34:10",
                "index": 3,
                "user": "sudhirtumati"
            }
        ]
    },
    {
        "id": 766,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e1e42f9dbacf55b3d09f5a1",
                "text": "Hello! I'm seeing some issues with a class (class A) marked with Configurable annotation autowiring another class. Class A is being manually instantiated by Class X that's not Spring managed. Class A is autowiring class B. There is a delay in the instantiation order of Class A and class B. As a result, we end up hitting an NPE in class A, when it tries to invoke a method in class B. I tried debugging the issue to see in what order the 2 classes are being instantiated. I'm seeing two issues here -  1) post construct method in class A is never called 2) post construct method in class B is being called 2-3 minutes after I see a log message from an init function in class A. I've tried setting @Configurable(preconstruct = true, autowire=Autowire.BY_NAME), but no luck. Any comments/suggestions?",
                "time": "2020-01-14 22:38:49",
                "index": 0,
                "user": "aghag10"
            },
            {
                "id": "5e1ef2a5f72ed51fb4d4b65b",
                "text": "@aghag10 1) try to instantiate your class A by Spring itself. 2) don't use `@Autowire` on property `private ClassB classB`, turn it out to ClassA's constructor param.",
                "time": "2020-01-15 11:08:21",
                "index": 2,
                "user": "bvn13"
            },
            {
                "id": "5e1f3c45be66165ecbd58cab",
                "text": "> Hello! I'm seeing some issues with a class (class A) marked with Configurable annotation autowiring another class. Class A is being manually instantiated by Class X that's not Spring managed. Class A is autowiring class B. There is a delay in the instantiation order of Class A and class B. As a result, we end up hitting an NPE in class A, when it tries to invoke a method in class B. I tried debugging the issue to see in what order the 2 classes are being instantiated. I'm seeing two issues here -  1) post construct method in class A is never called 2) post construct method in class B is being called 2-3 minutes after I see a log message from an init function in class A. I've tried setting @Configurable(preconstruct = true, autowire=Autowire.BY_NAME), but no luck. Any comments/suggestions?\n\n> @aghag10 1) try to instantiate your class A by Spring itself. 2) don't use `@Autowire` on property `private ClassB classB`, turn it out to ClassA's constructor param.\n\n\n@bvn13 1) I can't make class A spring managed since class X that's instantiating class A can not be made Spring managed. 2) I don't follow. If that's the case, class B won't be autowired anymore?\n\n\n",
                "time": "2020-01-15 16:22:29",
                "index": 20,
                "user": "aghag10"
            },
            {
                "id": "5e1f4382df9e137d58ebc770",
                "text": "> > Hello! I'm seeing some issues with a class (class A) marked with Configurable annotation autowiring another class. Class A is being manually instantiated by Class X that's not Spring managed. Class A is autowiring class B. There is a delay in the instantiation order of Class A and class B. As a result, we end up hitting an NPE in class A, when it tries to invoke a method in class B. I tried debugging the issue to see in what order the 2 classes are being instantiated. I'm seeing two issues here -  1) post construct method in class A is never called 2) post construct method in class B is being called 2-3 minutes after I see a log message from an init function in class A. I've tried setting @Configurable(preconstruct = true, autowire=Autowire.BY_NAME), but no luck. Any comments/suggestions?\n> \n> > @aghag10 1) try to instantiate your class A by Spring itself. 2) don't use `@Autowire` on property `private ClassB classB`, turn it out to ClassA's constructor param.\n> \n> \n> @bvn13 1) I can't make class A spring managed since class X that's instantiating class A can not be made Spring managed. 2) I don't follow. If that's the case, class B won't be autowired anymore?\n> \n> \n> \n\n1) I got it. 2) This way - yes. But I've found an example of how to get spring bean from outside of spring-managed zone https://confluence.jaytaala.com/display/TKB/Super+simple+approach+to+accessing+Spring+beans+from+non-Spring+managed+classes+and+POJOs",
                "time": "2020-01-15 16:53:22",
                "index": 21,
                "user": "bvn13"
            },
            {
                "id": "5e20a18f5b81ab262e3932a7",
                "text": "@bvn13 Thanks. I'll give that a shot. ",
                "time": "2020-01-16 17:46:55",
                "index": 54,
                "user": "aghag10"
            }
        ]
    },
    {
        "id": 767,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e1b16f474fc9155e8569cbf",
                "text": "how we can go to the redirect page which is redirecting by the controller in reactjs frontend",
                "time": "2020-01-12 12:54:12",
                "index": 0,
                "user": "Su-s"
            },
            {
                "id": "5e1b171ca8aa5166ce22617f",
                "text": "\t@GetMapping(\"/admin-login\")\n\tpublic void adminLogin(HttpServletResponse response) {\n\t\ttry {\n\t\t\tString url = AUTH_URL + \"?\" + \"response_type=code\" + \"&\" + \"client_id=\" + CLIENT_ID + \"&\" + \"redirect_uri=\"\n\t\t\t\t\t+ REDIRECT_URI + \"&\" + \"scope=\" + SCOPE + \"&\" + \"state=\" + UUID_;\n\t\t\tresponse.sendRedirect(url);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}",
                "time": "2020-01-12 12:54:52",
                "index": 1,
                "user": "Su-s"
            },
            {
                "id": "5e1b17236b6c832602b0ffe4",
                "text": "here's my controller",
                "time": "2020-01-12 12:54:59",
                "index": 2,
                "user": "Su-s"
            },
            {
                "id": "5e1b175e43c3b62d79e08bb2",
                "text": "you could just send http response and based on that in front end you can choose to redirect or stay in the same page",
                "time": "2020-01-12 12:55:58",
                "index": 3,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e1b17896b6c832602b0ffe6",
                "text": " adminLogin = ()=> {\n  axios(/adminLogin, {\n    method: \"GET\",\n    header: {\n      Accept: \"application/json\"\n    }\n  })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.log(error);\n      handleError(error);\n    });\n",
                "time": "2020-01-12 12:56:41",
                "index": 4,
                "user": "Su-s"
            },
            {
                "id": "5e1b1794e1b4b84779a5067e",
                "text": "this is the frontend part",
                "time": "2020-01-12 12:56:52",
                "index": 5,
                "user": "Su-s"
            },
            {
                "id": "5e1b17adb990d50d819d4583",
                "text": "and admin-login should be post method which accepts username and password in the body",
                "time": "2020-01-12 12:57:17",
                "index": 6,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e1b17c96f604152992a007a",
                "text": "and you would authenticate and send a sessionID or JWT token as response",
                "time": "2020-01-12 12:57:45",
                "index": 7,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e1b17cc1a3e420fa32c6e90",
                "text": "i didnt get that",
                "time": "2020-01-12 12:57:48",
                "index": 8,
                "user": "Su-s"
            },
            {
                "id": "5e1b17dea859c14fa1d1bb45",
                "text": "or 401 if authentication error",
                "time": "2020-01-12 12:58:06",
                "index": 9,
                "user": "a-c-sreedhar-reddy"
            },
            {
                "id": "5e1b17f7cdd5500b08eeb348",
                "text": "here im getting a cors error in frontend",
                "time": "2020-01-12 12:58:31",
                "index": 10,
                "user": "Su-s"
            }
        ]
    },
    {
        "id": 768,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd20975271506518d6c9029",
                "text": "Hi Boot team, I have a question about Filters. Is it okay to create a Filter in SpringBoot and assign ORDERED.HIGHEST_PRECEDENCE to it? Would it break an existing default SpringBoot filters who have HIGHEST_PRECEDENCE assigned ?",
                "time": "2018-10-25 18:20:37",
                "index": 0,
                "user": "dhaval24"
            },
            {
                "id": "5bd20e3f64cfc273f924ce58",
                "text": "@dhaval24 it depends if the filter is reading the body, or wrapping the request; we've got a section on that in the reference documentation; https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-embedded-container-servlets-filters-listeners",
                "time": "2018-10-25 18:41:03",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5bd20e5a64cfc273f924cec5",
                "text": "I have a filter to capture the response code",
                "time": "2018-10-25 18:41:30",
                "index": 2,
                "user": "dhaval24"
            },
            {
                "id": "5bd20e6e384492366199384b",
                "text": "@bclozel if I place it even with HIGHEST_PRIORITY+2 than I don't get 500 captured",
                "time": "2018-10-25 18:41:50",
                "index": 3,
                "user": "dhaval24"
            },
            {
                "id": "5bd20f07c08b8b306770a5dc",
                "text": "@dhaval24 you've got to make sure that this filter is being called in the first place; there might be a registration issue. Or maybe it's not mapped properly. If your filter doesn't read the request body nor wraps the request, and it's just about collecting the response status, the order should not really matter. We're doing just that with the metrics filter but we're ordering it as late as possible for timing measurements purposes",
                "time": "2018-10-25 18:44:23",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5bd20f93ef4afc4f28cf0f5d",
                "text": "@bclozel https://github.com/Microsoft/ApplicationInsights-Java/blob/a8a971cc03c84cca9a2e9d01bb1a63b38614f348/web/src/main/java/com/microsoft/applicationinsights/web/internal/WebRequestTrackingFilter.java",
                "time": "2018-10-25 18:46:43",
                "index": 5,
                "user": "dhaval24"
            },
            {
                "id": "5bd20ffe1c100a4f29e2d665",
                "text": "here  is my filter. ",
                "time": "2018-10-25 18:48:30",
                "index": 6,
                "user": "dhaval24"
            },
            {
                "id": "5bd210b382893a2f3b3c234d",
                "text": "The filter does read the headers though from the Request",
                "time": "2018-10-25 18:51:31",
                "index": 7,
                "user": "dhaval24"
            },
            {
                "id": "5bd213c2069fca52a59324f3",
                "text": "It's hard to guess what's happening here. Is that 500 error handled by Spring Boot or the servlet container?",
                "time": "2018-10-25 19:04:34",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5bd213d4ab17df2631ed2af8",
                "text": "Did you register your filter for error dispatch as well?",
                "time": "2018-10-25 19:04:52",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5bd2140c6e5a401c2dccfdc1",
                "text": "Is your filter being called for those errors or is it not executed at all?",
                "time": "2018-10-25 19:05:48",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5bd21d876e5a401c2dcd3b60",
                "text": "https://github.com/Microsoft/ApplicationInsights-Java/blob/a8a971cc03c84cca9a2e9d01bb1a63b38614f348/azure-application-insights-spring-boot-starter/src/main/java/com/microsoft/applicationinsights/autoconfigure/ApplicationInsightsWebMvcAutoConfiguration.java#L68",
                "time": "2018-10-25 19:46:15",
                "index": 11,
                "user": "dhaval24"
            },
            {
                "id": "5bd21d90600c5f6423092963",
                "text": "This part of the starter registers the filter. ",
                "time": "2018-10-25 19:46:24",
                "index": 12,
                "user": "dhaval24"
            },
            {
                "id": "5bd21d97c08b8b306771022c",
                "text": "in the SpringBoot application via autoconfig",
                "time": "2018-10-25 19:46:31",
                "index": 13,
                "user": "dhaval24"
            }
        ]
    },
    {
        "id": 769,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d1b7cb4be7a466644558e85",
                "text": "Hi. What is the default behavior of spring activemq when randomize property is set to true ? I use JmsPoolConnectionFactory",
                "time": "2019-07-02 15:48:04",
                "index": 0,
                "user": "chsi13"
            },
            {
                "id": "5d1b7cdbe0cad9675090fdc8",
                "text": "So on an amq cluster ",
                "time": "2019-07-02 15:48:43",
                "index": 1,
                "user": "chsi13"
            },
            {
                "id": "5d1b841c07bf5635af130969",
                "text": "@chsi13 I assume you're talking about the failover transport's randomize property? Spring doesn't deal with ActiveMQ at that level so ActiveMQ will behave as it normally would with randomize set to true",
                "time": "2019-07-02 16:19:40",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d1b98ee5ce02535b00c9e0d",
                "text": "@wilkinsona Indeed. Ok so I will check the amq config. Thanks a lot",
                "time": "2019-07-02 17:48:30",
                "index": 5,
                "user": "chsi13"
            },
            {
                "id": "5d1c4a5f0ee3c30b1d777556",
                "text": "@wilkinsona  Hi Andy.. when you said \" Spring doesn't deal with ActiveMQ at that level \" ok but if I have 2 URIS ```failover(tcp://a:61616, tcp:// b:61616)``` Spring will choose one on them ? ",
                "time": "2019-07-03 06:25:35",
                "index": 13,
                "user": "chsi13"
            },
            {
                "id": "5d1c891c0ee3c30b1d79a188",
                "text": "@wilkinsona  Ok seems it is the entire responsibility of FailoverTransport object coming from AMQ lib.",
                "time": "2019-07-03 10:53:16",
                "index": 17,
                "user": "chsi13"
            },
            {
                "id": "5d1c8c48cd7934667dcd853f",
                "text": "My concern is this with randomize = true:  Sender A (jmsPoolConnectionFactory with 20 connections) et Consumer B (jmsPoolConnectionFactory with 20 connections). On Sender side 15/20 connections plugged to broker X. On consumer side 15/20 connections plugged on broker Y... So performance problem ? Too much  message production for lower message consumption only because connections are badly load balanced...? Am I wrong ?",
                "time": "2019-07-03 11:06:48",
                "index": 18,
                "user": "chsi13"
            }
        ]
    },
    {
        "id": 770,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bbf6241f659e677729ab943",
                "text": "Was looking at `AbstractErrorController` and consequently `BasicErrorController`. I noticed the `isIncludeStackTrace` has an unused method parameter, `MediaType produces`. See [here](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController.java#L111).  I'm not entirely sure of its purpose from looking at the git history.",
                "time": "2018-10-11 14:46:25",
                "index": 0,
                "user": "drumonii"
            },
            {
                "id": "5bc04988bbdc0b250529bc41",
                "text": "@drumonii probably for extension purposes, but I'm not totally sure",
                "time": "2018-10-12 07:13:12",
                "index": 9,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 771,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd3f2265eb2e813db5263ff",
                "text": "Hi, when writing unit test, what's the difference between @SpringJUnitConfig(MyTestClass.class) and @SpringBootTest(MyTestClass.class) and which should be used ?\n2nd question about properties, I'm using @TestPropertySource(properties = { \"my-prop = value\" }) and @EnableConfigurationProperties(ProClass.class)\nIs this the correct way ?\nThanks",
                "time": "2019-11-19 13:46:14",
                "index": 0,
                "user": "Rajh"
            },
            {
                "id": "5dd3f3e8eeb63e1a83e01942",
                "text": "`@SpringBootTest` does autoconfiguration and web environment stuff",
                "time": "2019-11-19 13:53:44",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f40c50010612b2e85b4b",
                "text": "But here I'm talknig about unit test, wich means i'm only testing a single service with every dep mocked by mockito",
                "time": "2019-11-19 13:54:20",
                "index": 2,
                "user": "Rajh"
            },
            {
                "id": "5dd3f417091dd14a0eeaaaaf",
                "text": "I should stick with @SpringJunitConfig then ?",
                "time": "2019-11-19 13:54:31",
                "index": 3,
                "user": "Rajh"
            },
            {
                "id": "5dd3f41c091dd14a0eeaaaf7",
                "text": "then you shouldn't use `@SpringBootTest`",
                "time": "2019-11-19 13:54:36",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f42468ad1c4a0ff500f1",
                "text": "it's for integration testing",
                "time": "2019-11-19 13:54:44",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f450fd6fe41fc0b19ab4",
                "text": "Okay fine, what about the properties stuff ? @EnableConfigurationProperties can be used on test classes or I should use something else ?",
                "time": "2019-11-19 13:55:28",
                "index": 6,
                "user": "Rajh"
            },
            {
                "id": "5dd3f4914adf071a845a0313",
                "text": "if you have config that requires configuration properties, the annotation should be on that",
                "time": "2019-11-19 13:56:33",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f4c635889012b137d628",
                "text": "Well the thing is I injected my properties into my services",
                "time": "2019-11-19 13:57:26",
                "index": 8,
                "user": "Rajh"
            },
            {
                "id": "5dd3f4e768ad1c4a0ff507e7",
                "text": "so they should probably have the annotation",
                "time": "2019-11-19 13:57:59",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f50cfd6fe41fc0b1a065",
                "text": "In my UnitTest i'm not loading the @Configuration class of the app but only the service. And I don't see the interest in mocking the properties class.\nThe properties are still loaded in a @Configuration class for the App",
                "time": "2019-11-19 13:58:36",
                "index": 10,
                "user": "Rajh"
            },
            {
                "id": "5dd3f54f35889012b137d8f9",
                "text": "Are you constructing the service, or is Spring doing it (with `@MockBean`s and such)?",
                "time": "2019-11-19 13:59:43",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f5936ba2347d2dc0f240",
                "text": "Spring is creating the service and im mocking via @MockBean",
                "time": "2019-11-19 14:00:50",
                "index": 12,
                "user": "Rajh"
            },
            {
                "id": "5dd3f5ab52b73c7cb2457063",
                "text": "so either `@MockBean` the properties too, or `@Bean` a real one",
                "time": "2019-11-19 14:01:15",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f5caadd5717a88381066",
                "text": "not sure why you'd want to involve Boot's properties binding in an otherwise Bootless test",
                "time": "2019-11-19 14:01:46",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f60dc26e8923c452e5f2",
                "text": "Well find it more convenient to have the properties injected than having to stub properties in a @BeforeEach method",
                "time": "2019-11-19 14:02:53",
                "index": 15,
                "user": "Rajh"
            },
            {
                "id": "5dd3f6376ba2347d2dc0f4dd",
                "text": "why would you have to do that?",
                "time": "2019-11-19 14:03:35",
                "index": 16,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f65beeb63e1a83e02bdb",
                "text": "or in other words, if you wanted different properties for each test, you'd still have to do that even if they used properties binding",
                "time": "2019-11-19 14:04:11",
                "index": 17,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f670ea7d147cb3a7b8ef",
                "text": "Thats true, but still I don't want different properties for each test",
                "time": "2019-11-19 14:04:32",
                "index": 18,
                "user": "Rajh"
            },
            {
                "id": "5dd3f68badd5717a8838180c",
                "text": "So why would you need a `@BeforeEach`?",
                "time": "2019-11-19 14:04:59",
                "index": 19,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f696eeb63e1a83e02ce4",
                "text": "To init globally the stub ?",
                "time": "2019-11-19 14:05:10",
                "index": 20,
                "user": "Rajh"
            },
            {
                "id": "5dd3f6a76ba2347d2dc0f821",
                "text": "Since I don't want different properties for each tests",
                "time": "2019-11-19 14:05:27",
                "index": 21,
                "user": "Rajh"
            },
            {
                "id": "5dd3f6b350010612b2e8700e",
                "text": "Maybe I'm missing knowledge here :)",
                "time": "2019-11-19 14:05:39",
                "index": 22,
                "user": "Rajh"
            },
            {
                "id": "5dd3f6f15eb2e813db528665",
                "text": "```\n@Bean\npublic MyProperties myProperties() {\n    return new MyProperties(\"foo\", \"bar\");\n}\n```\nor however the class is implemented",
                "time": "2019-11-19 14:06:41",
                "index": 23,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f7254adf071a845a14ae",
                "text": "This goes into a @Configuration static class ?",
                "time": "2019-11-19 14:07:33",
                "index": 24,
                "user": "Rajh"
            },
            {
                "id": "5dd3f737eeb63e1a83e03269",
                "text": "nested into the test ?",
                "time": "2019-11-19 14:07:51",
                "index": 25,
                "user": "Rajh"
            },
            {
                "id": "5dd3f76652b73c7cb24579e8",
                "text": "whatever the configuration is you've set with `@SpringJUnitConfig`",
                "time": "2019-11-19 14:08:38",
                "index": 26,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f784add5717a88381d8d",
                "text": "I'm not using @SpringBootTest as discussed earlier but  @SpringJunitConfig ",
                "time": "2019-11-19 14:09:08",
                "index": 27,
                "user": "Rajh"
            },
            {
                "id": "5dd3f792add5717a88381da7",
                "text": "And I'm not using a Configuration class but a service directly",
                "time": "2019-11-19 14:09:22",
                "index": 28,
                "user": "Rajh"
            },
            {
                "id": "5dd3f7ba52b73c7cb2457c3b",
                "text": "You mean you've imported the service class as your configuration?",
                "time": "2019-11-19 14:10:02",
                "index": 29,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f7e35eb2e813db528cb2",
                "text": "```\n@SpringJunitConfig(MyServiceImpl.class)\n@TestPropertySource(properties = {\n        \"application.resources-server.url = http://mock/{token}\"\n})\n@EnableConfigurationProperties(ApplicationProperties.class)\nclass MyServiceTest {\n    @Inject\n    private MyService myService;\n\n    @MockBean\n    private MyMockedService myMockedService;\n\n    @Test\n    void testFeature1() {}\n}\n```",
                "time": "2019-11-19 14:10:43",
                "index": 30,
                "user": "Rajh"
            },
            {
                "id": "5dd3f7f9ea7d147cb3a7c5da",
                "text": "yes, you have",
                "time": "2019-11-19 14:11:05",
                "index": 31,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f806eeb63e1a83e0398f",
                "text": "(How do you format code here ?)",
                "time": "2019-11-19 14:11:18",
                "index": 32,
                "user": "Rajh"
            },
            {
                "id": "5dd3f813fd6fe41fc0b1b8b4",
                "text": "more indents, or triple-backticks",
                "time": "2019-11-19 14:11:31",
                "index": 33,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f83a52b73c7cb24580cd",
                "text": "Thats how I'm unit testing my services",
                "time": "2019-11-19 14:12:10",
                "index": 34,
                "user": "Rajh"
            },
            {
                "id": "5dd3f8536ba2347d2dc103be",
                "text": "(completed with my properties)",
                "time": "2019-11-19 14:12:35",
                "index": 35,
                "user": "Rajh"
            },
            {
                "id": "5dd3f89668ad1c4a0ff524af",
                "text": "and it doesn't work?",
                "time": "2019-11-19 14:13:42",
                "index": 36,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f8a15eb2e813db52950e",
                "text": "It works I was just asking about best practices xD",
                "time": "2019-11-19 14:13:53",
                "index": 37,
                "user": "Rajh"
            },
            {
                "id": "5dd3f8b24adf071a845a23ec",
                "text": "The fact is that I was using @Import to add my classes and just saw it wasnt good",
                "time": "2019-11-19 14:14:10",
                "index": 39,
                "user": "Rajh"
            },
            {
                "id": "5dd3f9086ba2347d2dc10742",
                "text": "A nested `@Configuration` class lets you contain the `@Import`s and any extra `@Bean`s. Or you can start using the various Boot test annotations to find stuff automatically.",
                "time": "2019-11-19 14:15:36",
                "index": 40,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f918ea7d147cb3a7cf97",
                "text": "You may also find `MockRestServiceServer` useful if you didn't know about it already",
                "time": "2019-11-19 14:15:52",
                "index": 41,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f942ca778c1fbf304440",
                "text": "(and `@RestClientTest` will set one up)",
                "time": "2019-11-19 14:16:34",
                "index": 42,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f945e75b2d5a19ff41b9",
                "text": "Hmm",
                "time": "2019-11-19 14:16:37",
                "index": 43,
                "user": "Rajh"
            },
            {
                "id": "5dd3f94d68ad1c4a0ff5288e",
                "text": "Didnt know, i'll check it out",
                "time": "2019-11-19 14:16:45",
                "index": 44,
                "user": "Rajh"
            },
            {
                "id": "5dd3f962add5717a88382edc",
                "text": "just guessing from your property",
                "time": "2019-11-19 14:17:06",
                "index": 45,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f9646ba2347d2dc10ab9",
                "text": "I moved @Import classes directly into the @SpringJunitConfig ...",
                "time": "2019-11-19 14:17:08",
                "index": 46,
                "user": "Rajh"
            },
            {
                "id": "5dd3f9a54adf071a845a2b96",
                "text": "For RestTemplates i'm using nested @TestConfiguration which creates a mock restTemplate bean.\nAnd I need to add this new config class to the list of classes into the @SpringJunitConfig",
                "time": "2019-11-19 14:18:13",
                "index": 47,
                "user": "Rajh"
            },
            {
                "id": "5dd3f9bf35889012b137fd71",
                "text": "at the end of the day all you have to do is to get a bean declaration in somewhere and it'll probably do the right thing",
                "time": "2019-11-19 14:18:39",
                "index": 48,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3f9c15eb2e813db529c8f",
                "text": "(Shouldn't it be auto scann ? look at example in other project and it seems the Config are auto scanned )",
                "time": "2019-11-19 14:18:41",
                "index": 49,
                "user": "Rajh"
            },
            {
                "id": "5dd3f9fd68ad1c4a0ff52fbb",
                "text": "I don't think `@TestConfiguration` does anything useful if you're not using `@SpringBootTest`",
                "time": "2019-11-19 14:19:41",
                "index": 50,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fa2a68ad1c4a0ff531c9",
                "text": "Damn I'm mixing springboot and spring stuff in my head :s",
                "time": "2019-11-19 14:20:26",
                "index": 51,
                "user": "Rajh"
            },
            {
                "id": "5dd3fa2ec26e8923c4530904",
                "text": "but `@RestClientTest` does similarly set up a mock `RestTemplate` (actually an interceptor, to preserve any existing template configuration), with fancy fluent assertions",
                "time": "2019-11-19 14:20:30",
                "index": 52,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fa355eb2e813db529f66",
                "text": "still having @Configuration is not auto scanned",
                "time": "2019-11-19 14:20:37",
                "index": 53,
                "user": "Rajh"
            },
            {
                "id": "5dd3fa466ba2347d2dc1108c",
                "text": "https://github.com/spring-projects/spring-kafka/blob/9766e42e6e22037534b3c3746973e54d0b9059fe/spring-kafka/src/test/java/org/springframework/kafka/annotation/StatefulRetryTests.java",
                "time": "2019-11-19 14:20:54",
                "index": 54,
                "user": "Rajh"
            },
            {
                "id": "5dd3fa4cadd5717a883836b0",
                "text": "Here the @Configuration nested seems auto scanned",
                "time": "2019-11-19 14:21:00",
                "index": 55,
                "user": "Rajh"
            },
            {
                "id": "5dd3fa5efd6fe41fc0b1cb30",
                "text": "still this is not working for me, maybe because i'm specifying test classes in @SpringJunitConfig ?",
                "time": "2019-11-19 14:21:18",
                "index": 56,
                "user": "Rajh"
            },
            {
                "id": "5dd3fa7c92a84f79fe968691",
                "text": "auto-scanning wouldn't be on by default",
                "time": "2019-11-19 14:21:48",
                "index": 57,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fabc091dd14a0eead5be",
                "text": "What about the example I linked ?",
                "time": "2019-11-19 14:22:52",
                "index": 58,
                "user": "Rajh"
            },
            {
                "id": "5dd3fae7add5717a88383bfc",
                "text": "Maybe `@EnableKafka` turns something on",
                "time": "2019-11-19 14:23:35",
                "index": 59,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fb08eeb63e1a83e050ac",
                "text": "For the @EnableKafka to be found it means the class has been scanned ",
                "time": "2019-11-19 14:24:08",
                "index": 60,
                "user": "Rajh"
            },
            {
                "id": "5dd3fb5935889012b13808c1",
                "text": "Oh you mean how it didn't do `@SpringJUnitConfig(StatefulRetryTests.Config.class)`. That's not auto-scanning. It should be sufficient to be `@Configuration public static` (not `@TestConfiguration`).",
                "time": "2019-11-19 14:25:29",
                "index": 61,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fb87add5717a88383f12",
                "text": "Doesnt seems to work",
                "time": "2019-11-19 14:26:15",
                "index": 62,
                "user": "Rajh"
            },
            {
                "id": "5dd3fb8c6ba2347d2dc1176a",
                "text": "Though the explicit version isn't really a burden",
                "time": "2019-11-19 14:26:20",
                "index": 63,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fb93eeb63e1a83e053d5",
                "text": ":)",
                "time": "2019-11-19 14:26:27",
                "index": 64,
                "user": "Rajh"
            },
            {
                "id": "5dd3fba8e75b2d5a19ff53bd",
                "text": "Maybe the `@EmbeddedKafka` does something",
                "time": "2019-11-19 14:26:48",
                "index": 65,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fbe350010612b2e89ffd",
                "text": "Ok thanks for all the info, i'll do some modifications and try out this mock rest server",
                "time": "2019-11-19 14:27:47",
                "index": 66,
                "user": "Rajh"
            },
            {
                "id": "5dd3fd6552b73c7cb245a929",
                "text": "I don't ever use `@SpringJunitConfig`. I'll use a Boot annotation, or not involve Spring at all.",
                "time": "2019-11-19 14:34:13",
                "index": 67,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3fe0bea7d147cb3a7f4e5",
                "text": "But what if you don't need all the auto configuration stuff ?",
                "time": "2019-11-19 14:36:59",
                "index": 68,
                "user": "Rajh"
            },
            {
                "id": "5dd3fe21e75b2d5a19ff64c8",
                "text": "That was my first question, should I use @SpringJunitConfig or @SpringBootTest for UNIT testing my services",
                "time": "2019-11-19 14:37:21",
                "index": 69,
                "user": "Rajh"
            },
            {
                "id": "5dd3ff4dc26e8923c4533336",
                "text": "There are other boot annotations (like `@RestClientTest`) that only configure specific things",
                "time": "2019-11-19 14:42:21",
                "index": 70,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3ff7f68ad1c4a0ff556ef",
                "text": "If it's a service that uses a `RestTemplate`, then `@RestClientTest` is probably the one to use. If it uses JPA then `@DataJpaTest`, etc.",
                "time": "2019-11-19 14:43:11",
                "index": 71,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3ff9552b73c7cb245b53c",
                "text": "If its another service ?",
                "time": "2019-11-19 14:43:33",
                "index": 72,
                "user": "Rajh"
            },
            {
                "id": "5dd3ffa1eeb63e1a83e06d5c",
                "text": "then `@MockBean` that service, as you have",
                "time": "2019-11-19 14:43:45",
                "index": 73,
                "user": "OrangeDog"
            },
            {
                "id": "5dd3ffaf4adf071a845a5461",
                "text": "Ok but why using @SpringBootTest",
                "time": "2019-11-19 14:43:59",
                "index": 74,
                "user": "Rajh"
            },
            {
                "id": "5dd3ffe992a84f79fe96b490",
                "text": "What does it give more than @SpringJunitConfig and those things are they really usefull for an UnitTest or will just slow down my tests ?",
                "time": "2019-11-19 14:44:57",
                "index": 75,
                "user": "Rajh"
            },
            {
                "id": "5dd418d9ca778c1fbf314287",
                "text": "No, there's no reason to use `@SpringBootTest` for this",
                "time": "2019-11-19 16:31:21",
                "index": 76,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 772,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c701661c82c68509e1b8866",
                "text": "Is it possible to map a `@ConfigurationProperties` class field to a different property name?",
                "time": "2019-02-22 15:33:53",
                "index": 0,
                "user": "lppedd"
            },
            {
                "id": "5c70fc0b1f1463042107dfe9",
                "text": "@lppedd no. `@ConfigurationProperties` are meant to be an accurate representation of the data structure so mapping them is not supported on purpose.",
                "time": "2019-02-23 07:53:47",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 773,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e236f88c7647778a5e7bbb6",
                "text": "I'm in a situation where I need to validate a hmac based on http headers and the body. From what I understand a WebFilter should not read the body unless it intends to end the chain. Is there any way around this?",
                "time": "2020-01-18 20:50:16",
                "index": 0,
                "user": "magnusp"
            },
            {
                "id": "5e2371e80289c83ba2beb523",
                "text": "And as I wrote that google gave me a hit on using ServerWebExchangeDecorator + ServerHttpRequestDecorator. I think overriding getBody and using Flux#cache should be sufficient",
                "time": "2020-01-18 21:00:24",
                "index": 1,
                "user": "magnusp"
            },
            {
                "id": "5e23748e8e073f465f14db94",
                "text": ".. or not. Bah!",
                "time": "2020-01-18 21:11:42",
                "index": 2,
                "user": "magnusp"
            },
            {
                "id": "5e24aae720d0f078a6a7538e",
                "text": "Yeah, I've implemented a hmac validation filter in webflux. Have you taken a look at HandlerFilterFunction?  ",
                "time": "2020-01-19 19:15:51",
                "index": 3,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5e24ad0bad195a0f6738356f",
                "text": "@michaelmcfadyen i'm down the path of using the @RestController annotation. I've gotten as far as using a request decorator to hook into the getBody flux and calculating the hmac once it's read. Problem now is that I can't find a good way to emit an error. I emit an ServerWebInputException but this is logged as an error by the invocation handler around my controller - i'm having the body injected as a parameter and it is at this point it is read.",
                "time": "2020-01-19 19:24:59",
                "index": 4,
                "user": "magnusp"
            },
            {
                "id": "5e24ae1d5b81ab262e54d6c0",
                "text": "wouldn't happen to have that filter out in the wild so that I can take a look at it? :)",
                "time": "2020-01-19 19:29:33",
                "index": 5,
                "user": "magnusp"
            },
            {
                "id": "5e24b054ad195a0f67384e10",
                "text": "https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java#L171-L175 caught by that",
                "time": "2020-01-19 19:39:00",
                "index": 6,
                "user": "magnusp"
            },
            {
                "id": "5e24d53b000f4978992667e2",
                "text": "sorry, not in a position to share the code. What I can say is that with a HandlerFilterFunction you get access to ServerRequest which has methods for extracting the body. HandlerFilterFunction need to be applied in the router though so I don't believe they are compatible with using annotation based webflux endpoints",
                "time": "2020-01-19 22:16:27",
                "index": 7,
                "user": "michaelmcfadyen"
            },
            {
                "id": "5e24d5fc8e073f465f1e5a40",
                "text": "No worries. I worked around it by not having the body extracted as part of creating the parameters for the controller method. Another approach could be to have the requestbody @Valid and create a validator for it. But problem solved any way :)",
                "time": "2020-01-19 22:19:40",
                "index": 8,
                "user": "magnusp"
            }
        ]
    },
    {
        "id": 774,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c90ab9949fdaa0d81dc011e",
                "text": "Goodmorning!\nIm not sure if this is the right place to ask, but here we go:\nIm working on a Java app with Spring boot, which connects to a different Rest API. Normally this all goes well, but lately our app has been hanging in this stage:\n`2019-03-19 08:04:35,677 DEBUG pool-1-thread-1 org.springframework.core.log.CompositeLog Accept=[text/plain, application/json, application/*+json, */*]  \n2019-03-19 08:04:43,516 DEBUG pool-1-thread-1 org.springframework.core.log.CompositeLog Response 200 OK  \n2019-03-19 08:04:43,516 DEBUG pool-1-thread-1 org.springframework.core.log.CompositeLog Reading to [java.lang.String] as \"application/json;charset=UTF-8\" `\n\nWe are using the 'org.springframework.boot.web.client.RestTemplateBuilder' to create a RestTemplate, which does a GetForObject on the url that we add.\nAny ideas on what could cause it to hang here? (we do have a timeout of 2 minutes in place, but since it receives a response, the connect/read timeout doesnt come into play)\nIf i should ask this somewhere else, or if you need more information, please let me know.",
                "time": "2019-03-19 08:43:05",
                "index": 0,
                "user": "Jonathan1"
            },
            {
                "id": "5c90af996a3d2e230deb81d5",
                "text": "@Jonathan1 if the read timeout is set to 2min, this might be consistent. Maybe the remote server is not sending the full response and the client is waiting to read more of the response (up to 2min)",
                "time": "2019-03-19 09:00:09",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5c90b283fcaf7b5f73db5d48",
                "text": "If i understand you correctly, it should not wait for a next response for longer than 2 minutes right? But behaviour that we see is that it hangs for days.",
                "time": "2019-03-19 09:12:35",
                "index": 2,
                "user": "Jonathan1"
            },
            {
                "id": "5c90b53cdfc69a1454bb6189",
                "text": "@bclozel forgot to tag you",
                "time": "2019-03-19 09:24:12",
                "index": 3,
                "user": "Jonathan1"
            },
            {
                "id": "5c90b577fa5b721a1fb376ae",
                "text": "I don't understand why this hangs for days. Are you sure it's hanging on that operation precisely? I doubt the connection stays opened for days, so the processing might get stuck somewhere else",
                "time": "2019-03-19 09:25:11",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5c90b660fa5b721a1fb37c72",
                "text": "@bclozel Well the debug logging was added today, so i cannot say for sure that it gets stuck on this exact line for days, but it gets stuck there for at least an hour, which is longer than i would expect could happen. But since its parsing the response, im not sure if the connection would still be open",
                "time": "2019-03-19 09:29:04",
                "index": 5,
                "user": "Jonathan1"
            },
            {
                "id": "5c90b6743dd817114916136b",
                "text": "@bclozel i work together with @Jonathan1 on this and we enabled debug logging for our own application as well for spring. When the response is correctly processed  a debug log statement is generated. But it doesn't get that far",
                "time": "2019-03-19 09:29:24",
                "index": 6,
                "user": "keigezellig"
            },
            {
                "id": "5c90b72e52c7a91455bc6546",
                "text": "the presence or absence of this debug line doesn't say what the server is \"stuck\" on. Getting some thread dump information (through jstack or the threaddump actuator endpoint) might help here",
                "time": "2019-03-19 09:32:30",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c90b7473dd81711491617c4",
                "text": "@bclozel could it be the case that those responses are too big for the GetForObject call?",
                "time": "2019-03-19 09:32:55",
                "index": 8,
                "user": "keigezellig"
            },
            {
                "id": "5c90b796a21ce51a20859859",
                "text": "in that case, the server would throw an out of memory or would GC a lot, but I don't think it would be stuck for days",
                "time": "2019-03-19 09:34:14",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5c9245ad3dd817114920dbf6",
                "text": "@bclozel We talked yesterday about getting a thread dump to see where the app hangs. \nSearched for Blocking connections, but cant find one. We do see some WAITING (parking) threads, but that shouldnt be a problem i suppose.\nIs it usefull to drop the threaddump in here? (its quite big, and doesnt fit in one message, more like 5 to 10)\n",
                "time": "2019-03-20 13:52:45",
                "index": 80,
                "user": "Jonathan1"
            },
            {
                "id": "5c93a5cc8126720abc1d0b90",
                "text": "@bclozel We finally figured out what happened; The data we were retreiving resulted in an OOM error, but since we were running threaded, the main process kept running and no logging was generated. Took us a while to find it. Anyways, thanks for thinking with us",
                "time": "2019-03-21 14:55:08",
                "index": 96,
                "user": "Jonathan1"
            },
            {
                "id": "5c93abe652c7a91455d0cf56",
                "text": "@Jonathan1 thanks for letting me know!",
                "time": "2019-03-21 15:21:10",
                "index": 98,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 775,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5efb2b37bb149531eddd6128",
                "text": "Hi @wilkinsona my Spring boot project is using spring-cloud-netflix-eureka-client . It is also not able to pick up custom graceful shutdown period configured by me. It defaults to 30s. Is the reason for same is as mentioned in #22014 gitHub issue ?",
                "time": "2020-06-30 12:08:23",
                "index": 0,
                "user": "SauriBabu"
            },
            {
                "id": "5efb326be0e5673398e36af8",
                "text": "Ohh. I have read your comment and able to fix this issue.  Have done",
                "time": "2020-06-30 12:39:07",
                "index": 1,
                "user": "SauriBabu"
            },
            {
                "id": "5efb32c1b8152d348471c87e",
                "text": "Context.getBean(DefaultLifecycleProcessor.class).settimeoutPerShutdownPhase(12345);",
                "time": "2020-06-30 12:40:33",
                "index": 2,
                "user": "SauriBabu"
            },
            {
                "id": "5efb4259613d3b3394195d67",
                "text": "@SauriBabu :thumbsup: #22014 will be the cause. That's a good workaround till 2.3.2 is released.",
                "time": "2020-06-30 13:47:05",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 776,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5d1f8408dd0b530e40a33afa",
                "text": "Apologies if it's not the correct channel.\nCan't download generated project from spring initializer(https://start.spring.io/). Is there any issue or just me doing something wrong?",
                "time": "2019-07-05 17:08:24",
                "index": 0,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f84cfa0a38158f1a95e9f",
                "text": "Seems working fine with firefox. But can't download on google chrome (Version 73.0.3683.103)",
                "time": "2019-07-05 17:11:43",
                "index": 1,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f8e2f923dae65d5280fdb",
                "text": "@sarowar-cse I'm using Chrome 75, and I'm not seeing any problem. Could you share a bit more?\nAre you seeing a JavaScript error in the browser developer console?",
                "time": "2019-07-05 17:51:43",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5d1f92a3bf25f013e7cba668",
                "text": "@bclozel \nNo js error in console. I was also expecting that, but none. :(\nAlso getting http200 response for _https://start.spring.io/starter.zip?type=maven-project&language=java..._\nJust getting the notification *Your project has been downloaded with success.*\n![on download click](https://imgur.com/Iv1q44k)",
                "time": "2019-07-05 18:10:43",
                "index": 3,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f92f2a0a38158f1a9d0c9",
                "text": "Sorry, let me fix the image link",
                "time": "2019-07-05 18:12:02",
                "index": 4,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f935b5e957c4d48daaf55",
                "text": "https://imgur.com/Iv1q44k",
                "time": "2019-07-05 18:13:47",
                "index": 5,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f93bfc5f3c329aeef8b66",
                "text": "I'm probably missing something. The screenshot here shows that you're exploring the project, not downloading it. So that's expected to see the generated project being downloaded and that window being displayed",
                "time": "2019-07-05 18:15:27",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5d1f93d15821f065d44b3d2b",
                "text": "Did you click on the download button for a specific file in the project explorer?",
                "time": "2019-07-05 18:15:45",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5d1f947d5821f065d44b427e",
                "text": "Yeah, clicked download zip button. Generate project doesn't download either. :(",
                "time": "2019-07-05 18:18:37",
                "index": 8,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f94bab5d39c1bfefa5b2d",
                "text": "And shows that download successful notification on click but doesn't download the file.",
                "time": "2019-07-05 18:19:38",
                "index": 9,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f9566bf25f013e7cbb84a",
                "text": "do you happen to have a popup blocker extension?",
                "time": "2019-07-05 18:22:30",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5d1f9577b5d39c1bfefa611c",
                "text": "does the same thing happen in an incognito mode window?",
                "time": "2019-07-05 18:22:47",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5d1f9634bf25f013e7cbbd85",
                "text": "Allowed popup and redirection and disabled ad blocker too!",
                "time": "2019-07-05 18:25:56",
                "index": 12,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f9644923dae65d5284ea6",
                "text": "Yeah already checked in incognito",
                "time": "2019-07-05 18:26:12",
                "index": 13,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f965c5e957c4d48dac64f",
                "text": "Maybe it's only me! :(",
                "time": "2019-07-05 18:26:36",
                "index": 14,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f973a076ffa65b05484c9",
                "text": "Can't think of anything else. You can always create an issue on the dedicated tracker (https://github.com/spring-io/start.spring.io/issues), but without another clue I don't know if we can pinpoint the problem.",
                "time": "2019-07-05 18:30:18",
                "index": 15,
                "user": "bclozel"
            },
            {
                "id": "5d1f97545e957c4d48dacd1a",
                "text": "I'm checking some of our dependencies to see if there are known issues",
                "time": "2019-07-05 18:30:44",
                "index": 16,
                "user": "bclozel"
            },
            {
                "id": "5d1f9848a0a38158f1a9f741",
                "text": "Thank you very much for looking into it. Hope you can leave until there is a second report.",
                "time": "2019-07-05 18:34:48",
                "index": 17,
                "user": "sarowar-cse"
            },
            {
                "id": "5d1f98ee5821f065d44b69c9",
                "text": "I was originally asking because I read a report saying google is going to block download from non-secure resources from secure sites on chrome. I thought something related to that(not sure if change is already released or not).\nBut seems that's not the case as download source is secure too!",
                "time": "2019-07-05 18:37:34",
                "index": 18,
                "user": "sarowar-cse"
            }
        ]
    },
    {
        "id": 777,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ee0ed897a7f8d2d63287e6a",
                "text": "How to use ConnectionFactoryBuilder.of in place of ConnectionFactoryBuilder.create() after upgrade springboot 2.3.0",
                "time": "2020-06-10 14:26:17",
                "index": 0,
                "user": "Esakkimuthu991"
            },
            {
                "id": "5ee10426013105125a28a10a",
                "text": "I am assuming you\u2019re talking about the R2DBC support? Can you share why are you calling that directly? Perhaps there\u2019s something we can improve there",
                "time": "2020-06-10 16:02:46",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ee1ae6e49260560aa5388a6",
                "text": "yes. I am just trying to add custom metric listener to the connectionfactory to monitor the r2dbc related queries executed. here is my code.",
                "time": "2020-06-11 04:09:18",
                "index": 2,
                "user": "Esakkimuthu991"
            },
            {
                "id": "5ee1ae75035dfa1261131dd8",
                "text": "@Bean(destroyMethod = \"dispose\")\n    ConnectionPool connectionFactory(R2dbcProperties properties,\n                                     List<ConnectionFactoryOptionsBuilderCustomizer> customizers) {\n        ConnectionFactory connectionFactory = ProxyConnectionFactory.builder(ConnectionFactoryBuilder\n                .create(properties).customize(customizers).build()).listener(dbMetricsExecutionListener).build();\n        R2dbcProperties.Pool pool = properties.getPool();\n        ConnectionPoolConfiguration.Builder builder = ConnectionPoolConfiguration.builder(connectionFactory)\n                .maxSize(pool.getMaxSize()).initialSize(pool.getInitialSize()).maxIdleTime(pool.getMaxIdleTime());\n        if (StringUtils.hasText(pool.getValidationQuery())) {\n            builder.validationQuery(pool.getValidationQuery());\n        }\n        return new ConnectionPool(builder.build());\n    }",
                "time": "2020-06-11 04:09:25",
                "index": 3,
                "user": "Esakkimuthu991"
            },
            {
                "id": "5ee1e819ef5c1c28f017b23c",
                "text": "@Esakkimuthu991 alright that\u2019s interesting. I don\u2019t understand what the problem with the new API though",
                "time": "2020-06-11 08:15:21",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5ee1e82b24a3382d5d5d99d1",
                "text": "You\u2019d be interested by this too https://github.com/spring-projects/spring-boot/pull/21689",
                "time": "2020-06-11 08:15:39",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ee225507b6da9126a8b32dc",
                "text": "Hi @snicoll Just want to confirm. Is there support for r2dbc-proxy is available in springboot 2.3.0 right?",
                "time": "2020-06-11 12:36:32",
                "index": 22,
                "user": "Esakkimuthu991"
            }
        ]
    },
    {
        "id": 778,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d09b3002313502d3877dde8",
                "text": "@wilkinsona You mentioned before to create a configuration where the `BeanDefinitionRegistryPostProcessor` would be declared as a `@Bean`, being a `static` class. What's the significance of the class being static when declaring beans in general and specifically in this case. It seems to work without declaring it as `static`.",
                "time": "2019-06-19 03:58:56",
                "index": 0,
                "user": "ychaikin"
            },
            {
                "id": "5d09e3602313502d3879606e",
                "text": "@ychaikin you should declare it static to let the application context create the bean without having to instantiate the configuration class. If the bean method is static it is created very early on which is what you want for such bean. The fact it works without it is thanks to how the application context deals with order and its algorithm to tune initialization order. But a change in your configuration can break that and you can help us do the right thing by flagging your BPP `static`. So please do that.",
                "time": "2019-06-19 07:25:20",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5d0a6fe18e050f62aa576b50",
                "text": "@snicoll I am not following the logic. You are still going to have to create the \"outer\" configuration class, aren't you? For example, I am using this as the meta annotation, as suggested by @wilkinsona : `@ImportAutoConfiguration(classes = GuardPostProcessor.class)` So, `GuardPostProcessor` is still something that Spring is going to have to instantiate, isn't it? In it, I can place another `@Configuration` that is my `BeanDefinitionRegistryPostProcessor`. So, how is this set up a win in the way you are describing? The wiring of all that will still only happen after Spring instantiates the outer `GuardPostProcessor` configuration, isn't it?",
                "time": "2019-06-19 17:24:49",
                "index": 19,
                "user": "ychaikin"
            },
            {
                "id": "5d0a73dd325b465cc367b0e7",
                "text": "What part of the logic don\u2019t you follow? When we parse the class, if a bean is declared with a static method, we can register the bean without even instantiating the class. That doesn\u2019t mean we won\u2019t instantiate the config class later down the road, it means we get a chance to register that bean sooner. That\u2019s all I meant. And doing that is (more than) a best practice for a BPP",
                "time": "2019-06-19 17:41:49",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5d0a7a174e8f972d3759e14c",
                "text": "Oh, I think I get what you are saying now. Correct me if I am wrong... What you are saying is that the class pointed to by `@ImportAutoConfiguration` may not even have to be instantiated because if all you are doing is pulling out a static member, no instantiation is needed and therefore the statically created configuration is inserted into the application context fairly early in the process. Correct?",
                "time": "2019-06-19 18:08:23",
                "index": 21,
                "user": "ychaikin"
            },
            {
                "id": "5d0a7d1abc56c731f8f8c9a8",
                "text": "No",
                "time": "2019-06-19 18:21:14",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5d0a7d3abb789747fb41e705",
                "text": "Forget the instantiation part, it\u2019s a detail. Putting it static means we can instantiate it before the non static ones.",
                "time": "2019-06-19 18:21:46",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5d0a7dd9fbcc305cc4ac1c8d",
                "text": "Ok, that's what I meant, i.e., it makes it into the application context earlier... but probably said too much. Thanks for the clarification.",
                "time": "2019-06-19 18:24:25",
                "index": 24,
                "user": "ychaikin"
            }
        ]
    },
    {
        "id": 779,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d01349717fefb263b0b2704",
                "text": "Hi, I m trying to connect to cassandra database in my spring boot application. I have my own configuration. Everything works fine as expected. I want to start my application even when cassandra is not up and running. Let's say if i give wrong cassandra contact points. my spring boot application should start without failing by ignoring the cassandra connection error.",
                "time": "2019-06-12 17:21:27",
                "index": 0,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d0135ff17fefb263b0b3355",
                "text": "```\npackage com.shivanshu.cassandrajpa.configuration;\n\nimport com.datastax.driver.core.PlainTextAuthProvider;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.cassandra.config.AbstractCassandraConfiguration;\nimport org.springframework.data.cassandra.config.CassandraClusterFactoryBean;\nimport org.springframework.data.cassandra.repository.config.EnableCassandraRepositories;\n\n/**\n * Created By shivanshu on 18/04/19 Apr, 2019\n */\n@Configuration\n@EnableCassandraRepositories(basePackages =\"com.shivanshu\")\npublic class CassandraConfig extends AbstractCassandraConfiguration {\n\n    @Value(\"${cassandra.contactpoints}\")\n    private String contactPoints;\n\n    @Value(\"${cassandra.port}\")\n    private int port;\n\n    @Value(\"${cassandra.keyspace}\")\n    private String keyspaceName;\n\n    @Value(\"${cassandra.username}\")\n    private String username;\n\n    @Value(\"${cassandra.password}\")\n    private String passsword;\n\n    @Value(\"${cassandra.clusterName}\")\n    private String clusterName;\n\n    public String getKeyspaceName() {\n        return keyspaceName;\n    }\n\n    @Bean\n    public CassandraClusterFactoryBean cluster() {\n        CassandraClusterFactoryBean cluster = new CassandraClusterFactoryBean();\n        PlainTextAuthProvider sap = new PlainTextAuthProvider(username, passsword);\n        cluster.setContactPoints(contactPoints);\n        cluster.setPort(port);\n        cluster.setClusterName(clusterName);\n        cluster.setAuthProvider(sap);\n        cluster.setJmxReportingEnabled(false);\n        return cluster;\n    }\n}\n```",
                "time": "2019-06-12 17:27:27",
                "index": 1,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d013c30c2e5ba268ce6ea86",
                "text": "spring.datasource.continue-on-error=true is not working for cassandra database. ",
                "time": "2019-06-12 17:53:52",
                "index": 2,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d01f7642f44e426f5969cb6",
                "text": "@shivanshugoyal0111 `spring.datasource` is for JDBC databases",
                "time": "2019-06-13 07:12:36",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5d01fa6072e573260792366d",
                "text": "@snicoll , yes, you are right, I am asking how can ignore error for cassandra. ",
                "time": "2019-06-13 07:25:20",
                "index": 7,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d01fa84ee9dda0462a35b67",
                "text": "Is there any alternate of \"spring.datasource.continue-on-error=true\" for cassandra ",
                "time": "2019-06-13 07:25:56",
                "index": 8,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d01faa42f44e426f596b4c5",
                "text": "Can i add something in configuration class to continue in case of error?",
                "time": "2019-06-13 07:26:28",
                "index": 9,
                "user": "shivanshugoyal0111"
            },
            {
                "id": "5d01fd5a5213b62663782ae8",
                "text": "Maybe you can use \"try...catch\", or throw these errors, if these're feasible.",
                "time": "2019-06-13 07:38:02",
                "index": 10,
                "user": "DationOne"
            }
        ]
    },
    {
        "id": 780,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ee7348724a3382d5d69caf0",
                "text": "hi. i used springboot-2.3.1.realease with spring-boot-starter-data-r2dbc. webserver print out  java.lang.NoClassDefFoundError: org/springframework/data/convert/CustomConversions$ConverterConfiguration\u3002what should i do? thanks",
                "time": "2020-06-15 08:42:47",
                "index": 0,
                "user": "WunHwanTseng"
            },
            {
                "id": "5ee7364bf47bd94a4a9a90c0",
                "text": "try adding spring data commons as dependency, this contains the class",
                "time": "2020-06-15 08:50:19",
                "index": 1,
                "user": "pcornelissen"
            },
            {
                "id": "5ee73660462dc87c9f27a150",
                "text": "(https://docs.spring.io/spring-data/data-commons/docs/current/api/org/springframework/data/convert/CustomConversions.html)",
                "time": "2020-06-15 08:50:40",
                "index": 2,
                "user": "pcornelissen"
            },
            {
                "id": "5ee736777c64f31f11603fc7",
                "text": "You shouldn\u2019t have to do this. Can you reproduce with a fresh project created on start.spring.io? Perhaps a jar is corrupted in your local cache?",
                "time": "2020-06-15 08:51:03",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ee737a8035dfa12611ffcef",
                "text": "ok, i  will try it, thanks",
                "time": "2020-06-15 08:56:08",
                "index": 4,
                "user": "WunHwanTseng"
            }
        ]
    },
    {
        "id": 781,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d23a265270d2b1bfa61097a",
                "text": "hello guys I have this issue java.lang.ClassNotFoundException: org.springframework.hateoas.RelProvider how could I solve it",
                "time": "2019-07-08 20:07:01",
                "index": 0,
                "user": "bnyat22"
            },
            {
                "id": "5d2456300c8c4114d9fae665",
                "text": "@bnyat22 I guess you're using a Spring HATEOAS 1.0 milestone or snapshot. If that's the case, the class is now called `LinkRelationProvider`. The 1.0 docs are a bit out of date which doesn't help. I've opened https://github.com/spring-projects/spring-hateoas/issues/1016.",
                "time": "2019-07-09 08:54:08",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 782,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5b8ffded1d3a5711b6eba9ef",
                "text": "I am  also having some troubles to build springboot by sources when I pulled the latest master. When I run the actuator-autoconfig tests one of the class `RabbitAutoConfiguration` has certain methods which could not be found. Could anyone help here.",
                "time": "2018-09-05 16:01:49",
                "index": 0,
                "user": "dhaval24"
            },
            {
                "id": "5b8ffe06ac25fd11b5e5c930",
                "text": "CI is green here",
                "time": "2018-09-05 16:02:14",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5b8ffe83d457a1406ca569a0",
                "text": "Specifically : \n`map.from(ssl::getVerifyHostname)\n\t\t\t\t\t\t.to(factory::setEnableHostnameVerification);`",
                "time": "2018-09-05 16:04:19",
                "index": 2,
                "user": "dhaval24"
            },
            {
                "id": "5b8ffe9311b41f69dbc54cfe",
                "text": "Here setEnableHostnameVerification is unable to be found ",
                "time": "2018-09-05 16:04:35",
                "index": 3,
                "user": "dhaval24"
            },
            {
                "id": "5b8ffe9ec2bd5d117a23505c",
                "text": "in your IDE or in the command line?",
                "time": "2018-09-05 16:04:46",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5b8ffeccac25fd11b5e5cf9e",
                "text": "I am running : mvnw -f spring-boot-project -Pfull clean install (from Intellij Terminal) ",
                "time": "2018-09-05 16:05:32",
                "index": 5,
                "user": "dhaval24"
            },
            {
                "id": "5b8ffedcf5402f32aae11a6d",
                "text": "will it make difference if I go purely to terminal ?",
                "time": "2018-09-05 16:05:48",
                "index": 6,
                "user": "dhaval24"
            },
            {
                "id": "5b8ffeebac25fd11b5e5d01a",
                "text": "where is that `-Pfull` coming from? (shouldn\u2019t make a difference)",
                "time": "2018-09-05 16:06:03",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5b8fff11d8d36815e5deb213",
                "text": "https://github.com/spring-projects/spring-boot/blob/master/CONTRIBUTING.adoc",
                "time": "2018-09-05 16:06:41",
                "index": 8,
                "user": "dhaval24"
            },
            {
                "id": "5b8fff1494f8164c17e0e182",
                "text": "There was an update to the rabbit client with that method. But it\u2019s working fine for me",
                "time": "2018-09-05 16:06:44",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5b8fff1d58a3797aa3092f32",
                "text": "Followed instruction from here",
                "time": "2018-09-05 16:06:53",
                "index": 10,
                "user": "dhaval24"
            },
            {
                "id": "5b8fff23cff55e5617b036c0",
                "text": "Full Build section ",
                "time": "2018-09-05 16:06:59",
                "index": 11,
                "user": "dhaval24"
            },
            {
                "id": "5b8fff38ac25fd11b5e5d1ab",
                "text": "Default build is more than enough",
                "time": "2018-09-05 16:07:20",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5b8fff66f86b741b05135ba9",
                "text": "ok is there a way I can only build the boot project and run actuator-autoconfig tests",
                "time": "2018-09-05 16:08:06",
                "index": 13,
                "user": "dhaval24"
            },
            {
                "id": "5b8fff71e5b40332ab4c03a6",
                "text": "as that's where my changes are and I want to verify that",
                "time": "2018-09-05 16:08:17",
                "index": 14,
                "user": "dhaval24"
            },
            {
                "id": "5b8fff81d457a1406ca56e98",
                "text": "Maven allows you to do that",
                "time": "2018-09-05 16:08:33",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5b8fff83cff55e5617b03858",
                "text": "the whole build takes really long :)",
                "time": "2018-09-05 16:08:35",
                "index": 16,
                "user": "dhaval24"
            },
            {
                "id": "5b8fffe1cff55e5617b03b2b",
                "text": "you don\u2019t need to build anything. What you don\u2019t build is going to be retrieved via the maven repository. ",
                "time": "2018-09-05 16:10:09",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5b90002494f8164c17e0e7ec",
                "text": "What does `git rev-parse HEAD` say?",
                "time": "2018-09-05 16:11:16",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5b90002bc9500b4bab88545d",
                "text": "yes i understand that. I added additional autoconfig code for Micrometer Azure registry and for that I need to change the POM also to pick snapshot version when I build the project",
                "time": "2018-09-05 16:11:23",
                "index": 19,
                "user": "dhaval24"
            },
            {
                "id": "5b90003b58a3797aa30936b1",
                "text": "that's why I  think I need to build first the spring-boot-project and then run the tests",
                "time": "2018-09-05 16:11:39",
                "index": 20,
                "user": "dhaval24"
            },
            {
                "id": "5b90003f94f8164c17e0e890",
                "text": "No you don't",
                "time": "2018-09-05 16:11:43",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5b900073ac25fd11b5e5dc28",
                "text": "0252e5452b58ae85041e3acf760eca88662f8788\n",
                "time": "2018-09-05 16:12:35",
                "index": 22,
                "user": "dhaval24"
            },
            {
                "id": "5b900083f5402f32aae12343",
                "text": "from git rev-parse HEAD",
                "time": "2018-09-05 16:12:51",
                "index": 23,
                "user": "dhaval24"
            },
            {
                "id": "5b900087f86b741b05136219",
                "text": "you can run the test in `spring-boot-actuator-autoconfigure` and it will pick up whatever changes you\u2019ve done in `spring-boot-dependencies` as well",
                "time": "2018-09-05 16:12:55",
                "index": 24,
                "user": "snicoll"
            },
            {
                "id": "5b9000a560f9ee7aa4e1186c",
                "text": "If you have changes in multiple modules then you need to install them. But that happens like that in any Maven projet (nothing specific to Spring Boot, really)",
                "time": "2018-09-05 16:13:25",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5b9000cb60f9ee7aa4e119b9",
                "text": "My changes in POM are only in spring-boot-actuator-autoconfigure.xml ",
                "time": "2018-09-05 16:14:03",
                "index": 26,
                "user": "dhaval24"
            },
            {
                "id": "5b9000e0d457a1406ca576a0",
                "text": "Then you don\u2019t need to build anything else. Just run the tests there",
                "time": "2018-09-05 16:14:24",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5b90010d4be56c5918e7e138",
                "text": "Are you doing this to submit a PR? I am not sure we would consider adding auto-configuration support for the Azure Registry in Spring Boot itself FTR (I think I\u2019ve already mentionned that)",
                "time": "2018-09-05 16:15:09",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5b90012d1d3a5711b6ebbe72",
                "text": "This is for Micrometer auto config",
                "time": "2018-09-05 16:15:41",
                "index": 29,
                "user": "dhaval24"
            },
            {
                "id": "5b90013711227d711d1d89be",
                "text": "for Azure registry ",
                "time": "2018-09-05 16:15:51",
                "index": 30,
                "user": "dhaval24"
            },
            {
                "id": "5b9001424be56c5918e7e1b0",
                "text": "This is not regarding Azure Starter",
                "time": "2018-09-05 16:16:02",
                "index": 31,
                "user": "dhaval24"
            },
            {
                "id": "5b90014ad457a1406ca578d7",
                "text": "I know. ",
                "time": "2018-09-05 16:16:10",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5b900162d457a1406ca57977",
                "text": "We only provide auto-configuration for core micrometer registries. As far as I know, the Azure registry is not one of them",
                "time": "2018-09-05 16:16:34",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5b900176c9500b4bab885c4c",
                "text": "Yes, but it would be there in Micrometer 1.1.o RC 1",
                "time": "2018-09-05 16:16:54",
                "index": 34,
                "user": "dhaval24"
            },
            {
                "id": "5b9001924be56c5918e7e381",
                "text": "so only after it becomes part of Micrometer",
                "time": "2018-09-05 16:17:22",
                "index": 35,
                "user": "dhaval24"
            },
            {
                "id": "5b900199ac25fd11b5e5e5b3",
                "text": " core registries it can be in SpringBoot ",
                "time": "2018-09-05 16:17:29",
                "index": 36,
                "user": "dhaval24"
            },
            {
                "id": "5b9001a21d3a5711b6ebc148",
                "text": "as far as I know",
                "time": "2018-09-05 16:17:38",
                "index": 37,
                "user": "dhaval24"
            },
            {
                "id": "5b9001b111b41f69dbc561fb",
                "text": "I don\u2019t think so. AWS cloud watch is not in Spring Boot either. ",
                "time": "2018-09-05 16:17:53",
                "index": 38,
                "user": "snicoll"
            },
            {
                "id": "5b9001ce11b41f69dbc56226",
                "text": "We can discuss based on the code anyway",
                "time": "2018-09-05 16:18:22",
                "index": 39,
                "user": "snicoll"
            },
            {
                "id": "5b9001d8d8d36815e5dec491",
                "text": "sure upto you and Jon",
                "time": "2018-09-05 16:18:32",
                "index": 40,
                "user": "dhaval24"
            },
            {
                "id": "5b9001df60f9ee7aa4e1214b",
                "text": "I am not the one to force here ",
                "time": "2018-09-05 16:18:39",
                "index": 41,
                "user": "dhaval24"
            },
            {
                "id": "5b9001e111b41f69dbc56231",
                "text": ":) ",
                "time": "2018-09-05 16:18:41",
                "index": 42,
                "user": "dhaval24"
            },
            {
                "id": "5b9001ec11227d711d1d8d55",
                "text": "https://github.com/micrometer-metrics/micrometer/pull/806",
                "time": "2018-09-05 16:18:52",
                "index": 43,
                "user": "dhaval24"
            },
            {
                "id": "5b900200f86b741b05136d2a",
                "text": "here is the PR in Micrometer. And BTW there was a bug in StepMeterRegistry which is also fixed as part of this",
                "time": "2018-09-05 16:19:12",
                "index": 44,
                "user": "dhaval24"
            },
            {
                "id": "5b9002ca11227d711d1d9482",
                "text": "Thanks for your help",
                "time": "2018-09-05 16:22:34",
                "index": 45,
                "user": "dhaval24"
            }
        ]
    },
    {
        "id": 783,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5df0d317ce2b2e652bb86373",
                "text": "I  notice that sometimes exceptions thrown  from my service classes end up wrapped in a NestedServletException. I think I understand the rationale for this, but it appears that the exception is not unwrapped and handled in my @ControllerAdvice annotated handler. I have even tried to add a separate method to try to unwrap the NestedServletException myself, but this exception handler is never called.   What am I missing here ?",
                "time": "2019-12-11 11:29:27",
                "index": 0,
                "user": "janolaveide"
            },
            {
                "id": "5df1043c55d9392300f1b285",
                "text": "@janolaveide It's hard to say without knowing more about your app. You could perhaps diagnose things yourself by using the debugger with a breakpoint in `DispatcherServlet.processHandlerException(HttpServletRequest, HttpServletResponse, Object, Exception)`",
                "time": "2019-12-11 14:59:08",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 784,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ea6ffce3ea9b172a493129f",
                "text": "Hi, is there any way to see the actual calculated auto configure order, I'm trying to debug a problem where `@AutoConfigureBefore` seems to be ignored",
                "time": "2020-04-27 15:52:46",
                "index": 0,
                "user": "leonard84"
            },
            {
                "id": "5ea703409a04a259f2376a02",
                "text": "Is it correct that `@AutoConfigureBefore/After` is only respected at toplevel classes, and ignored for nested static configuration classes?",
                "time": "2020-04-27 16:07:28",
                "index": 1,
                "user": "leonard84"
            },
            {
                "id": "5ea71bdd568e5258e48a501c",
                "text": "Yes, that's correct. It can only be used on classes that are listed as auto-configuration in `spring.factories`.",
                "time": "2020-04-27 17:52:29",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ea71c1361a0002f7951c4a2",
                "text": "Debugging with a breakpoint on org.springframework.boot.autoconfigure.AutoConfigurationImportSelector.selectImports(AnnotationMetadata) is a good way to see the order",
                "time": "2020-04-27 17:53:23",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 785,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eaf548dd898fe7a376386af",
                "text": "evening everyone, I have a question about ServiceLoader and Spring.\nI'm using a library which uses the ServiceLoader at runtime to load a particular decoder, the decoder has 2 constructors, 1 no args default constructor and one that accepts an objectMapper. I'm not experienced enough with the ServiceLoader since I've never came in direct contact with it, but I thought if I created a spring bean of the decoder it would automagically hook it into the ServiceLoader :D, well that's not how it works :p \nSo now I'm looking if I can supply a Spring bean to the ServiceLoader, so when the library checks for the decoder, the spring bean is picked up",
                "time": "2020-05-03 23:32:29",
                "index": 0,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf66fa0b23797ec05df50d",
                "text": "Can you please give a more concrete use case here? Spring CDI operates totally independently of ServiceLoader (which is based on classpath scanning of META-INF). Are you attempting to inject beans into the loaded service? That seems like a bad idea since the purpose of the ServiceLoader is to decouple an interface from its implementations. The loaded service shouldn\u2019t have a dependency on the context in which it is run.",
                "time": "2020-05-04 00:51:06",
                "index": 1,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf672f14b48f0698a9aef0",
                "text": "Now if you are attempting to instead inject the loaded service as a bean, simply annotate a `@Bean` method that calls the ServiceLoader to build your decoder.",
                "time": "2020-05-04 00:51:59",
                "index": 2,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf6753347bd6163052cbb8",
                "text": "yeah  it's the other way around, I figured it out a couple of minutes ago",
                "time": "2020-05-04 00:52:35",
                "index": 3,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf678dadb0ec5c2be21746",
                "text": "FWIW the ServiceLoader will always call the no-args constructor",
                "time": "2020-05-04 00:53:33",
                "index": 4,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf679197338850a2e62194",
                "text": "so the library loads it's decoders through a ServiceLoader, and in that decoder i needed access to the objectMapper loaded in the spring context",
                "time": "2020-05-04 00:53:37",
                "index": 5,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf67999f0c955d7da14fdc",
                "text": "yup I know :) ",
                "time": "2020-05-04 00:53:45",
                "index": 6,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf67aa347bd6163052cc0e",
                "text": "```\nclass CustomJacksonCodec : DataCodec, HeadersCodec {\n\n    companion object {\n        const val contentType = \"application/json\"\n    }\n\n    private lateinit var objectMapper: ObjectMapper\n\n    override fun contentType(): String = contentType\n    override fun encode(stream: OutputStream?, headers: MutableMap<String, String>?) = getObjectMapper().writeValue(stream, headers)\n\n    @Suppress(\"UNCHECKED_CAST\")\n    override fun decode(stream: InputStream): MutableMap<String, String> = when (stream.available()) {\n        0 -> HashMap()\n        else -> (getObjectMapper().readValue(stream, HashMap::class.java)) as HashMap<String, String>\n    }\n\n    override fun encode(stream: OutputStream, value: Any) =\n            getObjectMapper().writeValue(stream, value)\n\n    override fun decode(stream: InputStream, type: Type): Any = getObjectMapper().readValue(stream, getObjectMapper().typeFactory.constructType(type))\n\n    private fun getObjectMapper() = if (!this::objectMapper.isInitialized) {\n        this.objectMapper = SpringContext.getBean(ObjectMapper::class.java)!!\n        this.objectMapper\n    } else {\n        this.objectMapper\n    }\n}\n```\n",
                "time": "2020-05-04 00:54:02",
                "index": 7,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf67e7347bd6163052cc53",
                "text": "SpringContext is just a simple component implementing the ApplicationContextAware interface",
                "time": "2020-05-04 00:55:03",
                "index": 8,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf67f20b23797ec05df6e5",
                "text": "```\n@Component\nclass SpringContext : ApplicationContextAware {\n    @Throws(BeansException::class)\n    override fun setApplicationContext(context: ApplicationContext) {\n        Companion.context = context\n    }\n\n    companion object {\n        private var context: ApplicationContext? = null\n\n        fun <T : Any?> getBean(beanClass: Class<T>): T? {\n            return context?.getBean(beanClass)\n        }\n    }\n}\n```",
                "time": "2020-05-04 00:55:14",
                "index": 9,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf67f67a24ff01b0fd23df",
                "text": "The object mapper is a public var. Create a `@Bean` method that uses the ServiceLoader to construct the object, then set it there before returning it.",
                "time": "2020-05-04 00:55:18",
                "index": 10,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf680c0b23797ec05df712",
                "text": "Oh nvm I saw it is private ",
                "time": "2020-05-04 00:55:40",
                "index": 11,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf681d5cd4fe50a3e9d4a2",
                "text": "yeah still in POC phase though ",
                "time": "2020-05-04 00:55:57",
                "index": 12,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf681f0b23797ec05df724",
                "text": "Why is it `lateinit` if you have no way to set it.",
                "time": "2020-05-04 00:55:59",
                "index": 13,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf685ed898fe7a3763aa45",
                "text": "in this part",
                "time": "2020-05-04 00:57:02",
                "index": 14,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf68653d58de7a38f1f97c",
                "text": "```\nprivate fun getObjectMapper() = if (!this::objectMapper.isInitialized) {\n        this.objectMapper = SpringContext.getBean(ObjectMapper::class.java)!!\n        this.objectMapper\n    } else {\n        this.objectMapper\n    }\n```",
                "time": "2020-05-04 00:57:09",
                "index": 15,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf68a2d898fe7a3763aac0",
                "text": "so I don't have to perform a lookup in the context every time the decoder has to decode/encode something",
                "time": "2020-05-04 00:58:10",
                "index": 16,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf69557a24ff01b0fd2640",
                "text": "Either way you have some serious code smell in there. I would think about how you can refactor this so you: 1) eliminate calls to statics to ensure your objects are as pure as possible and 2) avoid polluting the service interface with dependencies. I would instead introduce a new interface that uses the factory pattern to safely construct the underlying service.",
                "time": "2020-05-04 01:01:09",
                "index": 17,
                "user": "sgarfinkel"
            },
            {
                "id": "5eaf69d614b48f0698a9b302",
                "text": "I would love to use a factory but I can't, the service interface is from the library. ",
                "time": "2020-05-04 01:03:18",
                "index": 18,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf69f77a24ff01b0fd2746",
                "text": "How would you eleminate the static call? I need the spring-context, outside of spring",
                "time": "2020-05-04 01:03:51",
                "index": 19,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf6a0731a6d25d7ca8d116",
                "text": "or wait let me try something first! ",
                "time": "2020-05-04 01:04:07",
                "index": 20,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf6b8fadb0ec5c2be21e4c",
                "text": "no what I tried isn't possible",
                "time": "2020-05-04 01:10:39",
                "index": 21,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf6c2b97338850a2e629a4",
                "text": "hmmm one sec again... ",
                "time": "2020-05-04 01:13:15",
                "index": 22,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf6c4b97338850a2e629c9",
                "text": "nope when decoding, the library creates a new codec and I lose my reference to objectMapper",
                "time": "2020-05-04 01:13:47",
                "index": 23,
                "user": "MOES-Media"
            },
            {
                "id": "5eaf6eb4b6dd230697a38bf3",
                "text": "The library you are using has that `getObjectMapper` function or did you write that? It\u2019s a little sketchy that it\u2019s trying to statically access a Spring bean.",
                "time": "2020-05-04 01:24:04",
                "index": 24,
                "user": "sgarfinkel"
            }
        ]
    },
    {
        "id": 786,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c7ef024293ac75db55c039e",
                "text": "I have a question on disabling the welcomePageHandlerMapping bean in a Spring Boot application. We register a separate dispatcher servlet in our Spring Boot app that is mapped to /api/* to service api calls. But navigating to /api/  causes the Spring Dispatcher servlet to serve up the index.jsp that we have. I believe this is because of the welcomePageHandlerMapping bean that is registered in WebMvcAutoConfiguration. We do need this bean for the dispatched servlet which is mapped to \"/\" but not for the /api/ servlet. Thanks in advance.",
                "time": "2019-03-05 21:54:44",
                "index": 0,
                "user": "sudr"
            },
            {
                "id": "5c7f90f0293ac75db55fdf03",
                "text": "@sudr By default a `DispatcherServlet` will detect all `HandlerMapping` beans. If you don't want your additional dispatcher servlet to pick up the welcome page handler mapping you'll need to call `setDetectAllHandlerMappings(false)`. You'd then need a way to only have the mappings that you do care about registered with the dispatcher. You may be able to do that by overriding `getDefaultStrategies`.",
                "time": "2019-03-06 09:20:48",
                "index": 20,
                "user": "wilkinsona"
            },
            {
                "id": "5c8287bb0a6b915163f77d9a",
                "text": "@wilkinsona setting setDetectAllHandlerMappings(false) did the trick. Thanks for the pointer.",
                "time": "2019-03-08 15:18:19",
                "index": 100,
                "user": "sudr"
            },
            {
                "id": "5c828c4f293ac75db5740a28",
                "text": "Excellent",
                "time": "2019-03-08 15:37:51",
                "index": 101,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 787,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c9b836dcf786a56c788873b",
                "text": "Currenty migrating from 2.0 to 2.1 (2.1.3) spring boot version. Got  Error creating bean with name 'resourceHandlerMapping' -> java.lang.IllegalStateException: No ServletContext set...  any idea ?",
                "time": "2019-03-27 14:06:37",
                "index": 0,
                "user": "cs1407_gitlab"
            },
            {
                "id": "5c9b861f2fb6800d808d585b",
                "text": "when I removed the bean ```@Configuration\n@EnableWebSecurity\n@ComponentScan(basePackageClasses = KeycloakSecurityComponents.class, excludeFilters = @ComponentScan.Filter(type = FilterType.REGEX, pattern = \"org.keycloak.adapters.springsecurity.management.HttpSessionManager\"))\npublic class SecurityConfig extends KeycloakWebSecurityConfigurerAdapter { ``` It works...",
                "time": "2019-03-27 14:18:07",
                "index": 1,
                "user": "cs1407_gitlab"
            },
            {
                "id": "5c9b8c9f40b32b4c4fa4e38b",
                "text": "@cs1407_gitlab please review the doc. The caches endpoint has been added in 2.1",
                "time": "2019-03-27 14:45:51",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c9b8d048aa66959b67d7ca1",
                "text": "Yep I saw that. Thx",
                "time": "2019-03-27 14:47:32",
                "index": 3,
                "user": "cs1407_gitlab"
            }
        ]
    },
    {
        "id": 788,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d00c5b1c8d21d26064658fa",
                "text": "Hi Team,\nis there anyway to unit test webclient? I was trying to unit test a service using web client to make external API calls, but then using webclienttest  I could test the service but that seems to be integration test as it is making actual calls to external API. Any idea How we can unit test this without worrying to make real calls.",
                "time": "2019-06-12 09:28:17",
                "index": 0,
                "user": "deepakmehra10"
            },
            {
                "id": "5d00c631049bf9263c585f1f",
                "text": "Are you testing an external API or your own? Because external APIs you shouldn't need to test, you should mock the returns to make sure app handles them correctly",
                "time": "2019-06-12 09:30:25",
                "index": 1,
                "user": "Contract16"
            },
            {
                "id": "5d00c673209ae3263ab519bf",
                "text": "@deepakmehra10 ",
                "time": "2019-06-12 09:31:31",
                "index": 2,
                "user": "Contract16"
            },
            {
                "id": "5d00c8685213b626636f1ae3",
                "text": "@deepakmehra10 MockWebServer from OkHTTP is the recommended approach there. It's what Framework's own test suite uses.",
                "time": "2019-06-12 09:39:52",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5d00c88672e5732607893d89",
                "text": "Can you share any references, please ? @wilkinsona ",
                "time": "2019-06-12 09:40:22",
                "index": 4,
                "user": "deepakmehra10"
            },
            {
                "id": "5d00c962c2e5ba268ce32fcd",
                "text": "Search for `MockWebServer` in Framework's code. Here's one example: https://github.com/spring-projects/spring-framework/blob/82d0e49de96b085e8d1d2e4b9ded8e6d82cd535a/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/WebClientIntegrationTests.java",
                "time": "2019-06-12 09:44:02",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d00c97b049bf9263c587ac8",
                "text": "Lots more: https://github.com/spring-projects/spring-framework/search?q=MockWebServer&unscoped_q=MockWebServer",
                "time": "2019-06-12 09:44:27",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5d00c9915656e6268b86734c",
                "text": "Thanks for your time @wilkinsona ",
                "time": "2019-06-12 09:44:49",
                "index": 7,
                "user": "deepakmehra10"
            }
        ]
    },
    {
        "id": 789,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5c8a855ed1e7281f092af1a6",
                "text": "Do we have a documentation around Spring Boot plan to support JDK 8 ?",
                "time": "2019-03-14 16:46:22",
                "index": 0,
                "user": "ranarula"
            },
            {
                "id": "5c8a8584d1e7281f092af331",
                "text": "@ranarula spring boot 2 requires jdk 8 already",
                "time": "2019-03-14 16:47:00",
                "index": 1,
                "user": "snowe2010"
            },
            {
                "id": "5c8a8600ac408e11925c7cd1",
                "text": "I meant is there a plan when JDK11 will be the minimum supported JDK. Sorry for not being clear earlier",
                "time": "2019-03-14 16:49:04",
                "index": 2,
                "user": "ranarula"
            },
            {
                "id": "5c8aaf14ac408e11925db257",
                "text": "@ranarula No.",
                "time": "2019-03-14 19:44:20",
                "index": 7,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 790,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5cec178175d9a575a65436fe",
                "text": "**Will Spring Boot provide official support for gRPC-based API implementations in the near future?**\n\nI am considering using the gRPC framework with Spring for my next project: it is strongly typed, supports code generation for clients on nearly every platform, and provides top performance when configured correctly on all layers. There are a few community starters (like https://github.com/LogNet/grpc-spring-boot-starter or https://github.com/yidongnan/grpc-spring-boot-starter), but most of them provide custom solutions. I would love to hear that official support soon arrives for this in Spring Boot.",
                "time": "2019-05-27 16:59:45",
                "index": 0,
                "user": "luczsoma"
            },
            {
                "id": "5cec1838d22ba766a20c65ba",
                "text": "@luczsoma Not that I know of. One of those is listed already on the starters page (https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot-starters). The Spring team is currently working on a feature that's a bit related: RSocket support. This gives the benefits of optimized transports and codecs, and more.",
                "time": "2019-05-27 17:02:48",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5cec18f4ef853135c83224c5",
                "text": "@bclozel Thank you! RSocket seems very interesting. I will definitely look into it.",
                "time": "2019-05-27 17:05:56",
                "index": 2,
                "user": "luczsoma"
            },
            {
                "id": "5cec276a879f4478c7f06f1a",
                "text": "@luczsoma, there's a pretty good SB-based gRPC library floating around that I used to use a while back for spinning up a gRPC server on a different port to my API for internal communication between services, the autoconfig worked great",
                "time": "2019-05-27 18:07:38",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5cec27cfad024978c63b6cd5",
                "text": "i *think* this was it: https://github.com/yidongnan/grpc-spring-boot-starter",
                "time": "2019-05-27 18:09:19",
                "index": 5,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 791,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b999f68fcba1254faa8e8b7",
                "text": "I have a Springboot application that runs a CLI game.\n\nHere's my main class:\n\n```\n@SpringBootApplication\npublic class MyApplication {\n\n    @Autowired\n    GameClient gameClient;\n\n    @PostConstruct\n    public void postConstruct(){\n       gameClient.runGame(); \n    }\n\n    public static void main(String[] args) {\n        SpringApplication.run(GameApplication.class, args);         \n    }\n}\n```\n\nWhen I run the command `mvn package` to generate a JAR, Spring executes the `postConstruct()` method and starts my CLI application instead of properly generating my JAR.\n\nWhen I remove the `postConstruct()` the JAR is successfully generated, but I need this method because  it is responsible for running my CLI app.\n\nHow can I solve this?",
                "time": "2018-09-12 23:21:12",
                "index": 0,
                "user": "andreybleme"
            },
            {
                "id": "5b99a22eebc9c82b6f4e3130",
                "text": "@andreybleme to run CLI app, you may want to do like this:\n```java\n@SpringBootApplication\n@Import({DemoAppConfig.class, SchedulerConfig.class})\npublic class DemoApplication {\n\tprivate static final Logger logger = LoggerFactory.getLogger(DemoApplication.class);\n\t\n\t@Autowired\n\tprivate MessageProcessor messageProcessor;\n\t\n\tpublic static void main(final String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n    \n\t@Bean\n    public CommandLineRunner startEventProcessing() {\n        if (logger.isDebugEnabled()) {\n            Hooks.onOperatorDebug();\n        }\n        return args -> messageProcessor.processMessages();\n    }\n}\n\n```",
                "time": "2018-09-12 23:33:02",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5b99a26a7fe920566fb45aa6",
                "text": "although it is not related to your Maven problem, but this is a better way than `@PostConstruct`",
                "time": "2018-09-12 23:34:02",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5b99a31d797eea2c6fe890fc",
                "text": "i think `mvn package` is invoking your tests which internally initializing all the beans and, as part of initialization, Spring will invoke `@PostConstruct` methods",
                "time": "2018-09-12 23:37:01",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5b99a664f7e1580625c1877f",
                "text": "Yes you helped a lot @nnanda2016. I generated the jar by skiping my tests.",
                "time": "2018-09-12 23:51:00",
                "index": 4,
                "user": "andreybleme"
            },
            {
                "id": "5b99a66e7dca306503f17131",
                "text": "Thank you!",
                "time": "2018-09-12 23:51:10",
                "index": 5,
                "user": "andreybleme"
            },
            {
                "id": "5b9a9aa6fd7157257791e711",
                "text": "@bclozel how to do both HTTP and HTTPS for netty? Do you have any sample app to show that?",
                "time": "2018-09-13 17:13:10",
                "index": 40,
                "user": "nnanda2016"
            },
            {
                "id": "5b9aae20a56b215c9732d7f0",
                "text": "@nnanda2016 it's not possible yet: https://github.com/spring-projects/spring-boot/issues/12035",
                "time": "2018-09-13 18:36:16",
                "index": 43,
                "user": "bclozel"
            },
            {
                "id": "5b9aaec6ebc9c82b6f4e339b",
                "text": "I see...",
                "time": "2018-09-13 18:39:02",
                "index": 44,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 792,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5b90c2f6cff55e5617b4940f",
                "text": "short question people: spring-boot tls, netty, http/2  , supported or not?",
                "time": "2018-09-06 06:02:30",
                "index": 0,
                "user": "doribd"
            },
            {
                "id": "5b90c341912c686538823bb7",
                "text": "spring-boot tls, netty - supported (we\u2019re using it rt now); not sure about HTTP/2",
                "time": "2018-09-06 06:03:45",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5b90c42911b41f69dbc9a5f5",
                "text": "@nnanda2016 thanks.",
                "time": "2018-09-06 06:07:37",
                "index": 2,
                "user": "doribd"
            },
            {
                "id": "5b90c44a11b41f69dbc9a667",
                "text": "who may know if spring-boot with netty supports http/2?",
                "time": "2018-09-06 06:08:10",
                "index": 3,
                "user": "doribd"
            },
            {
                "id": "5b90c5e2ef1aba7463798c50",
                "text": "Spring Boot and Reactor team for sure. I read some document which says you have to use Jetty\u2019s ALPN (or something like this) to support HTTP/2 coz JDK is not yet providing native support to this",
                "time": "2018-09-06 06:14:58",
                "index": 4,
                "user": "nnanda2016"
            },
            {
                "id": "5b90c7c6f86b741b0517ce1a",
                "text": "@nnanda2016 thanks, i haven't seen any reactor group here. probably they are here also in the current group.",
                "time": "2018-09-06 06:23:02",
                "index": 5,
                "user": "doribd"
            },
            {
                "id": "5b90c7e7aaa1cb081b6d11fa",
                "text": "there\u2019s a separate gitter channel; please post your questions there...",
                "time": "2018-09-06 06:23:35",
                "index": 6,
                "user": "nnanda2016"
            },
            {
                "id": "5b90ce51ac25fd11b5ea827d",
                "text": "@doribd it is supported as of Spring Boot 2.1.0 https://github.com/spring-projects/spring-boot/issues/13333",
                "time": "2018-09-06 06:50:57",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5b90d20211b41f69dbc9f67c",
                "text": "@bclozel thanks, any example that you can share ? i see it's only in M1, meaning no GA yet.",
                "time": "2018-09-06 07:06:42",
                "index": 10,
                "user": "doribd"
            },
            {
                "id": "5b90d263c9500b4bab8d04dd",
                "text": "@doribd https://docs.spring.io/spring-boot/docs/2.1.0.M2/reference/html/howto-embedded-web-servers.html#howto-configure-http2-netty and `server.http2.enabled=true` in your properties",
                "time": "2018-09-06 07:08:19",
                "index": 11,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 793,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b9a82360cfe7f30f18be489",
                "text": "Hello! I am trying to migrate to spring boot 2.x from 1.x. I have a configuration in my .yml under `elasticsearch_6x`. I then reference that in code via `@ConfigurationProperties(prefix = \"elasticsearch_6x\")`. Under spring boot 2.x I am getting a complaint saying the name is invalid and should be kabob-case. I cannot change the name in the yml (as lots of legacy code is dependent on it). Is there a way to get the `@ConfigurationProperties` to map to that value correctly?",
                "time": "2018-09-13 15:28:54",
                "index": 0,
                "user": "brian.kent_gitlab"
            },
            {
                "id": "5b9a88430cfe7f30f18c0cb3",
                "text": "You can add ",
                "time": "2018-09-13 15:54:43",
                "index": 5,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a8848d655361f76f49dcb",
                "text": "spring-boot-properties-migrator maven",
                "time": "2018-09-13 15:54:48",
                "index": 6,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a91c6b9531f2dfa604d9c",
                "text": "@brian.kent_gitlab ",
                "time": "2018-09-13 16:35:18",
                "index": 7,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a9572b9531f2dfa60696b",
                "text": "@BenEfrati do I just drop it in? is there anything to configure?",
                "time": "2018-09-13 16:50:58",
                "index": 8,
                "user": "brian.kent_gitlab"
            },
            {
                "id": "5b9a95b8be4f3006268bb1a9",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#before-you-start",
                "time": "2018-09-13 16:52:08",
                "index": 9,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a95ddbe4f3006268bb32b",
                "text": "Note\nOnce you\u2019re done with the migration, please make sure to remove this module from your project\u2019s dependencies.",
                "time": "2018-09-13 16:52:45",
                "index": 10,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a9779be4f3006268bc073",
                "text": "@BenEfrati so this should in theory allow 1.x behavior?",
                "time": "2018-09-13 16:59:37",
                "index": 11,
                "user": "brian.kent_gitlab"
            },
            {
                "id": "5b9a994ea56b215c973243c8",
                "text": "I think only for Spring properties ",
                "time": "2018-09-13 17:07:26",
                "index": 12,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a997e1ee2ca65020ffc77",
                "text": "I can say with high confidence that your legacy code also need some modification after you'll upgrade to spring boot 2",
                "time": "2018-09-13 17:08:14",
                "index": 13,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a99f0b4990c30eeae1429",
                "text": "@BenEfrati yes, it appears that way.  The migrator was not the drop-in replacement I was hoping for.",
                "time": "2018-09-13 17:10:08",
                "index": 14,
                "user": "brian.kent_gitlab"
            },
            {
                "id": "5b9a9a09b4990c30eeae1503",
                "text": "I can think for a dirty workaround for no code change, you may create properties file with kebab-case  and set the values from your old properties.\nsomethink like \n```\noldProperty: value\n\nold-property: ${oldProperty}\n```",
                "time": "2018-09-13 17:10:33",
                "index": 15,
                "user": "BenEfrati"
            },
            {
                "id": "5b9a9a1af4bd1056ac5a4760",
                "text": "not sure if it works",
                "time": "2018-09-13 17:10:50",
                "index": 16,
                "user": "BenEfrati"
            },
            {
                "id": "5b9bc16bb4990c30eeb4f4b0",
                "text": "@brian.kent_gitlab You can leave the configuration property as it is (with underscores), what you do need to change is where you reference that property in code: `@ConfigurationProperties(prefix = \"elasticsearch-6x\")`and that should still bind to configuration with underscores. ",
                "time": "2018-09-14 14:10:51",
                "index": 27,
                "user": "tkvangorder"
            }
        ]
    },
    {
        "id": 794,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d51e83b2612bb718c5822b9",
                "text": "Hi everyone. I need to know if anyone of you has successfully built a Docker image for a JDK 11 Spring Boot App?",
                "time": "2019-08-12 22:29:15",
                "index": 0,
                "user": "cortizqgithub"
            },
            {
                "id": "5d51f213aa5ef4596c57267a",
                "text": "@cortizqgithub i have built\u2026but using a base image provided by the client company",
                "time": "2019-08-12 23:11:15",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5d51f21b3c7cf919c3d142dd",
                "text": "do you have any specific qn?",
                "time": "2019-08-12 23:11:23",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5d51f23a94bbaf4167a76a43",
                "text": "we are actually migrating our app to run under Kubernetes...",
                "time": "2019-08-12 23:11:54",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5d5204dd90bba62a1266394f",
                "text": "@nnanda2016  My point here is to use a public image base for JDK 11. Spring Boot tutorial suggests openjdk:8-jdk-alpine\n\nI mean, what would be the public image best known for the task.\n",
                "time": "2019-08-13 00:31:25",
                "index": 5,
                "user": "cortizqgithub"
            },
            {
                "id": "5d5256559baa6938407c05ad",
                "text": "@cortizqgithub for us, we use Oracle Enterprise Linux with an openjdk-11.0.2, but not sure if this JDK is built by client (we use corp docker hub instead of public one)",
                "time": "2019-08-13 06:19:01",
                "index": 9,
                "user": "nnanda2016"
            },
            {
                "id": "5d52565dc59722206f661c02",
                "text": "if i get more info, i will update here",
                "time": "2019-08-13 06:19:09",
                "index": 10,
                "user": "nnanda2016"
            },
            {
                "id": "5d52567f94bbaf4167a76ad0",
                "text": "they already have a base image with both of these and we use that as our base image",
                "time": "2019-08-13 06:19:43",
                "index": 11,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 795,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bc034e4ccd72b2f073a36ca",
                "text": "hello spring boot team; is it advisable to use `reactor-http-nio-X`  threads for internal processing? E.g. all the I/O etc? I believe these threads are reactor-netty threads and should be used to receive incoming requests; not the internal processing.",
                "time": "2018-10-12 05:45:08",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5bc04aa66e5a401c2d5a2f3f",
                "text": "@nnanda2016 In a Spring WebFlux + Reactor Netty app, everything is done by default on those threads, unless you `publishOn`/`subscribeOn` manually. So: yes. Once you've scheduled work on a different Scheduler, I don't think we offer the possibility to schedule work back on those.",
                "time": "2018-10-12 07:17:58",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5bc0dbb611177a25e5e433b4",
                "text": "@bclozel i know if i change those schedulers to do task on my own thread, spring cannot change it back. But my point is, if i keep doing all the taks in `reactor-http-nio-X` threads, won\u2019t it impact the system throughput? I mean i think there are only 8 (on a 8-core m/c) such threads. ",
                "time": "2018-10-12 17:36:54",
                "index": 24,
                "user": "nnanda2016"
            },
            {
                "id": "5bc0dc2ce6090c0c3b4cc0dc",
                "text": "i may be doing some blocking (e.g. JDBC) I/O tasks\u2026so these threads will be blocked.",
                "time": "2018-10-12 17:38:52",
                "index": 25,
                "user": "nnanda2016"
            },
            {
                "id": "5bc0dc70e6090c0c3b4cc0de",
                "text": "my question was related to some reccommendation from boot team on these resource management",
                "time": "2018-10-12 17:40:00",
                "index": 26,
                "user": "nnanda2016"
            },
            {
                "id": "5bc0fd8ee65a634336caa2d1",
                "text": "@nnanda2016 I believe you're often on the reactor channel - so you probably know that you should never block on those netty threads or your app will most likely stop accepting traffic and grind to a halt; the elastic scheduler is tailored for that. Note that even if the elastic scheduler is made for that, it is expected that a reactive app doing a lot of blocking I/O on separate threads will have worse performance results than a regular MVC app.",
                "time": "2018-10-12 20:01:18",
                "index": 29,
                "user": "bclozel"
            },
            {
                "id": "5bc10022e6090c0c3b4cc176",
                "text": "yes Brian, I am aware of this fact; but I was not 100% sure. Thanks for the help. I am redesigning an old app using spring boot 2 and noticed the app using reactor threads for it\u2019s own purpose. I am in the process of code change to decouple the application\u2019s own tasks from reactor threads",
                "time": "2018-10-12 20:12:18",
                "index": 30,
                "user": "nnanda2016"
            },
            {
                "id": "5bc439623a42fa76532eb7a0",
                "text": "@bclozel does Micrometer provide distributed collection? I mean how does it manage isolation of same metrics coming from different hosts?",
                "time": "2018-10-15 06:53:22",
                "index": 49,
                "user": "nnanda2016"
            },
            {
                "id": "5bc439a7c08b8b30671823bc",
                "text": "You can add a tag with the host to your metrics. I believe that\u2019s done automatically when exporting",
                "time": "2018-10-15 06:54:31",
                "index": 51,
                "user": "snicoll"
            },
            {
                "id": "5bc439ad9786c74192955d35",
                "text": "my apologies Stephane, but he just mentioned micrometer, hence, asked...",
                "time": "2018-10-15 06:54:37",
                "index": 52,
                "user": "nnanda2016"
            },
            {
                "id": "5bc439b6898e4e19edd90775",
                "text": "i will be careful about these in future",
                "time": "2018-10-15 06:54:46",
                "index": 53,
                "user": "nnanda2016"
            },
            {
                "id": "5bc439d8600c5f6423aff80c",
                "text": "Just ask your question, this gives the opportunity to anyone to reply",
                "time": "2018-10-15 06:55:20",
                "index": 54,
                "user": "snicoll"
            },
            {
                "id": "5bc439ddaed22a514b61d404",
                "text": "sure",
                "time": "2018-10-15 06:55:25",
                "index": 56,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 796,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bdf28c05905a91955529d9f",
                "text": "Hi Guys!\nI'm seeing the new JMS  PooledConnectionFactory support for both Artemis and ActiveMQ in SB 2.1.\nHowever the CachingConnectionFactory is still support and there is no mention about it being deprecated.\nIt gives me the impression that they both will live with distinct behaviours.\nWhat distinction would that be? Why use one instead of another? Any hints?",
                "time": "2018-11-04 17:13:36",
                "index": 0,
                "user": "mballoni"
            },
            {
                "id": "5bdfecd15905a9195556f25b",
                "text": "@mballoni It\u2019s not about still supported, those are two different mechanisms and they were both introduced in 2.x. I think you\u2019re mixing with the native pooling implementation of activemq that is no longer maintained and is not JMS2 compliant",
                "time": "2018-11-05 07:10:09",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5bdfecf34775f53eb34282a9",
                "text": "To clarify, `CachingConnectionFactory` is a generic mechanism offered by Spring Framework that should work for most use cases. It\u2019s auto-configured automatically as of 2.1 (new feature)",
                "time": "2018-11-05 07:10:43",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5bdfed386ab3f85bdd07c6e5",
                "text": "We also switched the native pooling implementation to a 3rd party library as the one of ActiveMQ isn\u2019t JMS 2 compliant. If you\u2019re using a cluster of JMS brokers and you need failover, you may want to use that. Or you may want to use native pooling for whatever other reason. In any case. Both are supported",
                "time": "2018-11-05 07:11:52",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5bdfed4b6ab3f85bdd07c7a1",
                "text": "If that didn\u2019t help and some clarification should be added to the dev guide, please provide more details and I can have a look",
                "time": "2018-11-05 07:12:11",
                "index": 6,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 797,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5c60b2ed3608b004a0a3874e",
                "text": "Is there a Spring Boot forum? This chat room doesn't seem to be the best format to ask questions.",
                "time": "2019-02-10 23:25:33",
                "index": 0,
                "user": "synkarius"
            },
            {
                "id": "5c61323b3608b004a0a68db1",
                "text": "@synkarius please use StackOverflow if you don\u2019t feel this is the right place for you",
                "time": "2019-02-11 08:28:43",
                "index": 1,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 798,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bdfbccf3074bd038e434f48",
                "text": "hello Spring Boot team, for custom exception handling, i am providing a bean of type `ErrorAttributes` as per the document (https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-webflux-error-handling). How does it determine what\u2019s the HTTP status? My app uses a custom Runtime exception? Do I need to extend `ResponseStatusException`? Or I just need to provide this in the error attributes map? `errorAttributes.put(\"status\", errorStatus.value());`?",
                "time": "2018-11-05 03:45:19",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5bdff0e325b9875faed69e5a",
                "text": "@nnanda2016 you can flag your custom execption with `@ResponseStatus`",
                "time": "2018-11-05 07:27:31",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bdffbd302d2b37dd37f448f",
                "text": "@snicoll any sample to refer?",
                "time": "2018-11-05 08:14:11",
                "index": 7,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffc32076992347abaf61c",
                "text": "Just annotate your exception with `@ResponseStatus` and provide the status you want it to return.",
                "time": "2018-11-05 08:15:46",
                "index": 8,
                "user": "pbriggs28"
            },
            {
                "id": "5bdffc4eea223702d052af90",
                "text": "okay...",
                "time": "2018-11-05 08:16:14",
                "index": 9,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffc5726be6b59796f03f1",
                "text": "```java\n@ResponseStatus(value = HttpStatus.NOT_FOUND, reason = \"No such order\")\npublic class OrderNotFoundException extends RuntimeException {\n    \n    public OrderNotFoundException(String message) {\n        \n        super(message);\n    }\n}\n```",
                "time": "2018-11-05 08:16:23",
                "index": 10,
                "user": "pbriggs28"
            },
            {
                "id": "5bdffc7aea223702d052af94",
                "text": "in my case, we have a single exception which is used with various error codes and status is decided from the error code",
                "time": "2018-11-05 08:16:58",
                "index": 11,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffc9d726f081e357604c7",
                "text": "we have just too many error scenarios and each scenario does not have it\u2019s own exception",
                "time": "2018-11-05 08:17:33",
                "index": 12,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffcb0ea223702d052af96",
                "text": "so, to say, status is dynamic",
                "time": "2018-11-05 08:17:52",
                "index": 13,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffdefa9c55b2574ad141d",
                "text": "I\u2019m not familiar with `ErrorAttributes` but in a standard Spring REST evironment, you would probably want to use `@ControllerAdvice`",
                "time": "2018-11-05 08:23:11",
                "index": 14,
                "user": "pbriggs28"
            },
            {
                "id": "5bdffe3a40449151f4fd7a94",
                "text": "```java\n@ControllerAdvice\npublic class CustomExceptionHandler extends ResponseEntityExceptionHandler {\n \n    @ExceptionHandler(value = { YourCustomException.class })\n    protected ResponseEntity<Object> handleConflict(YourCustomException ex, WebRequest request) {\n\n    \t// custom logic and return ResponseEntity with correct status\n    \t\n    }\n}\n```",
                "time": "2018-11-05 08:24:26",
                "index": 15,
                "user": "pbriggs28"
            },
            {
                "id": "5bdffe5802d2b37dd37f44b8",
                "text": "we are using `WebFlux`\u2026i have tried with a custom implementation of `AbstractErrorWebExceptionHandler` which works, but we have a global filter for req/res processing and becuase of that some of the headers are correctly populated in response",
                "time": "2018-11-05 08:24:56",
                "index": 16,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffe693074bd038e434fcc",
                "text": "e.g. `Content-Length` is becoming `0` in case of an exception",
                "time": "2018-11-05 08:25:13",
                "index": 17,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffe9c6ab3f85bdd082f75",
                "text": "is it being set to 0 when you use `@ResponseStatus` instead of your `AbstractErrorWebExceptionHandler`?",
                "time": "2018-11-05 08:26:04",
                "index": 18,
                "user": "pbriggs28"
            },
            {
                "id": "5bdffec6ee8e69215343b2fb",
                "text": "no no\u2026i haven\u2019t tried with `@ResponseStatus`",
                "time": "2018-11-05 08:26:46",
                "index": 19,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffee6ea223702d052afb1",
                "text": "with custom implementation of `AbstractErrorWebExceptionHandler`, it\u2019s becoming zero only in case of exception",
                "time": "2018-11-05 08:27:18",
                "index": 20,
                "user": "nnanda2016"
            },
            {
                "id": "5bdffeef2cb7054a8cf4e3f3",
                "text": "so i am trying to narrow down the issue",
                "time": "2018-11-05 08:27:27",
                "index": 21,
                "user": "nnanda2016"
            },
            {
                "id": "5bdfff1ba9c55b2574ad1a05",
                "text": "It is likely an issue of where you positioned your custom filter in the filter chain",
                "time": "2018-11-05 08:28:11",
                "index": 22,
                "user": "pbriggs28"
            },
            {
                "id": "5bdfff1de078fc446fcaa49d",
                "text": "also, the status was not correctly populated\u2026i have to make changes in the filter to populate it correctly",
                "time": "2018-11-05 08:28:13",
                "index": 23,
                "user": "nnanda2016"
            },
            {
                "id": "5bdfff2eea223702d052afb3",
                "text": "it\u2019s the first in the chain",
                "time": "2018-11-05 08:28:30",
                "index": 25,
                "user": "nnanda2016"
            },
            {
                "id": "5bdfff9cd3442e19729008eb",
                "text": "In the case of an exception you do or do not want Content-Length to be 0?",
                "time": "2018-11-05 08:30:20",
                "index": 26,
                "user": "pbriggs28"
            },
            {
                "id": "5be00037e078fc446fcaa4a0",
                "text": "i want a valid value (basically the value should be as the JSON error message i am sending back)",
                "time": "2018-11-05 08:32:55",
                "index": 27,
                "user": "nnanda2016"
            },
            {
                "id": "5be000790445e15fad26b8d7",
                "text": "And is your custom filter what is responsible for setting this?",
                "time": "2018-11-05 08:34:01",
                "index": 28,
                "user": "pbriggs28"
            },
            {
                "id": "5be000952cb7054a8cf4e40f",
                "text": "my question is, should it do that?",
                "time": "2018-11-05 08:34:29",
                "index": 29,
                "user": "nnanda2016"
            },
            {
                "id": "5be000c2e078fc446fcaa4a2",
                "text": "my custom filter just sets some common headers in the response (which i wanted to avoid doing in every handler)\u2026and log some req/res timing etc",
                "time": "2018-11-05 08:35:14",
                "index": 31,
                "user": "nnanda2016"
            },
            {
                "id": "5be000ed538a1c19717716c5",
                "text": "And those custom headers are what are not showing up in the case of an exception, correct? ",
                "time": "2018-11-05 08:35:57",
                "index": 32,
                "user": "pbriggs28"
            },
            {
                "id": "5be000f3e078fc446fcaa4a4",
                "text": "it knows there\u2019s an error response\u2026but i dont think it knows how much data is being written to response\u2026not sure if i m missing anything here",
                "time": "2018-11-05 08:36:03",
                "index": 33,
                "user": "nnanda2016"
            },
            {
                "id": "5be00100ee8e69215343b308",
                "text": "they\u2019re showing up",
                "time": "2018-11-05 08:36:16",
                "index": 34,
                "user": "nnanda2016"
            },
            {
                "id": "5be00121726f081e357604e5",
                "text": "Not showing up headers are `Content-Length`, `Status`",
                "time": "2018-11-05 08:36:49",
                "index": 35,
                "user": "nnanda2016"
            },
            {
                "id": "5be0014aee8e69215343b30a",
                "text": "i fixed `Status`, by applying `doOnSuccessOrError` in the custom filter\u2026but i am clueless how to deal with `Content-Length` header",
                "time": "2018-11-05 08:37:30",
                "index": 36,
                "user": "nnanda2016"
            },
            {
                "id": "5be001794775f53eb3430569",
                "text": "hmmm strange, don\u2019t know what to tell ya",
                "time": "2018-11-05 08:38:17",
                "index": 37,
                "user": "pbriggs28"
            },
            {
                "id": "5be001a3e078fc446fcaa4aa",
                "text": "it\u2019s alright boss\u2026.thanks for discussing\u2026",
                "time": "2018-11-05 08:38:59",
                "index": 38,
                "user": "nnanda2016"
            },
            {
                "id": "5be001b6c7440646d71121d8",
                "text": "i am gonna deal with it tomorrow :-D",
                "time": "2018-11-05 08:39:18",
                "index": 39,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 799,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5dc154c5a9f0dc24852bcaf8",
                "text": "I don't seem to get Prometheus working in my boot app (kotlin + gradle, if this is relevant). I added spring-boot-starter-actuator and io.prometheus:simpleclient_common. /actuator/ works, but only exposes /health and /info, /actuator/prometheus is not listed and not exposed. Google and Documentation seems to fail me finding out what more I need to get it working. Any directions, please?",
                "time": "2019-11-05 10:53:57",
                "index": 0,
                "user": "Stummi"
            },
            {
                "id": "5dc15a71a3f0b17849eeeade",
                "text": "@Stummi You need a dependency on Micrometer's micrometer-prometheus-registry module",
                "time": "2019-11-05 11:18:09",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dc15ac0bbdf5f17b420b616",
                "text": "@wilkinsona  just figured it out and was about writing it here :) thank you. Plus I need to enable web exposure of the prometheus endpoint explicitely:\n\n```\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: info, health, prometheus\n```",
                "time": "2019-11-05 11:19:28",
                "index": 2,
                "user": "Stummi"
            }
        ]
    },
    {
        "id": 800,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c98f1f08aa66959b66c2197",
                "text": "I've an issue with Spring Boot 2.1.3 and custom configuration for reactive mongodb. Sample project: https://github.com/lradziwonowicz/spring-boot-mongodb-reactive-config The app uses own `AbstractReactiveMongoConfiguration` implementation to use custom configuration for Mongo URI and database name. It works and it connects to mongo on port `27018` but at the same time it uses probably auto configuration and tries to connect on default port `27017`.\n\nI already tried to use `@EnableReactiveMongoRepositories` or to exclude `MongoAutoConfiguration.class` and `MongoDataAutoConfiguration.class`\nAny idea how to use and configure only reactive mongodb? ",
                "time": "2019-03-25 15:21:20",
                "index": 0,
                "user": "lradziwonowicz"
            },
            {
                "id": "5c991c1e3dd81711494dd143",
                "text": "@lradziwonowicz Thanks for creating a sample. I think you need the exclusions for the auto-configuration classes and, additionally, you need `@Bean` on your `reactiveMongoClient()` method.",
                "time": "2019-03-25 18:21:18",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5c9a2cf10d719050576aec2b",
                "text": "@wilkinsona thanks for the hints, I've found a solution. I updated the sample project: https://github.com/lradziwonowicz/spring-boot-mongodb-reactive-config",
                "time": "2019-03-26 13:45:08",
                "index": 25,
                "user": "lradziwonowicz"
            },
            {
                "id": "5c9a4e241f74fc4d4c9f99a0",
                "text": "mm",
                "time": "2019-03-26 16:07:00",
                "index": 31,
                "user": "theblackwaltz"
            }
        ]
    },
    {
        "id": 801,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bf3cd722ef5b06e40953cc0",
                "text": "I'm getting this error when using spring boot version 2.1.0.RELEASE + Greenwich.M1  and webflux\n> The type javax.servlet.http.HttpServletRequest cannot be resolved. It is indirectly referenced from required .class files",
                "time": "2018-11-20 09:01:38",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cd84ddad8777ef91640d",
                "text": "downgrading back to 2.0.5 and Finchley.RELEASE doesn't have this error",
                "time": "2018-11-20 09:01:56",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3ce9d4f4bb579f3a4f07c",
                "text": "@chad_d_stud_twitter please don\u2019t ask Spring Cloud questions here",
                "time": "2018-11-20 09:06:37",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5bf3ceac4f4bb579f3a4f0f5",
                "text": "i wasn't sure if this is a boot or a cloud issue",
                "time": "2018-11-20 09:06:52",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3ceb1f9993b42673a827e",
                "text": "so might as well start somewhere",
                "time": "2018-11-20 09:06:57",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3ceb51ad4155d3af2832b",
                "text": "@bilak there is a #spring-data channel",
                "time": "2018-11-20 09:07:01",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf062735965dfe04425b",
                "text": "@chad_d_stud_twitter there error must have some sort of context",
                "time": "2018-11-20 09:08:22",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf1e951402310a771fda",
                "text": "well i tried changing an existing service to use webflux",
                "time": "2018-11-20 09:08:46",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cf2c951402310a77204f",
                "text": "and i just removed all cloud dependencies now. the error persists",
                "time": "2018-11-20 09:09:00",
                "index": 8,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cf34f9993b42673a85e2",
                "text": "You said you just upgraded ",
                "time": "2018-11-20 09:09:08",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf4080652945c38e6d4d",
                "text": "It\u2019s hard to help if we have to guess things",
                "time": "2018-11-20 09:09:20",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf5bddad8777ef917028",
                "text": "i copied an existing service with 2.1.0 ",
                "time": "2018-11-20 09:09:47",
                "index": 11,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cf5e80e46b4266dd80aa",
                "text": "Your service still uses the servlet API indirectly",
                "time": "2018-11-20 09:09:50",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf7080652945c38e6ec6",
                "text": "that was wroking but i wanted to start using webflux on this one since it's a relatively newer service here. ",
                "time": "2018-11-20 09:10:08",
                "index": 13,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cf74f9993b42673a8830",
                "text": "So it works with 2.0.5 but doesn\u2019t with 2.1 (same exact code without spring cloud?)",
                "time": "2018-11-20 09:10:12",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf784f4bb579f3a4f511",
                "text": "yep",
                "time": "2018-11-20 09:10:16",
                "index": 15,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cf87ddad8777ef9170f6",
                "text": "Can you gist the build file?",
                "time": "2018-11-20 09:10:31",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5bf3cf8c5f5c925040877e71",
                "text": "hold on a sec",
                "time": "2018-11-20 09:10:36",
                "index": 17,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cf95951402310a772300",
                "text": "(a project that reproduces it would be better)",
                "time": "2018-11-20 09:10:45",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5bf3cfb980652945c38e70cc",
                "text": "```\nbuildscript {\n\text {\n\t\tspringBootVersion = '2.1.0.RELEASE'\n\t}\n\trepositories {\n\t\tmavenCentral()\n\t\tmaven { url \"https://repo.spring.io/snapshot\" }\n        maven { url \"https://repo.spring.io/milestone\" }\n\t}\n\tdependencies {\n\t\tclasspath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n\t}\n}\n\nplugins {\n    id 'net.ltgt.apt' version '0.18'\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\ngroup = 'project01'\nversion = '1.0.0-SNAPSHOT'\nsourceCompatibility = 1.8\n\nrepositories {\n\tmavenCentral()\n\tmaven { url \"https://repo.spring.io/snapshot\" }\n    maven { url \"https://repo.spring.io/milestone\" }\n}\n\n\ndependencies {\n\timplementation('org.springframework.boot:spring-boot-starter-actuator')\n\timplementation('org.springframework.boot:spring-boot-starter-webflux')\n\timplementation('org.springframework.cloud:spring-cloud-starter-openfeign')\n\timplementation('org.springframework.boot:spring-boot-starter-thymeleaf')\n\timplementation('org.springframework.boot:spring-boot-starter-security')\n\timplementation('org.springframework.boot:spring-security-jwt')\n\t//implementation('org.springframework.session:spring-session-core')\n\timplementation('io.jsonwebtoken:jjwt:0.9.1')\n\t//runtime('org.springframework.boot:spring-boot-devtools')\n\tcompileOnly('org.projectlombok:lombok')\n\tannotationProcessor \"org.projectlombok:lombok\"\n\ttestImplementation('org.springframework.boot:spring-boot-starter-test')\n\ttestImplementation('io.projectreactor:reactor-test')\n\t\n\t// Persistence\n\t//implementation 'org.mariadb.jdbc:mariadb-java-client'\n\t//implementation('org.springframework.boot:spring-boot-starter-data-jpa')\n\t//runtime('com.h2database:h2')\n\t\n\t// Config Server\n\t//implementation('org.springframework.cloud:spring-cloud-starter-config')\n\t//implementation(\"org.springframework.cloud:spring-cloud-config-client\")\n\n\tannotationProcessor \"org.springframework.boot:spring-boot-configuration-processor\"\n}\n```",
                "time": "2018-11-20 09:11:21",
                "index": 19,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cfda951402310a7724d6",
                "text": "i also changed start web related object to webflux where applicable. like HttpServletRequest to ServerHttpRequest and so on",
                "time": "2018-11-20 09:11:54",
                "index": 20,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cfdea47c6c5d3b147f33",
                "text": "\u201cwithout Spring Cloud?\"",
                "time": "2018-11-20 09:11:58",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5bf3cfe26183a977eee6871c",
                "text": "yep",
                "time": "2018-11-20 09:12:02",
                "index": 22,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3cfe76183a977eee68737",
                "text": "there is spring cloud there",
                "time": "2018-11-20 09:12:07",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5bf3cff61665691e0fd12ad0",
                "text": "i'll remove those to rule it out",
                "time": "2018-11-20 09:12:22",
                "index": 24,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d0132ef5b06e40954e9d",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/kaXu/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/kaXu/image.png)",
                "time": "2018-11-20 09:12:51",
                "index": 25,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d01780e46b4266dd861d",
                "text": "i get something like that on eclipse. it's doesn't tell me much",
                "time": "2018-11-20 09:12:55",
                "index": 26,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d0394720c11e0e95e15c",
                "text": "it's commented out",
                "time": "2018-11-20 09:13:29",
                "index": 27,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d04ff9993b42673a8d5e",
                "text": "Sorry I am stopping now as this isn\u2019t a very effective use of my time. I can\u2019t help you with screenshots and incomplete stacktraces. Happy to return to it once you provide relevant details or if you manage to share a project",
                "time": "2018-11-20 09:13:51",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5bf3d06c9f5a9e6e411380b6",
                "text": "well i can't give you enough. the error is just that",
                "time": "2018-11-20 09:14:20",
                "index": 29,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d0706183a977eee68bd7",
                "text": "it won't tell me anything else",
                "time": "2018-11-20 09:14:24",
                "index": 30,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d09c5f5c9250408786cf",
                "text": "and i dont' see how a commented out line for cloud has any effect on the workspace",
                "time": "2018-11-20 09:15:08",
                "index": 31,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d0dc2735965dfe044ced",
                "text": "You\u2019re claiming something works with 2.0.x but not with 2.1.x. I am not aware of any such dependency change in Spring Boot so I am trying to see where the change could come from. As I said, this is wild unproductive guess.",
                "time": "2018-11-20 09:16:12",
                "index": 32,
                "user": "snicoll"
            },
            {
                "id": "5bf3d0f2b86c70503f5c88f0",
                "text": "okay let me make this very simple",
                "time": "2018-11-20 09:16:34",
                "index": 33,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d1074720c11e0e95e7c2",
                "text": "with that simple build.gradle file. a hello world service isn't working",
                "time": "2018-11-20 09:16:55",
                "index": 34,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d118f9993b42673a9084",
                "text": "Please share a github project",
                "time": "2018-11-20 09:17:12",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5bf3d11c6183a977eee690f7",
                "text": "it randomly errors out at a line of code with that servlet thing error",
                "time": "2018-11-20 09:17:16",
                "index": 36,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d12e2735965dfe044f4b",
                "text": "the only thing i changed is web to webflux",
                "time": "2018-11-20 09:17:34",
                "index": 37,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d155f9993b42673a9242",
                "text": "i tried deleting that class with the error and the error moves somewhere else",
                "time": "2018-11-20 09:18:13",
                "index": 38,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3d1c6f9993b42673a9424",
                "text": "You have \"implementation('org.springframework.cloud:spring-cloud-starter-openfeign')\"",
                "time": "2018-11-20 09:20:06",
                "index": 39,
                "user": "legart"
            },
            {
                "id": "5bf3d1d0b86c70503f5c90e0",
                "text": "Does that not pull in stuff that depends on servlets?",
                "time": "2018-11-20 09:20:16",
                "index": 40,
                "user": "legart"
            },
            {
                "id": "5bf3d1d04720c11e0e95ecda",
                "text": "tried removing that too",
                "time": "2018-11-20 09:20:16",
                "index": 41,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3db441ad4155d3af2daba",
                "text": "okay i found the issue. some of the classes were still referencing java servlets WITHOUT throwing a compiler error in eclipse",
                "time": "2018-11-20 10:00:36",
                "index": 42,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3db61b86c70503f5ccf8e",
                "text": "removing these classes fixed the problem",
                "time": "2018-11-20 10:01:05",
                "index": 43,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3db9eb86c70503f5cd085",
                "text": "Thanks for the feedback. Please spend a bit of time to properly describe the problem going forward \"downgrading back to 2.0.5 and Finchley.RELEASE doesn't have this error\u201d isn\u2019t acurate and sent us in the wrong direction",
                "time": "2018-11-20 10:02:06",
                "index": 44,
                "user": "snicoll"
            },
            {
                "id": "5bf3dc232ef5b06e4095a1d4",
                "text": "i wish i could've given you more info but from my end i wsan't getting any info either :-/",
                "time": "2018-11-20 10:04:19",
                "index": 45,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3dc3ab86c70503f5cd411",
                "text": "just some cryptic red marker telling my a *class* was looking for a servlet",
                "time": "2018-11-20 10:04:42",
                "index": 46,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bf3dc71f9993b42673adf26",
                "text": "i tried closing the project and restarting eclipse but it didn't fix the issue either. it was only after removing those unneeded classes when it started working again",
                "time": "2018-11-20 10:05:37",
                "index": 47,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 802,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cfe13d2f3a60a79a484e389",
                "text": "can i reference property values for annotations that accept only numeric?",
                "time": "2019-06-10 08:24:50",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5cfe13e3bf4cbd167c5f29e4",
                "text": "Example @Max(${prop.max})",
                "time": "2019-06-10 08:25:07",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5cfe13f882c2dc79a57fe114",
                "text": "the java compiler doesn\u2019t understand that",
                "time": "2019-06-10 08:25:28",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5cfe19b06fc5846bab92402e",
                "text": "No. It has to compile before anything can do property substitution at runtime.",
                "time": "2019-06-10 08:49:52",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5cfe19f96f530d3b6169ec01",
                "text": "i know it doesn\u2019t. i\u2019m asking if it\u2019s possible or there\u2019s a proper way to do this",
                "time": "2019-06-10 08:51:05",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5cfe1a8bbf4cbd167c5f5e28",
                "text": "No, it's not possible.",
                "time": "2019-06-10 08:53:31",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5cfe1cf36f530d3b616a024a",
                "text": "thanks",
                "time": "2019-06-10 09:03:47",
                "index": 6,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 803,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e15a4580ba7b60f2042a9ca",
                "text": "Hi,\nWhat's the best way to stop requests for favicon.ico in 2.2.x ? i'm using freemarker.",
                "time": "2020-01-08 09:43:52",
                "index": 0,
                "user": "AnwarJabal_twitter"
            },
            {
                "id": "5e15b3c83679536f962c831c",
                "text": "@AnwarJabal_twitter the only way is to never have anyone use a web browser",
                "time": "2020-01-08 10:49:44",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e15b3fec395034902649b39",
                "text": "Though if you just want a different path for the favicon you can add a `<link>`",
                "time": "2020-01-08 10:50:38",
                "index": 2,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 804,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5caab7c2f851ee043d7d61ac",
                "text": "Hello ,Can somebody help me?  I use Data JPA to query with \"query.createQuery(values).getListResult()\",then it wa showed that java.lang.StringIndexOutOfBoundsException: String index out of range: 0 atat org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:214).",
                "time": "2019-04-08 02:53:54",
                "index": 0,
                "user": "binaryjerry"
            },
            {
                "id": "5caaeeee31aec969e86dd3e7",
                "text": "@binaryjerry, check the `values` object you pass to the query creator, the error's probably related to that",
                "time": "2019-04-08 06:49:18",
                "index": 4,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 805,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cfd71936f530d3b6165c55d",
                "text": "hello everyone! i have question: in previous spring boot mvc application we used to write `@Bean` of ViewResolver prefix and suffix `.jsp` views but in spring boot 2 > i don't see any custom configuration in many tutorials they are like create spring boot application using spring.io initializer and start developing `@Controller` and views (`jsp/html-for-thymeleaf`) does spring-boot maintain all these configuration internally ?? if yes then how ?? and if any one wants to configure manually how could i write that ?? ",
                "time": "2019-06-09 20:52:35",
                "index": 0,
                "user": "iammohsinar"
            },
            {
                "id": "5cfdfbf9f3a60a79a4843ff0",
                "text": "@iammohsinar There are application properties for configuring the view prefix and suffix. See the section in the reference documentation on how to [customize `ViewResolvers`](https://docs.spring.io/spring-boot/docs/2.1.x/reference/htmlsingle/#howto-customize-view-resolvers)",
                "time": "2019-06-10 06:43:05",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 806,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c3f0091ba5936605bca8101",
                "text": "Hello, I'm quite new to SpringBoot, I mainly took over someone else's work and am learning by trial and error :) I have a relatively simple application with 4 scheduled Components. My problem is that while one of them is executing, the other three don't seem to start at all until it finishes. There is no locking and although the Components are using the same database, they use a different connection. I've put a log message as the very first command in each component and based on the logs, they never even start, so DB access doesn't even come into play. I've set @EnableAsync in my main Application and all components are set as @Async, but no joy. Any ideas what I should look at?",
                "time": "2019-01-16 09:59:45",
                "index": 0,
                "user": "davorm_gitlab"
            },
            {
                "id": "5c3f2812ba355012a44a05a4",
                "text": "@davorm_gitlab async and scheduling are two different features. Do you expect the async method to be called automatically or something?",
                "time": "2019-01-16 12:48:18",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5c3f389dcb47ec300051ee2c",
                "text": "@snicoll I understand that, yes. All my Components have @EnableScheduling and run() method is @Scheduled with fixedDelayString. I was under the impression that they will run in parallel when the delay expires, independently of each other. Is that not the case?",
                "time": "2019-01-16 13:58:53",
                "index": 31,
                "user": "davorm_gitlab"
            }
        ]
    },
    {
        "id": 807,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5de0dbde550662459836888e",
                "text": "I have a usability question. Let's imagine that I define `spring.datasource.url` as a property and I forget to add a connection pool. I would expect that the datasource I have is connected with the datasource url that I provided. However, this is not the case, it would create an embedded datasource with h2 (I have multiple datasource drivers on the classpath for testing purposes). I tried looking for an issue, but I couldn't find, and I am not sure if this is an issue or not.",
                "time": "2019-11-29 08:50:38",
                "index": 0,
                "user": "filiphr"
            },
            {
                "id": "5de0edf21659720ca8c89b64",
                "text": "I've had this problem a few times, It is not load application-dev .yml file when run spring project . you can remove project ,and reload project to idea\uff0cor annotation <build><resource>.......</resource></build> at pom.xml ,it may be a bug of idea\uff0cResource files cannot be packaged to project\u3002@Filip Hrisafov",
                "time": "2019-11-29 10:07:46",
                "index": 2,
                "user": "ShareTheWorld"
            },
            {
                "id": "5de0f535c3d6795b9fefa029",
                "text": "@ShareTheWorld for me the problem was a missing connection pool in the dependencies, but my question is more directed to the Spring Boot team and whether an issue is worthwhile for this",
                "time": "2019-11-29 10:38:45",
                "index": 4,
                "user": "filiphr"
            },
            {
                "id": "5de0fc6ac3d6795b9fefd64b",
                "text": "@filiphr That doesn't sound particularly user-friendly. Can you please open an issue so that we can investigate?",
                "time": "2019-11-29 11:09:30",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5de1062532df1245cbb0664e",
                "text": "Thanks for the confirmation @wilkinsona, I created https://github.com/spring-projects/spring-boot/issues/19192",
                "time": "2019-11-29 11:51:01",
                "index": 6,
                "user": "filiphr"
            },
            {
                "id": "5de10630b065c6433c074ef5",
                "text": "Looked more into it and I have a suggestion how it could be improved",
                "time": "2019-11-29 11:51:12",
                "index": 7,
                "user": "filiphr"
            }
        ]
    },
    {
        "id": 808,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3105ec8b6399655e11fd07",
                "text": "Hi. I have a question to which i couldn't find answer on Google.  I have written a `ResponseBodyAdvice` for my controllers in spring boot app. The ResponseBodyAdvice adds additional attributes to the response output which are common for all controllers. However, if a controller is returning null, then ResponseBodyAdvice doesn't get called.  How to overcome this behavior?",
                "time": "2019-01-05 19:30:52",
                "index": 0,
                "user": "apexkid"
            },
            {
                "id": "5c31bf4f3cf6c35a849b5e3f",
                "text": "@apexkid where are you planning to add those attributes when the response is null? ",
                "time": "2019-01-06 08:41:51",
                "index": 1,
                "user": "selimssevgi"
            },
            {
                "id": "5c31bf89bd592b2e6e5dc5da",
                "text": "@selimssevgi I expect the beforeBodyWrite function to get called. It will add the extra attributes.",
                "time": "2019-01-06 08:42:49",
                "index": 2,
                "user": "apexkid"
            },
            {
                "id": "5c31c19c8b6399655e15efd8",
                "text": "@apexkid thank you for the answer, lets assume that it is called, body parameter is going to be null. are you going to create a new object for body and add your common attributes?",
                "time": "2019-01-06 08:51:40",
                "index": 3,
                "user": "selimssevgi"
            },
            {
                "id": "5c31d0f226d86e4d56334896",
                "text": "yeah that would work for me @selimssevgi ",
                "time": "2019-01-06 09:57:06",
                "index": 4,
                "user": "apexkid"
            },
            {
                "id": "5c31d5a857c6883f9b6f4bf4",
                "text": "@apexkid but that's the problem, that body parameter will be passed to you from outside, you cannot change its reference, even though you made that manipulation in the method body it will not be effective. so i think we may look for a way to make those controller methods not to return null values. Maybe another aspect construction could work. Like observing the return value and when it is null, then you could instantiate your base object and return that instead. Then beforeBodyWrite will be called every time, and the body will not be null, so you could add common attributes",
                "time": "2019-01-06 10:17:12",
                "index": 7,
                "user": "selimssevgi"
            }
        ]
    },
    {
        "id": 809,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d1aa1653d12712ce4c97a9b",
                "text": "I am building a Spring Boot application using Spring Boot 2.1.6-RELEASE I created within IntelliJ using their Spring Initializr supporting JUnit5 testing.  When I attempt to run the Initializr generated Application Test I am receiving the following error message:\n\n`java.lang.NoSuchMethodError: org.springframework.util.Assert.state(ZLjava/util/function/Supplier;)V`\n\nWhile this is similar to a few errors reported during Spring Boot development, they were all resolved.  Any suggestions where to look for the cause of the error would be appreciated.",
                "time": "2019-07-02 00:12:21",
                "index": 0,
                "user": "dfcoffin"
            },
            {
                "id": "5d1aa7c5490abf627a5c5e7b",
                "text": "I deleted the auto generated main Test class and used IntelliJ to auto generate the main Test class.    The generated test includes the following import (which is not used):\n\n`import static org.junit.jupiter.api.Assertions.*;`\n\nHovering over the statement generates `Unused import (specified in template)`",
                "time": "2019-07-02 00:39:33",
                "index": 1,
                "user": "dfcoffin"
            },
            {
                "id": "5d1b0126dd5b167204d8c652",
                "text": "@dfcoffin It sounds like to have an old, and incompatible, version of Spring Framework on the classpath. What dependencies has IntelliJ given you?",
                "time": "2019-07-02 07:00:54",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d1b568884e3391a5abe87b3",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/tlQO/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/tlQO/image.png)",
                "time": "2019-07-02 13:05:12",
                "index": 6,
                "user": "dfcoffin"
            }
        ]
    },
    {
        "id": 810,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c2bb26c6649aa1f8204e4f2",
                "text": "If I have a class with `@Autowired private CrudRepository[] repositories;`. How do I get the name of each repository injected? I somehow end up with `com.sun.proxy.$ProxyXXX`(where xxx is a thre digit int). I did it once, but I don't know anymore how and `repository.getClass().getName()`always return the proxy-value thing... :/",
                "time": "2019-01-01 18:33:16",
                "index": 0,
                "user": "PaddaelsM"
            },
            {
                "id": "5c2bb39a2863d8612bc1fa57",
                "text": "@PaddaelsM use `Map` instead,  each key will be the class name",
                "time": "2019-01-01 18:38:18",
                "index": 1,
                "user": "marcosbarbero"
            },
            {
                "id": "5c2bb4d7f6166a3027a38f62",
                "text": "awesome. thank you very much!",
                "time": "2019-01-01 18:43:35",
                "index": 2,
                "user": "PaddaelsM"
            }
        ]
    },
    {
        "id": 811,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bef001208b8483c4e0b7d17",
                "text": "Hello Spring Boot team, is there a way to provide `all-media-types` in this config - `server.compression.mime-types`?\nBasically we use custom media type and those are generated dynamically (e.g `application/vnd.mycorp.platform.someResource-detail+json; version=1`). And, without a wildcard support for `server.compression.mime-types`, it will be kind of complicated for us",
                "time": "2018-11-16 17:36:18",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5bef00736867943028ab450b",
                "text": "our app is in SPring Boot 1.5 and uses embedded tomcat.",
                "time": "2018-11-16 17:37:55",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5bef0103de42d46bba752f8c",
                "text": "@nnanda2016 That would require the underlying container to support a wildcard and I'm not sure that Tomcat does.",
                "time": "2018-11-16 17:40:19",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bef0196534b2745c486510e",
                "text": "Looking at Tomcat's code it uses a startsWith check",
                "time": "2018-11-16 17:42:46",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5bef01a9e9222317e88a9cb1",
                "text": "oh\u2026.",
                "time": "2018-11-16 17:43:05",
                "index": 4,
                "user": "nnanda2016"
            },
            {
                "id": "5bef01cb9f5a9e6e41f626dd",
                "text": "So, depending on how dynamic your mime types are, you might be able to use `application/vnd.mycorp` or something like that",
                "time": "2018-11-16 17:43:39",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bef01cc08b8483c4e0b7d1c",
                "text": "looks like we have to add some code",
                "time": "2018-11-16 17:43:40",
                "index": 6,
                "user": "nnanda2016"
            },
            {
                "id": "5bef01dc493976230faccd0c",
                "text": "yea that works too",
                "time": "2018-11-16 17:43:56",
                "index": 7,
                "user": "nnanda2016"
            },
            {
                "id": "5bef0201f526ac142efb68ec",
                "text": "thanks @wilkinsona ",
                "time": "2018-11-16 17:44:33",
                "index": 8,
                "user": "nnanda2016"
            },
            {
                "id": "5bef02cf493976230faccd10",
                "text": "any doc to refer for the same for Spring Boot 2 (which uses reactor-netty)? ",
                "time": "2018-11-16 17:47:59",
                "index": 9,
                "user": "nnanda2016"
            },
            {
                "id": "5bef03546867943028ab4515",
                "text": "@wilkinsona which class is this from embedded tomcat which uses this `startsWith`?",
                "time": "2018-11-16 17:50:12",
                "index": 10,
                "user": "nnanda2016"
            },
            {
                "id": "5bef03e0f9993b42671d2f5b",
                "text": "`org.apache.coyote.CompressionConfig`, specifically its `startsWithStringArray(String[], String)` method",
                "time": "2018-11-16 17:52:32",
                "index": 11,
                "user": "wilkinsona"
            },
            {
                "id": "5bef0487d0070c489a36127a",
                "text": "is it part of embedded-tomcat? i am not able to see in `tomcat-embed-core-8.0.32.jar`",
                "time": "2018-11-16 17:55:19",
                "index": 12,
                "user": "nnanda2016"
            },
            {
                "id": "5bef04fc2ef5b06e4077f435",
                "text": "Ah, I've got Tomcat 9 in my workspace (Boot 2.1). Maybe it's moved. Let me find the equivalent in 8",
                "time": "2018-11-16 17:57:16",
                "index": 13,
                "user": "wilkinsona"
            },
            {
                "id": "5bef05b7534b2745c4866ff6",
                "text": "If you're using Boot 1.5, you should be using Tomcat 8.5. It has a `org.apache.coyote.CompressionConfig` class that's just the same as Tomcat 9's.",
                "time": "2018-11-16 18:00:23",
                "index": 14,
                "user": "wilkinsona"
            },
            {
                "id": "5bef061ade42d46bba7551cb",
                "text": "In Tomcat 8.0, the equivalent method is `org.apache.coyote.http11.AbstractHttp11Processor.startsWithStringArray(String[], String)`",
                "time": "2018-11-16 18:02:02",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5bef0813f526ac142efb68f6",
                "text": "Got it\u2026thanks...",
                "time": "2018-11-16 18:10:27",
                "index": 16,
                "user": "nnanda2016"
            },
            {
                "id": "5bef093ee9222317e88a9cbb",
                "text": "just verified; it\u2019s working. is it a candidate for a mention in document? ",
                "time": "2018-11-16 18:15:26",
                "index": 17,
                "user": "nnanda2016"
            },
            {
                "id": "5bef094108b8483c4e0b7d31",
                "text": ":)",
                "time": "2018-11-16 18:15:29",
                "index": 18,
                "user": "nnanda2016"
            },
            {
                "id": "5bef2025061f2e6bbb7ae70d",
                "text": "The behaviour is specific to Tomcat so, if it's going to be documented anywhere, I think it should be in Tomcat's documentation",
                "time": "2018-11-16 19:53:09",
                "index": 19,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 812,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d2dc8cc54d338393718f1fe",
                "text": "Hello, can someone please advise regarding the usage of `X-Forwarded-For` headers? I need to set these headers in order to call an API endpoint via the reactive `WebClient`, like so:\n```\nwebClient.get()\n                .uri(uriBuilder -> buildProperUri(inputs, uriBuilder))\n                .headers(headers -> buildProperHeaders(inputs, jwt, headers))\n                .retrieve()\n\t\t\t\t// process the request\n\t\t\t\t\n    private static void buildProperHeaders(...) { //this is where I set the `X-Forwarded-For`\n        headers.add(HttpHeaders.AUTHORIZATION, jwt);\n        if (StringUtils.isNotBlank(inputs.getIpAddress())) {\n            headers.put(com.google.common.net.HttpHeaders.X_FORWARDED_FOR, Collections.singletonList(inputs.getIpAddress()));\n        }\n    }\n\t```\nHowever, when I make the actual request, the value of the header appears to be overridden. When I log the request headers via an `ExchangeFilterFunction`, I get:\n```\n[Content-Type:\"application/json\", Authorization:\"<auth token>\", X-Forwarded-For:\"174.63.102.90\"] <-- the header is there\n```\nHowever, when I get the response from the API that I called, it looks as if they ignored the header, as they respond with my machine's IP address (instead of the one I set in `X-Forwarded-For`).\n\nAm I doing something wrong when calling this external API?",
                "time": "2019-07-16 12:53:32",
                "index": 0,
                "user": "jiallombardo"
            },
            {
                "id": "5d2dc95f54d338393718f5a3",
                "text": "What do you mean by \"as they respond with my machine's IP address\" ?",
                "time": "2019-07-16 12:55:59",
                "index": 1,
                "user": "bclozel"
            },
            {
                "id": "5d2dc9dd01621760bcc4c955",
                "text": "The API response depends on the IP address sent via `X-Forwarded-For`, and it also has a specific field that is described in their documentation as \"The real ip of the client retrieved from the xff-header.\".",
                "time": "2019-07-16 12:58:05",
                "index": 2,
                "user": "jiallombardo"
            },
            {
                "id": "5d2dca117dbfff3242ba910d",
                "text": "And both the response and the value of that field is not equal to the value of the `X-Forwarded-For` that I explicitly set, but to my own IP address",
                "time": "2019-07-16 12:58:57",
                "index": 3,
                "user": "jiallombardo"
            },
            {
                "id": "5d2dcbb14d75053241566b8e",
                "text": "If the header is really sent by the client, as expected, then it's a problem with the server not parsing that header as expected.",
                "time": "2019-07-16 13:05:53",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5d2dd7074f7f9e219c04391e",
                "text": "So there is no chance that this header gets cropped / overridden somewhere along the way to the destination server, correct?",
                "time": "2019-07-16 13:54:15",
                "index": 5,
                "user": "jiallombardo"
            },
            {
                "id": "5d2dd9094f7f9e219c044d0f",
                "text": "@jiallombardo you can use the wiretap option the webclient connector to really see that 's being sent on the network. Once sent, it's out of WebClient's hands. Another network appliance or the server itself might strip that header. Is that a 3rd party service or are you running that service yourself?",
                "time": "2019-07-16 14:02:49",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5d2dd92a3be99c47865ec2e9",
                "text": "Also, \"X-Forwarded-For\" is not the standard header, maybe the remote service is using \"Forwarded\"?",
                "time": "2019-07-16 14:03:22",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5d2dd996570ac36f8d350704",
                "text": "@jiallombardo one thing you could check is whether a similar curl request from your own computer is showing the same behavior",
                "time": "2019-07-16 14:05:10",
                "index": 11,
                "user": "bclozel"
            },
            {
                "id": "5d2dda173b41924785cd1856",
                "text": "@bclozel thank you, I'll try wiretap and raw Curl for comparison. The \"X-Forwarded-For\" header was explicitly mentioned in the documentation of the API I'm using, but I'll try setting \"forwarded\" as well.",
                "time": "2019-07-16 14:07:19",
                "index": 12,
                "user": "jiallombardo"
            },
            {
                "id": "5d2dda953b41924785cd1ee7",
                "text": "The curl, in fact, returns the same response as the programmatic call.",
                "time": "2019-07-16 14:09:25",
                "index": 13,
                "user": "jiallombardo"
            },
            {
                "id": "5d2ddb16f4fe9439711b28c5",
                "text": "Ouch, so it's not really related to your code but rather the request format itself (or some network appliance stripping the header)",
                "time": "2019-07-16 14:11:34",
                "index": 14,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 813,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce54c849d64e537bcf0ad66",
                "text": "I'm not getting `NoUniqueBeanDefinitionException` when I have more than one `@Bean` in appliaction context of a type `T` & Inject into another bean creation using `@Configuration`. But when I lookup application context using `applicationContext.getBean(T.class)`, I get this expection. Note that none of the `@Bean`s that contibuted these are marked as `@Primary`. Any idea why this is happening?",
                "time": "2019-05-22 13:20:04",
                "index": 0,
                "user": "thekalinga"
            },
            {
                "id": "5ce54eca0ac9852a951fa5c0",
                "text": "They might be pointing to same non uniqueness.. just specify them with different qualifier....",
                "time": "2019-05-22 13:29:46",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5ce5502f879f4478c7c1e54f",
                "text": "Thanks for your response .I know how to make it work, but I would like to know how is this injection currently working as it is",
                "time": "2019-05-22 13:35:43",
                "index": 2,
                "user": "thekalinga"
            },
            {
                "id": "5ce5519cd22ba766a2dea8f4",
                "text": "And strangely I'm seeing this behaviour only with the `@Bean`s created using my own autoconfiguration",
                "time": "2019-05-22 13:41:48",
                "index": 3,
                "user": "thekalinga"
            },
            {
                "id": "5ce551b813e9854e33497ca7",
                "text": "that's because if you have two same-type bean methods in the same conf spring names them after the creation method",
                "time": "2019-05-22 13:42:16",
                "index": 4,
                "user": "tonisostrat"
            },
            {
                "id": "5ce551f56366992a9401164d",
                "text": "The problem is how it is resolving a unique bean when I have not marked any bean as primary",
                "time": "2019-05-22 13:43:17",
                "index": 5,
                "user": "thekalinga"
            },
            {
                "id": "5ce55214ef853135c803db11",
                "text": "it tries to automatch to the variable name aswell",
                "time": "2019-05-22 13:43:48",
                "index": 6,
                "user": "tonisostrat"
            },
            {
                "id": "5ce552157c363c75a7240130",
                "text": "@wilkinsona Any ideas?",
                "time": "2019-05-22 13:43:49",
                "index": 7,
                "user": "thekalinga"
            },
            {
                "id": "5ce5521fecdf942b4c278629",
                "text": "Oh ook..",
                "time": "2019-05-22 13:43:59",
                "index": 8,
                "user": "thekalinga"
            },
            {
                "id": "5ce552239404bf2aed8d7ad7",
                "text": "You are right..",
                "time": "2019-05-22 13:44:03",
                "index": 9,
                "user": "thekalinga"
            },
            {
                "id": "5ce55232ecdf942b4c278643",
                "text": "Completely forgot :) Thanks!",
                "time": "2019-05-22 13:44:18",
                "index": 10,
                "user": "thekalinga"
            }
        ]
    },
    {
        "id": 814,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e39abf1f301780b8366b14e",
                "text": "I need to override GsonFactoryBean to provide some customization it does not allow for. How do I make Spring use by factory and not the built in one?",
                "time": "2020-02-04 17:37:53",
                "index": 0,
                "user": "jasondlee"
            },
            {
                "id": "5e3a9d75fe0e6f74e9027757",
                "text": "@jasondlee In general, Spring Boot will never use the built-in one if you define your own instead",
                "time": "2020-02-05 10:48:21",
                "index": 1,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 815,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc13fde10bd4128a1c2b0d7",
                "text": "@wilkinsona regarding that multiple bean error i reported a while back, I found that this caused it:\n```\n@PropertySource(\"classpath:application-aws.properties\")\n@ConfigurationProperties(prefix = \"aws\")\npublic class AWSConfig {\n}\n```\n\nThis causes the error:\n> Field awsConfig in banana.config.AppConfig required a single bean, but 2 were found:\n\t- banana.config.AWSConfig: defined in null\n\t- aws-banana.config.AWSConfig: defined in null\n\nremoving the prefix sort of fixes the issue. It only happens in spring-boot 2.2.0.RELEASE but not on 2.1.7.RELEASE",
                "time": "2019-11-05 09:24:46",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc140b13d669b28a03b09c2",
                "text": "@chad_d_stud_twitter I would guess that `AWSConfig` is being picked up once by the new-in-2.2 configuration properties scanning and once by some other mechanism. We've realised that enabling configuration properties scanning by default was a mistake so it'll be opt-in in 2.2.1 (it already is opt-in in 2.2.1 snapshots). You can enable it using `@ConfigurationPropertiesScan`.",
                "time": "2019-11-05 09:28:17",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5dc140be2f8a0343573c25f7",
                "text": "okay i think i fixed i think",
                "time": "2019-11-05 09:28:30",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc140c5e469ef4358c7cdf8",
                "text": "with this:\n```\n@PropertySource(\"classpath:application-aws.properties\")\n@Configuration\n@ConfigurationProperties(prefix = \"aws\")\npublic class AWSConfig {\n```",
                "time": "2019-11-05 09:28:37",
                "index": 3,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc140cd10bd4128a1c2b7f1",
                "text": "Adding the @Configuration fixed it",
                "time": "2019-11-05 09:28:45",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc140e27477946bad308558",
                "text": "You shouldn't have `@Configuration` and `@ConfigurationProperties` on the same class. The former is to indicate that a class defines beans via `@Bean` methods.",
                "time": "2019-11-05 09:29:06",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5dc14125fb4dab784a6959e2",
                "text": "`@Configuration` is meta-annotated with `@Component` which is probably why adding it makes a difference. Just using `@Component` rather than `@Configuration` would be more conventional.",
                "time": "2019-11-05 09:30:13",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5dc14156ef84ab3786fc86bf",
                "text": "where do i apply the ConfigurationPropertiesScan? in this class?",
                "time": "2019-11-05 09:31:02",
                "index": 7,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc141b29c39821509e7c87f",
                "text": "@chad_d_stud_twitter we discussed this already and I mentioned that you must have another source of contribution for that bean. With the example above, the properties scan will contribute one but there is still another ocurence that should be in your own code",
                "time": "2019-11-05 09:32:34",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5dc141effb4dab784a696074",
                "text": "i\u2019ve scanned through the entire folder and i am 100% sure this is the only occurrence of this class anywhere ",
                "time": "2019-11-05 09:33:35",
                "index": 9,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc1420efb4dab784a6961e4",
                "text": "i\u2019ve tried a type search, resource search and a grep search. it is the only one there",
                "time": "2019-11-05 09:34:06",
                "index": 10,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc1421514d55a3785da2752",
                "text": "Sorry but I doubt that. If your actual code is the first code snippet, something else must reference to it",
                "time": "2019-11-05 09:34:13",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5dc1424ca3f0b17849ee3697",
                "text": "this is a configuration class so we\u2019re not directly referencing it",
                "time": "2019-11-05 09:35:08",
                "index": 12,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc1426514d55a3785da2b24",
                "text": "If the code is the first code snippet (with only the two annotations) it isn\u2019t no",
                "time": "2019-11-05 09:35:33",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5dc142889825bd6bac2d8bbe",
                "text": "what do you mean?",
                "time": "2019-11-05 09:36:08",
                "index": 14,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc14294ef84ab3786fc90d6",
                "text": "Anyway, arguing about that isn\u2019t going to fix your issue. Please take that feedback and revisit your arrangement. If you have a sample that reproduces the problem we can have a look",
                "time": "2019-11-05 09:36:20",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5dc1429a2a6494729c9f7db3",
                "text": "```\n@PropertySource(\"classpath:application-aws.properties\")\n@ConfigurationProperties(prefix = \"aws\")\npublic class AWSConfig {\n}```",
                "time": "2019-11-05 09:36:26",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5dc1429f2a6494729c9f7dc7",
                "text": "that\u2019s not a configuration class",
                "time": "2019-11-05 09:36:31",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5dc1433414d55a3785da315e",
                "text": "unless there\u2019s a class in spring boot somewhere that\u2019s named awsconfig as well?",
                "time": "2019-11-05 09:39:00",
                "index": 18,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc143419c39821509e7d6c8",
                "text": "no",
                "time": "2019-11-05 09:39:13",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5dc1437d10bd4128a1c2ca86",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/2NpR/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/2NpR/image.png)",
                "time": "2019-11-05 09:40:13",
                "index": 20,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc14380e469ef4358c7e6a1",
                "text": "i don\u2019t know what else to tell you. It\u2019s the only one",
                "time": "2019-11-05 09:40:16",
                "index": 21,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc143a3a3f0b17849ee40e3",
                "text": "Same here. It\u2019s not a class it\u2019s a reference to a class, something like `@Import(AWSConfig.class)` or some other mechanism that would contribute another bean of that type",
                "time": "2019-11-05 09:40:51",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5dc143c6ef84ab3786fc98dc",
                "text": "does @Import cause an issue like that? coz i\u2019m seeing such a line here",
                "time": "2019-11-05 09:41:26",
                "index": 23,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc14b70a03ae1584f6f4c17",
                "text": "@wilkinsona i\u2019m confused with your statement. You said I shouldn\u2019t have Configuration and ConfigurationProperties in the same class but this is the java doc of the latter:\n> Annotation for externalized configuration. Add this to a class definition or a @Bean method in a @Configuration class if you want to bind and validate some external Properties (e.g. from a .properties file).",
                "time": "2019-11-05 10:14:08",
                "index": 26,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc14d4314d55a3785da7b33",
                "text": "Yes, that's right. I said that you shouldn't have `@Configuration` and `@ConfigurationProperties` on the same class. By that I meant that the class itself should not be annotated with both `@Configuration` and `@ConfigurationProperties`. It is ok for a class that is annotated with `@Configuration` to have a `@Bean` method that is annotated with `@ConfigurationProperties` though. In that case you are stating that the bean produced by the `@Bean` method should have configuration properties bound to it.",
                "time": "2019-11-05 10:21:55",
                "index": 27,
                "user": "wilkinsona"
            },
            {
                "id": "5dc14db2a03ae1584f6f5e77",
                "text": "@chad_d_stud_twitter \n\n**either**\n\n```\n@ConfigurationProperties\npublic class ConfigurationPropertiesBean {}\n```\n\nOR\n\n```\n@Configuration\npublic class ConfigurationBean {\n\n  @Bean\n  @ConfigurationProperties\n  public ConfigurationPropertiesBean configurationProperties() {\n    return new ConfigurationPropertiesBean();\n  }\n}\n```",
                "time": "2019-11-05 10:23:46",
                "index": 28,
                "user": "tonisostrat"
            },
            {
                "id": "5dc1500ee886fb5aa2596ea0",
                "text": "Is this a proper use case?\n\n```\n@Configuration \n@EnableAsync \n@Import({ErrorConfig.class, AWSConfig.class}) \npublic class AppConfig { \n \n    @Autowired \n    private ErrorConfig errorConfig; \n \n    @Autowired \n    private AWSConfig awsConfig; \n}\n```",
                "time": "2019-11-05 10:33:50",
                "index": 29,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc1502cf26ea4729d5a4c14",
                "text": "sorry i didn\u2019t make this section of the project i\u2019m trying to clean their crap up before trying out spring boot 2.2.0",
                "time": "2019-11-05 10:34:20",
                "index": 30,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc151a69825bd6bac2df248",
                "text": "it's not a \"use case\", but it's a usage that should work",
                "time": "2019-11-05 10:40:38",
                "index": 31,
                "user": "OrangeDog"
            },
            {
                "id": "5dc1527b14d55a3785daa4e5",
                "text": "that class is where that multiple AWSConfig bean is coming from",
                "time": "2019-11-05 10:44:11",
                "index": 32,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc153c814d55a3785daaff1",
                "text": "jesus, the guy who did this left the company last week -_-",
                "time": "2019-11-05 10:49:44",
                "index": 33,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc164dbe1c5e91508393dc4",
                "text": "i\u2019m able to reproduce the issue in a simplified environment @wilkinsona @snicoll ",
                "time": "2019-11-05 12:02:35",
                "index": 37,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc164ff7477946bad318ba6",
                "text": "```\n@Data\n@ConfigurationProperties(prefix = \"prop1\")\n@PropertySource(\"classpath:config1.properties\")\npublic class Config1 {\n    private String val1;\n}\n\n\n@Data\n@ConfigurationProperties(prefix = \"prop2\")\n@PropertySource(\"classpath:config2.properties\")\npublic class Config2 {\n    private String val2;\n}\n\n\n@Configuration \n@Import({Config1.class, Config2.class}) \npublic class OneRing {\n    protected Config1 config1;\n    protected Config2 config2;\n    \n    @Autowired\n    public OneRing(Config1 config1, Config2 config2) {\n       this.config1 = config1;\n       this.config2 = config2;\n    }\n}\n\n\n```",
                "time": "2019-11-05 12:03:11",
                "index": 38,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc1650c9825bd6bac2e8649",
                "text": "> \nParameter 0 of constructor in cloud.gateway.gatewaytest.OneRing required a single bean, but 2 were found:\n\t- cloud.gateway.gatewaytest.Config1: defined in null\n\t- prop2-cloud.gateway.gatewaytest.Config1: defined in null",
                "time": "2019-11-05 12:03:24",
                "index": 39,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc16643f26ea4729d5af44e",
                "text": "as I was saying, the code previously worked on 2.1.7.RELEASE. So these classes don\u2019t just magically duplicate themselves on our codebase",
                "time": "2019-11-05 12:08:35",
                "index": 40,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc168a1ef84ab3786fda824",
                "text": "i think i kind of understand what the dev was trying to do. in the documentation examples for @Import they used used:  ApplicationContext ctx = new AnnotationConfigApplicationContext(Config1.class);\n\nBut they were not sure how to do it in the context of spring-boot. I\u2019m not sure if this code is the right way to do it.",
                "time": "2019-11-05 12:18:41",
                "index": 41,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc16b8da3f0b17849ef5f26",
                "text": "@chad_d_stud_twitter You should be using `@EnableConfigurationProperties` rather than `@Import` there",
                "time": "2019-11-05 12:31:09",
                "index": 42,
                "user": "wilkinsona"
            },
            {
                "id": "5dc16bbe10bd4128a1c3fcfe",
                "text": "As mentioned above, it worked in 2.1.7 as there was no configuration properties scanning in 2.1. It's new in 2.2 and enabled by default in 2.2.0. We've realised that was a mistake so it'll be opt-in in 2.2.1.",
                "time": "2019-11-05 12:31:58",
                "index": 43,
                "user": "wilkinsona"
            },
            {
                "id": "5dc17c10e469ef4358c98c53",
                "text": "@wilkinsona is that still coming out later today?",
                "time": "2019-11-05 13:41:36",
                "index": 44,
                "user": "OrangeDog"
            },
            {
                "id": "5dc17c5efb4dab784a6b13f2",
                "text": "Noted. But you recommended ",
                "time": "2019-11-05 13:42:54",
                "index": 45,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc17c97a3f0b17849efdb55",
                "text": "To use configurationpropertiesscan earlier ",
                "time": "2019-11-05 13:43:51",
                "index": 46,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc18621ef84ab3786fe86ab",
                "text": "@OrangeDog it's probably going to be tomorrow now as there's a couple of issues related to constructor binding of configuration properties that are taking longer to squash than we would like",
                "time": "2019-11-05 14:24:33",
                "index": 48,
                "user": "wilkinsona"
            },
            {
                "id": "5dc18684a3f0b17849f022c4",
                "text": "@chad_d_stud_twitter I didn't intend to. When I said \"you can enable it with `@ConfigurationPropertiesScan`\", I was describing how to switch it on in 2.2.1 as it will no longer by enabled by default rather than recommending that you do so.",
                "time": "2019-11-05 14:26:12",
                "index": 49,
                "user": "wilkinsona"
            },
            {
                "id": "5dc188477477946bad328bba",
                "text": "@wilkinsona thx",
                "time": "2019-11-05 14:33:43",
                "index": 51,
                "user": "christopherfischer"
            },
            {
                "id": "5dc267ebf26ea4729d621c35",
                "text": "@wilkinsona I got another error after replacing Import with EnableConfigurationProperties. This constructor has its parameters as empty:\n```\n@Configuration \n@EnableConfigurationProperties({Config1.class, Config2.class}) \npublic class OneRing {\n    protected Config1 config1;\n    protected Config2 config2;\n    \n    @Autowired\n    public OneRing(Config1 config1, Config2 config2) {\n       this.config1 = config1;\n       this.config2 = config2;\n    }\n}\n```\n\nIn the context of my original app it caused NPEs later during startup due to the autowired beans being empty.",
                "time": "2019-11-06 06:27:55",
                "index": 52,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc2688fe1c5e91508409117",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/1wrw/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/1wrw/image.png)",
                "time": "2019-11-06 06:30:39",
                "index": 53,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc299eaa03ae1584f78b69c",
                "text": "@chad_d_stud_twitter Framework will never inject null into a constructor so I suspect that something else must be calling `OneRing`'s constructor",
                "time": "2019-11-06 10:01:14",
                "index": 55,
                "user": "wilkinsona"
            },
            {
                "id": "5dc29a1ae886fb5aa262adaa",
                "text": "well the object itself is not null",
                "time": "2019-11-06 10:02:02",
                "index": 56,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29a24a03ae1584f78b77e",
                "text": "the fields inside the object are null",
                "time": "2019-11-06 10:02:12",
                "index": 57,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29a5c196ffb4db9172bdb",
                "text": "you can still reproduce the issue on your end",
                "time": "2019-11-06 10:03:08",
                "index": 58,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29aa93d669b28a044e14e",
                "text": "just create config1.properties with a single property named val1=yourvalue inside it",
                "time": "2019-11-06 10:04:25",
                "index": 59,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29ad514d55a3785e3f49e",
                "text": "so expectation is config1.val1 should have something in it",
                "time": "2019-11-06 10:05:09",
                "index": 60,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29b50196ffb4db9173318",
                "text": "@chad_d_stud_twitter `config1.properties` won't be found by default",
                "time": "2019-11-06 10:07:12",
                "index": 61,
                "user": "wilkinsona"
            },
            {
                "id": "5dc29be814d55a3785e3fb4b",
                "text": "hence my code earlier has ```@PropertySource(\"classpath:config1.properties\u201d)```",
                "time": "2019-11-06 10:09:44",
                "index": 62,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29bfff26ea4729d639e12",
                "text": "Ah, I see you're using `@PropertySource`. That's unlikely to work as the `PropertySource` it creates will be added to the environment too late to be used for configuration property binding",
                "time": "2019-11-06 10:10:07",
                "index": 63,
                "user": "wilkinsona"
            },
            {
                "id": "5dc29c397477946bad3a35f9",
                "text": "so what\u2019s the proper way to do it?",
                "time": "2019-11-06 10:11:05",
                "index": 64,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc29c5ee469ef4358d19ac1",
                "text": "It should work if you move it to the location where you're enabling the configuration properties, rather than on the configuration properties classes themselves.",
                "time": "2019-11-06 10:11:42",
                "index": 65,
                "user": "wilkinsona"
            },
            {
                "id": "5dc29f0ce1c5e915084218a6",
                "text": "so in OneRing?",
                "time": "2019-11-06 10:23:08",
                "index": 66,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc2a0d1f26ea4729d63c134",
                "text": "@chad_d_stud_twitter Yes",
                "time": "2019-11-06 10:30:41",
                "index": 68,
                "user": "wilkinsona"
            },
            {
                "id": "5dc2a52dfb4dab784a737936",
                "text": "how do i specify multiple files in propertysource?",
                "time": "2019-11-06 10:49:17",
                "index": 69,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc2a5303d669b28a0452cb6",
                "text": "is it possible?",
                "time": "2019-11-06 10:49:20",
                "index": 70,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5dc2a7d2a03ae1584f791c1d",
                "text": "this got everything working:\n```\n@Configuration \n@PropertySource(\"classpath:config1.properties\")\n@PropertySource(\"classpath:config2.properties\")\n@EnableConfigurationProperties({Config1.class, Config2.class}) \n@Slf4j\npublic class OneRing {\n}\n```\nThanks :)",
                "time": "2019-11-06 11:00:34",
                "index": 71,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 816,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5ebe9d62863019312a5fb3b4",
                "text": "It looks like something has changed in the datasource initialisation, but I'm not sure what yet. Between RC1 and RELEASE if that narrows it down.",
                "time": "2020-05-15 13:47:14",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5ebea133863019312a5fbe43",
                "text": "It's now triggered by a `DataSourceSchemaCreatedEvent` in addition to the `DataSourceInitializerInvoker`?",
                "time": "2020-05-15 14:03:31",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ebea256e6f16731750160bf",
                "text": "Oh, I've probably ended up with two invokers on the same ds due to hacking about with multiple sources",
                "time": "2020-05-15 14:08:22",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeaa3f16ae6a315f1e4c85",
                "text": "Looks like it's been rewritten such that it now won't work with multiple even if they're for different stores",
                "time": "2020-05-15 14:42:07",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeaabb49a1b7318478859b",
                "text": "I don't recall any changes in that area after RC1 and looking through the milestone, I don't see anything either. So, if it has changed, I doubt it was intentional. If you can point us to something fairly minimal that changes behaviour between RC1 and RELEASE, we can take a look.",
                "time": "2020-05-15 14:44:11",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5ebeaadb347a503172f1a4e5",
                "text": "Strange. This was definitely working on RC1.",
                "time": "2020-05-15 14:44:43",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeab7028b5313149098d0c",
                "text": "\"fairly minimal\" is a challenge here, as it looks like having a `LocalContainerEntityManagerFactoryBean` with a `@DependsOn` one of the `DataSourceInitializerInvoker`s is part of it",
                "time": "2020-05-15 14:47:12",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeabda863019312a5fdb21",
                "text": "and there's lots of beans involved when you have two of them",
                "time": "2020-05-15 14:48:58",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeaedbeb9b6f316225038e",
                "text": "That sounds fine. By fairly minimal I just mean cutting out anything that's superfluous.",
                "time": "2020-05-15 15:01:47",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5ebeaf46aac441316a7d72b1",
                "text": "So the first change is that the autoconfig `DataSourceInitializerInvokers` no longer backs off, which is fine because I can just remove my one that duplicated it. The issue is with my second one.",
                "time": "2020-05-15 15:03:34",
                "index": 10,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeaf51aac441316a7d72d6",
                "text": "But are you even interested, given that it's not a public class?",
                "time": "2020-05-15 15:03:45",
                "index": 11,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeafaeaac441316a7d7375",
                "text": "Or perhaps, not that it used to back off, but now one instance triggers both instances to run",
                "time": "2020-05-15 15:05:18",
                "index": 12,
                "user": "OrangeDog"
            },
            {
                "id": "5ebeb9c9ecc55a312d052f22",
                "text": "@OrangeDog I'm interested at least to the extent that I'd like to understand why the behaviour has apparently changed between RC1 and RELEASE.",
                "time": "2020-05-15 15:48:25",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5ebebbd6ecc55a312d0535b1",
                "text": "fair enough",
                "time": "2020-05-15 15:57:10",
                "index": 18,
                "user": "OrangeDog"
            },
            {
                "id": "5ebebbf428b531314909bd20",
                "text": "I may be mistaken that it worked on RC1, but I don't think I am",
                "time": "2020-05-15 15:57:40",
                "index": 19,
                "user": "OrangeDog"
            },
            {
                "id": "5ebebc2baac441316a7d98bd",
                "text": "it 100% changed since 2.2.x",
                "time": "2020-05-15 15:58:35",
                "index": 20,
                "user": "OrangeDog"
            },
            {
                "id": "5ebebd61b7b93c3189d160a4",
                "text": "```\n@Bean\n@SecondDb\npublic Object secondDataSourceInitializer(\n        @SecondDb ObjectProvider<DataSource> dataSource,\n        @SecondDb DataSourceProperties properties,\n        ApplicationContext ctx\n) throws ReflectiveOperationException\n{\n    Class<?> clazz = Class.forName(\"org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker\");\n    Constructor<?> constructor = clazz.getDeclaredConstructor(\n            ObjectProvider.class, DataSourceProperties.class, ApplicationContext.class\n    );\n    constructor.setAccessible(true);\n    return constructor.newInstance(dataSource, properties, ctx);\n}\n```\nThis is the bean. In 2.3 there are no bean-related errors, but JPA runs verification before this makes the schema, so it fails there. In 2.2 that was solved with a `@DependsOn` on the EMF, but in 2.3 that results in this stacktrace.\nhttps://gist.github.com/OrangeDog/75b67ac1bdf28299246fb73fa5a9e770",
                "time": "2020-05-15 16:03:45",
                "index": 21,
                "user": "OrangeDog"
            },
            {
                "id": "5ebebeae347a503172f1e05a",
                "text": "I'm resigned to having to copy the classes myself instead of relying on the hack",
                "time": "2020-05-15 16:09:18",
                "index": 22,
                "user": "OrangeDog"
            },
            {
                "id": "5ebebfd4eb9b6f31622534b0",
                "text": "`DataSourceInitializerInvoker` is `@Import`ed by `DataSourceAutoConfiguration` and that looks the same to me in 2.2 and 2.3. If you define one of your own (as you have above), I'd expect there to be two in the context unless `DataSourceAutoConfiguration` has been excluded.",
                "time": "2020-05-15 16:14:12",
                "index": 23,
                "user": "wilkinsona"
            },
            {
                "id": "5ebec06feb9b6f3162253630",
                "text": "Yes, there are two. One for each datasource. But that stacktrace didn't happen before.",
                "time": "2020-05-15 16:16:47",
                "index": 24,
                "user": "OrangeDog"
            },
            {
                "id": "5ebec0a9ecc55a312d0543bb",
                "text": "Defining one via a `@Bean` method that returns `Object` is a bit risky. It means that the bean factory doesn't know the type of `secondDataSourceInitializer` until something has caused it to be created. Once it's been created, the bean factory can then use the type of the actual bean rather than the information in its definition to determine its type. It may be that when it works, your `secondDataSourceInitializer` hasn't been created so it's only seen as an `Object` and Boot's is being injected. Where it fails, `secondDataSourceInitializer`'s already been created so its seen as a `DataSourceInitializerInvoker` so there's then two to choose from and it fails",
                "time": "2020-05-15 16:17:45",
                "index": 25,
                "user": "wilkinsona"
            },
            {
                "id": "5ebec1190e8a3131e4c2f107",
                "text": "Given that it's package-private, you must be jumping through some hoops to inject a `DataSourceInitializrInvoker` into your `JdbcConfig`",
                "time": "2020-05-15 16:19:37",
                "index": 26,
                "user": "wilkinsona"
            },
            {
                "id": "5ebec13728b531314909ca76",
                "text": "That's the code above. I reflected the constructor.",
                "time": "2020-05-15 16:20:07",
                "index": 27,
                "user": "OrangeDog"
            },
            {
                "id": "5ebec1a813878c30b57fae3b",
                "text": "That's defining it. I'm wondering how you're injecting it into `JdbcConfig`. That stack trace suggests that's what you're doing anyway",
                "time": "2020-05-15 16:22:00",
                "index": 28,
                "user": "wilkinsona"
            },
            {
                "id": "5ebec1c028b531314909cbea",
                "text": "No, it's not being injected anywhere. Only mentioned by name in a `@DependsOn` in a separate config where the JPA beans are.",
                "time": "2020-05-15 16:22:24",
                "index": 29,
                "user": "OrangeDog"
            },
            {
                "id": "5ebec1dbeb9b6f31622539f9",
                "text": "Right, sorry. It's the post-processing that's blowing up",
                "time": "2020-05-15 16:22:51",
                "index": 30,
                "user": "wilkinsona"
            },
            {
                "id": "5ebec2b1aac441316a7dad90",
                "text": "It does look like an ordering problem, but I'd need to be able to run some code to figure it out. When it works, `DataSourceInitializerPostProcessor` can only be seeing a `DataSource` bean when there's a single `DataSourceInitializerInvoker` defined. When it fails, it's seeing a `DataSource` when there are two invokers defined.",
                "time": "2020-05-15 16:26:25",
                "index": 31,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 817,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc419b114d55a3785eecf0e",
                "text": "Could any one tell me how to handle Composite json array object from couchbase . What to define and how to fetch json array object for composite data  from couchbase using Spring boot ",
                "time": "2019-11-07 13:18:41",
                "index": 0,
                "user": "RajputDeepaksingh"
            },
            {
                "id": "5dc41f549c39821509fc85a5",
                "text": "@RajputDeepaksingh I guess you're probably using Spring Data Couchbase? If so, https://gitter.im/spring-projects/spring-data is a better place to find some help",
                "time": "2019-11-07 13:42:44",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 818,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cd547f4f251e60ffa58c741",
                "text": "Hello, I'm curerntly using the http requests, and getting this message:\n```\n2019-05-10 01:33:37.870  WARN 1 --- [TaskExecutor-46] s.b.a.a.m.OnlyOnceLoggingDenyMeterFilter : Reached the maximum number of URI tags for 'http.client.requests'. Are you using 'uriVariables'?\n```\nAny ideas what could be done to fix it?",
                "time": "2019-05-10 09:44:20",
                "index": 0,
                "user": "nWidart"
            },
            {
                "id": "5cd55652bdc3b64fcf20abda",
                "text": "@nWidart Take a look at how you're using `RestTemplate` or `WebClient`, and make sure that you're using templated URIs (something like `https://example.com/users/{id}`) with variables",
                "time": "2019-05-10 10:45:38",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cd5567f8fcdb05d47af8f96",
                "text": "That will allow the URI tag to be `https://example.com/users/{id}` rather than lots of tags with `users/1`, `users/2`, \u2026 `users/9999`",
                "time": "2019-05-10 10:46:23",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cd561c756271260f939a82f",
                "text": "Thanks @wilkinsona , going to look at that! :+1: ",
                "time": "2019-05-10 11:34:31",
                "index": 5,
                "user": "nWidart"
            }
        ]
    },
    {
        "id": 819,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c8a016cbf7990126e9e3c74",
                "text": "hello , everyone.From spring documentation, i don't understand this sentence  :\"Typically, one does not configure fine-grained domain objects in the container\" .what does this mean ?",
                "time": "2019-03-14 07:23:24",
                "index": 0,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5c8a0c7fd2de66651c048279",
                "text": "Usually your domain objects, aggregate roots, DTOs or whatever they are called these days are not spring managed beans is what this is saying I think. I.e. if you have a User domain object, it's usually not a @Component",
                "time": "2019-03-14 08:10:39",
                "index": 1,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c8a101bd2de66651c04987a",
                "text": "what we mean exactly by domain objects because i read several definitions and don't find a bound definition? @TomRauchenwald ",
                "time": "2019-03-14 08:26:03",
                "index": 2,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5c8a12088f294b134a3d48ea",
                "text": "The bull's eye in a typical onion architecture picture? I'm not that good at defining things.",
                "time": "2019-03-14 08:34:16",
                "index": 3,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c8a1262f895944c0891312b",
                "text": "thanks for your time   @TomRauchenwald ",
                "time": "2019-03-14 08:35:46",
                "index": 4,
                "user": "HamzaOuni17_twitter"
            }
        ]
    },
    {
        "id": 820,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c9be3b51f98a87112aeadee",
                "text": "Hi all, I'm trying to convert an old Spring project to Spring Boot. It is a Jersey web app with Hibernate, Tomcat configurations. I hope to use Auto Configuration, but how do I know what exactly are the generated configurations?",
                "time": "2019-03-27 20:57:25",
                "index": 0,
                "user": "cthlo"
            },
            {
                "id": "5c9cd8a5e2245b5109c87873",
                "text": "@cthio You could take a look at the auto-configuration report. Start your application with `--debug` to see it",
                "time": "2019-03-28 14:22:29",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5c9d312d6a9761361b1a69c2",
                "text": "@wilkinsona Thank you! I'll give that a try.",
                "time": "2019-03-28 20:40:13",
                "index": 13,
                "user": "cthlo"
            }
        ]
    },
    {
        "id": 821,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba9296c01fb5f4ae117e0b9",
                "text": "IS it possible To extend endpoint health actuator or we can just add our specific one? ",
                "time": "2018-09-24 18:14:04",
                "index": 0,
                "user": "chsi13"
            },
            {
                "id": "5ba9333a98245f4ae0799633",
                "text": "if I'm not mistaken you can extend this class `AbstractHealthIndicator` and do whatever you need @chsi13 ",
                "time": "2018-09-24 18:55:54",
                "index": 1,
                "user": "marcosbarbero"
            }
        ]
    },
    {
        "id": 822,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5c6d431800aa630d9ae13e86",
                "text": "@snicoll can I bother you with a quick question about your pipelines in here: https://github.com/spring-projects/spring-boot/tree/master/ci",
                "time": "2019-02-20 12:07:52",
                "index": 0,
                "user": "salaboy"
            },
            {
                "id": "5c6d432bc82c68509e08acaa",
                "text": "I wonder how you guys are building the artifacts that are being published in maven central to support JDK 11 and JDK 8",
                "time": "2019-02-20 12:08:11",
                "index": 1,
                "user": "salaboy"
            },
            {
                "id": "5c6d433bb6c74f1e2e80e761",
                "text": "are you using \u2014release 8 always? so no JDK 11 specific artifact is generated?",
                "time": "2019-02-20 12:08:27",
                "index": 2,
                "user": "salaboy"
            },
            {
                "id": "5c6d434dc776985d8f237535",
                "text": "We don\u2019t use any of  the newer API. Java 8 only",
                "time": "2019-02-20 12:08:45",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5c6d434f85b7eb456900f3b7",
                "text": "I recognize that it is an odd question",
                "time": "2019-02-20 12:08:47",
                "index": 4,
                "user": "salaboy"
            },
            {
                "id": "5c6d4358b6c74f1e2e80e8b0",
                "text": "with CI running 8,9,10,11",
                "time": "2019-02-20 12:08:56",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5c6d43607667931e2fd04c82",
                "text": "(not 9 and 10 since they have been superseded)",
                "time": "2019-02-20 12:09:04",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c6d4375c82c68509e08aebb",
                "text": "ok.. but the artifacts in maven central are only jdk8 bytecode then..",
                "time": "2019-02-20 12:09:25",
                "index": 7,
                "user": "salaboy"
            },
            {
                "id": "5c6d4380ab952d3085608caf",
                "text": "what\u2019s the problem with that",
                "time": "2019-02-20 12:09:36",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5c6d438cb6c74f1e2e80ea61",
                "text": "I just told you we were not using any of the newer API.",
                "time": "2019-02-20 12:09:48",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5c6d438fc4da4a11f5871ac1",
                "text": "no problem at all.. just trying to understand how it is working",
                "time": "2019-02-20 12:09:51",
                "index": 10,
                "user": "salaboy"
            },
            {
                "id": "5c6d43a3c776985d8f237791",
                "text": "the only problem will be to use new API from JDK 11 in a contribution for example",
                "time": "2019-02-20 12:10:11",
                "index": 11,
                "user": "salaboy"
            },
            {
                "id": "5c6d43ace5eeec0d9b982fa2",
                "text": "so that will need to be avoided for 2.1.x at least",
                "time": "2019-02-20 12:10:20",
                "index": 12,
                "user": "salaboy"
            },
            {
                "id": "5c6d43b85df86a456865de12",
                "text": "I don\u2019t undersand what you\u2019re talking about",
                "time": "2019-02-20 12:10:32",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5c6d43bee5eeec0d9b983038",
                "text": "you\u2019re free to use Java11 with Spring Boot 2.1 if you want to",
                "time": "2019-02-20 12:10:38",
                "index": 14,
                "user": "snicoll"
            },
            {
                "id": "5c6d43e0a378ef11f60e08f9",
                "text": "yes.. but if I want to contribute with a feature for Spring Boot I cannot contribute code using new JDK 11 new APIs",
                "time": "2019-02-20 12:11:12",
                "index": 15,
                "user": "salaboy"
            },
            {
                "id": "5c6d43e79155d45d9045c8fc",
                "text": "Of course not",
                "time": "2019-02-20 12:11:19",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5c6d43f37667931e2fd04f06",
                "text": "The build will fail if you try anyway",
                "time": "2019-02-20 12:11:31",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5c6d43fde5eeec0d9b983246",
                "text": ":+1: thanks for the clarification",
                "time": "2019-02-20 12:11:41",
                "index": 18,
                "user": "salaboy"
            },
            {
                "id": "5c6d440ca378ef11f60e0abe",
                "text": "What API do you want to use and why is that relevant?",
                "time": "2019-02-20 12:11:56",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5c6d44c8a7d733509d98832b",
                "text": "it was a more general question to understand if Spring boot is planning to use newer APIs in future releases.. or when that switch is going to happen.. sorry if the question was not formulated correctly.. I know that is quite generic",
                "time": "2019-02-20 12:15:04",
                "index": 20,
                "user": "salaboy"
            },
            {
                "id": "5c6d44e4a7d733509d9883ee",
                "text": "That\u2019s not the question you asked though. ",
                "time": "2019-02-20 12:15:32",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5c6d45125df86a456865e679",
                "text": "You asked about now. You didn\u2019t ask anything about future release. We will move to Java 11 at some point the same way we moved to Java 8 for Spring Boot 2. It\u2019s likely to happen with Spring Framework 6.0 and there isn\u2019t a concrete timeline yet",
                "time": "2019-02-20 12:16:18",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5c6d451d85b7eb45690100e8",
                "text": "I know.. sorry about that.. when I started asking the question I didn\u2019t explain myself correctly.. thanks a lot for your answers ",
                "time": "2019-02-20 12:16:29",
                "index": 23,
                "user": "salaboy"
            },
            {
                "id": "5c6d4525c776985d8f2380b5",
                "text": "@snicoll that is perfectly fine",
                "time": "2019-02-20 12:16:37",
                "index": 24,
                "user": "salaboy"
            },
            {
                "id": "5c6d4542a378ef11f60e1c32",
                "text": "Best personal guess is when 17 is out",
                "time": "2019-02-20 12:17:06",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5c6d46179e430b3086993a12",
                "text": "that sounds good to me.. you helped me a lot.. thanks a lot.. ",
                "time": "2019-02-20 12:20:39",
                "index": 26,
                "user": "salaboy"
            },
            {
                "id": "5c6d462400aa630d9ae1545f",
                "text": "Glad I did, have a nice day",
                "time": "2019-02-20 12:20:52",
                "index": 27,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 823,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5efddc4ea813c72dcf2317e9",
                "text": "any experienced in spring tests?",
                "time": "2020-07-02 13:08:30",
                "index": 0,
                "user": "abelncm"
            },
            {
                "id": "5efddc63fa0c9221fc73b459",
                "text": "i just need some directions",
                "time": "2020-07-02 13:08:51",
                "index": 1,
                "user": "abelncm"
            },
            {
                "id": "5efddc873a0d3931fac9951b",
                "text": "i wanted to test repository save, so i used h2 in memory db for testing",
                "time": "2020-07-02 13:09:27",
                "index": 2,
                "user": "abelncm"
            },
            {
                "id": "5efddcb5b8152d3484791ab2",
                "text": "now i wan't to test a object that has a child that child is an existing record in the db",
                "time": "2020-07-02 13:10:13",
                "index": 3,
                "user": "abelncm"
            },
            {
                "id": "5efddcde6c06cd1bf46a59bd",
                "text": "so, should i create setup annotation and create my object and persist in h2 in memory",
                "time": "2020-07-02 13:10:54",
                "index": 4,
                "user": "abelncm"
            },
            {
                "id": "5efddcf3e0e5673398eab17f",
                "text": "i is thery a way i could use the already saved data with my empty in memory db?",
                "time": "2020-07-02 13:11:15",
                "index": 5,
                "user": "abelncm"
            },
            {
                "id": "5efde5d0405be935cdd76aad",
                "text": "You can pre-populate test data with the `datasource.schema`/`datasource.data` properties.",
                "time": "2020-07-02 13:49:04",
                "index": 6,
                "user": "OrangeDog"
            },
            {
                "id": "5efde61e6c06cd1bf46a7383",
                "text": "Tests aren't supposed to depend on the side-effects of other tests - they should all run in isolation",
                "time": "2020-07-02 13:50:22",
                "index": 7,
                "user": "OrangeDog"
            },
            {
                "id": "5efe0e32fa0c9221fc745081",
                "text": "@OrangeDog thanks, test is not depedent to another test, just this other test i needed to have some data to populate my main object. Thanks for the reply",
                "time": "2020-07-02 16:41:22",
                "index": 15,
                "user": "abelncm"
            }
        ]
    },
    {
        "id": 824,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e14128be52f63537898e9ea",
                "text": "@wilkinsona I have to create write a @schedular method which should be exectued only based on leader election (on specific node only).Can you suggested what should be the approach?",
                "time": "2020-01-07 05:09:31",
                "index": 0,
                "user": "Nainpal1_twitter"
            },
            {
                "id": "5e14238b55975518903489bd",
                "text": "@wilkinsona : should overidding the CustomConcurrentTaskScheduler be correct approach in this case?",
                "time": "2020-01-07 06:22:03",
                "index": 1,
                "user": "Nainpal1_twitter"
            },
            {
                "id": "5e145070c3950349025aca4b",
                "text": "@Nainpal1_twitter Have you looked at Quartz? IIRC, its JDBC job store supports single node execution",
                "time": "2020-01-07 09:33:36",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5e1494f2559755189037f1a0",
                "text": "@wilkinsona actually it is an exisiting spring boot project which has code having @scheduled  annotation. And we have some active node(serving traffic) and passive node(the node not serving traffic).Any node can be switched from passive to active and vise versa.So the requirement was to execute the schedular only in active node only.",
                "time": "2020-01-07 14:25:54",
                "index": 17,
                "user": "Nainpal1_twitter"
            }
        ]
    },
    {
        "id": 825,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c7e67ddb1503b3d7082fe31",
                "text": "does it make sense to use JSONObject in spring boot to return results from a controller?",
                "time": "2019-03-05 12:13:17",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c7e68138a7def075218f552",
                "text": "we're having this lively debate about whether it still has its place in sb 2.0",
                "time": "2019-03-05 12:14:11",
                "index": 1,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c7e75b1c1cab53d6f7bffcc",
                "text": "@chad_d_stud_twitter I would avoid `JSONObject` entirely. Generally we recommend returning a POJO and then allowing HTTP codecs (WebFlux) or message converters (MVC) to turn it into JSON.",
                "time": "2019-03-05 13:12:17",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5c7e85b42ca5ec54747efd32",
                "text": "@wilkinsona this looks like glorified wrapper for HashMap tbh",
                "time": "2019-03-05 14:20:36",
                "index": 4,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5c7e871447276019e9bd1b10",
                "text": "@chad_d_stud_twitter still it's a lot easier to grasp what your API returns. I've had the \"joy\" to work with systems that sent around some form of `JSONObject`both internally and via API and it's really tough to do anything if you're not the original author knowing what properties are used.",
                "time": "2019-03-05 14:26:28",
                "index": 5,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c7e8798e8ea143737b764d3",
                "text": "There might be reasons to use such low level data structures, but if it's about your own parts fof the system I always would prefer actual objects that communicate what they contain and do",
                "time": "2019-03-05 14:28:40",
                "index": 6,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c7e8825e1446a6ebe8823ab",
                "text": "no argument there",
                "time": "2019-03-05 14:31:01",
                "index": 7,
                "user": "chad_d_stud_twitter"
            }
        ]
    },
    {
        "id": 826,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5eef2ab6405be935cdb35267",
                "text": "what are some real world use case of web flux? \nAre webflux a good choice for \u201cfeeds\u201d e.g news feed?\nOr the notification service?",
                "time": "2020-06-21 09:39:02",
                "index": 0,
                "user": "Puspendert"
            },
            {
                "id": "5eef2cd87b466b3bf7047812",
                "text": "Basically everywhere you handle web-requests, but the async way of handling requests benefits most, when you need to contact other systems to handle the request lika backing-services or a database etc. But to benefit really in database calls, you should check if the reactive stack is available for the targeted DBMS. (Oracle for example has none yet)",
                "time": "2020-06-21 09:48:08",
                "index": 1,
                "user": "pcornelissen"
            },
            {
                "id": "5eef2f0be6668d35db10d6da",
                "text": "I am using MySQL and their is a reactive driver available",
                "time": "2020-06-21 09:57:31",
                "index": 2,
                "user": "Puspendert"
            },
            {
                "id": "5eef2f6eec4a341beeddb839",
                "text": "are flux bidirectional or uni? @pcornelissen ",
                "time": "2020-06-21 09:59:10",
                "index": 3,
                "user": "Puspendert"
            },
            {
                "id": "5eef2fbfb8152d3484553651",
                "text": "And how clients communicate with it? Websockets?",
                "time": "2020-06-21 10:00:31",
                "index": 4,
                "user": "Puspendert"
            },
            {
                "id": "5eef2fd33bcb6a5aa29180e9",
                "text": "What do you mean? Flux is not web sockets. it\u2019s a way to handle a web request. You can handle web sockets using traditional methods or async ",
                "time": "2020-06-21 10:00:51",
                "index": 5,
                "user": "pcornelissen"
            },
            {
                "id": "5eef303454d7862dc49d040f",
                "text": " I need to read more about it. Thanks.",
                "time": "2020-06-21 10:02:28",
                "index": 6,
                "user": "Puspendert"
            },
            {
                "id": "5eef3229e0e5673398c69ba3",
                "text": "Webflux is better with nosql dbs than sql,  the sql returns data as a table and flatten which imposes to group them in backend(webflux) side and which is in contrast with reactive intent. Grouping table result which is flatten into pojo(in cases of joins) creates memory allocation which is in contrast with reactive and streaming. \nnoSql databases like mongodb returns joins(lookups) grouped in db side which is easy to stream item by item through webflux - project reactor.\nWorking with sql databases without any jpa implementation like hibernate is not easy. In reactive frameworks like webflux there is not any jpa implementation which is non blocking and supports event driven . There is r2dbc as reactive sql db connnector but is very limited it does not support joins its up to developer to maintain the part of the joins which is not easy - it produces boilerplate code with many mappers...",
                "time": "2020-06-21 10:10:49",
                "index": 7,
                "user": "burimkrasniqi"
            },
            {
                "id": "5eef32d727fbeb24493faad2",
                "text": "Agreed",
                "time": "2020-06-21 10:13:43",
                "index": 8,
                "user": "pcornelissen"
            }
        ]
    },
    {
        "id": 827,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ec2bc8a0c32623a4b405cba",
                "text": "Hi All. I need to call an api which is a get request with the request body. I am unable to pass the body in the get method of the webclien. Could anyone help me how to pass the body in get method. i need to get the response as mono",
                "time": "2020-05-18 16:49:14",
                "index": 0,
                "user": "Saravan11158896_twitter"
            },
            {
                "id": "5ec2da78e8153a39805d236f",
                "text": "@Saravan11158896_twitter I believe you can use `webClient.method(HttpMethod.GET).body(\u2026)` to make a `GET` request with a body.",
                "time": "2020-05-18 18:56:56",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ec380be990d343a5f38b18a",
                "text": "@wilkinsona Thanks for your response. I need to pass json object in the body. how to pass this?",
                "time": "2020-05-19 06:46:22",
                "index": 6,
                "user": "Saravan11158896_twitter"
            },
            {
                "id": "5ec38e7d6773a13b23edb0b4",
                "text": "@Saravan11158896_twitter https://docs.spring.io/spring-framework/docs/5.2.6.RELEASE/spring-framework-reference/web-reactive.html#webflux-client-body",
                "time": "2020-05-19 07:45:01",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 828,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5df209882bca3016aa677bb5",
                "text": "hi, I want to deploy an application with building a fat jar but do not know exactly how to go about it because of the way it is setup. I have two projects one with the main application class and the other which contains the dependencies. How do I make sure that the application project always gets update with newer versions of the dependencies",
                "time": "2019-12-12 09:34:00",
                "index": 0,
                "user": "newcoder171"
            },
            {
                "id": "5df219430dc628523e214c47",
                "text": "The project will pick up dependency version from pom.xml",
                "time": "2019-12-12 10:41:07",
                "index": 1,
                "user": "siddharth-bulia"
            },
            {
                "id": "5df2195cac14cc652c6db9a0",
                "text": "Just update the version and create a new fat jar every time you want to deploy.",
                "time": "2019-12-12 10:41:32",
                "index": 2,
                "user": "siddharth-bulia"
            }
        ]
    },
    {
        "id": 829,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5be403266b9822140df9519b",
                "text": "is it possible to use `spring-boot-starter-data-mongodb` from 2.0.5 while using spring boot 2.1.0?",
                "time": "2018-11-08 09:34:30",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5be40cff3102f145216b4842",
                "text": "No",
                "time": "2018-11-08 10:16:31",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5be40f597a36913a9a0d5b83",
                "text": "sad. Downgrading the driver is not working either. i have no idea whats going on anymore lol",
                "time": "2018-11-08 10:26:33",
                "index": 2,
                "user": "ofabricio"
            },
            {
                "id": "5be413ae3102f145216b71f6",
                "text": "How have you downgraded it?",
                "time": "2018-11-08 10:45:02",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5be413f27326df140ed2c0f7",
                "text": "You should override the `mongodb.version` property to ensure that all the Mongo-related jars have the same, downgraded version.",
                "time": "2018-11-08 10:46:10",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5be41622f1b87534049311bb",
                "text": "yes, I did `<mongodb.version>3.6.3</mongodb.version>`",
                "time": "2018-11-08 10:55:30",
                "index": 5,
                "user": "ofabricio"
            },
            {
                "id": "5be416d54e7ca14520723da0",
                "text": "> Error:(34, 16) java: cannot access com.mongodb.client.MongoClient\n  class file for com.mongodb.client.MongoClient not found",
                "time": "2018-11-08 10:58:29",
                "index": 6,
                "user": "ofabricio"
            },
            {
                "id": "5be416da92b7d1172157a57c",
                "text": "then it says that",
                "time": "2018-11-08 10:58:34",
                "index": 7,
                "user": "ofabricio"
            },
            {
                "id": "5be4197b2138723405d436bb",
                "text": "in my configuration file",
                "time": "2018-11-08 11:09:47",
                "index": 8,
                "user": "ofabricio"
            },
            {
                "id": "5be4210d7326df140ed30a45",
                "text": "That'll be because Spring Data Lovelace requires Mongo 3.8",
                "time": "2018-11-08 11:42:05",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5be4215a47217e07ffed80de",
                "text": "You could try downgrading Spring Data too by overriding `spring-data-releasetrain.version` but I wouldn't recommend it. I still think you'd be better replacing Fongo with something that's still maintained.",
                "time": "2018-11-08 11:43:22",
                "index": 10,
                "user": "wilkinsona"
            },
            {
                "id": "5be426e2f1b8753404938061",
                "text": "yes, i will keep this project in 2.0.5 for now, untill we get rid of fongo, then we update it to 2.1",
                "time": "2018-11-08 12:06:58",
                "index": 11,
                "user": "ofabricio"
            },
            {
                "id": "5be427507326df140ed333a0",
                "text": "unfortunatelly this project uses nosqlunit-mongodb which is strongly attached to fongo it seems, so it will be a big change",
                "time": "2018-11-08 12:08:48",
                "index": 12,
                "user": "ofabricio"
            }
        ]
    },
    {
        "id": 830,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5d0094c15213b626636d8cb5",
                "text": "Hi All,\nI am trying to enable Https  for one of my application which is in spring boot 2.15  but ssl arguments are not picking, where as the older version spring boot works with same ssl arguments ....\n\nIs their any changes in 2.15 v in terms of ssl enablement?\n\njava -jar server-2.0.jar --LOG_LEVEL=INFO --server.port=9111 --server.ssl.key-store=keystore.p12 --server.ssl.key-store-password=123123 --security.require-ssl=true\n\n\n ",
                "time": "2019-06-12 05:59:29",
                "index": 0,
                "user": "koushik9951"
            },
            {
                "id": "5d00aad8c2e5ba268ce24c85",
                "text": "@koushik9951 No, 2.1.5 should work the same as before. Are you definitely passing the command line arguments in your main method into your call to `run`?",
                "time": "2019-06-12 07:33:44",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 831,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bed4e524e7ca14520abeee1",
                "text": "hey guys",
                "time": "2018-11-15 10:45:38",
                "index": 0,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed4e54fee6703aaf73eb3d",
                "text": "need help",
                "time": "2018-11-15 10:45:40",
                "index": 1,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed4e68e0fd6b4360f811d6",
                "text": "i am following book spring boot in action",
                "time": "2018-11-15 10:46:00",
                "index": 2,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed4e6ff1b8753404cce7d8",
                "text": "using latest spring",
                "time": "2018-11-15 10:46:07",
                "index": 3,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed4e72fee6703aaf73ed5a",
                "text": "and spring boot",
                "time": "2018-11-15 10:46:10",
                "index": 4,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed4e89bb06d73a9979a7ed",
                "text": "but i am unable to load static css files from templates",
                "time": "2018-11-15 10:46:33",
                "index": 5,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed4f0ad001b91720638d39",
                "text": "i am using springboot 2.1.0.RELEASE\n",
                "time": "2018-11-15 10:48:42",
                "index": 6,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed5c40d001b9172063e246",
                "text": "@yasserhussain1110 can you post error",
                "time": "2018-11-15 11:45:04",
                "index": 7,
                "user": "Razi007"
            },
            {
                "id": "5bed5e1df1b8753404cd4957",
                "text": "there is no error",
                "time": "2018-11-15 11:53:01",
                "index": 8,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed5e2cbb88787474d1b184",
                "text": "instead of style file the html file is served",
                "time": "2018-11-15 11:53:16",
                "index": 9,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed5e3f92b7d11721916967",
                "text": "https://github.com/yasserhussain1110/spring-start",
                "time": "2018-11-15 11:53:35",
                "index": 10,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed5e43fee6703aaf744b2d",
                "text": "this is the project",
                "time": "2018-11-15 11:53:39",
                "index": 11,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed6007bb88787474d1befd",
                "text": "@yasserhussain1110 The URL you're using to reference the CSS file is wrong. You have `/static/style.css` it should be `/style.css`.",
                "time": "2018-11-15 12:01:11",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5bed62d56b9822140d337478",
                "text": "i tried that as well",
                "time": "2018-11-15 12:13:09",
                "index": 13,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed62d9bb06d73a997a304a",
                "text": "didn't work",
                "time": "2018-11-15 12:13:13",
                "index": 14,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed62e7d001b91720640bbf",
                "text": "@wilkinsona ",
                "time": "2018-11-15 12:13:27",
                "index": 15,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed650c6b9822140d338171",
                "text": "Your request mappings are clashing. A request for `http://localhost:8080/style.css` matches `@RequestMapping(value=\"/{reader}\")`",
                "time": "2018-11-15 12:22:36",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5bed65157a36913a9a474f35",
                "text": "In that case, `reader` ends up being `style.css`",
                "time": "2018-11-15 12:22:45",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5bed65957326df140e0cbea4",
                "text": "One way to avoid the clash would be to change the mappings to `/readers/{reader}`",
                "time": "2018-11-15 12:24:53",
                "index": 18,
                "user": "wilkinsona"
            },
            {
                "id": "5bed6a6a7326df140e0ce240",
                "text": "yeah i asked a question on SO",
                "time": "2018-11-15 12:45:30",
                "index": 19,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed6a7247217e07ff26e034",
                "text": "and the pretty much said the same thing",
                "time": "2018-11-15 12:45:38",
                "index": 20,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed6a8f7326df140e0ce30d",
                "text": "i changed the top level mapping in ReadingListController to \"/readingList\" from \"/\"",
                "time": "2018-11-15 12:46:07",
                "index": 21,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed6a9247217e07ff26e1ce",
                "text": "this worked",
                "time": "2018-11-15 12:46:10",
                "index": 22,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed6a99d001b91720643bf8",
                "text": "thanks for the help anyway @wilkinsona ",
                "time": "2018-11-15 12:46:17",
                "index": 23,
                "user": "yasserhussain1110"
            },
            {
                "id": "5bed6dee21387234050e7a0c",
                "text": "@yasserhussain1110 Please don't ask the same question in multiple places like that. I've just wasted time helping you when someone else had already done that. That time could have been spent helping someone else or working on Spring Boot.",
                "time": "2018-11-15 13:00:30",
                "index": 26,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 832,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bf4b4dac6cf4524d1500432",
                "text": "I'm more than likely asking this in the wrong room, so if someone points me in the right direction, that would be good too.\n\nAnywho, would anyone happen to know why the WebClient looks to drop the headers I add to a request with a content-type on a x-www-form-urlencoded, whereas it works as expected (keeps the headers) on other requests, such as one's with a content-type of application/json?",
                "time": "2018-11-21 01:28:58",
                "index": 0,
                "user": "AndrewZurn"
            },
            {
                "id": "5bf4b54abaf43f2b9b4b1ead",
                "text": "Forgot to add a caveat: it's only happening when the actual request body is empty... when it has something in it the headers are appended just fine (on the x-www-form-urlencoded request).",
                "time": "2018-11-21 01:30:50",
                "index": 1,
                "user": "AndrewZurn"
            },
            {
                "id": "5bf523b8ed6bcf1ef838002d",
                "text": "@AndrewZurn I can't think why that would be happening. It sounds like a Spring Framework bug if it is. Can you share a minimal example that reproduces the behaviour?",
                "time": "2018-11-21 09:22:00",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5bf5916cc6cf4524d155a18e",
                "text": "@wilkinsona Sounds good, I'll get something over to you today. ",
                "time": "2018-11-21 17:10:04",
                "index": 15,
                "user": "AndrewZurn"
            },
            {
                "id": "5bfc3ed3958fc53895f31e06",
                "text": "@wilkinsona - I was able to write a few tests that do a pretty good job of showing what is likely the bug you mentioned the other day (re: the headers on an empty body POST with content-type of x-www-form-urlencoded being stripped out when sent on an http request using webclient).\n\nI've put them into a Gist (here: https://gist.github.com/AndrewZurn/cbd168311fccb2151b446428a3430088), is there anything else you'd like me to do to help further investigate this?",
                "time": "2018-11-26 18:43:31",
                "index": 145,
                "user": "AndrewZurn"
            },
            {
                "id": "5bfc52ee7074b903685d1ea8",
                "text": "@AndrewZurn Thanks for the code snippets. They look useful, but it's hard to tell as there's a few pieces missing. Could you please turn those snippets into a full project that we can unzip or git clone and then run `./gradlew test` to see the problem occur? As things stand, there are a few too many blanks (the `TestHelpers` super-class, the application's main `@SpringBootApplication` class, the controller or router function that handles `/test-path` etc_ to fill in and guessing may mean we end up diagnosing something that you're not actually seeing.",
                "time": "2018-11-26 20:09:18",
                "index": 147,
                "user": "wilkinsona"
            },
            {
                "id": "5bfc5392fa7bbb3fe00b1711",
                "text": "@wilkinsona - no problem. Yeah, let me see if I can't get fully working project setup then hosted for you all. I'll try to boil it down to as small of a surface space where the problem can still be observed as possible.",
                "time": "2018-11-26 20:12:02",
                "index": 148,
                "user": "AndrewZurn"
            },
            {
                "id": "5bfc53bdb6c070105290d44c",
                "text": "That'd be great, thank you. As I think I said before, I suspect it's a Spring Framework bug, but having a minimal sample that reproduces the problem will let us route the issue to the right place more quickly.",
                "time": "2018-11-26 20:12:45",
                "index": 149,
                "user": "wilkinsona"
            },
            {
                "id": "5bfc56ffb6c070105290e867",
                "text": ":thumbsup: definitely",
                "time": "2018-11-26 20:26:39",
                "index": 150,
                "user": "AndrewZurn"
            }
        ]
    },
    {
        "id": 833,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dc2bfd710bd4128a1cdad53",
                "text": "Hello! I'm having the same problem illustrated [here](https://stackoverflow.com/questions/55183856/addinterceptors-is-not-called-in-spring-boot-2-1-1-auto-configuration).\n\nThe problem is that the auto configuration is loaded into context but the `addInterceptors` method is not called. (I have put a log entry there, which doesn't appear when the app is started). However the custom WebMvcConfigurer exists in the list of the same type of beans in the application context. What might be causing this issue?",
                "time": "2019-11-06 12:43:03",
                "index": 0,
                "user": "asgarj"
            },
            {
                "id": "5dc2ca43ef84ab378607ac5c",
                "text": "I think I found what's causing that, but don't know why it actually does?\n\nSo when there's a custom WebMvcConfigurationSupport exists in the context, the WebMvcConfigurer instance is instantiated, but not used (`addInterceptors`) not called. There's no any `@EnableWebMvc` annotation, an empty `WebMvcConfigurationSupport` class is enough to cause the issue. But I don't understand it actually causes this issue. @wilkinsona can you please shed some light on this? Thanks",
                "time": "2019-11-06 13:27:31",
                "index": 1,
                "user": "asgarj"
            },
            {
                "id": "5dc2caf19c39821509f2d8cf",
                "text": "```java\n@SpringBootApplication\n@RestController\nclass SpringBootApp {\n  @GetMapping(\"/{id}\")\n  public String getId(@PathVariable Integer id) {\n    return \"OK\";\n  }\n}\n\n@Configuration\nclass WebConfig extends WebMvcConfigurationSupport {\n}\n```\nThis minimalistic app is enough to reproduce the issue that a `WebMvcConfigurer` coming from an auto configuration not adding interceptors\n",
                "time": "2019-11-06 13:30:25",
                "index": 2,
                "user": "asgarj"
            },
            {
                "id": "5dc2d0f3a3f0b17849f97bcd",
                "text": "@asgarj extending `WebMvcConfigurationSupport` and having  `@EnableWebMvc` somewhere in your configuration is the same thing (the annotation itself is bringing that configuration class)",
                "time": "2019-11-06 13:56:03",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5dc2d1067477946bad3bb115",
                "text": "So this has the same effect and the spring boot auto-configuration is backing off",
                "time": "2019-11-06 13:56:22",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5dc2d16c14d55a3785e58a43",
                "text": "You can see that in our auto-configuration here, it's only processed when no such bean has been defined by the application: https://github.com/spring-projects/spring-boot/blob/86a1c96224a02da8e53b31e90c2e91507fba076f/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java#L138",
                "time": "2019-11-06 13:58:04",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5dc2d189fb4dab784a74c073",
                "text": "If that's the case, we're considering that the developers want to take full control over the MVC configuration",
                "time": "2019-11-06 13:58:33",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5dc405a7f26ea4729d6de7b5",
                "text": "Hi @bclozel , Thanks taking your time and replying. I have got the following question to clarify some things:\n1. I went through both of them (`WebMvcConfigurer` and `WebMvcConfigurationSupport`) and in fact, _almost_ all API methods (`protected void configure-*`) `WebMvcConfigurationSupport` has, there's a corresponding method in `WebMvcConfigurer`. `WebMvcConfigurationSupport` is additionally creating some beans. So my question is, if I'm extending `WebMvcConfigurationSupport` and only overriding some of those methods that exist in `WebMvcConfigurer`, is it equivalent/better to, instead, implement `WebMvcConfigurer`? Which would also let other `WebMvcConfigurer`s to kick in.\n2. If you're not overriding any beans that `WebMvcConfigurationSupport` providing, is there point in using it? If yes, what's the use case of it?\n3. I actually went with creating a `MappedInterceptor` bean and passing my `HandlerInterceptor` into it. So I'd like to know if this is equivalent to implementing `WebMvcConfigurer` and adding my `HandlerInterceptor` into its `InterceptorRegistry`?\nThanks in advance!",
                "time": "2019-11-07 11:53:11",
                "index": 44,
                "user": "asgarj"
            },
            {
                "id": "5dc4072c196ffb4db9217ce0",
                "text": "1. `WebMvcConfigurationSupport ` is about providing the MVC infrastructure (that's what `@EnableWebMvc` is importing)  - in the case of Spring Boot, we're already doing that for you if you're not taking things in your control already.\nIn general, when trying to configure something, you should try (in order): config properties, using a spring boot customizer, defining your own bean or an infrastructure config class, and only use the \"taking full control\" variant as a last resort. So yes, implementing a `WebMvcConfigurer` is meant for that: customizing Spring MVC without overriding the whole infrastructure. It is the preferred way, see https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-auto-configuration",
                "time": "2019-11-07 11:59:40",
                "index": 45,
                "user": "bclozel"
            },
            {
                "id": "5dc4076bfb4dab784a7d4eb6",
                "text": "2) in the context of spring boot, the only use case for defining a `WebMvcConfigurationSupport` is taking full control over the MVC setup; it can be also useful for applications migrating from Spring Framework to Spring Boot: they can slowly remove configuration and use Spring Boot features",
                "time": "2019-11-07 12:00:43",
                "index": 46,
                "user": "bclozel"
            },
            {
                "id": "5dc407d1fb4dab784a7d5100",
                "text": "3) A `MappedInterceptor` is a `HandlerInterceptor`, so yes, it's perfectly fine to use it and configure it in a `WebMvcConfigurer`",
                "time": "2019-11-07 12:02:25",
                "index": 47,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 834,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c39bcf928513d605a138cb8",
                "text": "Hi, I have started thinking about this enhancement https://github.com/spring-projects/spring-boot/issues/15566. \nnew properties should be added to the `MustacheProperties`and `Mustache.Compiler` has to be created with this properties.\nHow can we check if property is null (was injected) without using a lof of `if` ?\n`PropertyMapper` is not sutible here because `Mustache.Compiler` doesn\u2019t have `setXXX`. ",
                "time": "2019-01-12 10:10:01",
                "index": 0,
                "user": "ayudovin"
            },
            {
                "id": "5c39e86520b78635b610314d",
                "text": "Good question. Isn\u2019t the property mapper using a method reference anyway?",
                "time": "2019-01-12 13:15:17",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5c3b0ec0ba355012a42f9f0a",
                "text": "@snicoll,  I don't see anything in propertyMapper for such things ",
                "time": "2019-01-13 10:11:12",
                "index": 11,
                "user": "ayudovin"
            }
        ]
    },
    {
        "id": 835,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5ebe8ebc20d9bf305768108c",
                "text": "This appears to be wrong:\nhttps://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#graceful-shutdown\nThere is no `server.shutdown.grace-period`, instead `server.shutdown` takes an enum.",
                "time": "2020-05-15 12:44:44",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5ebe8f7c863019312a5f8ed1",
                "text": "And a typo here? Should be \"Date-time\" not \"Data time\"?\nhttps://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#data-time-conversion-in-web-applications",
                "time": "2020-05-15 12:47:56",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ebe908e6675d830b1a99141",
                "text": "Thanks, @OrangeDog. I've corrected both of those.",
                "time": "2020-05-15 12:52:30",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 836,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c38a1b5783a5553d8196f4c",
                "text": "Hi everyone!",
                "time": "2019-01-11 14:01:25",
                "index": 0,
                "user": "kevin-madhu"
            },
            {
                "id": "5c38a202da98233022f4c7c7",
                "text": "I need to know something about filters. I created a filter, no additional configuration. In some tutorial it was mentioned that it'll be picked up automatically, but it doesn't seem to work.",
                "time": "2019-01-11 14:02:42",
                "index": 1,
                "user": "kevin-madhu"
            },
            {
                "id": "5c38a22b83c7e3776551e325",
                "text": "```\nimport org.springframework.core.annotation.Order\nimport org.springframework.stereotype.Component\nimport javax.servlet.*\nimport javax.servlet.http.HttpServletRequest\n\n@Component\n@Order(1)\nclass SecurityFilter: Filter {\n    override fun init(filterConfig: FilterConfig?) {\n        TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates.\n    }\n\n    override fun doFilter(request: ServletRequest?, response: ServletResponse?, chain: FilterChain?) {\n        val req = request as HttpServletRequest\n        System.out.println(\"Starting a transaction for req : {}\" + req.getRequestURI())\n\n        chain!!.doFilter(request, response)\n\n        System.out.println(\"Committing a transaction for req : {}\" + req.getRequestURI())\n    }\n\n    override fun destroy() {\n        TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates.\n    }\n}\n```",
                "time": "2019-01-11 14:03:23",
                "index": 2,
                "user": "kevin-madhu"
            },
            {
                "id": "5c38aaa0b35a087766668201",
                "text": "@kevin-madhu this should work. Is it being picked up as a bean? If you've got actuator as a dependency, you should see it listed on the beans endpoint",
                "time": "2019-01-11 14:39:28",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5c38ab9b5aa04d46c593b42f",
                "text": "@bclozel Thanks a lot :)",
                "time": "2019-01-11 14:43:39",
                "index": 4,
                "user": "kevin-madhu"
            },
            {
                "id": "5c38ad3154d8bb07ccd391dc",
                "text": "@ComponentScan(basePackages=[\"a\")",
                "time": "2019-01-11 14:50:25",
                "index": 5,
                "user": "kevin-madhu"
            },
            {
                "id": "5c38ad7eef78da1bcee500cc",
                "text": "When I wrote this I thought the package a as well as the original rule which says the application root package and sub-packages will be true.",
                "time": "2019-01-11 14:51:42",
                "index": 6,
                "user": "kevin-madhu"
            },
            {
                "id": "5c38adc2ef78da1bcee50311",
                "text": "But, I had to add that also to the list because when I specified basePackages, only those in the list gets searched for beans.",
                "time": "2019-01-11 14:52:50",
                "index": 7,
                "user": "kevin-madhu"
            }
        ]
    },
    {
        "id": 837,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5eaaa185347bd61630477f2e",
                "text": "Hi Everyone,\n\nI am researching a problem where I need to prepare an application that utilizes websockets for horizontal scaling. In this application I have several clients that I need to communicate with either directly (Server -> Client A) or by relaying messages between two clients (Client A -> Server -> Client B).\n\nI\u2019m not entirely sure on how to run multiple instances of this application because of the second scenario. Eg.: What happens if ClientA is connected to AppServerA and ClientB is connected to AppServerB, then, I can\u2019t relay these messages.\n\nWhat is the preferred way to solve these kinds of problems? Right now, we are using plain WebSockets without STOMP but I researched STOMP with an external broker as well. I\u2019m a bit confused with the latter since in this case, the WebSocket connection would still be connected to an AppServer that relays the messages to the broker. In this case, if I lose AppServerA, all the connections to this server would be lost as well. Do you have any suggestions on solving this problem?\n\nMany thanks in advance! ",
                "time": "2020-04-30 09:59:33",
                "index": 0,
                "user": "aberkecz"
            },
            {
                "id": "5eaaa3e4d898fe7a375880dd",
                "text": "@aberkecz you may want to use some message broker, and connect all servers to it or similar approach",
                "time": "2020-04-30 10:09:40",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5eaaa4009f0c955d7d9656f3",
                "text": "something like rabbitmq, or even pubsub mechanism of redis",
                "time": "2020-04-30 10:10:08",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5eaaa53097338850a2db1be8",
                "text": "Yes, I think that\u2019s a good direction. However, I\u2019m not sure if I should use those instead of the websockets entirely or as an external broker for STOMP.\n\nIf I\u2019m using them instead of the WebSockets, I will have to come up with a way to securely authenticate the clients with the broker as well. Also, I would need to create a lot of queues within the broker dynamically. These are not neccessary problems but things to keep in mind and additional complexity.",
                "time": "2020-04-30 10:15:12",
                "index": 3,
                "user": "aberkecz"
            },
            {
                "id": "5eaaa57ad898fe7a375886c1",
                "text": "@aberkecz i'm just talking about keeping all servers in sync, it does not affect your client-server connection",
                "time": "2020-04-30 10:16:26",
                "index": 4,
                "user": "boda2004"
            },
            {
                "id": "5eaaa5d97a24ff01b0f210ad",
                "text": ":thumbsup: Oh, I see. That is also an approach that we are investigating, and so far it seems to be the most promising one. The solution would be something like this: ClientA -> AppServerA -> MQ -> AppServerB -> ClientB",
                "time": "2020-04-30 10:18:01",
                "index": 5,
                "user": "aberkecz"
            },
            {
                "id": "5eaaa5de97338850a2db1e8b",
                "text": "easiest (but not necessarily best) is Server sends message to queue, all servers receive it, each of them determine if it should be sent to one or more connected clients",
                "time": "2020-04-30 10:18:06",
                "index": 6,
                "user": "boda2004"
            },
            {
                "id": "5eaaa5f097338850a2db1ea6",
                "text": "right",
                "time": "2020-04-30 10:18:24",
                "index": 7,
                "user": "boda2004"
            },
            {
                "id": "5eaaa63997338850a2db200c",
                "text": "Thanks for your input! ",
                "time": "2020-04-30 10:19:37",
                "index": 8,
                "user": "aberkecz"
            }
        ]
    },
    {
        "id": 838,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5f0843ebc7d15f7d0f8319ec",
                "text": "Is someone familiar with multi tenancy? I have a default dataSource (D) where a table resides in which contains all the database connections (D-Connection) for every tenant. But for now inside the defaultDatasoure are all tables from the tenant tables too (e.g. table city - [D-City]) because when starting spring boot the controller and repository for city will be loaded and then the table city is needed. Is there a way to load the controllers and repositories of table city later, so that inside the default dataSource is only the connection table?",
                "time": "2020-07-10 10:33:15",
                "index": 0,
                "user": "oFALKo"
            },
            {
                "id": "5f08443d3c217837fd8cd4ae",
                "text": "Is someone familiar with multi **tenancy**?",
                "time": "2020-07-10 10:34:37",
                "index": 1,
                "user": "oFALKo"
            },
            {
                "id": "5f084449f6b741628425ddaf",
                "text": "Is someone familiar with **multi tenancy**?",
                "time": "2020-07-10 10:34:49",
                "index": 2,
                "user": "oFALKo"
            },
            {
                "id": "5f08479786ccb45b5998b126",
                "text": "Or **multiple dataSources**?",
                "time": "2020-07-10 10:48:55",
                "index": 3,
                "user": "oFALKo"
            },
            {
                "id": "5f08481f46c75b1e5e37432d",
                "text": "Multiple dataSources, yes",
                "time": "2020-07-10 10:51:11",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5f08483286ccb45b5998b308",
                "text": "With or without JPA?",
                "time": "2020-07-10 10:51:30",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5f08483ddbf01050ab66b878",
                "text": "Ah ok, with JPA",
                "time": "2020-07-10 10:51:41",
                "index": 6,
                "user": "oFALKo"
            },
            {
                "id": "5f0848548b72655b55628d1a",
                "text": "Do you read my question above?",
                "time": "2020-07-10 10:52:04",
                "index": 7,
                "user": "oFALKo"
            },
            {
                "id": "5f084887c7d15f7d0f832625",
                "text": "Yes, but I don't understand what the controllers have to do with it",
                "time": "2020-07-10 10:52:55",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5f0848c0f6b741628425e852",
                "text": "I suggest looking to see if you can use EclispeLink instead of Hibernate. The former supports multiple datasources in the same context.",
                "time": "2020-07-10 10:53:52",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5f0848f97a4e99049effe149",
                "text": "But Hibernate is more used, isnt it?",
                "time": "2020-07-10 10:54:49",
                "index": 10,
                "user": "oFALKo"
            },
            {
                "id": "5f0849043c217837fd8ce33d",
                "text": "There are mor examples out there?",
                "time": "2020-07-10 10:55:00",
                "index": 11,
                "user": "oFALKo"
            },
            {
                "id": "5f0849073c217837fd8ce355",
                "text": "Yes",
                "time": "2020-07-10 10:55:03",
                "index": 12,
                "user": "OrangeDog"
            },
            {
                "id": "5f08493164ef9d04b2a473ad",
                "text": "I found an examle of Spring boot, multi tenancy with hibernate and JPA",
                "time": "2020-07-10 10:55:45",
                "index": 13,
                "user": "oFALKo"
            },
            {
                "id": "5f084934f6b741628425e958",
                "text": "If you use Hibernate you'll have more work, because you need to also define multiple EntityManagerFactoryBeans and related, not just multiple DataSources",
                "time": "2020-07-10 10:55:48",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5f084947bd3edf666fbfa3e5",
                "text": "EclipseLink doesn't have those issues",
                "time": "2020-07-10 10:56:07",
                "index": 15,
                "user": "OrangeDog"
            },
            {
                "id": "5f08494ba9378637e8bcc972",
                "text": "Yeah thats true",
                "time": "2020-07-10 10:56:11",
                "index": 16,
                "user": "oFALKo"
            },
            {
                "id": "5f08494f8342f4627407a505",
                "text": "ok",
                "time": "2020-07-10 10:56:15",
                "index": 17,
                "user": "oFALKo"
            },
            {
                "id": "5f084981c7d15f7d0f8327f0",
                "text": "What is the 'starting point' inside the controllers with EclipseLink? The context or the session?",
                "time": "2020-07-10 10:57:05",
                "index": 18,
                "user": "oFALKo"
            },
            {
                "id": "5f0849978b72655b556290a4",
                "text": "Or how does this works?",
                "time": "2020-07-10 10:57:27",
                "index": 19,
                "user": "oFALKo"
            },
            {
                "id": "5f08499abd3edf666fbfa51e",
                "text": "Once you go multi-datasource you can't use most of the autoconfiguration, you have to set it all up yourself",
                "time": "2020-07-10 10:57:30",
                "index": 20,
                "user": "OrangeDog"
            },
            {
                "id": "5f0849aa64ef9d04b2a4744f",
                "text": "EclipseLink is JPA - the interfaces are the same",
                "time": "2020-07-10 10:57:46",
                "index": 21,
                "user": "OrangeDog"
            },
            {
                "id": "5f0849bfbd3edf666fbfa565",
                "text": "OK",
                "time": "2020-07-10 10:58:07",
                "index": 22,
                "user": "oFALKo"
            },
            {
                "id": "5f0849bff6b741628425ea96",
                "text": "I don't use them directly - it's behind Spring Data",
                "time": "2020-07-10 10:58:07",
                "index": 23,
                "user": "OrangeDog"
            },
            {
                "id": "5f0849e8c7d15f7d0f8328fb",
                "text": "so i have to have to looking for an example with EclipseLink and maybe its simpler...",
                "time": "2020-07-10 10:58:48",
                "index": 24,
                "user": "oFALKo"
            },
            {
                "id": "5f084a11dbf01050ab66bcf4",
                "text": "Thank you for the advice!",
                "time": "2020-07-10 10:59:29",
                "index": 25,
                "user": "oFALKo"
            },
            {
                "id": "5f084c0464ef9d04b2a47b6e",
                "text": "If you have lots (or dynamic) tenancies, you may need to do something complicated with bean scopes and factorybeanbeanfactories",
                "time": "2020-07-10 11:07:48",
                "index": 26,
                "user": "OrangeDog"
            },
            {
                "id": "5f084c77f6b741628425f0f3",
                "text": "Yes Id like to have dynamic loadable tenants ... But so far for now I can store REST calls to the specific tenant dataSources!",
                "time": "2020-07-10 11:09:43",
                "index": 27,
                "user": "oFALKo"
            },
            {
                "id": "5f084ca27455046699ed8414",
                "text": "The only dirty thing is that in the default DataSource are all tenant tables too (empty, but there).",
                "time": "2020-07-10 11:10:26",
                "index": 28,
                "user": "oFALKo"
            }
        ]
    },
    {
        "id": 839,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cc2f87d8446a6023e7d1691",
                "text": "> Hello! Updating from Spring Boot 2.1.3 to 2.1.4 I\u2019m getting this exception on startup:\n> ```\n>  org.springframework.beans.NotWritablePropertyException: Invalid property 'escapeCharacter' of bean class [MyRepositoryFactoryBean]: Bean property 'escapeCharacter' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n> ```\n> Any idea what might be causing this?\n\n@snicoll @wilkinsona Any thought about this?",
                "time": "2019-04-26 12:24:29",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5cc2f96e1cd0b8307d776a57",
                "text": "Not without some more context. What's the complete stack trace for example?",
                "time": "2019-04-26 12:28:30",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2f990990feb451806e9df",
                "text": "```\n org.springframework.beans.NotWritablePropertyException: Invalid property 'escapeCharacter' of bean class [MyRepositoryFactoryBean]: Bean property 'escapeCharacter' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n\tat org.springframework.beans.BeanWrapperImpl.createNotWritablePropertyException(BeanWrapperImpl.java:243) ~[spring-beans-5.1.6.RELEASE.jar:na]\n\tat org.springframework.beans.AbstractNestablePropertyAccessor.processLocalProperty(AbstractNestablePropertyAccessor.java:426) ~[spring-beans-5.1.6.RELEASE.jar:na]\n\tat org.springframework.beans.AbstractNestablePropertyAccessor.setPropertyValue(AbstractNestablePropertyAccessor.java:278) ~[spring-beans-5.1.6.RELEASE.jar:na]\n\tat org.springframework.beans.AbstractNestablePropertyAccessor.setPropertyValue(AbstractNestablePropertyAccessor.java:266) ~[spring-beans-5.1.6.RELEASE.jar:na]\n\tat org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:97) ~[spring-beans-5.1.6.RELEASE.jar:na]\n\tat org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:77) ~[spring-beans-5.1.6.RELEASE.jar:na]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1714) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\n\t... 148 common frames omitted\n```",
                "time": "2019-04-26 12:29:04",
                "index": 2,
                "user": "heruan"
            },
            {
                "id": "5cc2f9b7375bac74700b619e",
                "text": "`MyRepositoryFactoryBean` extends Spring\u2019s `TransactionalRepositoryFactoryBeanSupport`.",
                "time": "2019-04-26 12:29:43",
                "index": 3,
                "user": "heruan"
            },
            {
                "id": "5cc2f9fce416b84519e38ec9",
                "text": "I\u2019m using it with `@EnableJpaRepositories(repositoryFactoryBeanClass = MyRepositoryFactoryBean.class)`, working fine with Spring Boot 2.1.3 but throws with 2.1.4",
                "time": "2019-04-26 12:30:52",
                "index": 4,
                "user": "heruan"
            },
            {
                "id": "5cc2fa611cd0b8307d777241",
                "text": "Curious thing is I do not define any `escapeCharacter` property and I cannot event find it in the class hierarchy.",
                "time": "2019-04-26 12:32:33",
                "index": 5,
                "user": "heruan"
            },
            {
                "id": "5cc2fbcaa4ef09747101ecb1",
                "text": "I would guess, but can't tell from a truncated stack trace, that the property is coming from the bean definition",
                "time": "2019-04-26 12:38:34",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2fbd74b4cb471d95eb815",
                "text": "So the question becomes, what has set the property on the bean definition?",
                "time": "2019-04-26 12:38:47",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2fd6f6a84d76ed8fa7129",
                "text": "I\u2019m debugging right now and I\u2019m on the throwing breakpoint, not sure where to look for that answer though.",
                "time": "2019-04-26 12:45:35",
                "index": 8,
                "user": "heruan"
            },
            {
                "id": "5cc2fd825b3f941aa5960ecd",
                "text": "It looks like it's due to [this change](https://github.com/spring-projects/spring-data-jpa/commit/a166d46bc6d687f921c1bebb26e3ef27a2dd78d1#diff-e4e4ab27e70ae04e52cff2c19c9b49b6) in Spring Data JPA to me. Your best bet is probably to follow up in https://gitter.im/spring-projects/spring-data.",
                "time": "2019-04-26 12:45:54",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5cc2fda18446a6023e7d4a84",
                "text": "Seems like it! Thank you Andy, I\u2019ll follow up there then.",
                "time": "2019-04-26 12:46:25",
                "index": 10,
                "user": "heruan"
            }
        ]
    },
    {
        "id": 840,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5beed0de80652945c3700255",
                "text": "Hi all.. given my application based on spring boot throws e.g. `JsonMappingException`, it knows it should wrap it into `HttpMessageNotReadableException` and this is then returned as `400 Bad request`.. where is this behavior captured in code?",
                "time": "2018-11-16 14:14:54",
                "index": 0,
                "user": "pmihalcin"
            },
            {
                "id": "5beed77b534b2745c4851e49",
                "text": "@pmihalcin Probably `@ExceptionHandler` (maybe in `@(Rest)ControllerAdvice`)?",
                "time": "2018-11-16 14:43:07",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5beefad480e46b4266c0036c",
                "text": "@pmihalcin That's done in Framework's message converter: https://github.com/spring-projects/spring-framework/blob/539cfc24c6a738a22fd00c0b4096fc1511877ddd/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java#L245",
                "time": "2018-11-16 17:13:56",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5bef3b855f5c9250406b947a",
                "text": "@wilkinsona thanks a lot!",
                "time": "2018-11-16 21:49:57",
                "index": 45,
                "user": "pmihalcin"
            }
        ]
    },
    {
        "id": 841,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5d3efa12071bb025df101011",
                "text": "how fast can I learn spring boot, what are some good resources you will suggest I practice with?",
                "time": "2019-07-29 13:52:18",
                "index": 0,
                "user": "emmanuelidehen"
            },
            {
                "id": "5d3fed96ce271b4acd30bab6",
                "text": "@emmanuelidehen That depends, if you know spring framework already then it will be quite easy to learn springboot, if not, I suggest that you start with some courses on udemy.\nOne of it is this [one](https://www.udemy.com/course/spring-framework-5-beginner-to-guru/), there is also a lot of others, but it really depends on your needs and knowledge.",
                "time": "2019-07-30 07:11:18",
                "index": 8,
                "user": "tomicarsk6"
            },
            {
                "id": "5d42d551e939ab2447d81832",
                "text": "@tomicarsk6  thanks for the info, i'm new to spring it self. I have registered for the class on Udemy.  ",
                "time": "2019-08-01 12:04:33",
                "index": 63,
                "user": "emmanuelidehen"
            }
        ]
    },
    {
        "id": 842,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b9a3fd6b9531f2dfa5e3254",
                "text": "Hello! I'm trying Spring Boot 2.1.0.M3 and running `mvn spring-boot:run` I'm getting:\n```\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'resourceHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: \nBean instantiation via factory method failed;\nnested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerMapping]: Factory method 'resourceHandlerMapping' threw exception;\nnested exception is java.lang.IllegalStateException: No ServletContext set\n```",
                "time": "2018-09-13 10:45:42",
                "index": 0,
                "user": "heruan"
            },
            {
                "id": "5b9a4d5f0cfe7f30f18a7ede",
                "text": "@heruan do you have a sample somewhere I can take a look at? Are you doing something special with HandlerMapping beans in that app?",
                "time": "2018-09-13 11:43:27",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5b9a5a9e0cfe7f30f18ad6d5",
                "text": "@bclozel Not yet, I'm trying to strip down the project that's failing!",
                "time": "2018-09-13 12:39:58",
                "index": 3,
                "user": "heruan"
            },
            {
                "id": "5b9a6b200cfe7f30f18b49fc",
                "text": "@bclozel I think I've found the issue: it's a `@Bean ErrorPageRegistrar` I'm exposing in my application, if I remove it the app boots fine.",
                "time": "2018-09-13 13:50:24",
                "index": 8,
                "user": "heruan"
            }
        ]
    },
    {
        "id": 843,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c8694cfc8e5bc5162242e3d",
                "text": "I got several tests inheriting from an abstract parent (@SpringBootTests, @SpringBatchTests). All annotations and config is equal and inherited from the parent, child test classes are just @Test methods, but then,  the context is reloaded (banner reloads).  How can I debug what is evicting my context?",
                "time": "2019-03-11 17:03:11",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5c86989cc8e5bc5162244c31",
                "text": "The caching's done by `org.springframework.test.context.cache.DefaultContextCache`",
                "time": "2019-03-11 17:19:24",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c86dee1b4b6ef7bc893b662",
                "text": "Thanks for the hint... looks like there is no context removal on DefaultContextCache",
                "time": "2019-03-11 22:19:13",
                "index": 3,
                "user": "nightswimmings"
            },
            {
                "id": "5c86def51c597e5db6c046a6",
                "text": "maybe its a surefire/failsafe thing",
                "time": "2019-03-11 22:19:33",
                "index": 4,
                "user": "nightswimmings"
            }
        ]
    },
    {
        "id": 844,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dcaffae52b73c7cb206ed92",
                "text": "Hi so I have a Spring Boot application which has a dependency that defines a URL Handler to define a custom protocol. The issue I'm having is when running the application as a fat jar the Handler isn't being picked up. The reason for this is because when the URL class looks up Handlers it uses the system class loader however my Handler class was loaded via Spring Boot's `LaunchedURLClassLoader` therefore URL can't find the class. I've tried various ways to build the JAR so that the handler class is at the root of the Jar (hoping the system class loader will pick it up first). The best I've been able to do is to use the maven-dependency-plugin to unpack the dependency into `${project.build.directory}/classes` however that gets moved into `BOOT-INF/classes` (as I would expect) so the `LaunchedURLClassLoader` still picks up the class. Presumably I can unpackage the JAR, move the class to the root, and repackage as an executable JAR using the maven ant plugin or something similar but I was wondering if there was a more intended way to allow the system class loader to load a specific set of classes. Thanks",
                "time": "2019-11-12 18:53:34",
                "index": 0,
                "user": "cja769"
            },
            {
                "id": "5dcb0ee335889012b1f7f815",
                "text": "@cja769 There's some discussion and some suggestions in https://github.com/spring-projects/spring-boot/issues/6626",
                "time": "2019-11-12 19:58:27",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5dcb0f8f091dd14a0eaacb5d",
                "text": "Thanks @wilkinsona that's pretty much exactly what I was looking for.",
                "time": "2019-11-12 20:01:19",
                "index": 4,
                "user": "cja769"
            }
        ]
    },
    {
        "id": 845,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e0f705c2af31b403d1168c6",
                "text": "Hi,\n\nI'm sorry but I have a question that is probably quite silly and is if this is not the place to ask can you direct me to the right one.\nI am using spring webflux and using Flux.generate to create a provider with state. \nI make a request to a service and part of the result is when I can next hit the service.\n\nI want to use the WebClient, however, the result is  a Mono and if I block then I get \"block()/blockFirst()/blockLast() are blocking\".\n\n",
                "time": "2020-01-03 16:48:28",
                "index": 0,
                "user": "Budlee"
            },
            {
                "id": "5e0f706e4e9ea12051ab49b5",
                "text": "Is there a way that I can use block or should I just use this RestTemplate",
                "time": "2020-01-03 16:48:46",
                "index": 1,
                "user": "Budlee"
            },
            {
                "id": "5e0f7f21809bc77efee24c1b",
                "text": "@Budlee you should try to decompose in steps: first use `Flux.generate` to generate some elements and then use `flatMap` or other operators to transform those elements and, for example use a `WebClient` to transform that element. ",
                "time": "2020-01-03 17:51:29",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5e0fcdfc809bc77efee46308",
                "text": "@bclozel, the result of the webclient request in the Flux.generate determines the state (delay) till the next request.\nThis is a simplified example of that I want to do (I know I should not use sleep). I guess what I want is similar to FluxInterval but I am loath to try and create something similar to that myself as there must be a simpler way\n\n```\nFlux.generate(\n                () -> Long.valueOf(0),\n                ((state, synchronousSink) -> {\n                    try {\n                        Thread.sleep(state);\n                        Mono<MyResult> myResultMono = this.makeWebClientRequest();\n                        final MyResult result = myResultMono.block();\n                        synchronousSink.next(result);\n                        return result.getDelay();\n                    } catch (InterruptedException e) {\n                        throw new RuntimeException(e);\n                    }\n                })\n```\n        )",
                "time": "2020-01-03 23:27:56",
                "index": 12,
                "user": "Budlee"
            },
            {
                "id": "5e12e7a914328863c01bf74d",
                "text": "@Budlee this approach won't work. Why isn't Flux.interval a possible solution here?",
                "time": "2020-01-06 07:54:17",
                "index": 25,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 846,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c78375147276019e9947160",
                "text": "Hi Booters, \nCould someone tell me what bean Spring Boot configures behind `spring.application.name` property and how can I set this property programmatically? ",
                "time": "2019-02-28 19:32:33",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5c7843a147276019e994d44f",
                "text": "@akuma8 it's just the name of the app. it shows it during boot up. https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#common-application-properties\n\nyou can set it like any other property. there are many answers here. https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#common-application-properties",
                "time": "2019-02-28 20:25:05",
                "index": 1,
                "user": "snowe2010"
            },
            {
                "id": "5c784875e8ea1437378f0c92",
                "text": "@snowe2010 It is used here https://github.com/spring-projects/spring-boot/blob/f15e04b3926f20c01e9ae986a56eac43b8cdebf5/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/ContextIdApplicationContextInitializer.java#L68",
                "time": "2019-02-28 20:45:41",
                "index": 4,
                "user": "akuma8"
            },
            {
                "id": "5c7848c0212d0c1e1ab03783",
                "text": "@akuma8 I don't understand your question. ",
                "time": "2019-02-28 20:46:56",
                "index": 5,
                "user": "snowe2010"
            },
            {
                "id": "5c7849b50966d91204fff33d",
                "text": "@snowe2010 My question was to find the bean that Spring Boot configures using the `spring.application.name` property",
                "time": "2019-02-28 20:51:01",
                "index": 6,
                "user": "akuma8"
            },
            {
                "id": "5c7849d3608c6f37363cac61",
                "text": "ok. why do you need it though? ",
                "time": "2019-02-28 20:51:31",
                "index": 7,
                "user": "snowe2010"
            },
            {
                "id": "5c7849dfc1cab53d6f54b9f2",
                "text": "I don't know btw. ",
                "time": "2019-02-28 20:51:43",
                "index": 8,
                "user": "snowe2010"
            },
            {
                "id": "5c784a2253efa91203907115",
                "text": "I would like to set it dynamically",
                "time": "2019-02-28 20:52:50",
                "index": 9,
                "user": "akuma8"
            },
            {
                "id": "5c795d23e1446a6ebe66f48e",
                "text": "@akuma8 you can still set the property dynamically without knowing the bean. I provided two links that show how. ",
                "time": "2019-03-01 16:26:11",
                "index": 29,
                "user": "snowe2010"
            },
            {
                "id": "5c795d2ae8ea1437379637ea",
                "text": "oops. looks like I actually duplicated a link. just a sec. ",
                "time": "2019-03-01 16:26:18",
                "index": 30,
                "user": "snowe2010"
            },
            {
                "id": "5c795d47c1cab53d6f5badac",
                "text": "https://stackoverflow.com/questions/29072628/how-to-override-spring-boot-application-properties-programmatically",
                "time": "2019-03-01 16:26:47",
                "index": 31,
                "user": "snowe2010"
            }
        ]
    },
    {
        "id": 847,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d03b34c325b465cc329ee26",
                "text": "Hi, there, I am facing an issue with spring boot with FIPS enabled, when spring boot startup, it sows error \"Process terminated due to its use of the non-FIPS cryptographic feature MESSAGEDIGESTMD5\", the md5 is not FIPS compliant. is there a configuration can change the md5 to SHA256?",
                "time": "2019-06-14 14:46:36",
                "index": 0,
                "user": "jason20081404"
            },
            {
                "id": "5d03b479bc56c731f8b9d655",
                "text": "@jason20081404 That depends on what it is that's using MD5. Off the top of my head, I can't think of anything that does",
                "time": "2019-06-14 14:51:37",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5d03b4db6f0ec85ade0859fe",
                "text": "Do you get any more information about what the process is doing when it's terminated? A thread dump, for example?",
                "time": "2019-06-14 14:53:15",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d03b857faf70031f9125f38",
                "text": "I assume it's not a blank Boot app either. Work out what it is that you've enabled/(auto)configured that causes it.",
                "time": "2019-06-14 15:08:07",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5d03ba766f0ec85ade088ac2",
                "text": "@wilkinsona , thanks for your prompt response. here is here is spring log\ncom.test.*ssl*.provider.testjce.exceptions.TestJAbortException: Error: -1 (NON_FIPS_CRYPTO_FEATURE): Process terminated due to its use of the non-FIPS cryptographic feature MESSAGEDIGESTMD5\nat com.test.*ssl*.provider.testjce.TestJCEProvider.abort(TestJCEProvider.java:1320)\nat com.test.*ssl*.provider.testjce.TestJCEProvider.abort(TestJCEProvider.java:1284)\nat com.test.*ssl*.provider.testjce.TestJCEProvider.TestJCENonFipsCryptoFeature(TestJCEProvider.java:1245)\nat com.test.*ssl*.provider.testjce.CryptoFeatureEntry.<init>(CryptoFeatureEntry.java:74)\nat com.test.*ssl*.provider.testjce.digests.MD5Deferred$MD5.<init>(MD5Deferred.java:32)\nat com.test.*ssl*.provider.testjce.digests.MD5Deferred.<init>(MD5Deferred.java:121)\nat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\nat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\nat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\nat java.security.Provider$Service.newInstance(Provider.java:1595)\nat sun.security.jca.GetInstance.getInstance(GetInstance.java:236)\nat sun.security.jca.GetInstance.getInstance(GetInstance.java:164)\nat java.security.Security.getImpl(Security.java:695)\nat java.security.MessageDigest.getInstance(MessageDigest.java:167)\nat java.util.UUID.nameUUIDFromBytes(UUID.java:165)\nat org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:260)\nat org.springframework.cloud.context.scope.GenericScope.postProcessBeanFactory(GenericScope.java:237)\nat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:283)\nat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:127)\nat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)\nat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)\nat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\nat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\nat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\nat org.springframework.boot.web.support.SpringBootServletInitializer.run(SpringBootServletInitializer.java:154)\nat org.springframework.boot.web.support.SpringBootServletInitializer.createRootApplicationContext(SpringBootServletInitializer.java:134)\nat org.springframework.boot.web.support.SpringBootServletInitializer.onStartup(SpringBootServletInitializer.java:87)\nat org.springframework.web.SpringServletContainerInitializer.onStartup(SpringServletContainerInitializer.java:169)\nat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5622)\nat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)\nat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:1009)\nat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:985)\nat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:652)\nat org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1296)\nat org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:2038)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)\nJun 13, 2019 12:21:52 PM org.apache.coyote.AbstractProtocol pause\nINFO: Pausing ProtocolHandler [",
                "time": "2019-06-14 15:17:10",
                "index": 4,
                "user": "jason20081404"
            },
            {
                "id": "5d03ba9b8e050f62aa18f4ff",
                "text": "@wilkinsona , we can see it fails at org.springframework.cloud.context.scope.GenericScope.setSerializationId(ConfigurableListableBeanFactory)\n-> java.util.UUID.nameUUIDFromBytes(byte[])\nMessageDigest.getInstance(\"MD5\");",
                "time": "2019-06-14 15:17:47",
                "index": 5,
                "user": "jason20081404"
            },
            {
                "id": "5d03bc70e527d95addd23975",
                "text": "`GenericScope` is part of Spring Cloud which has its own Gitter room: https://gitter.im/spring-cloud/spring-cloud. Probably worth raising it there and seeing what the team says",
                "time": "2019-06-14 15:25:36",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5d03bfeebb789747fb03ba59",
                "text": "@wilkinsona , thanks so much! will do.  ",
                "time": "2019-06-14 15:40:30",
                "index": 7,
                "user": "jason20081404"
            }
        ]
    },
    {
        "id": 848,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dc3a38efb4dab784a7a92ea",
                "text": "Can we use/read from environment variables in property yaml when running spring not as a init.d service in Linux. So far looks like it's not picking environment variables. Any help? ",
                "time": "2019-11-07 04:54:38",
                "index": 0,
                "user": "gauravbrills"
            },
            {
                "id": "5dc3e16c2f8a0343574f38a3",
                "text": "@gauravbrills OS environment variables should always be part of Spring's Environment, irrespective of the use of init.d. How are you trying to use them?",
                "time": "2019-11-07 09:18:36",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5dc413b5a03ae1584f837310",
                "text": "@wilkinsona I have a boot jar running in ec2 (deployed as an init.d service) with a corresponding conf file , trying to use os environment variables inside application.yml like ${ES_HOST}. Everything works well but when I tried to externalize certain properties as os environment variables not able to fetch those, also actuator env endpoint doesn't show them though they come via env command in bash.",
                "time": "2019-11-07 12:53:09",
                "index": 11,
                "user": "gauravbrills"
            },
            {
                "id": "5dc416c07477946bad44d56d",
                "text": "@gauravbrills Showing via the `env` command doesn't guarantee that they'll be in the environment of a process that you've launched. It depends on how you're launching that process. I doubt there's anything Spring Boot-specific about your problem and suspect it's a general problem with the way that you're launching the JVM. How are you launching the app when you're not using init.d?",
                "time": "2019-11-07 13:06:08",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5dc42048a03ae1584f83cfc0",
                "text": "@wilkinsona locally it works fine with env only issue comes when launching on the ec2 box. I am launching there via init.d with a app specific user. Will double check if the env cars are visible to the boot init.d service/process",
                "time": "2019-11-07 13:46:48",
                "index": 20,
                "user": "gauravbrills"
            },
            {
                "id": "5dc4208cef84ab37861185fa",
                "text": "Also works fine when running on docker or oc this way..",
                "time": "2019-11-07 13:47:56",
                "index": 21,
                "user": "gauravbrills"
            },
            {
                "id": "5dc425d1a03ae1584f83faed",
                "text": "@gauravbrills I understand what you're doing now. Thanks. How have your registered the app with init.d? Are you using Boot's launch script? If so, it uses `start-stop-daemon` which deliberately does not pass the parent's environment into the child process. That's sensible as the parent process will almost certainly be running as root. If you have certain variables in root's environment that you now can safely be passed into the application process run by your application-specific user, you can do that in the conf script. Assuming you want to map a variable with an unchanged name, you'd do something like this I think `SOME_ENV_VAR=$SOME_ENV_VAR`",
                "time": "2019-11-07 14:10:25",
                "index": 27,
                "user": "wilkinsona"
            },
            {
                "id": "5dc45092e469ef4358ddf833",
                "text": "@wilkinsona you mean the the .conf file right, I have defined Java opts and run args there for now.",
                "time": "2019-11-07 17:12:50",
                "index": 44,
                "user": "gauravbrills"
            },
            {
                "id": "5dc4513ae1c5e915084eaa2c",
                "text": "Or you mean the launchscript given via Gradle",
                "time": "2019-11-07 17:15:38",
                "index": 46,
                "user": "gauravbrills"
            },
            {
                "id": "5dc45cb0e886fb5aa26f4dff",
                "text": "Yes, the launch script that's prepended to the jar so it can be executed directly",
                "time": "2019-11-07 18:04:32",
                "index": 47,
                "user": "wilkinsona"
            },
            {
                "id": "5dc4a047ea7d147cb33bbb14",
                "text": "@wilkinsona  thanks for now added env vars by editing the default script but had to hardcode each variable .. Hope there is a way to import all global vars automatically.",
                "time": "2019-11-07 22:52:55",
                "index": 53,
                "user": "gauravbrills"
            }
        ]
    },
    {
        "id": 849,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bc784b96e5a401c2d898029",
                "text": "I'm looking securing the actuator web endpoints for a public graphql server. In the past I believe I used `security.basic.enabled: false` and `management.security.enabled: true` to do this. I know the security auto configuration has been changed in Boot 2.x so the best I could come up is:",
                "time": "2018-10-17 18:51:37",
                "index": 0,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc784e0c08b8b30672da1c0",
                "text": "```\n@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // @formatter:off\n        http\n            .authorizeRequests()\n                .antMatchers(\"/actuator/**\").authenticated()\n                .anyRequest().anonymous()\n                .and()\n            .csrf()\n                .ignoringAntMatchers(\"/graphql/**\")\n                .and()\n\t    .httpBasic();\n        // @formatter:on\n    }\n}\n```\n",
                "time": "2018-10-17 18:52:16",
                "index": 1,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc78531c7bf7c3662291b82",
                "text": "I want my app to have as less as possible impact regarding Spring Security impact as I only need to protect the `/actuator` endpoint. ",
                "time": "2018-10-17 18:53:37",
                "index": 2,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc7853e384492366155aec4",
                "text": "Is the above setup the best solution in this case?",
                "time": "2018-10-17 18:53:50",
                "index": 3,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc785f3435c2a518ec19e0f",
                "text": "Also, because `management.security.enabled` does not exist anymore I should use another approach to allow `/actuator` access in dev mode, right?",
                "time": "2018-10-17 18:56:51",
                "index": 4,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc78742ef4afc4f288ccec3",
                "text": "@marceloverdijk you can check out our wiki page about security migration use cases and report back here if things are missing: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Security-2.0",
                "time": "2018-10-17 19:02:26",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5bc78ac864cfc273f9e186f6",
                "text": "thx @bclozel yes that page is clear. Maybe the option to disable all security except the actuator endpoints could be an addition. ",
                "time": "2018-10-17 19:17:28",
                "index": 6,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc78b05c7bf7c3662293e04",
                "text": "but that's much like my code above. instead of using `.antMatchers(\"/actuator/**\").authenticated()` the `.requestMatchers(EndpointRequest.toAnyEndpoint()).authenticated()` alternative is better (as used in the examples)",
                "time": "2018-10-17 19:18:29",
                "index": 7,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc78b3c384492366155d694",
                "text": "maybe a link to https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Security-2.0 could be added to the user guide to help others as well?",
                "time": "2018-10-17 19:19:24",
                "index": 8,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc791c81e23486b93d641a9",
                "text": "---------------",
                "time": "2018-10-17 19:47:20",
                "index": 9,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc7923def4afc4f288d1101",
                "text": "@bclozel looking at the bottom of https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Security-2.0 I see an example of 2 `WebSecurityConfigurerAdapter `s to separate the actuator and other custom security. ",
                "time": "2018-10-17 19:49:17",
                "index": 10,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc792736e5a401c2d89e1cb",
                "text": "I thought this could be useful in my case to only activate actuator security when not in dev mode, so I tried:",
                "time": "2018-10-17 19:50:11",
                "index": 11,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc792cd64cfc273f9e1b8a6",
                "text": "```\n@Configuration\npublic class WebSecurityConfig {\n\n    @Configuration\n    @Order(1)\n    @Profile(\"!dev\")\n    static class ActuatorWebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n            // @formatter:off\n            http\n                .authorizeRequests()\n                    .requestMatchers(EndpointRequest.toAnyEndpoint()).authenticated()\n                    .and()\n                .httpBasic();\n            // @formatter:on\n        }\n    }\n\n    @Configuration\n    static class BaseWebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n            // @formatter:off\n            http\n                .authorizeRequests()\n                    .anyRequest().anonymous()\n                    .and()\n                .csrf()\n                    .ignoringAntMatchers(\"/graphql/**\")\n                    .and()\n                .requiresChannel()\n                    // See: https://devcenter.heroku.com/articles/preparing-a-spring-boot-app-for-production-on-heroku#force-the-use-of-https\n                    .requestMatchers(r -> r.getHeader(\"X-Forwarded-Proto\") != null)\n                    .requiresSecure();\n            // @formatter:on\n        }\n    }\n}\n```\nbut in this setup the `.anyRequest().anonymous()` as part of the `BaseWebSecurityConfig` does not seem to work anymore as I get forbiddens (in case the active profile is not dev)...",
                "time": "2018-10-17 19:51:41",
                "index": 12,
                "user": "marceloverdijk"
            },
            {
                "id": "5bc84a6cef4afc4f289169c8",
                "text": "@bclozel pls ignore my previous question regarding multiple `WebSecurityConfigurerAdapter`s, I solved it differently.",
                "time": "2018-10-18 08:55:08",
                "index": 16,
                "user": "marceloverdijk"
            }
        ]
    },
    {
        "id": 850,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5bee8178ddad8777ef70f7ae",
                "text": "hello.\nSorry for that \" stupid question \" but really I am getting confused about `synchronous` and `asynchronous` events in general and specifically in spring framework.\nany clear explanation. Googling for that didn't clear things to me .",
                "time": "2018-11-16 08:36:08",
                "index": 0,
                "user": "amirensit"
            },
            {
                "id": "5bee83b5061f2e6bbb76b3d5",
                "text": "@amirensit synchronous means  main thread had to wait until all its child thread completed before returning response either at request level or allocation level",
                "time": "2018-11-16 08:45:41",
                "index": 2,
                "user": "Razi007"
            },
            {
                "id": "5bee83d41665691e0fb0cc71",
                "text": "Async means main thread can return response while child keep executing",
                "time": "2018-11-16 08:46:12",
                "index": 3,
                "user": "Razi007"
            },
            {
                "id": "5bee83f2534b2745c482eca2",
                "text": "@Razi007 thanks",
                "time": "2018-11-16 08:46:42",
                "index": 4,
                "user": "amirensit"
            }
        ]
    },
    {
        "id": 851,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5bd7569a1c100a4f290345da",
                "text": "I would like to start contributing to Spring but how does one learn the internal workings of Spring besides studying thousands of source lines? Spring\u2019s external reference documentation is very informative but obviously excludes much of the internal workings of Spring. Is there any type of internal documentation to help devs understand the  architecture at a high level so they can help contribute? Please @ me in any responses.",
                "time": "2018-10-29 18:51:06",
                "index": 0,
                "user": "pbriggs28"
            },
            {
                "id": "5bd757c7c08b8b3067912e9e",
                "text": "Hi @pbriggs28 I can only share my own personal experience. For me it has really come to having been a user of Spring for many years, especially building libraries within organizations that sit \u201con top\u201d of Spring. Having to do that, plus lots of debugging & troubleshooting, helps to get exposed to pieces of the internals of it",
                "time": "2018-10-29 18:56:07",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5bd757d66e5a401c2ded4e72",
                "text": "i would suggest finding something relatively small & exploring it a bit",
                "time": "2018-10-29 18:56:22",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5bd757ed1c100a4f29034d35",
                "text": "pick some piece of it and do a deep dive for yourself on it",
                "time": "2018-10-29 18:56:45",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5bd75878ab17df26310dc2be",
                "text": "Another thing would be to look at the current issue tracker for one of the projects (or in the case of spring-core, its JIRA) and find some feature thats on their backlog. Talk to them (in here or via the issue tracker/JIRA) about a potential solution and then run with it. For me I learn by just sitting down and doing it rather than reading documentation about it. Write some tests that demonstrate the feature you\u2019re trying to implement and go until your tests pass :)",
                "time": "2018-10-29 18:59:04",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5bd758fcbbdc0b2505bcef79",
                "text": "Most projects also have a `CONTRIBUTING.md` file in its repo as well which talks about how to contribute",
                "time": "2018-10-29 19:01:16",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5bd7594a435c2a518e24f246",
                "text": "Cool thanks. Yea I\u2019ve read through the contributing readme, the style guide, and checked out the \u2018Contributions Welcome\u2019 release in JIRA (https://jira.spring.io/projects/SPR/versions/13915/?selectedTab=com.atlassian.jira.plugins.jira-development-integration-plugin:release-report-tabpanel)",
                "time": "2018-10-29 19:02:34",
                "index": 6,
                "user": "pbriggs28"
            },
            {
                "id": "5bd7595fc7bf7c36628d17d0",
                "text": "Need to check if they have a similar release or tag for some of the Spring Boot projects",
                "time": "2018-10-29 19:02:55",
                "index": 7,
                "user": "pbriggs28"
            },
            {
                "id": "5bd759e26e5a401c2ded5d2e",
                "text": "For Spring Boot I would look at their [issue tracker](https://github.com/spring-projects/spring-boot/issues) and find something that seems small (for your first time). Read through the ticket, discuss it with the maintainers on the ticket or in here\u2026then go off and do your thing!",
                "time": "2018-10-29 19:05:06",
                "index": 8,
                "user": "edeandrea"
            },
            {
                "id": "5bd759f3069fca52a5b3ac65",
                "text": "thats how i got started with some of the other projects",
                "time": "2018-10-29 19:05:23",
                "index": 9,
                "user": "edeandrea"
            },
            {
                "id": "5bd75a346e5a401c2ded5e80",
                "text": "i\u2019ve found that project maintainers are pretty candid with their feedback of pull requests",
                "time": "2018-10-29 19:06:28",
                "index": 10,
                "user": "edeandrea"
            },
            {
                "id": "5bd75a62c7bf7c36628d1c6c",
                "text": "just make sure from a legal perspective if you work for some other company that contributing to OSS is ok",
                "time": "2018-10-29 19:07:14",
                "index": 11,
                "user": "edeandrea"
            },
            {
                "id": "5bd75a9c271506518d8d7b59",
                "text": "Even on my own personal time? Didn\u2019t realize that would be a legal issue..",
                "time": "2018-10-29 19:08:12",
                "index": 12,
                "user": "pbriggs28"
            },
            {
                "id": "5bd75aa7c08b8b3067914401",
                "text": "all depends on who you work for",
                "time": "2018-10-29 19:08:23",
                "index": 13,
                "user": "edeandrea"
            },
            {
                "id": "5bd75aaa3844923661b9d718",
                "text": "just something to check into",
                "time": "2018-10-29 19:08:26",
                "index": 14,
                "user": "edeandrea"
            },
            {
                "id": "5bd75ac61c100a4f29035ce9",
                "text": "Pretty small software company so I doubt it but good to know, I\u2019ll check into that.",
                "time": "2018-10-29 19:08:54",
                "index": 15,
                "user": "pbriggs28"
            },
            {
                "id": "5bd75aec271506518d8d7d2e",
                "text": "for me i had to fill out all kinds of forms and get \u201cblessed\u201d by legal\u2026and anything i contribute can\u2019t have any ties to the company whatsoever",
                "time": "2018-10-29 19:09:32",
                "index": 16,
                "user": "edeandrea"
            },
            {
                "id": "5bd75af1bbdc0b2505bcfe33",
                "text": "all companies are different",
                "time": "2018-10-29 19:09:37",
                "index": 17,
                "user": "edeandrea"
            },
            {
                "id": "5bd75b31ae7be94016d6f984",
                "text": "my previous company strictly forbid it whatsoever",
                "time": "2018-10-29 19:10:41",
                "index": 18,
                "user": "edeandrea"
            },
            {
                "id": "5bd75b4982893a2f3b5d23a7",
                "text": "interesting..",
                "time": "2018-10-29 19:11:05",
                "index": 19,
                "user": "pbriggs28"
            },
            {
                "id": "5bd75b636e5a401c2ded658d",
                "text": "i had a co-worker who was a committer way back on the Ant project\u2026they made him give up his committer status",
                "time": "2018-10-29 19:11:31",
                "index": 20,
                "user": "edeandrea"
            },
            {
                "id": "5bd75b68ab17df26310dd3d3",
                "text": "Good to know, that hadn\u2019t really crossed my mind as it in non-profit and wasn\u2019t related to any company code",
                "time": "2018-10-29 19:11:36",
                "index": 21,
                "user": "pbriggs28"
            },
            {
                "id": "5bd75b90c08b8b3067914994",
                "text": "So why is that, do you know? Like what are the companies worried about?",
                "time": "2018-10-29 19:12:16",
                "index": 22,
                "user": "pbriggs28"
            },
            {
                "id": "5bd75bc76e5a401c2ded67ef",
                "text": "not sure\u2026this was about 7 or 8 years ago\u2026even where i work now it was a long process i had to go through to get approval",
                "time": "2018-10-29 19:13:11",
                "index": 23,
                "user": "edeandrea"
            },
            {
                "id": "5bd77350c08b8b306791e158",
                "text": "@edeandrea do you know if there is any filter for checking \u2018newbie\u2019 tickets in the data/data-rest JIRAs like there is in the core spring JIRA?",
                "time": "2018-10-29 20:53:36",
                "index": 29,
                "user": "pbriggs28"
            },
            {
                "id": "5bd7735264cfc273f9465137",
                "text": "https://jira.spring.io/projects/SPR/versions/13915/?selectedTab=com.atlassian.jira.plugins.jira-development-integration-plugin:release-report-tabpanel",
                "time": "2018-10-29 20:53:38",
                "index": 30,
                "user": "pbriggs28"
            },
            {
                "id": "5bd77372435c2a518e259762",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/pGxX/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/pGxX/image.png)",
                "time": "2018-10-29 20:54:10",
                "index": 31,
                "user": "pbriggs28"
            },
            {
                "id": "5bd77386ae7be94016d7918f",
                "text": "And if not, how would I go about finding some good tickets to get my feet wet?",
                "time": "2018-10-29 20:54:30",
                "index": 32,
                "user": "pbriggs28"
            },
            {
                "id": "5bd779886e5a401c2dee207b",
                "text": "@pbriggs28 I\u2019m not sure about that project. Maybe posting that in the spring data Gitter channel might be good.",
                "time": "2018-10-29 21:20:08",
                "index": 33,
                "user": "edeandrea"
            },
            {
                "id": "5bd779e93844923661ba9865",
                "text": "will do",
                "time": "2018-10-29 21:21:45",
                "index": 34,
                "user": "pbriggs28"
            },
            {
                "id": "5bd77a1c271506518d8e3e39",
                "text": "Most of the things I\u2019ve contributed have been out of necessity. Things where there was a gap in a spring project for something we needed. ",
                "time": "2018-10-29 21:22:36",
                "index": 35,
                "user": "edeandrea"
            },
            {
                "id": "5bd77a5f64cfc273f9467ed3",
                "text": "Yea I have a few of those I currently handle with custom classes. Maybe I\u2019ll look into creating tickets for them.",
                "time": "2018-10-29 21:23:43",
                "index": 36,
                "user": "pbriggs28"
            },
            {
                "id": "5bd77a60ef4afc4f28f057e7",
                "text": "Or a bug that was affecting something we were using and rather than code around it, just fix it and contribute back the fix",
                "time": "2018-10-29 21:23:44",
                "index": 37,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 852,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c507e6f975714406b5fae15",
                "text": "Hi guys, I don't know if this is the right channel to ask or if I should ask in spring cloud. When a spring boot project uses a port that is already bound the application fails to initialize and tomcat gets shutdown. This is the expected behavior, but the problem I am running into is that the Discovery Client remains active and keeps on trying to ping Eureka, which prevents the process from ever stopping.  \n\nDoes anyone know if there is a solution to this problem?",
                "time": "2019-01-29 16:25:19",
                "index": 0,
                "user": "mars009"
            },
            {
                "id": "5c508a4a1b62f126506c3007",
                "text": "@mars009 You can mention tomact running  port number (like 8080,8081,8082...) for instance",
                "time": "2019-01-29 17:15:54",
                "index": 3,
                "user": "tanujsai"
            },
            {
                "id": "5c509b007b68f941023b51df",
                "text": "in this case I have it assigned to 1337, but I stumbled upon this case by accident, but its not the first time that I see a spring boot app failed to start, tomcat gets shut down, but a lingering thread remains and doens't let the process finish. This is the easiest way to reproduce what I am seeing and I was wondering if there was a way to tackle the problem",
                "time": "2019-01-29 18:27:12",
                "index": 4,
                "user": "mars009"
            },
            {
                "id": "5c50c60378e1ed4103adfbb9",
                "text": "@mars009 I observerd simillary issue in my machine. Tomat application was running even though I closed it. May be that might be the same issue",
                "time": "2019-01-29 21:30:43",
                "index": 5,
                "user": "tanujsai"
            },
            {
                "id": "5c50c60693fe7d5ac00fa0fe",
                "text": "Not sure",
                "time": "2019-01-29 21:30:46",
                "index": 6,
                "user": "tanujsai"
            },
            {
                "id": "5c50cacec2dba5382eab95b0",
                "text": "@mars009 The JVM will only shut down if there are no non-daemon threads left running. It sounds like the Eureka client hasn't shut down properly in your case and has left a non-daemon thread running. Taking a thread dump will confirm that's the case and hopefully allow you to identify what started the thread.",
                "time": "2019-01-29 21:51:10",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5c50caf88aa5ca5abf519bb4",
                "text": "If it was Eureka, then I'd recommend opening an issue in the relevant Spring Cloud project",
                "time": "2019-01-29 21:51:52",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5c50cfa27b68f941023cc340",
                "text": "Hey @wilkinsona indeed it seems the InstanceObservable that gets created is using a Timer that is not set as a daemon",
                "time": "2019-01-29 22:11:46",
                "index": 9,
                "user": "mars009"
            },
            {
                "id": "5c50d03cceb5a2264f60f10d",
                "text": "Following the class that initialized the InstanceObservables that remain hanging it seems to stem from `TurbineLifecycle`",
                "time": "2019-01-29 22:14:20",
                "index": 10,
                "user": "mars009"
            }
        ]
    },
    {
        "id": 853,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e3800b16f9d3d34981a7c43",
                "text": "Hi guys, I have a problem with `Web-Flux`,`MediaType.APPLICATION_STREAM_JSON_VALUE` and `cache`.\nLets consider following code (kotlin):\n````\n@GetMapping(\"/calc\", produces = [MediaType.APPLICATION_STREAM_JSON_VALUE])\n    fun calc() = Flux.create<Int> {\n        (1..10).forEach { v -> it.next(v) }\n        it.complete()\n    }\n````\nit returns fine the sequence 1...10\nBut when I add `.cache(1)` at the end - It hangs.\nAny idea? I need to cache it.\nWhen added `.flatMap{ Flux.just(it) }` it works again but it is rather a smell + hidden multithread underneath",
                "time": "2020-02-03 11:14:57",
                "index": 0,
                "user": "Azbesciak"
            },
            {
                "id": "5e38012e3aca1e4c5f5f307f",
                "text": "This is ofc simplified - in real use case that flux lives much longer than in request, it is some stateful stuff, and I am returning the current state and all following",
                "time": "2020-02-03 11:17:02",
                "index": 1,
                "user": "Azbesciak"
            },
            {
                "id": "5e382255159413355852e548",
                "text": "@Azbesciak Could you create an issue here? https://github.com/spring-projects/spring-framework/issues\nThere might be a problem with our `ChannelSendOperator` - I might be mistaken here, but a proper issue with a sample project would help a lot. Thanks!",
                "time": "2020-02-03 13:38:29",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5e382a6c40da694c5e05b152",
                "text": "@bclozel https://github.com/spring-projects/spring-framework/issues/24472",
                "time": "2020-02-03 14:13:00",
                "index": 3,
                "user": "Azbesciak"
            },
            {
                "id": "5e382ab7f301780b83630b01",
                "text": "Thanks!",
                "time": "2020-02-03 14:14:15",
                "index": 4,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 854,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd6f6c11c100a4f2900d3a6",
                "text": "Spring boot file upload any settings required at server side.. embedded tomcat runtime settings?",
                "time": "2018-10-29 12:02:09",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f713435c2a518e226a42",
                "text": "'''@RequestMapping(method = RequestMethod.POST, value = \"/upload\")\npublic String handleFileUpload(@RequestParam MultipartFile file) {\n    //Dosomething \n} ",
                "time": "2018-10-29 12:03:31",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f72f435c2a518e226c15",
                "text": "```\n@RequestMapping(method = RequestMethod.POST, value = \"/upload\")\npublic String handleFileUpload(@RequestParam MultipartFile file) {\n    //Dosomething \n}\n```",
                "time": "2018-10-29 12:03:59",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f750bbdc0b2505ba5061",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/i6ua/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/i6ua/image.png)",
                "time": "2018-10-29 12:04:32",
                "index": 3,
                "user": "tgioer"
            },
            {
                "id": "5bd6f772069fca52a5b13291",
                "text": "these settings",
                "time": "2018-10-29 12:05:06",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f7761e23486b9336f1c8",
                "text": "englis version please",
                "time": "2018-10-29 12:05:10",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f781c7bf7c36628a8bde",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/xVRQ/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/xVRQ/image.png)",
                "time": "2018-10-29 12:05:21",
                "index": 6,
                "user": "tgioer"
            },
            {
                "id": "5bd6f7c06e5a401c2deae8be",
                "text": "i need to call from angular2",
                "time": "2018-10-29 12:06:24",
                "index": 7,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f7c1271506518d8ad050",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/YFmJ/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/YFmJ/image.png)",
                "time": "2018-10-29 12:06:25",
                "index": 8,
                "user": "tgioer"
            },
            {
                "id": "5bd6f7f1ab17df26310b5854",
                "text": "thank you very much",
                "time": "2018-10-29 12:07:13",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f7fdc08b8b30678eb245",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/XdSk/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/XdSk/image.png)",
                "time": "2018-10-29 12:07:25",
                "index": 10,
                "user": "tgioer"
            },
            {
                "id": "5bd6f805ae7be94016d46234",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/qAfh/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/qAfh/image.png)",
                "time": "2018-10-29 12:07:33",
                "index": 11,
                "user": "tgioer"
            },
            {
                "id": "5bd6f80fab17df26310b59ae",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/LYP1/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/LYP1/image.png)",
                "time": "2018-10-29 12:07:43",
                "index": 12,
                "user": "tgioer"
            },
            {
                "id": "5bd6f8361e23486b9336f5b8",
                "text": "thanks ,... i need to send the file part of forData",
                "time": "2018-10-29 12:08:22",
                "index": 13,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f839ef4afc4f28ed12ed",
                "text": "formData",
                "time": "2018-10-29 12:08:25",
                "index": 14,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f846c7bf7c36628a916e",
                "text": "on a button click",
                "time": "2018-10-29 12:08:38",
                "index": 15,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f86e64cfc273f943381d",
                "text": "```let formData = new FormData();\n    formData.append(\"file\", file);\n    console.log(formData);\n    let headers = new Headers({\n        'Authorization': 'Bearer ' + this.token,\n        'Content-Type': 'multipart/form-data'\n    });\n    this.http.post(this.url, formData, {headers}).map(res => res.json()).subscribe((data) => console.log(data));\n    ```",
                "time": "2018-10-29 12:09:18",
                "index": 16,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f897c7bf7c36628a9336",
                "text": "thnak you very much",
                "time": "2018-10-29 12:09:59",
                "index": 17,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6f9d5ae7be94016d46d45",
                "text": "```<bean id=\"multipartResolver\"\n      class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\" /> ``` is this required ???",
                "time": "2018-10-29 12:15:17",
                "index": 18,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd6fb9f271506518d8aeadc",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/HT38/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/HT38/image.png)",
                "time": "2018-10-29 12:22:55",
                "index": 19,
                "user": "tgioer"
            },
            {
                "id": "5bd6fba9c7bf7c36628aa964",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/qtHS/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/qtHS/image.png)",
                "time": "2018-10-29 12:23:05",
                "index": 20,
                "user": "tgioer"
            },
            {
                "id": "5bd6fbc7271506518d8aec67",
                "text": "input type=\"file\"",
                "time": "2018-10-29 12:23:35",
                "index": 21,
                "user": "tgioer"
            },
            {
                "id": "5bd6fc191e23486b93370e20",
                "text": "ok good thank you",
                "time": "2018-10-29 12:24:57",
                "index": 22,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd71ab76e5a401c2debbd85",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/bhYp/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/bhYp/image.png)",
                "time": "2018-10-29 14:35:35",
                "index": 23,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd71b141e23486b9337ddf1",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/BESQ/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/BESQ/image.png)",
                "time": "2018-10-29 14:37:08",
                "index": 24,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd71b2d271506518d8bc9f2",
                "text": "Sending file from angular2 . But not received at server side",
                "time": "2018-10-29 14:37:33",
                "index": 25,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd71b35ab17df26310c3838",
                "text": "Whats the setting im missing",
                "time": "2018-10-29 14:37:41",
                "index": 26,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd71b3d435c2a518e234985",
                "text": "Its embedded tomcat",
                "time": "2018-10-29 14:37:49",
                "index": 27,
                "user": "DoraRajappan"
            },
            {
                "id": "5bd71b47271506518d8bcb08",
                "text": "Springrest",
                "time": "2018-10-29 14:37:59",
                "index": 28,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 855,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ca1fc0031aec969e833edcb",
                "text": "is it somehow possible to create a configuration class that can be called multiple times and have it generate beans with different names?\n\n```\n@Configuration\npublic CustomConfiguration {\n    @Bean(name = // somehow set this)\n    public CustomBean customBean() {\n        // bean init code\n    }\n}\n```\n\nso the result would be that by importing/calling it two times I can create two instances of  `CustomBean` where the first one is called `foo` and the other `bar` in the app context?",
                "time": "2019-04-01 11:54:40",
                "index": 0,
                "user": "tonisostrat"
            },
            {
                "id": "5ca2004e3ebbdc55b3422b98",
                "text": "No, why would you want to do that? If that\u2019s static, how about having a base abstraction or something?",
                "time": "2019-04-01 12:13:02",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ca202efb34ccd69e747d9af",
                "text": "@snicoll, the idea is that the application has an X amount of \"modules\" and for each module there's a separate instance of `CustomBean`with a namespaced name and I'm trying to avoid having the `@Bean` method in every module",
                "time": "2019-04-01 12:24:15",
                "index": 5,
                "user": "tonisostrat"
            }
        ]
    },
    {
        "id": 856,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e15eee6c395034902663c27",
                "text": "Hi, I need to customize Spring's default Jackson ObjectMapper (specifically I want Spring to build its default mapper and then I want to add some custom configuration). I've found `Jackson2ObjectMapperBuilderCustomizer`, but unfortunately it only works for Spring MVC, but the app I'm working on is not a web application. Is there a way to customize ObjectMapper which Spring creates in a non-web Spring Boot application?",
                "time": "2020-01-08 15:01:58",
                "index": 0,
                "user": "AlexCzar"
            },
            {
                "id": "5e15f3733679536f962e4809",
                "text": "@AlexCzar what do you consider its \"default mapper\"? The Jackson auto-configuration in Spring Boot is in org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration which is MVC agnostic. (AFAIK)",
                "time": "2020-01-08 15:21:23",
                "index": 1,
                "user": "emersonf"
            },
            {
                "id": "5e160bb8e0f13b70c9530b21",
                "text": "@emersonf it is not MVC agnostic, it uses `import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;` which is located in spring web jar.\nThat said, I already solved my problem, it's dirty, but with the time constraints I have it's good enough. I just copied relevant parts of Spring's ObjectMapper initialization and configuration logic to my own Configuration class and marked my mapper as `@Primary` as is suggested in Spring docs.",
                "time": "2020-01-08 17:04:56",
                "index": 6,
                "user": "AlexCzar"
            },
            {
                "id": "5e160d11c395034902671685",
                "text": "@AlexCzar I'm curious about where your `ObjectMapper` bean comes from in a non-web Spring Boot application; I don't think Spring Boot provides one in those cases.",
                "time": "2020-01-08 17:10:41",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5e1615fc91129970ca90ca94",
                "text": "@bclozel huh, really? there must be another one being created somewhere in the dependencies then, I'll check tomorrow (I'm off work atm)",
                "time": "2020-01-08 17:48:44",
                "index": 9,
                "user": "AlexCzar"
            }
        ]
    },
    {
        "id": 857,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5c771bd6e1446a6ebe580f47",
                "text": "Hi, simple question. We are upgrading from SB 1.5.6 to 2.1.3 and we have autowired `jpaProperties: Properties,`, but now this is failing to compile saying it can't find the bean. What happened to the Properties bean that currently works in 1.5.6? I don't see anything about it on the upgrade guide. ",
                "time": "2019-02-27 23:23:02",
                "index": 0,
                "user": "snowe2010"
            },
            {
                "id": "5c771c06b1503b3d70539dfc",
                "text": "read the 2.0 migration guide",
                "time": "2019-02-27 23:23:50",
                "index": 1,
                "user": "ankurbhakta"
            },
            {
                "id": "5c771c0c8a7def0752e98ba3",
                "text": "that answer is in their",
                "time": "2019-02-27 23:23:56",
                "index": 2,
                "user": "ankurbhakta"
            },
            {
                "id": "5c771c158a7def0752e98bba",
                "text": "there*",
                "time": "2019-02-27 23:24:05",
                "index": 3,
                "user": "ankurbhakta"
            },
            {
                "id": "5c780b0065ffa019ea65401e",
                "text": "@ankurbhakta you seemed to have missed the last part of what I said. The answer is not on the upgrade guide. I have read the entire upgrade guide several times. ",
                "time": "2019-02-28 16:23:28",
                "index": 16,
                "user": "snowe2010"
            }
        ]
    },
    {
        "id": 858,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5f227ad4bc41f3681733e555",
                "text": "hi, why i get this: \t`Error:(10, 8) java: softnet.si.ldp.client.GlobanEndointInterceptor is not abstract and does not override abstract method afterCompletion(org.springframework.ws.context.MessageContext,java.lang.Object,java.lang.Exception) in org.springframework.ws.server.EndpointInterceptor`\n\n```\n@Component\npublic class GlobanEndointInterceptor implements EndpointInterceptor {}\n```",
                "time": "2020-07-30 07:46:28",
                "index": 0,
                "user": "miha-"
            },
            {
                "id": "5f227f1da050df430024bb25",
                "text": "@miha- because this interface has something to implement and your class body is empty..",
                "time": "2020-07-30 08:04:45",
                "index": 1,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f227f76b1409c060f928913",
                "text": " @alexey-anufriev this is whole class: https://pastebin.com/CpTmbmuu",
                "time": "2020-07-30 08:06:14",
                "index": 2,
                "user": "miha-"
            },
            {
                "id": "5f227ffac1c0090e64b0391d",
                "text": "i guess it should be something else",
                "time": "2020-07-30 08:08:26",
                "index": 3,
                "user": "miha-"
            },
            {
                "id": "5f228006d7efe5438f2e8121",
                "text": "@miha- you did just a half of work, here is the source of the interface, https://github.com/spring-projects/spring-ws/blob/master/spring-ws-core/src/main/java/org/springframework/ws/server/EndpointInterceptor.java, as you see there are two more methods you need to implement",
                "time": "2020-07-30 08:08:38",
                "index": 4,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f22813e3eef7e1ffe42c727",
                "text": "@alexey-anufriev thank you. I did not know that I have implement all methods. But still why my interceptor is not triggered before @Endpoint",
                "time": "2020-07-30 08:13:50",
                "index": 6,
                "user": "miha-"
            },
            {
                "id": "5f22817a27799668010ee651",
                "text": "https://pastebin.com/9btnfdgi",
                "time": "2020-07-30 08:14:50",
                "index": 7,
                "user": "miha-"
            },
            {
                "id": "5f228181b1409c060f928f5e",
                "text": " [nio-8090-exec-1] o.s.ws.server.EndpointNotFound           : No endpoint mapping found for [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData]",
                "time": "2020-07-30 08:14:57",
                "index": 8,
                "user": "miha-"
            },
            {
                "id": "5f2281953eef7e1ffe42c7ef",
                "text": "if i disable ws-security endpoint is found",
                "time": "2020-07-30 08:15:17",
                "index": 9,
                "user": "miha-"
            },
            {
                "id": "5f22841fe9066820052881ed",
                "text": "@miha- I think it is related to the configuration of the interceptor, could you try to set at least `Securement`-related config?",
                "time": "2020-07-30 08:26:07",
                "index": 11,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f22848477eccd0e1484ac1c",
                "text": "@alexey-anufriev. you mean this:\n ```\nwss4jSecurityInterceptor.setSecurementSignatureCrypto(cryptoFactoryBean().getObject());\n wss4jSecurityInterceptor.setSecurementEncryptionCrypto(cryptoTrust());\n```",
                "time": "2020-07-30 08:27:48",
                "index": 12,
                "user": "miha-"
            },
            {
                "id": "5f2284e4a050df430024ce1c",
                "text": "yes, here you can get a bit more details https://docs.spring.io/spring-ws/sites/1.5/reference/html/security.html",
                "time": "2020-07-30 08:29:24",
                "index": 13,
                "user": "alexey-anufriev"
            },
            {
                "id": "5f228539d7efe5438f2e93d9",
                "text": "I have it now like this:\n```\n  @Bean\n    public Wss4jSecurityInterceptor wss4jSecurityInterceptor() throws Exception {\n        Wss4jSecurityInterceptor wss4jSecurityInterceptor = new Wss4jSecurityInterceptor();\n\n        wss4jSecurityInterceptor.setValidationActions(\"Signature Encrypt Timestamp\");\n        //wss4jSecurityInterceptor.setValidationTimeToLive(10);\n        //wss4jSecurityInterceptor.setTimestampStrict(true);\n        wss4jSecurityInterceptor.setValidateRequest(true);\n        wss4jSecurityInterceptor.setSecurementSignatureCrypto(cryptoFactoryBean().getObject());\n        wss4jSecurityInterceptor.setSecurementEncryptionCrypto(cryptoTrust());\n        wss4jSecurityInterceptor.setValidationSignatureCrypto(cryptoTrust());\n        wss4jSecurityInterceptor.setValidationDecryptionCrypto(cryptoFactoryBean().getObject());\n        wss4jSecurityInterceptor.setValidationCallbackHandler(clientValidationCallbackHandler());\n\n        wss4jSecurityInterceptor.afterPropertiesSet();\n\n        return wss4jSecurityInterceptor;\n    }\n```",
                "time": "2020-07-30 08:30:49",
                "index": 14,
                "user": "miha-"
            },
            {
                "id": "5f22855bf8dfed4382caa6c3",
                "text": "Interceptors are working on other project from it behaves like client, so that I sign and encrypt request",
                "time": "2020-07-30 08:31:23",
                "index": 15,
                "user": "miha-"
            },
            {
                "id": "5f228565d50f2b289aa50aee",
                "text": "if I get request they are not triggered",
                "time": "2020-07-30 08:31:33",
                "index": 16,
                "user": "miha-"
            },
            {
                "id": "5f229b09e90668200528bec7",
                "text": "@miha- sorry, hard to say like this, it needs debugging, so I would try with minimal reproducer first",
                "time": "2020-07-30 10:03:53",
                "index": 18,
                "user": "alexey-anufriev"
            }
        ]
    },
    {
        "id": 859,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5d041832325b465cc32d0642",
                "text": "Hello, I have multi-module SpringBoot applications in one repo - https://github.com/sergmain/metaheuristic/blob/master/pom.xml , for deploying on heroku I have specific pom file - https://github.com/sergmain/metaheuristic/blob/master/pom-heroku.xml . How can I specify which pom.xml to use when I push to Cloud Foundry?",
                "time": "2019-06-14 21:57:06",
                "index": 0,
                "user": "sergmain"
            },
            {
                "id": "5d04beb52313502d3847b108",
                "text": "@sergmain You'd typically push a ready-built jar to Cloud Foundry so there's no need to specify the pom. Just build you app using whatever pom you need then push the resulting jar",
                "time": "2019-06-15 09:47:33",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 860,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c65388e4bafd97ca3ed6495",
                "text": "I am trying to programatically load properties from the environment on appliction startup, however I can't seem to get it work when implementing `ApplicationContextInitializer<ConfigurableApplicationContext>`. \n\nI'm launching my application like this:\n\n```\nnew SpringApplicationBuilder(Application.class)\n\t.initializers(new ContextInitializer())\n\t.run(args);\n```\n\nAnd then in the initialize method:\n\n```\n@Override\npublic void initialize(ConfigurableApplicationContext applicationContext) {\n    Properties properties = createPropertiesFromEnvironment();\n    applicationContext.getEnvironment().getPropertySources().addFirst(new PropertiesPropertySource(\"properties\", properties));\n    \n    LOG.info(\"Context successfully initialized with properties\");\n}\n```\n\n\nBut that seems to not load the properties early enough for [this Azure sample](https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-boot-starter-java-app-with-azure-key-vault?view=azure-java-stable#configure-and-compile-your-app) to work correctly.\n\nHowever, if I remove the interface and supply the spring application like this and add my properties:\n\n```\nSpringApplication app = new SpringApplication(Application.class);\nContextInitializerStatic.initialize(app);\napp.run(args);\n```\n\nAnd then the initialize method:\n\n``` \npublic static void initialize(SpringApplication app) {\n\tvar session = new ContextInitializerStatic();\n\t\n    app.setDefaultProperties(session.createPropertiesFromEnvironment());\n    \n    LOG.info(\"Context successfully initialized with properties\");\n}\n```\n\nThis second approach works, is this an acceptable approach or will I shoot myself in the foot later?",
                "time": "2019-02-14 09:44:46",
                "index": 0,
                "user": "hochas"
            },
            {
                "id": "5c65424becef85660ba39499",
                "text": "@hochas You should use an `EnvironmentPostProcessor` registered via an entry in `spring.factories`",
                "time": "2019-02-14 10:26:19",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c654f1badf6cb0b2cb8c333",
                "text": "@wilkinsona thanks, but that doesn't seem to work either. When the application starts the properties aren't found:\n> Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'dataLakeClientSecret' in value \"${dataLakeClientSecret}\"",
                "time": "2019-02-14 11:20:59",
                "index": 2,
                "user": "hochas"
            },
            {
                "id": "5c655179253c2b5ea30eb11e",
                "text": "For clarity: The properties that I add programatically are there, but they are not fetched from the key vault, which I guess is because my properties are somehow added too late.",
                "time": "2019-02-14 11:31:05",
                "index": 3,
                "user": "hochas"
            },
            {
                "id": "5c65569e7502282258e9669e",
                "text": "Nothing should be trying to resolve properties against the environment until your EnvironmentPostProcessor has run",
                "time": "2019-02-14 11:53:02",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c6556bfef98455ea4344409",
                "text": "Are you sure that it's being called? A stack trace of when the property resolution is failing and when the environment post-processor is called would be useful",
                "time": "2019-02-14 11:53:35",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5c657198ef98455ea4351897",
                "text": "@wilkinsona here's a gist with the stacktrace https://gist.github.com/hochas/4ba6555f53dc89e2e65ce3ae6ff25df1",
                "time": "2019-02-14 13:48:08",
                "index": 6,
                "user": "hochas"
            },
            {
                "id": "5c65743eef98455ea4352d95",
                "text": "I just noticed I had a spelling error in `spring.factories`file, I resolved it and the `EnvironmentPostProcessor`now runs, but I still get the exakt same stacktrace as in the gist... I've also tried both of the following approaches in the post processor:\n```\nenvironment.getPropertySources().addFirst(new PropertiesPropertySource(\"azure.keyvault\" ,createPropertiesFromEnvironment()));\napplication.setDefaultProperties(createPropertiesFromEnvironment());\n```\nBut still the same result",
                "time": "2019-02-14 13:59:26",
                "index": 7,
                "user": "hochas"
            },
            {
                "id": "5c65745fecef85660ba4ff0a",
                "text": "Tried them individually that is, not at the same time",
                "time": "2019-02-14 13:59:59",
                "index": 8,
                "user": "hochas"
            },
            {
                "id": "5c65946cadf6cb0b2cbac850",
                "text": "@hochas That stack looks fine, any EnvironmentPostProcessors should have run by then. Have you verified that it's being called before the exception occurs? Is its property source in the environment at that point?",
                "time": "2019-02-14 16:16:44",
                "index": 12,
                "user": "wilkinsona"
            },
            {
                "id": "5c6661767502282258ed060d",
                "text": "@wilkinsona I am sure, the execution of the EnvironmentPostProcessor is completed before the exception occurs",
                "time": "2019-02-15 06:51:34",
                "index": 18,
                "user": "hochas"
            },
            {
                "id": "5c666246604f233ab612429e",
                "text": "And here's the entirety of the implementation that should add the properties: https://gist.github.com/hochas/a94b900eeba7ba6db54e7c2ac72cb0f3",
                "time": "2019-02-15 06:55:02",
                "index": 19,
                "user": "hochas"
            },
            {
                "id": "5c6662e4adf6cb0b2cc05e15",
                "text": "@CHANDRAKANTHREDDY93 I think you might be looking for [ResponseEntity](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/ResponseEntity.html)",
                "time": "2019-02-15 06:57:40",
                "index": 20,
                "user": "hochas"
            },
            {
                "id": "5c6679a9adf6cb0b2cc10c66",
                "text": "@hochas I must be missing something. The missing property seems to be `dataLakeClientSecret` but I can't see anything in that Gist that sets that property",
                "time": "2019-02-15 08:34:49",
                "index": 24,
                "user": "wilkinsona"
            },
            {
                "id": "5c667e105095f6660cf98ff1",
                "text": "@wilkinsona The property `dataLakeClientSecret` comes from our key vault in Azure. Microsoft has an SDK that wires these automatically when you provide it with properties, [like this](https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-boot-starter-java-app-with-azure-key-vault?view=azure-java-stable#configure-and-compile-your-app). Might it be that the SDK isn't playing nicely with Springs lifecycle?",
                "time": "2019-02-15 08:53:36",
                "index": 25,
                "user": "hochas"
            },
            {
                "id": "5c667e6b604f233ab61301a2",
                "text": "The sample that I linked to above works well if you just put the properties in `application.properties`, but I want to provide these at runtime.",
                "time": "2019-02-15 08:55:07",
                "index": 26,
                "user": "hochas"
            },
            {
                "id": "5c668f585095f6660cfa1367",
                "text": "@hochas I would guess that the Azure stuff plugs in using an `EnvironmentPostProcessor`. If that's the case, you'll need to order yours (`@Order` or implemented `Ordered`) so that it goes before the Azure one does.",
                "time": "2019-02-15 10:07:20",
                "index": 27,
                "user": "wilkinsona"
            },
            {
                "id": "5c668ff44bafd97ca3f6c77f",
                "text": "Yes, as I guessed: https://github.com/Microsoft/azure-spring-boot/blob/d81ab4e684e3e1a123d5e47cffa63d72484c5f7b/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessor.java. It's ordered to go just after the config files are processed which is why `application.properties` works. You'll need to order yours to go before that.",
                "time": "2019-02-15 10:09:56",
                "index": 28,
                "user": "wilkinsona"
            },
            {
                "id": "5c669142126af75debad9b9b",
                "text": "Thanks a ton @wilkinsona, I've been looking for the lifecycle hook in the wrong repository... ",
                "time": "2019-02-15 10:15:30",
                "index": 29,
                "user": "hochas"
            },
            {
                "id": "5c6692ebef98455ea43d0add",
                "text": "But the error persists :(  Neither @Order nor implementing the interface works. Both result in the same error. \n```\n@Override\npublic int getOrder() {\n    //        return Ordered.HIGHEST_PRECEDENCE;\n    return KeyVaultEnvironmentPostProcessor.DEFAULT_ORDER - 1;\n}\n``` ",
                "time": "2019-02-15 10:22:35",
                "index": 30,
                "user": "hochas"
            },
            {
                "id": "5c66943f4bafd97ca3f6e6eb",
                "text": "If I were in your situation, I'd use the debugger to step through `KeyValueEnvironmentPostProcessor` and check that it is adding the Key Vault property source",
                "time": "2019-02-15 10:28:15",
                "index": 31,
                "user": "wilkinsona"
            },
            {
                "id": "5c669746604f233ab613bde6",
                "text": "@wilkinsona thank you so much for your time, I had moved the  `spring.factories` outside of META-INF to temporarily disable it, now it works like charm.",
                "time": "2019-02-15 10:41:10",
                "index": 32,
                "user": "hochas"
            }
        ]
    },
    {
        "id": 861,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d033956d100e447fc0f71ff",
                "text": "is there anyway we could fetch a single column value from respository layer.\nWhat I am doing ?\n@Query(\"SELECT stateroom_type_description FROM ship_info.stateroom_additional_details_by_ship_stateroom where ship_code=?0 and stateroom_type=?1\")\n    Mono<String> getStateroomDescription(String shipCode, String stateroomType);\n\nBUt its throwing an error org.springframework.data.mapping.MappingException: Couldn't find PersistentEntity for type class java.lang.String!\n",
                "time": "2019-06-14 06:06:14",
                "index": 0,
                "user": "deepakmehra10"
            },
            {
                "id": "5d0345c16f0ec85ade04e3bc",
                "text": "@deepakmehra10  your Query looks like native query and not JPA, maybe you could try set `nativeQuery = true` or rewrite Query to JPA",
                "time": "2019-06-14 06:59:13",
                "index": 1,
                "user": "ztomic"
            },
            {
                "id": "5d034a75faf70031f90ed106",
                "text": "But i was using the query with same parameters earlier it worked",
                "time": "2019-06-14 07:19:17",
                "index": 2,
                "user": "deepakmehra10"
            }
        ]
    },
    {
        "id": 862,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e87165c26dafb36651f5cb9",
                "text": "Found the bug recently I wrote so spring-boot changing\n```\nplugins {\n    id(\"org.springframework.boot\") version \"2.2.6.RELEASE\"\n```\nback to\n```\nplugins {\n    id(\"org.springframework.boot\") version \"2.2.5.RELEASE\"\n```\nfixes whole issue with not being able to create new CoroutineScope",
                "time": "2020-04-03 10:56:28",
                "index": 0,
                "user": "haris-zynka"
            },
            {
                "id": "5e87167321d37f3c456a275b",
                "text": "if anyone knows this is a known issue please report back so I don't create another ticket on GitHub",
                "time": "2020-04-03 10:56:51",
                "index": 1,
                "user": "haris-zynka"
            },
            {
                "id": "5e872ac221d37f3c456a7139",
                "text": "@haris-zynka what happens if you keep 2.2.6 but downgrade the kotlin-coroutines dep to `1.3.3` and kotlin to `1.3.61`\nYou can do that with the `kotlin-coroutines.version` and `kotlin.version` properties in your build tool. See https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-customize-dependency-versions",
                "time": "2020-04-03 12:23:30",
                "index": 4,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 863,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cca5f5db489bb6ed7fdc389",
                "text": "So uh would anyone here happen to know a way to set the classloader spring uses?",
                "time": "2019-05-02 03:09:17",
                "index": 0,
                "user": "Redmancometh"
            },
            {
                "id": "5cca5f78e416b8451915b67b",
                "text": "I have a spring project that's a module that's being loaded by another project, and it's throwing classnotfound exceptions pretty sure due to the classloader",
                "time": "2019-05-02 03:09:44",
                "index": 1,
                "user": "Redmancometh"
            },
            {
                "id": "5ccac644990feb45183bbeee",
                "text": "@Redmancometh the classloader depends on how the application is loaded...\nFor a Boot jar it's `org.springframework.boot.loader.JarLauncher`, for a war it's whatever classloader the application server uses",
                "time": "2019-05-02 10:28:20",
                "index": 4,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 864,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ec434c3e8153a3980608cf7",
                "text": "hi all. SB 2.3.0 includes support for layered JARs and Buildpacks. We run some apps on OpenShift and build those with `s2i-java`. \n\nIs it correct to assume that one can not use Buildpacks w/OpenShift+s2i-java ? And that we'll benefit from layered JARs without any additional configuration?",
                "time": "2020-05-19 19:34:27",
                "index": 0,
                "user": "62mkv"
            },
            {
                "id": "5ec435953854713815bb9bab",
                "text": "was there a blog post about that already? in the original announcement (https://spring.io/blog/2020/01/27/creating-docker-images-with-spring-boot-2-3-0-m1) there's not a single word about it.. ",
                "time": "2020-05-19 19:37:57",
                "index": 1,
                "user": "62mkv"
            },
            {
                "id": "5ec4360b520b7a38fbded207",
                "text": "I've noticed that w/ our current setup (vanilla s2i-java + Gradle + SB 2.2.7), one (at least) of the layers of an image is 400M+. I assume it's not good, so would like to know how to benefit from SB 2.3.0 in this area",
                "time": "2020-05-19 19:39:55",
                "index": 2,
                "user": "62mkv"
            },
            {
                "id": "5ec43628e8153a398060916a",
                "text": "probably the simplest way to find out would be to just upgrade and observe",
                "time": "2020-05-19 19:40:24",
                "index": 3,
                "user": "62mkv"
            },
            {
                "id": "5ec437185ad7623956f45523",
                "text": "@62mkv Boot 2.3.0 buildpack support is intended to make it easy to get a container image from a Boot jar. I don\u2019t know anything about `s2i-java`, but at a glance it appears to have the same goal. so it\u2019s hard to see how those would work together. ",
                "time": "2020-05-19 19:44:24",
                "index": 4,
                "user": "scottfrederick"
            },
            {
                "id": "5ec43734e8153a3980609537",
                "text": "that's what I also assumed, thanks",
                "time": "2020-05-19 19:44:52",
                "index": 5,
                "user": "62mkv"
            },
            {
                "id": "5ec43773d76c8039c3e9b921",
                "text": "I\u2019d assume that `s2i-java` is building an image with the entire fat jar contents in one layer. that\u2019s actually what the Paketo buildpacks will do also, unless the fat jar is built with the Boot layering information in it (i.e. a `layers.idx` file). any other tooling would have know about `layers.idx` to provide the same layering benefit. ",
                "time": "2020-05-19 19:45:55",
                "index": 6,
                "user": "scottfrederick"
            },
            {
                "id": "5ec437ab25240239a0b2fce7",
                "text": "i.e. the benefit provided by Boot 2.3.0 is that it will provide layering hints to any image-building tooling that knows to look for it and honor it. ",
                "time": "2020-05-19 19:46:51",
                "index": 7,
                "user": "scottfrederick"
            },
            {
                "id": "5ec439973854713815bba7f3",
                "text": "@scottfrederick ok, let's see what community says https://github.com/fabric8io-images/s2i/issues/249",
                "time": "2020-05-19 19:55:03",
                "index": 8,
                "user": "62mkv"
            }
        ]
    },
    {
        "id": 865,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c49c4420721b912a5cf9392",
                "text": "@snicoll Is there a most convenient mechanism to set a defaultProperty than this https://goo.gl/KrtJZq? Perhaps using ConfigFileApplicationListener or using System.setProperty or SpringApplication.setDefaultProperties. Indeed, what advantages has EnvironmentPostProcessor feature over injecting Environment and modifying it into your @Configuration class? I am surprised not even the name of the defaultProperties source is a constant anywhere in the code as it happens with other StandardEnvironment sources... But if I don't find a better solution I will do it like in the link, which is official",
                "time": "2019-01-24 13:57:22",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5c49c46df780a1521f600e8f",
                "text": "I don\u2019t understand the question. ",
                "time": "2019-01-24 13:58:05",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5c49c4850721b912a5cf9695",
                "text": "We can\u2019t really discuss what is \u201cmost convenient\u201d without a proper use case IMO",
                "time": "2019-01-24 13:58:28",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c49c4fdcb47ec300095645e",
                "text": "I mean a util or some helper in the code that can set the property with a line. Like setDefaultProperty()",
                "time": "2019-01-24 14:00:29",
                "index": 3,
                "user": "nightswimmings"
            },
            {
                "id": "5c49c518c45b986d11b13159",
                "text": "\u201cin the code\u201d?",
                "time": "2019-01-24 14:00:56",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5c49c51e8ce4bb25b8021d45",
                "text": "in spring boot libraries, a built-in",
                "time": "2019-01-24 14:01:02",
                "index": 5,
                "user": "nightswimmings"
            },
            {
                "id": "5c49c52c8ce4bb25b8021dbe",
                "text": "the `Environment` has a lifecycle, you can\u2019t just change it wherever you want",
                "time": "2019-01-24 14:01:16",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c49c59a1cb70a372a2da624",
                "text": "Is setting defaultProperties PropertySource from a custom app an unsafe/unrecommended action?",
                "time": "2019-01-24 14:03:06",
                "index": 7,
                "user": "nightswimmings"
            },
            {
                "id": "5c49c5d80a491251e34a2dcf",
                "text": "What I am wondering is if there is a more eye-candy way to set a default fallback property than doing all of this: https://goo.gl/KrtJZq? If not, I am tempted to do a pull request to the code :p",
                "time": "2019-01-24 14:04:08",
                "index": 8,
                "user": "nightswimmings"
            },
            {
                "id": "5c49c68df780a1521f601f26",
                "text": "@nightswimmings this is not about making it look good or easily accessible. You shouldn't do that in an application, but this is the expected contract to use in a library. With that contract, you have access to the current state of the environment, and you can insert defaults while still honoring the precedence that's expected by Spring Boot developers.",
                "time": "2019-01-24 14:07:09",
                "index": 9,
                "user": "bclozel"
            },
            {
                "id": "5c49c6cc20b78635b6762255",
                "text": "If you're trying to do that at a higher level, it means you're probably choosing the wrong path. Default values in the configuration class itself would be a better choice.",
                "time": "2019-01-24 14:08:12",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5c49c79bba355012a48e4d64",
                "text": "@bclozel I heard that before, but I cannot find a way to set a default system property from a configuration class. I can place a default value for a @ConfigurationProperties class that I manage, but I don't know how to set up - say - spring.application.name from a configuration class. Unless you mean autowiring the Environment and do the same iteration on property sources without the need of an EnvironmentPostProcessor",
                "time": "2019-01-24 14:11:39",
                "index": 11,
                "user": "nightswimmings"
            },
            {
                "id": "5c49ca40ba355012a48e5deb",
                "text": "@nightswimmings this is the expected way of doing things. @snicoll already pointed out that the environment has a specific cycle. At the configuration class level, it's too late, configuration is already bound to the properties class and it might have been used already by another config class.",
                "time": "2019-01-24 14:22:56",
                "index": 12,
                "user": "bclozel"
            },
            {
                "id": "5c49ca8395e17b4525a2145a",
                "text": "ahhh okk now i got it. Apologies to both",
                "time": "2019-01-24 14:24:03",
                "index": 13,
                "user": "nightswimmings"
            }
        ]
    },
    {
        "id": 866,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba4a5a37dca30650331c3a2",
                "text": "Hello, I'm a bit confused about something, i followed this guide https://spring.io/guides/gs/rest-service/  and i was wondering about something that it doesnt say, is there a way to know or to set how many connections the server can handle?",
                "time": "2018-09-21 08:02:43",
                "index": 0,
                "user": "StevenSalazarM"
            },
            {
                "id": "5ba4a668e5c2cc56adbfe05d",
                "text": "Hello, a 15 min guide can\u2019t go in that level of details I am afraid. Look at server.tomcat.* properties in the reference guide (or you can look at them in your IDE): https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/",
                "time": "2018-09-21 08:06:00",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ba4ad241043315947c2e892",
                "text": "Thank you @snicoll i see that server.tomcat.max-connections=10000 is what i was looking for, are they the default values if not specified or is there a way to know which are? i used  spring initializer and my application.properties was empty",
                "time": "2018-09-21 08:34:44",
                "index": 33,
                "user": "StevenSalazarM"
            },
            {
                "id": "5ba4b059913ba7799b20feb4",
                "text": "just type the properties and the default should show up",
                "time": "2018-09-21 08:48:25",
                "index": 34,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 867,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ee914daa85de303941975f3",
                "text": "Hello hivemind! This is a `WebClient` question. So please feel free to point me in the right direction if this is the wrong forum to ask. I am using `spring-boot` version `2.3.1.RELEASE`. I am invoking the WebClient in a loop to make HTTP requests like so:\n```\nfinal ClientResponse response = webClient.post()\n                .uri(uri)\n                .accept(APPLICATION_JSON)\n                .bodyValue(item)\n                .exchange()\n                .block();\n```\nI see an exception on the client after about 600 requests:\n```\nCaused by: reactor.netty.internal.shaded.reactor.pool.PoolAcquireTimeoutException: Pool#acquire(Duration) has been pending for more than the configured timeout of 45000ms\n\tat reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.run(AbstractPool.java:346) ~[reactor-netty-0.9.8.RELEASE.jar:0.9.8.RELEASE]\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \n```\n\nMy question. What should I be looking to tune. And what should I be reading? Thanks much!",
                "time": "2020-06-16 18:52:10",
                "index": 0,
                "user": "premanandc"
            },
            {
                "id": "5ee916f07b6da9126a9bc61e",
                "text": "@premanandc I don't think you should be looking to tune anything. If you're performing the code above in a loop, I'd expect each iteration of the loop to free the resources that it has used. In other words, the pool shouldn't be getting exhausted as far as I can tell. It looks like a bug to me. That might be in Spring Framework or in Reactor Netty. If you can reproduce it reliably, please open a Spring Framework issue with a sample project that does so, so that they can take a look",
                "time": "2020-06-16 19:01:04",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5ee966c430401c1f245f1700",
                "text": "Thanks @wilkinsona  Do note that I am doing this in a `spring-batch` `ItemWriter` as part of a chunked step. I am able to reproduce it consistently. I'll put this code in a sample project and file an issue",
                "time": "2020-06-17 00:41:40",
                "index": 2,
                "user": "premanandc"
            }
        ]
    },
    {
        "id": 868,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be94dc147217e07ff0cd844",
                "text": "hi all, what is the best way to implement validations on a resource when you want to develop a rest api, is it at bean level or at controller level",
                "time": "2018-11-12 09:54:09",
                "index": 0,
                "user": "raghanag"
            },
            {
                "id": "5be94deb9600d10e64993777",
                "text": "and how can i customize error messages that was thrown above is showing too much technical jargon that user will not be interested in",
                "time": "2018-11-12 09:54:51",
                "index": 1,
                "user": "raghanag"
            },
            {
                "id": "5be96212f1b8753404b3a8fe",
                "text": "@raghanag It's difficult to answer, basically, we do different validations in different layers for different purposes.\nBut, in spring boot,  process the error messages in `@ControllerAdvice` class normally.",
                "time": "2018-11-12 11:20:50",
                "index": 3,
                "user": "zhangyanwei"
            },
            {
                "id": "5be96304bb06d73a996041df",
                "text": "There is a fact, that not all exceptions can be processed through `@ControllerAdvice`,  for example: the exceptions which caught by `BasicErrorController`, and the exceptions thrown by spring security ...",
                "time": "2018-11-12 11:24:52",
                "index": 4,
                "user": "zhangyanwei"
            },
            {
                "id": "5be9635efee6703aaf5af676",
                "text": "Even so, you also can merge the exception processes into one class, that will make it more clearly.",
                "time": "2018-11-12 11:26:22",
                "index": 5,
                "user": "zhangyanwei"
            }
        ]
    },
    {
        "id": 869,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d0bf7c0d16b28559f5756ec",
                "text": "Hi, I'm trying to configure Spring Async with a custom threadpool and support for threadpool metrics, but running into a few issues. Here is a snippet that illustrates the setup: https://gitlab.com/snippets/1868092",
                "time": "2019-06-20 21:16:48",
                "index": 0,
                "user": "adeshmukh-quizlet_gitlab"
            },
            {
                "id": "5d0bf8424b0b7b477b2c4a96",
                "text": "While the metrics are being exposed (I'm using `micrometer-registry-prometheus`), there's a couple of problems with this setup: ",
                "time": "2019-06-20 21:18:58",
                "index": 1,
                "user": "adeshmukh-quizlet_gitlab"
            },
            {
                "id": "5d0bf84dd1aaa16964d983a6",
                "text": "* The metric values don't appear to be updating.",
                "time": "2019-06-20 21:19:09",
                "index": 2,
                "user": "adeshmukh-quizlet_gitlab"
            },
            {
                "id": "5d0bf86b41654c559ecb7ee9",
                "text": "* The common tags configured in `MetricsConfig` don't seem to get applied to any of the metrics.",
                "time": "2019-06-20 21:19:39",
                "index": 3,
                "user": "adeshmukh-quizlet_gitlab"
            },
            {
                "id": "5d0bf9814b0b7b477b2c52fa",
                "text": "However, when I stop injecting the `metricsRegistry` in the `AsyncConfig`, I do see the other metrics with the common tag.",
                "time": "2019-06-20 21:24:17",
                "index": 4,
                "user": "adeshmukh-quizlet_gitlab"
            },
            {
                "id": "5d0c047ad4535e477a6ddf76",
                "text": "@adeshmukh-quizlet_gitlab I suspect you'll see some log messages at startup informing you that some beans are no eligible for post-processing. This will be happening because the `AsyncConfigurer` is needed by the bean-post processor that proxies classes with `@Aysnc` methods. As your `AsyncConfigurer` requires a `MeterRegistry`, I suspect you're preventing that `MeterRegistry` from being post-processed which prevents it from being customized. Stopping injecting the `MeterRegistry` into your `AsyncConfigurer` is the right thing to do.",
                "time": "2019-06-20 22:11:06",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5d0c07444b0b7b477b2cb8c8",
                "text": "> Stopping injecting the MeterRegistry into your AsyncConfigurer is the right thing to do.\n\nThanks @wilkinsona - that certainly seems to be the case. \n\nAs a workaround, I now pass the `meterRegistry` in the `@Bean fun customExecutor(meterRegistry: MeterRegistry) {...}`. That fixed the second issue I'm having: I now see all the metrics, with the common tag applied.\n\nHowever, the threadpool metric values don't seem to be updating (In fact, I see the `executor_queued_tasks` metric has a `NaN`)",
                "time": "2019-06-20 22:23:00",
                "index": 10,
                "user": "adeshmukh-quizlet_gitlab"
            }
        ]
    },
    {
        "id": 870,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c65fdeaef98455ea43933e0",
                "text": "I'm having a hard time getting a Bean I created in a library to @Autowire into another library or even into an application.  My Bean is defined [here](https://github.com/tlann/resource-config/blob/master/src/main/java/com/example/utils/security/resource/autoconfig/ResourceServerConfig.java)  The bean is autowired [here](https://github.com/tlann/rabbitmq-config/blob/master/src/main/java/com/example/rabbitmqconfig/factories/ExampleMessageListenerContainerFactory.java)  I also tried autowiring it into an application [here](https://github.com/tlann/security-test/blob/master/src/main/java/com/example/securitytest/controllers/VersionController.java).  I'm having a hard time understanding what I need to do to get it to correctly autowire.  Can someone assist me in this?  ",
                "time": "2019-02-14 23:46:50",
                "index": 0,
                "user": "tlann"
            },
            {
                "id": "5c666463ecef85660bab959c",
                "text": "@tlann I think the bean you are trying to autowire has the wrong access modifier and is not available where you are trying to use it. Since you are trying to autowire from another package you should probably use public on the bean producer.",
                "time": "2019-02-15 07:04:03",
                "index": 7,
                "user": "hochas"
            },
            {
                "id": "5c66e1b4dc3f0523ccbeb572",
                "text": "@hochas Thank you for answering.  After making the `@Bean` function public.  I still have the same issue.",
                "time": "2019-02-15 15:58:44",
                "index": 22,
                "user": "tlann"
            },
            {
                "id": "5c67081f8328315decfe5685",
                "text": "@hochas Sorry I just found my mistake.  I was trying to inject into an object that was being created by my code as opposed to the container.  A rookie mistake",
                "time": "2019-02-15 18:42:39",
                "index": 23,
                "user": "tlann"
            }
        ]
    },
    {
        "id": 871,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e3bf7fd40da694c5e0f18e7",
                "text": "Hi all, so if I'm running a test with the `WebApplicationContextRunner` the following assertion fails:\n```\n        this.contextRunner\n            .run((context) ->\n                assertThat(context.getBeansWithAnnotation(SpringBootApplication.class)).isNotEmpty());\n```\nIs it possible to create a unit test where a `@SpringBootApplication` annotated bean is present?",
                "time": "2020-02-06 11:26:53",
                "index": 0,
                "user": "peter-janssen"
            },
            {
                "id": "5e3bfc773aca1e4c5f692a7c",
                "text": "@peter-janssen `@SpringBootTest`?",
                "time": "2020-02-06 11:45:59",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e3c016b40da694c5e0f3e67",
                "text": "@peter-janssen good question. `ApplicationContextRunner` does not start a Spring Boot application. Its purpose is to select the candidates programmatically so it won\u2019t detect your `@SpringBootConfiguration` and use that as the source of the context. `@SpringBootTest` and slicing annotations do that however",
                "time": "2020-02-06 12:07:07",
                "index": 2,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 872,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd24fa5898e4e19edd92212",
                "text": "Hello Spring boot team, is there a way to disable `HttpTraceWebFilter`? I am facing some issues with Sleuth integration and I want to rule out if this class is causing that issue",
                "time": "2018-10-25 23:20:05",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5bd2d890ae7be94016baf58b",
                "text": "@nnanda2016 `management.trace.http.enabled=false`",
                "time": "2018-10-26 09:04:16",
                "index": 5,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 873,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dd3a981eeb63e1a83dde402",
                "text": "Hi all, Our application communicate with many third party applications in business layer and then operations stored in DB. We wanna to know when some critical exceptions raises (for example: ConnectionTimeoutException -> 10 times) then whole of services in our application rejected the requests until that resource raise up. We know that which exception is critical!, and just we wanna to implement this requirement. At now, which solution or tools you suggest?",
                "time": "2019-11-19 08:36:17",
                "index": 0,
                "user": "mohsen-mahmoudi"
            },
            {
                "id": "5dd3b7fd35889012b13616ac",
                "text": "@mohsen-mahmoudi I'm not sure I understand the requirement fully, but this sounds like spring boot actuator - health checks can tell to your infrastructure whether an application should receive traffic or not.",
                "time": "2019-11-19 09:38:05",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5dd3c2f250010612b2e6e424",
                "text": "@bclozel hi and thanks for reply, that is good, but how to I can reject requests from client for whole of services? is there any tools to support this problem or I must handle this manually?",
                "time": "2019-11-19 10:24:50",
                "index": 4,
                "user": "mohsen-mahmoudi"
            },
            {
                "id": "5dd3c37cca778c1fbf2ea4cc",
                "text": "@mohsen-mahmoudi you can't do that in the application itself (by the time a request hits your app, it's too late). So it depends on where you're deploying your applications. Usually you'll have some kind of loadbalancer with readyness/liveliness checks. Basically, you need to look into your hosting infrastructure - Spring Boot should provide plenty to help with that in actuators.",
                "time": "2019-11-19 10:27:08",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5dd3c88068ad1c4a0ff3b62e",
                "text": "@bclozel ok thanks",
                "time": "2019-11-19 10:48:32",
                "index": 11,
                "user": "mohsen-mahmoudi"
            }
        ]
    },
    {
        "id": 874,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e33e548433e1d403984c462",
                "text": "@snicoll Dear St\u00e9phane, I have problems setting up Infinispan Cache and use it as Hibernate 2nd Level Cache. The `HibernateJpaAutoConfiguration` always kicks in before the `CacheAutoconfiguration`. I found an old issue you fixed [Make sure Caching is initialized before JPA support](https://github.com/spring-projects/spring-boot/issues/4158) and a reversion of the fix in [Fix dependency between cache and hibernate](https://github.com/spring-projects/spring-boot/commit/be00c1db6323be2a5526cd22b1f6050f3ac70c9d).  And the last commit is valid until now. In `CacheAutoconfiguration` I see `@AutoConfigureAfter({HibernateJpaAutoConfiguration.class})`. Shouldn't it be the other way round? First the Cache should be configured and then this configured cache should be made available to Hibernate as 2nd Level cache? What is the correct way to inject a self configured Cache into Hibernate via autoconfiguration? Thank you.",
                "time": "2020-01-31 08:28:56",
                "index": 0,
                "user": "timomeinen"
            },
            {
                "id": "5e33e57ad9895b17c3be0868",
                "text": "infinispan has its own starter, are you using that?",
                "time": "2020-01-31 08:29:46",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e33e5b8e8a83835590556c6",
                "text": "This does only work, if using `spring.cache.type=infinispan`. But even then, Hibernate will create an own instance of DefaultCacheManager and then later, the starter will create a second instance.",
                "time": "2020-01-31 08:30:48",
                "index": 2,
                "user": "timomeinen"
            },
            {
                "id": "5e33e5f9fe0e6f74e9ef4f77",
                "text": "Hibernate launches the Infinispan via the InfinispanRegionFactory. Same problem when using JCache, as the JpaConfiguration is so early in the autoconfiguration order.",
                "time": "2020-01-31 08:31:53",
                "index": 3,
                "user": "timomeinen"
            },
            {
                "id": "5e33e60ff6945f41ef4a0f74",
                "text": "Have you seen the question above?",
                "time": "2020-01-31 08:32:15",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5e33e66458f02e349750ffb6",
                "text": "Yes. The starter has a condition on the `spring.cache.type` property. But even then, the HibernateJpaAutoconfiguration is executed before the Infinispan starter autoconfiguration class.",
                "time": "2020-01-31 08:33:40",
                "index": 5,
                "user": "timomeinen"
            },
            {
                "id": "5e33e67b58f02e34975100a1",
                "text": "If you\u2019re using their starter, then you should ask them",
                "time": "2020-01-31 08:34:03",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5e33e6c0ea9ba00b849edd5f",
                "text": "I don't want to use there starter, as I want to have a CacheManager created by myself and use it in Hibernate and in my local application for searching. If Hibernate creates the Cache, it is not available as Bean and so I cannot use the Cache in my application.",
                "time": "2020-01-31 08:35:12",
                "index": 7,
                "user": "timomeinen"
            },
            {
                "id": "5e33e6edbfe65274eacbe10b",
                "text": "If you\u2019re using your own configuration, you\u2019re in control of everything. I am not sure what you expect Spring Boot to do",
                "time": "2020-01-31 08:35:57",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5e33e70f6f9d3d34980d6c34",
                "text": "I would like Spring Boot to inject my CacheManager Bean into Hibernate to use it as 2nd Level Cache.",
                "time": "2020-01-31 08:36:31",
                "index": 9,
                "user": "timomeinen"
            },
            {
                "id": "5e33e71aea9ba00b849ee1ad",
                "text": "That\u2019s not how it works I am afraid",
                "time": "2020-01-31 08:36:42",
                "index": 10,
                "user": "snicoll"
            },
            {
                "id": "5e33e737d9895b17c3be1767",
                "text": "Me, too. ;-) So Hibernate always creates its own CacheManager? And I cannot have access to it?",
                "time": "2020-01-31 08:37:11",
                "index": 11,
                "user": "timomeinen"
            },
            {
                "id": "5e33e7463aca1e4c5f527f03",
                "text": "What I am trying to say is that you can\u2019t ask spring boot to do something if you create stuff yourself",
                "time": "2020-01-31 08:37:26",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5e33e75ebfe65274eacbe4f4",
                "text": "Those links are really brittle and hard to maintain. If you decide to create the cache manager yourself, you need to manage that link too",
                "time": "2020-01-31 08:37:50",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5e33e76a73ddad4acd800037",
                "text": "Oh, I would love to let Spring Boot create the CacheManager with my configuration for me.",
                "time": "2020-01-31 08:38:02",
                "index": 14,
                "user": "timomeinen"
            },
            {
                "id": "5e33e772f301780b8355dbf0",
                "text": "what\u2019s stopping you?",
                "time": "2020-01-31 08:38:10",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5e33e784dc52c34ace359753",
                "text": "That I cannot inject a Cache Bean into the HibernateJpaAutoConfiguration",
                "time": "2020-01-31 08:38:28",
                "index": 16,
                "user": "timomeinen"
            },
            {
                "id": "5e33e79b73ddad4acd80022f",
                "text": "you shouldn\u2019t do that and it has nothing with Spring Boot or you creating the `CacheManager`",
                "time": "2020-01-31 08:38:51",
                "index": 17,
                "user": "snicoll"
            },
            {
                "id": "5e33e79e6f9d3d34980d7120",
                "text": "Because it is using an SPI to find the CacheManagerProvider, which will not be aware of Spring Beans.",
                "time": "2020-01-31 08:38:54",
                "index": 18,
                "user": "timomeinen"
            },
            {
                "id": "5e33e7aae8a8383559056377",
                "text": "hold on here",
                "time": "2020-01-31 08:39:06",
                "index": 19,
                "user": "snicoll"
            },
            {
                "id": "5e33e7ac40da694c5ef89e34",
                "text": "ok",
                "time": "2020-01-31 08:39:08",
                "index": 20,
                "user": "timomeinen"
            },
            {
                "id": "5e33e7b5d9895b17c3be1a7d",
                "text": "you\u2019re mixing up things a bit",
                "time": "2020-01-31 08:39:17",
                "index": 21,
                "user": "snicoll"
            },
            {
                "id": "5e33e7c6ea9ba00b849ee5c4",
                "text": "there is no support for CacheManager (the one from Spring) in Hibernate",
                "time": "2020-01-31 08:39:34",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5e33e7d058f02e34975107ce",
                "text": "(never was, actually)",
                "time": "2020-01-31 08:39:44",
                "index": 23,
                "user": "snicoll"
            },
            {
                "id": "5e33e7e958f02e3497510867",
                "text": "Yes. Of course I need to wrap the CacheManager in a SpringEmbeddedCacheManager",
                "time": "2020-01-31 08:40:09",
                "index": 24,
                "user": "timomeinen"
            },
            {
                "id": "5e33e815dc52c34ace359a1d",
                "text": "Uh? What version of Spring Boot are you on?",
                "time": "2020-01-31 08:40:53",
                "index": 25,
                "user": "snicoll"
            },
            {
                "id": "5e33e820f6945f41ef4a21c8",
                "text": "`2.2.4.RELEASE`",
                "time": "2020-01-31 08:41:04",
                "index": 26,
                "user": "timomeinen"
            },
            {
                "id": "5e33e83bf301780b8355e03e",
                "text": "`SpringEmbeddedCacheManager` is a `CacheManager`. Hibernate doesn\u2019t support that",
                "time": "2020-01-31 08:41:31",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5e33e845433e1d403984d9e2",
                "text": "I think you need to take a step back of what you\u2019re trying to do",
                "time": "2020-01-31 08:41:41",
                "index": 28,
                "user": "snicoll"
            },
            {
                "id": "5e33e8c8bfe65274eacbede1",
                "text": "Ok, step back. I need a distributed Infinispan cache with an `EmbeddedCacheManager`. This should be made available to Hibernate via InfinispanRegionFactory and in addition wrapped in a `SpringEmbeddedCacheManager` to my Spring context. But I see no way, how to inject the `EmbeddedCacheManager` I created into the `HibernateJpaAutoconfiguration`. ",
                "time": "2020-01-31 08:43:52",
                "index": 29,
                "user": "timomeinen"
            },
            {
                "id": "5e33e9b440da694c5ef8b1c5",
                "text": "Here\u2019s a summary. If you create the CacheManager yourself (`@Bean` I mean), you\u2019re in total control, Spring Boot shouldn\u2019t have an opinion about when and how that should be created. If you let Spring Boot creates the cache, it adds a `dependsOn` the `entityManager` to bootstrap the cache first. So far, the easiest I\u2019ve seen is to use the JCache abstraction as Hibernate supports that OOB. Here\u2019s an integration test that shows a working setup (it\u2019s ehcache but it doesn\u2019t matter what impl is behind. Rather it shouldn\u2019t matter. If it does, that\u2019s something for the infinispan team to look at): https://github.com/spring-projects/spring-boot/blob/cbacab5e265caf92a307373e73d9a5cba9da9873/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/Hibernate2ndLevelCacheIntegrationTests.java",
                "time": "2020-01-31 08:47:48",
                "index": 30,
                "user": "snicoll"
            },
            {
                "id": "5e33e9f63aca1e4c5f528fa0",
                "text": "Thank you very much, taking time to write this down. I will give it a try on a fresh project.",
                "time": "2020-01-31 08:48:54",
                "index": 31,
                "user": "timomeinen"
            },
            {
                "id": "5e33ea2c159413355845db28",
                "text": "In fact, this test behaves as I would expect it.",
                "time": "2020-01-31 08:49:48",
                "index": 32,
                "user": "timomeinen"
            },
            {
                "id": "5e33eacd594a0517c2574928",
                "text": "it won\u2019t pass if you create the `CacheManager` yousrself",
                "time": "2020-01-31 08:52:29",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5e33eb15f6945f41ef4a3305",
                "text": "It would be sufficient to me, if I could declare the configuration.xml by myself. And I can check the ordering of CacheAutoconfiguration and HibernateJpaAutoConfiguration as it behaves in the other order in my application.",
                "time": "2020-01-31 08:53:41",
                "index": 34,
                "user": "timomeinen"
            },
            {
                "id": "5e33eb64e8a8383559057cb5",
                "text": "OK. If you want to further discuss, please create a small project on start.spring.io and add the minimal code that reproduces the problem and we can resume this discussion",
                "time": "2020-01-31 08:55:00",
                "index": 35,
                "user": "snicoll"
            },
            {
                "id": "5e33eb7c6f9d3d34980d9386",
                "text": "Thank you. Will do so.",
                "time": "2020-01-31 08:55:24",
                "index": 36,
                "user": "timomeinen"
            },
            {
                "id": "5e3aea2d58f02e3497652e5e",
                "text": "@snicoll \n> Here\u2019s a summary. If you create the CacheManager yourself (`@Bean` I mean), you\u2019re in total control, \u2026\n\nThank you very much, pointing me into the correct direction. I tried to made it work without Spring Caching. With it, it works.",
                "time": "2020-02-05 16:15:41",
                "index": 90,
                "user": "timomeinen"
            }
        ]
    },
    {
        "id": 875,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eafbabe9f0c955d7da1ec0e",
                "text": "Hi,\nCurrently i am using Rest template  to call external rest services and deploying my application  as war on tomcat , but i have read some articles that Rest template will be deprecated .  \n1. If so do i need to switch to webflux i.e. web client immediately . \n2. if i use spring webflux dependency , can i deploy my application as war on tomcat(as it is blocking server)?\n\ncould some one calrify and help me wrto production suitability?\n",
                "time": "2020-05-04 06:48:30",
                "index": 0,
                "user": "murali474"
            },
            {
                "id": "5eafc550b6dd230697a4403f",
                "text": "@murali474 `WebClient` is for calling remote services and can be used anywhere. When you have both the webflux and web starter, Spring Boot considers you want to start a regular servlet-based app and use the client-side features of webflux. Using `WebClient` does not mean in any way that you have to switch all your infrastructure to non-blocking. Here is a talk that explains that transition if you\u2019re interested: https://www.youtube.com/watch?v=QhFlcKEaVGA",
                "time": "2020-05-04 07:33:36",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5eafc89ba9de3d01b1e84326",
                "text": "@snicoll Thank you so much for your quick reply, I hope this will clarify myslef.",
                "time": "2020-05-04 07:47:39",
                "index": 5,
                "user": "murali474"
            },
            {
                "id": "5eafdaf9b6dd230697a47311",
                "text": "@snicoll  just one more question, if i want to continue with resttemplate for production. is it recommended?",
                "time": "2020-05-04 09:06:01",
                "index": 9,
                "user": "murali474"
            },
            {
                "id": "5eafdb1931a6d25d7ca9bae7",
                "text": "I am not sure I understand what you mean by recommended",
                "time": "2020-05-04 09:06:33",
                "index": 10,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 876,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d4083ed8aab922429eb609e",
                "text": "i have migrated from spring boot 1.5.6 to 2.1.4 . Following is the error i am facing\n\nCaused by: java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.class] cannot be opened because it does not exist\n",
                "time": "2019-07-30 17:52:45",
                "index": 0,
                "user": "raowaqasakram_twitter"
            },
            {
                "id": "5d40841e84536e27e077d22b",
                "text": "i am using these dependencies in build.gradle \n\n\n  compile 'org.springframework.boot:spring-boot-starter-security'\n    compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.2.RELEASE'\n    \n    \n    \n    ",
                "time": "2019-07-30 17:53:34",
                "index": 1,
                "user": "raowaqasakram_twitter"
            },
            {
                "id": "5d413a8645775115b3700682",
                "text": "@raowaqasakram_twitter a dependency on your own project may still rely on this auto-configuration. Make sure your dependencies are compatible with Spring Boot 2.",
                "time": "2019-07-31 06:51:50",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 877,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c8d13a29d9cc8114ace5c3d",
                "text": "Hi people. @here\n\nI wonder if any of you when using Spring Rest Docs and with the configuration I have setup in my POC project at https://github.com/cortizqgithub/csoftz-spring-boot-poc\n(here you can see MessageControllerTest which uses a WebTestClient, and HomeControllerTest which uses Spring MVC) to print prettier JSON in the snippets.  In the other hand, how do i document serveral response codes out of one end-point?",
                "time": "2019-03-16 15:17:54",
                "index": 0,
                "user": "cortizqgithub"
            },
            {
                "id": "5c8e92bf8aa66959b6275569",
                "text": "@cortizqgithub What do you mean by \"several response codes out of one endpoint\"? Do you want to call document at the HTTP status codes that an endpoint can return? 200, 404, 400, etc? If so, I would recommend doing that once in your API documentation and then uses status codes consistently across all endpoints. You can see an example of what I mean in REST Docs' sample documentation: https://docs.spring.io/spring-restdocs/docs/2.0.x/samples/restful-notes/api-guide.html#overview-http-status-codes",
                "time": "2019-03-17 18:32:31",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5c8e92d98126720abcfb11d4",
                "text": "BTW, there's a separate room for REST Docs where this discussion probably belongs: https://gitter.im/spring-projects/spring-restdocs",
                "time": "2019-03-17 18:32:57",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5c8f53fa8126720abcffcff7",
                "text": "Wow, I mangled that. I meant \"Do you want to document all the HTTP status codes\"",
                "time": "2019-03-18 08:16:58",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c8fa023fa5b721a1fac264d",
                "text": "@wilkinsona  Yes, you are right. I joined the channel  for rest-docs as well. Thanks",
                "time": "2019-03-18 13:41:55",
                "index": 5,
                "user": "cortizqgithub"
            }
        ]
    },
    {
        "id": 878,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bb758b5271506518dbec896",
                "text": "I have a problem with my application model, maybe someone knows how to solve it: There is a handful of subclasses that currently implement the method `validate` of it's superclass. Because of a generic approach I later handle them only as the superclass. The problem is that those classes are data models and shouldn't have any application logic in them, so I need to extract that logic into a service. But how can I do that, given that I only handle the superclass and currently call `validate` on it?",
                "time": "2018-10-05 12:27:33",
                "index": 0,
                "user": "markusa380"
            },
            {
                "id": "5bb75cf2bbdc0b2505edc74d",
                "text": "@MarkusA380 https://www.martinfowler.com/bliki/AnemicDomainModel.html",
                "time": "2018-10-05 12:45:38",
                "index": 5,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bb75e24c7bf7c3662bd60a9",
                "text": "@jagjeevanjohal That's my opinion too. Sadly I am not the one to decide on it in this situation, so I need to work around. Any idea?",
                "time": "2018-10-05 12:50:44",
                "index": 11,
                "user": "markusa380"
            },
            {
                "id": "5bb76d013844923661eb4eab",
                "text": "@MarkusA380 Similar question to yourself with some suggestions: https://stackoverflow.com/questions/7527481/how-to-deal-with-java-polymorphism-in-service-oriented-architecture",
                "time": "2018-10-05 13:54:09",
                "index": 17,
                "user": "jagjeevanjohal"
            },
            {
                "id": "5bb77c481c100a4f29361c60",
                "text": "I found a neat solution, I think: https://stackoverflow.com/questions/52665954/extracting-logic-out-of-subclasses",
                "time": "2018-10-05 14:59:20",
                "index": 18,
                "user": "markusa380"
            },
            {
                "id": "5bb77c5d435c2a518e576df8",
                "text": "I think it goes in a similar direction anyways.",
                "time": "2018-10-05 14:59:41",
                "index": 19,
                "user": "markusa380"
            }
        ]
    },
    {
        "id": 879,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5d3a0eb76f384439765c8fe3",
                "text": "Mockito v3.0.0 was recently released (8 July 2019). spring-boot-starter-test is using v2.28.2. Is there any sense of when this would be updated to v3.x ? Thanks.",
                "time": "2019-07-25 20:19:03",
                "index": 0,
                "user": "wisdotscottalyea_gitlab"
            },
            {
                "id": "5d3a0f500957594222828b71",
                "text": "@wisdotscottalyea_gitlab educated guess, the next major version of spring boot, spring boot doesn't upgrade major versions in minor releases",
                "time": "2019-07-25 20:21:36",
                "index": 1,
                "user": "xenoterracide"
            },
            {
                "id": "5d3a100d6f384439765c99b1",
                "text": "@xenoterracide ok, thanks. Will continue to follow https://spring.io/blog for details on the next major and/or anything Mockito.",
                "time": "2019-07-25 20:24:45",
                "index": 2,
                "user": "wisdotscottalyea_gitlab"
            }
        ]
    },
    {
        "id": 880,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5f32b9ef811d3571b3be43bd",
                "text": "Hi everyone, a bit of a niche question but I'm in the progress of updating an older Spring app to 5.x/Boot 2.x. We're using JDO and quite a few classes from `org.springframework.orm.jdo`. Is this supported/migrated somewhere in Boot 2.x?",
                "time": "2020-08-11 15:31:59",
                "index": 0,
                "user": "francis-a"
            },
            {
                "id": "5f32bbbedca038052a6163ca",
                "text": "@francis-a Hello - I DONT think 5.x Of Spring Framework supports JDO",
                "time": "2020-08-11 15:39:42",
                "index": 1,
                "user": "jayanth-iyer"
            },
            {
                "id": "5f32bc73e20413052e7ea631",
                "text": "https://dzone.com/articles/whats-new-in-spring-framework-5",
                "time": "2020-08-11 15:42:43",
                "index": 2,
                "user": "jayanth-iyer"
            },
            {
                "id": "5f32bc88a4768b6856889a26",
                "text": "No support for JDO in Spring 5.x",
                "time": "2020-08-11 15:43:04",
                "index": 3,
                "user": "jayanth-iyer"
            },
            {
                "id": "5f32bd5b811d3571b3be4eef",
                "text": "thanks for the link - good to have it in writing somewhere :) ",
                "time": "2020-08-11 15:46:35",
                "index": 4,
                "user": "francis-a"
            },
            {
                "id": "5f32bda979da21426f2a939b",
                "text": "I would love to have it in the official document of Spring Framework - but not able to find it - but yeah found this - and it is reliable",
                "time": "2020-08-11 15:47:53",
                "index": 5,
                "user": "jayanth-iyer"
            },
            {
                "id": "5f32bef8d4bc1a71bc93ba54",
                "text": "@jayanth7scorpio It's listed in the what's new page on the Spring Framework wiki: https://github.com/spring-projects/spring-framework/wiki/What%27s-New-in-Spring-Framework-5.x#removed-packages-classes-and-methods",
                "time": "2020-08-11 15:53:28",
                "index": 6,
                "user": "wilkinsona"
            },
            {
                "id": "5f32bf1888719865d95410af",
                "text": "Cool thanks \ud83d\udc4d\ud83c\udffb",
                "time": "2020-08-11 15:54:00",
                "index": 7,
                "user": "jayanth-iyer"
            },
            {
                "id": "5f32bf62d28b99685e5910e2",
                "text": "@wilkinsona my bad - I had gone thru this GitHub page only - missed that JDO word",
                "time": "2020-08-11 15:55:14",
                "index": 8,
                "user": "jayanth-iyer"
            },
            {
                "id": "5f32bf62b103e45c830e4d97",
                "text": "Thanks",
                "time": "2020-08-11 15:55:14",
                "index": 9,
                "user": "jayanth-iyer"
            }
        ]
    },
    {
        "id": 881,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5bf279f44720c11e0e8d118c",
                "text": "hey guys i'm registering my own `JPAMappingContext` like this:\n```\n    @Primary\n    @Bean(name = \"jpaMappingContext\")\n    public MappingContext defaultJpaMappingContext(List<EntityManagerFactory> entityManagerFactories) throws Exception {\n```\nWith spring-boot 2.0.x-SNAPSHOT i have problem, but with the latest 2.1 SNAPSHOT I get this error when starting my project:\n```\n2018-11-19 10:52:19,890 [main] ERROR: Application run failed\norg.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'jpaMappingContext' defined in com.nemesis.platform.config.PlatformCoreAutoConfiguration: @Bean definition illegally overridden by existing bean definition: Root bean: class [org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition(ConfigurationClassBeanDefinitionReader.java:309)\n```",
                "time": "2018-11-19 08:53:08",
                "index": 0,
                "user": "ptahchiev"
            },
            {
                "id": "5bf27c631ad4155d3ae9e813",
                "text": "@ptahchiev Always remember to check release notes :) https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#bean-overriding",
                "time": "2018-11-19 09:03:31",
                "index": 2,
                "user": "legart"
            },
            {
                "id": "5bf27d1c80652945c385c46b",
                "text": "thank you @legart ",
                "time": "2018-11-19 09:06:36",
                "index": 3,
                "user": "ptahchiev"
            }
        ]
    },
    {
        "id": 882,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cc06226a4ef097471f01593",
                "text": "Spring batch related question: Is there any reason why `JpaBatchConfigurer` is not extendable? I wan't to use a `JobLauncher` with async task-executor, but can't override `JpaBatchConfigurer#getJobLauncher` as constructor is protected. Previously we just declared a custom `JobLauncher` bean that overrided the existing one in the application, but not possible after upgrade to spring boot 2.1 (unless specified by property)",
                "time": "2019-04-24 13:18:30",
                "index": 0,
                "user": "JorgenRingen"
            },
            {
                "id": "5cc062b15b3f941aa5842677",
                "text": "@JorgenRingen A subclass should be able to call a protected super constructor",
                "time": "2019-04-24 13:20:49",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cc0633b2e2caa1aa6af9072",
                "text": "Omg, blunder from my side, misread intellij warning :D Anyway, is this a preferred way to provide a custom JobLauncher?",
                "time": "2019-04-24 13:23:07",
                "index": 2,
                "user": "JorgenRingen"
            },
            {
                "id": "5cc086388790b0307ef4d984",
                "text": "@JorgenRingen It's a fine way to do it. Only you can really say if it's the preferred way. You may prefer not to use inheritance and write your own configurer instead",
                "time": "2019-04-24 15:52:24",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 883,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5cdda28d75d9a575a6f182c8",
                "text": "Hi. Anyone knows anything about this in Eclipse (Version: 2019-03 (4.11.0)) after update to 2.1.5? ```Description\tResource\tPath\tLocation\tType\nUnknown\tpom.xml\t/uhn-domain-checkout\tline 1\tMaven Configuration Problem```",
                "time": "2019-05-16 17:49:01",
                "index": 0,
                "user": "maragao"
            },
            {
                "id": "5cdda3d6ef853135c8cf9236",
                "text": "The project runs and build normally. It's just an annoying error message in pom.  Deleted .project, .classpath and .settings. Tried update-maven-project. Nothings seems to work. If I change to previous version (2.1.4), the message is gone",
                "time": "2019-05-16 17:54:30",
                "index": 1,
                "user": "maragao"
            },
            {
                "id": "5cddc913879f4478c78ea6fb",
                "text": "@maragao We believe it's an incompatibility between version 3.1.2 of Maven's Jar plugin and a particular version of m2e in Eclipse. Please see https://github.com/spring-projects/spring-boot/issues/16846#issuecomment-492792506 for some further details",
                "time": "2019-05-16 20:33:23",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5cdea914ecdf942b4cfb0ee2",
                "text": "@wilkinsona Thanks",
                "time": "2019-05-17 12:29:08",
                "index": 21,
                "user": "maragao"
            }
        ]
    },
    {
        "id": 884,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5baa74484d320a463bf12f0e",
                "text": "i want there is a database on it, i will get data and create a rest service. therefore i list data on a web browser. my basic aim is that.",
                "time": "2018-09-25 17:45:44",
                "index": 0,
                "user": "semih"
            },
            {
                "id": "5baa74b253c31c111162bcd9",
                "text": "to carry out my aim, i created a project and write controller, model classes. but, when i try to use them in my application , i got some errors",
                "time": "2018-09-25 17:47:30",
                "index": 2,
                "user": "semih"
            },
            {
                "id": "5baa74d0691dc567dba0e136",
                "text": "did you try to follow this [Spring  Boot JPA Guide](https://spring.io/guides/gs/accessing-data-jpa/)?",
                "time": "2018-09-25 17:48:00",
                "index": 3,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa74d8eba8e60bc6437707",
                "text": "during execute ./mvnw spring-boot:run command on terminal.",
                "time": "2018-09-25 17:48:08",
                "index": 4,
                "user": "semih"
            },
            {
                "id": "5baa74f5fe37781110f748a7",
                "text": "yes i have already followed this tutorial.",
                "time": "2018-09-25 17:48:37",
                "index": 5,
                "user": "semih"
            },
            {
                "id": "5baa75188196693171b2fcfe",
                "text": "what happens when you run it?",
                "time": "2018-09-25 17:49:12",
                "index": 6,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa753daedb375b9c45e9ac",
                "text": "[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:2.0.3.RELEASE:run (default-cli) on project gs-rest-service: An exception occurred while running. null: InvocationTargetException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException",
                "time": "2018-09-25 17:49:49",
                "index": 7,
                "user": "semih"
            },
            {
                "id": "5baa755656877c463a81deca",
                "text": "----------------------------------------------------------------------------------------------------",
                "time": "2018-09-25 17:50:14",
                "index": 8,
                "user": "semih"
            },
            {
                "id": "5baa75738ddf5867dc719367",
                "text": "i think java, spring version may be incompatible",
                "time": "2018-09-25 17:50:43",
                "index": 9,
                "user": "semih"
            },
            {
                "id": "5baa758a2d1198709349057f",
                "text": "because i applied the whole java codes as this example.",
                "time": "2018-09-25 17:51:06",
                "index": 10,
                "user": "semih"
            },
            {
                "id": "5baa75904d320a463bf138c6",
                "text": "the versions are fine, do you have all the required dependencies in your project?",
                "time": "2018-09-25 17:51:12",
                "index": 11,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa759ceba8e60bc6437b89",
                "text": "exactly the same",
                "time": "2018-09-25 17:51:24",
                "index": 12,
                "user": "semih"
            },
            {
                "id": "5baa75b2aedb375b9c45ec8c",
                "text": "i can show you my pom.xml file",
                "time": "2018-09-25 17:51:46",
                "index": 13,
                "user": "semih"
            },
            {
                "id": "5baa75c6aedb375b9c45ecea",
                "text": "please, do",
                "time": "2018-09-25 17:52:06",
                "index": 14,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa75d753c31c111162c276",
                "text": "it would be good if you could format it",
                "time": "2018-09-25 17:52:23",
                "index": 15,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa760441177e0bc7a5eb7e",
                "text": "yes, actually it is formatted.",
                "time": "2018-09-25 17:53:08",
                "index": 16,
                "user": "semih"
            },
            {
                "id": "5baa761d41177e0bc7a5ec77",
                "text": "i connected my db another java application",
                "time": "2018-09-25 17:53:33",
                "index": 17,
                "user": "semih"
            },
            {
                "id": "5baa763601fb5f4ae11f7822",
                "text": "and i wrote the same configuration in my application.properties file.",
                "time": "2018-09-25 17:53:58",
                "index": 18,
                "user": "semih"
            },
            {
                "id": "5baa763c01fb5f4ae11f7834",
                "text": "I mean your message, it's not formatted at all.. you should use markdown to make it easier for the readers",
                "time": "2018-09-25 17:54:04",
                "index": 19,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa76447bd81c5b9db12539",
                "text": "ok",
                "time": "2018-09-25 17:54:12",
                "index": 20,
                "user": "semih"
            },
            {
                "id": "5baa76938196693171b3065b",
                "text": "``` \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.springframework</groupId>\n    <artifactId>gs-rest-service</artifactId>\n    <version>0.1.0</version>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.0.3.RELEASE</version>\n    </parent>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        \n        <!-- JPA Data (We are going to use Repositories, Entities, Hibernate, etc...) -->\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n\n        <!-- Use MySQL Connector-J -->\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n        \n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.jayway.jsonpath</groupId>\n            <artifactId>json-path</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n    <repositories>\n        <repository>\n            <id>spring-releases</id>\n            <url>https://repo.spring.io/libs-release</url>\n        </repository>\n    </repositories>\n    <pluginRepositories>\n        <pluginRepository>\n            <id>spring-releases</id>\n            <url>https://repo.spring.io/libs-release</url>\n        </pluginRepository>\n    </pluginRepositories>\n</project>\n```",
                "time": "2018-09-25 17:55:31",
                "index": 21,
                "user": "semih"
            },
            {
                "id": "5baa76be8ddf5867dc719c0f",
                "text": "could it be related to this: https://github.com/spring-projects/spring-boot/issues/13796 ??",
                "time": "2018-09-25 17:56:14",
                "index": 22,
                "user": "enzobonggio"
            },
            {
                "id": "5baa76cd8ddf5867dc719cb3",
                "text": "so, I can see it's not really the same as the guide once you are using MySQL\n```\n       <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n```",
                "time": "2018-09-25 17:56:29",
                "index": 23,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa76dfaedb375b9c45f5dd",
                "text": "yes it can be @enzobonggio ",
                "time": "2018-09-25 17:56:47",
                "index": 24,
                "user": "semih"
            },
            {
                "id": "5baa77007bd81c5b9db12a55",
                "text": "@marcosbarbero hmm. what is my connector name?",
                "time": "2018-09-25 17:57:20",
                "index": 25,
                "user": "semih"
            },
            {
                "id": "5baa770241177e0bc7a5f49a",
                "text": "I don't believe it's related to that in any way",
                "time": "2018-09-25 17:57:22",
                "index": 26,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa772b8ddf5867dc719ff5",
                "text": "what's the content of `application.properties`?",
                "time": "2018-09-25 17:58:03",
                "index": 27,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa77368ddf5867dc71a01b",
                "text": "or `application.yml`, whatever you have",
                "time": "2018-09-25 17:58:14",
                "index": 28,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa774141177e0bc7a5f615",
                "text": "you may be probably right @marcosbarbero ",
                "time": "2018-09-25 17:58:25",
                "index": 29,
                "user": "semih"
            },
            {
                "id": "5baa776caedb375b9c45fa42",
                "text": "```\nspring.jpa.hibernate.ddl-auto=create\nspring.datasource.url=jdbc:mysql://127.0.0.1:3306/db_example\nspring.datasource.username=springuser\nspring.datasource.password=ThePassword\n```",
                "time": "2018-09-25 17:59:08",
                "index": 30,
                "user": "semih"
            },
            {
                "id": "5baa778241177e0bc7a5f91f",
                "text": "i'm using maven",
                "time": "2018-09-25 17:59:30",
                "index": 31,
                "user": "semih"
            },
            {
                "id": "5baa778d8ddf5867dc71a402",
                "text": "do you suggest to use gradle?",
                "time": "2018-09-25 17:59:41",
                "index": 32,
                "user": "semih"
            },
            {
                "id": "5baa77bb2d11987093491548",
                "text": "I usually go for maven, it shouldn't make any diff in this project",
                "time": "2018-09-25 18:00:27",
                "index": 33,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa77d02d119870934915ec",
                "text": "maybe you need to add this property as well `spring.datasource.driver-class-name=com.mysql.jdbc.Driver` ",
                "time": "2018-09-25 18:00:48",
                "index": 34,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa7830cdc50131725088d8",
                "text": "yes i wrote it into application.properties file, but the error message is the same",
                "time": "2018-09-25 18:02:24",
                "index": 35,
                "user": "semih"
            },
            {
                "id": "5baa785f7bd81c5b9db13350",
                "text": "by the way @marcosbarbero i didn't delete \n```\n       <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n```",
                "time": "2018-09-25 18:03:11",
                "index": 36,
                "user": "semih"
            },
            {
                "id": "5baa787e7bd81c5b9db133e5",
                "text": "should i delete these lines ?",
                "time": "2018-09-25 18:03:42",
                "index": 37,
                "user": "semih"
            },
            {
                "id": "5baa7893fe37781110f75ffe",
                "text": "because i had taken from https://spring.io/guides/gs/accessing-data-jpa/",
                "time": "2018-09-25 18:04:03",
                "index": 38,
                "user": "semih"
            },
            {
                "id": "5baa789aeba8e60bc64390d9",
                "text": "i suggest you start with `h2` database as in the guides, once you have it working then you try to move to mysql ",
                "time": "2018-09-25 18:04:10",
                "index": 39,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa78c4cdc5013172508c92",
                "text": "ok i can create a h2 database",
                "time": "2018-09-25 18:04:52",
                "index": 40,
                "user": "semih"
            },
            {
                "id": "5baa78f07bd81c5b9db136ed",
                "text": "bu are there any differencies between them?",
                "time": "2018-09-25 18:05:36",
                "index": 41,
                "user": "semih"
            },
            {
                "id": "5baa78f4fea613709415740d",
                "text": "h2 or db_example",
                "time": "2018-09-25 18:05:40",
                "index": 42,
                "user": "semih"
            },
            {
                "id": "5baa790301fb5f4ae11f88c5",
                "text": "you don't really need to, it's just a matter of adding the h2 dependency to the project and the spring boot autoconfiguration will setup an in memory h2 for the project",
                "time": "2018-09-25 18:05:55",
                "index": 43,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa79188ddf5867dc71adb4",
                "text": "what's db_example?",
                "time": "2018-09-25 18:06:16",
                "index": 44,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa791e691dc567dba0fc2b",
                "text": "i followed this tutorial https://spring.io/guides/gs/accessing-data-mysql/#initial",
                "time": "2018-09-25 18:06:22",
                "index": 45,
                "user": "semih"
            },
            {
                "id": "5baa79417bd81c5b9db138c4",
                "text": "db_example is a database like h2",
                "time": "2018-09-25 18:06:57",
                "index": 46,
                "user": "semih"
            },
            {
                "id": "5baa794956877c463a81faa6",
                "text": "no, it's not",
                "time": "2018-09-25 18:07:05",
                "index": 47,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa794d691dc567dba0fdbf",
                "text": "hmm , but you say in memory",
                "time": "2018-09-25 18:07:09",
                "index": 48,
                "user": "semih"
            },
            {
                "id": "5baa7974aedb375b9c4605e8",
                "text": "h2 is a database engine, more like a mysql than `db_example`",
                "time": "2018-09-25 18:07:48",
                "index": 49,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa79918196693171b31bf7",
                "text": "in your example `db_example` is the database schema, not the engine ",
                "time": "2018-09-25 18:08:17",
                "index": 50,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa79982d1198709349241f",
                "text": "ok",
                "time": "2018-09-25 18:08:24",
                "index": 51,
                "user": "semih"
            },
            {
                "id": "5baa799c4d320a463bf1512f",
                "text": "i see",
                "time": "2018-09-25 18:08:28",
                "index": 52,
                "user": "semih"
            },
            {
                "id": "5baa79aa53c31c111162d652",
                "text": "but i believe we can correct my case",
                "time": "2018-09-25 18:08:42",
                "index": 53,
                "user": "semih"
            },
            {
                "id": "5baa79b42d119870934924e8",
                "text": "without h2 databas",
                "time": "2018-09-25 18:08:52",
                "index": 54,
                "user": "semih"
            },
            {
                "id": "5baa79b598245f4ae0814b6f",
                "text": "e",
                "time": "2018-09-25 18:08:53",
                "index": 55,
                "user": "semih"
            },
            {
                "id": "5baa79ebaedb375b9c460818",
                "text": "yeah that's possible",
                "time": "2018-09-25 18:09:47",
                "index": 56,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa7a8a8196693171b324ed",
                "text": "is your local mysql configured with the `username` and `password` above?",
                "time": "2018-09-25 18:12:26",
                "index": 57,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa7b1eaedb375b9c46113a",
                "text": "yes i think that",
                "time": "2018-09-25 18:14:54",
                "index": 58,
                "user": "semih"
            },
            {
                "id": "5baa7b91fe37781110f77096",
                "text": "i connected with username password on another java application",
                "time": "2018-09-25 18:16:49",
                "index": 59,
                "user": "semih"
            },
            {
                "id": "5baa7bb5fe37781110f77177",
                "text": "using `springuser` and `ThePassword`?",
                "time": "2018-09-25 18:17:25",
                "index": 60,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa7bda4d320a463bf16049",
                "text": "yes  i am using them",
                "time": "2018-09-25 18:18:02",
                "index": 61,
                "user": "semih"
            },
            {
                "id": "5baa7bf5fe37781110f77427",
                "text": "is your project on github?",
                "time": "2018-09-25 18:18:29",
                "index": 62,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa7caefe37781110f77922",
                "text": "hey @marcosbarbero i found a way to solve this problem",
                "time": "2018-09-25 18:21:34",
                "index": 63,
                "user": "semih"
            },
            {
                "id": "5baa7ccb8ddf5867dc71c370",
                "text": "tutorial show the way that you can download the project",
                "time": "2018-09-25 18:22:03",
                "index": 64,
                "user": "semih"
            },
            {
                "id": "5baa7cd0cdc501317250a911",
                "text": "from gith\u0131ub",
                "time": "2018-09-25 18:22:08",
                "index": 65,
                "user": "semih"
            },
            {
                "id": "5baa7cdc53c31c111162edef",
                "text": "git clone https://github.com/spring-guides/gs-accessing-data-jpa.git",
                "time": "2018-09-25 18:22:20",
                "index": 66,
                "user": "semih"
            },
            {
                "id": "5baa7ce498245f4ae08160d9",
                "text": "now i have tried to do it",
                "time": "2018-09-25 18:22:28",
                "index": 67,
                "user": "semih"
            },
            {
                "id": "5baa7cf1fea6137094158cb0",
                "text": "and executed the code below",
                "time": "2018-09-25 18:22:41",
                "index": 68,
                "user": "semih"
            },
            {
                "id": "5baa7d0c98245f4ae0816225",
                "text": "initial $./mvnw package && java -jar target/gs-spring-boot-0.1.0.jar",
                "time": "2018-09-25 18:23:08",
                "index": 69,
                "user": "semih"
            },
            {
                "id": "5baa7d1256877c463a821202",
                "text": "that's ok.",
                "time": "2018-09-25 18:23:14",
                "index": 70,
                "user": "semih"
            },
            {
                "id": "5baa7d32eba8e60bc643ad82",
                "text": "i think, i am not tired of you much more",
                "time": "2018-09-25 18:23:46",
                "index": 71,
                "user": "semih"
            },
            {
                "id": "5baa7d4498245f4ae0816380",
                "text": "i couldn't find where the problem is",
                "time": "2018-09-25 18:24:04",
                "index": 72,
                "user": "semih"
            },
            {
                "id": "5baa7d562d11987093493b21",
                "text": "but this way is ok for me",
                "time": "2018-09-25 18:24:22",
                "index": 73,
                "user": "semih"
            },
            {
                "id": "5baa7f307bd81c5b9db15b77",
                "text": "oh shit, i deleted my all codes",
                "time": "2018-09-25 18:32:16",
                "index": 74,
                "user": "semih"
            },
            {
                "id": "5baa7f318196693171b345a0",
                "text": ":(",
                "time": "2018-09-25 18:32:17",
                "index": 75,
                "user": "semih"
            },
            {
                "id": "5baa7faaaedb375b9c462fb9",
                "text": "That\u2019s sad!",
                "time": "2018-09-25 18:34:18",
                "index": 76,
                "user": "marcosbarbero"
            },
            {
                "id": "5baa7fc08196693171b34a26",
                "text": "i will try again",
                "time": "2018-09-25 18:34:40",
                "index": 77,
                "user": "semih"
            }
        ]
    },
    {
        "id": 885,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ebe73ff28b531314908f631",
                "text": "Hi people. In my springboot application I'm trying to use one of my libraries stored in Nexus. This nexus-library needs some dependencies from AWS sdk and other repositories. Must I configure my springboot gradle.build.kts with all the repositories needed to fetch all these extra dependencies?, or.....how is this done?",
                "time": "2020-05-15 10:50:39",
                "index": 0,
                "user": "tatitati"
            },
            {
                "id": "5ebe8294f3ce603074bdd4b3",
                "text": "@tatitati yes, your gradle or maven must include entries for each external repo u use\nexample with grade and artifactory we use:\n```\nrepositories {\n\tmaven { url \"https://artifactory.<secret>.com/artifactory/libs-release\" }\n}\n```\nDocs: https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.repositories.MavenArtifactRepository.html\n\nUsually Nexus or Artiifactore configured as proxy to otehr repos, where in your grade maven u conclude just 1 repo - your nexus/artifactory, and it will pull evrything\n\nP.S. make sure if u have auth credentials to do not put them there in plain and not commit real credentials to git",
                "time": "2020-05-15 11:52:52",
                "index": 2,
                "user": "Bryksin"
            },
            {
                "id": "5ebe82e4ecc55a312d0490ed",
                "text": "@tatitati I guess there are several things at play here. You can configure your Nexus as a mirror of other public repositories in your local maven settings.xml. By default artifacts are resolved from Maven Central. If your application needs a specific repository to get a dependency, yes it should be declared in your build file.",
                "time": "2020-05-15 11:54:12",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5ebea7dbecc55a312d04f85b",
                "text": "@Bryksin @bclozel thanks for the answers, very appreciated",
                "time": "2020-05-15 14:31:55",
                "index": 22,
                "user": "tatitati"
            }
        ]
    },
    {
        "id": 886,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c9bfbe091cdc61e6e3c584a",
                "text": "Is it possible to access a bean reference inside `main` method of `@SpringBootApplication` before calling the `run` method?",
                "time": "2019-03-27 22:40:32",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5c9cd826dfcacf510ab410bd",
                "text": "@nnanda2016 No, it's calling `run` the results in the application context and all of its beans being created. What are you trying to do?",
                "time": "2019-03-28 14:20:22",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5c9d074e7719b35485b9b6bc",
                "text": "@wilkinsona sorry for the late response; i was trying to register a shutdown hook and call a method on that bean. That bean is part of a third party library, so I don\u2019t have an option of adding a `@PreDestroy` on that class. ",
                "time": "2019-03-28 17:41:34",
                "index": 9,
                "user": "nnanda2016"
            },
            {
                "id": "5c9dfc58e4561321d0594d3e",
                "text": "@nnanda2016 A shutdown hook is already registered which will close the application context. Why not register your own bean with `@PreDestroy` and call the bean from the third-party library as part of that?",
                "time": "2019-03-29 11:07:04",
                "index": 15,
                "user": "wilkinsona"
            },
            {
                "id": "5c9dfc806a9761361b1fef55",
                "text": "Alternatively, if you're providing the bean definition for the bean whose class is in a third-party library, you could specify a custom destroy method in your `@Bean` annotation.",
                "time": "2019-03-29 11:07:44",
                "index": 16,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 887,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dee168d8e906a1c8d9801b6",
                "text": "Hi everyone! I have a nasty behavior of springboot test which I cannot fix yet. Could you help me or send me to proper docs? My case is: sometimes Spring Beans in `@RunWith(SpringRunner.class)` are not populated with `@Value`-annotated properties. Seems the Spring  Component responsible of population Spring Beans with application properties is missed. I have also `@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.NONE)` and a few `@ContextConfiguration`-s on my Test class. Setting my bean properties with `@TestPropertySource` explicitly does not fix this issue. ",
                "time": "2019-12-09 09:40:29",
                "index": 0,
                "user": "bvn13"
            },
            {
                "id": "5dee16c0c3d6795b9f4d8f03",
                "text": "Sometimes is a bit vague. If you can share a sample we can run ourselves, that would be the easiest to get support",
                "time": "2019-12-09 09:41:20",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5dee16c846397c721cb2e18f",
                "text": "(a zip or a github project)",
                "time": "2019-12-09 09:41:28",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5dee178cc3d6795b9f4d93f1",
                "text": "@snicoll its a pitty this test is a part of monolith... It uses configurations of our monolith app. I cannot imagine how to extract it proper way to make it shareable and keep my issue unfixed :)",
                "time": "2019-12-09 09:44:44",
                "index": 3,
                "user": "bvn13"
            },
            {
                "id": "5dee17ba26eeb8518f8fe6f5",
                "text": "Well same here really. We can only guess and spend time asking questions and unfortunatly I can\u2019t justify doing that.",
                "time": "2019-12-09 09:45:30",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5dee5c48550662459897957d",
                "text": "@snicoll btw my issue is not about `@Value`-annotated properties are null or uninitialized. They all are tried to be populated with SpEL string. And this fact is confusing me.",
                "time": "2019-12-09 14:38:00",
                "index": 14,
                "user": "bvn13"
            },
            {
                "id": "5dee5c7826eeb8518f91b5ac",
                "text": "here is the tail of stacktrace: https://pastebin.com/J8VQ5kd8",
                "time": "2019-12-09 14:38:48",
                "index": 15,
                "user": "bvn13"
            }
        ]
    },
    {
        "id": 888,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c537f5b8aa5ca5abf63fc22",
                "text": "is it intentional that the jackson message converter for jms doesn't use the same object mapper as the default system one? resulting in the need to pass it as so, because otherwise you can't customize the one on the converter?\n\n```\n   @Bean\n    open fun jacksonJmsMessageConverter( mapper: ObjectMapper): MessageConverter {\n        val converter = MappingJackson2MessageConverter()\n        converter.setTargetType(MessageType.BYTES)\n        converter.setTypeIdPropertyName(\"_type\")\n        converter.setObjectMapper(mapper)\n        return converter\n    }\n```",
                "time": "2019-01-31 23:06:03",
                "index": 0,
                "user": "xenoterracide"
            },
            {
                "id": "5c53a31a54f21a71a1db3c69",
                "text": "@xenoterracide  is there a \"default system object mapper\"?  ",
                "time": "2019-02-01 01:38:34",
                "index": 1,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53dbadca428b064536aa39",
                "text": "@josiahhaswell that's what I'm injecting here, whatever that default ObjectMapper bean is. I'm not sure putting it in quotes like that...",
                "time": "2019-02-01 05:39:57",
                "index": 16,
                "user": "xenoterracide"
            },
            {
                "id": "5c53e34d454aad4df7d708a5",
                "text": "@xenoterracide So, there isn't a default object mapper unless you're using something that provides on (Spring Web does, I think, but your JMS objects  probably aren't the same ones as your REST objects)",
                "time": "2019-02-01 06:12:29",
                "index": 17,
                "user": "josiahhaswell"
            },
            {
                "id": "5c53e367ceb5a2264f755272",
                "text": "@xenoterracide And Spring's general philosophy is to be explicit ",
                "time": "2019-02-01 06:12:55",
                "index": 18,
                "user": "josiahhaswell"
            }
        ]
    },
    {
        "id": 889,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e0f6923809bc77efee1a252",
                "text": "hello, I have a webflux application that I am performance testing now.  After a large scenario, I see that the service performance much much worse if I don't restart it, before running another test.  What could be the issue?",
                "time": "2020-01-03 16:17:39",
                "index": 0,
                "user": "obarat"
            },
            {
                "id": "5e0f6aeb1c3a592052c5fcbd",
                "text": "It must be the memory, but it has 8gb per instance already.",
                "time": "2020-01-03 16:25:15",
                "index": 1,
                "user": "obarat"
            },
            {
                "id": "5e0f6b0ca86f9758ccc12814",
                "text": "@obarat it's really hard to tell. You should profile your app and collect proper metrics (not only throughput, but latency percentiles), get data from the server VM and the client MV, precisely define your scenario, etc.\nWhat makes you think it's the memory? Are you seeing large GC pauses?",
                "time": "2020-01-03 16:25:48",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5e0f6b342af31b403d1142df",
                "text": "I'm seeing almost 90% usage of memory",
                "time": "2020-01-03 16:26:28",
                "index": 3,
                "user": "obarat"
            },
            {
                "id": "5e0f6b59cbd2c97eff8447ca",
                "text": "at the OS level, it doesn't say much really. A Java profiler could tell you much more",
                "time": "2020-01-03 16:27:05",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5e0f6b7ba86f9758ccc1299a",
                "text": "ok, can you point to any good guides?",
                "time": "2020-01-03 16:27:39",
                "index": 5,
                "user": "obarat"
            },
            {
                "id": "5e0f6b9b2af31b403d11462c",
                "text": "a profiler could show you allocations and GC pauses; maybe your application has a memory leak. If you're using netty, you could try using the leak detection",
                "time": "2020-01-03 16:28:11",
                "index": 6,
                "user": "bclozel"
            },
            {
                "id": "5e0f6bab6dda2430fec267b7",
                "text": "yes, netty",
                "time": "2020-01-03 16:28:27",
                "index": 7,
                "user": "obarat"
            },
            {
                "id": "5e0f6c8b6dda2430fec26c1e",
                "text": "You could try adding `-Dio.netty.leakDetection.level=advanced` to your java command and look at the logs",
                "time": "2020-01-03 16:32:11",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5e0f6cacc23234403cc1ce75",
                "text": "but you should really start with a java profiler of your choice and read its documentation about memory management",
                "time": "2020-01-03 16:32:44",
                "index": 9,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 890,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5bbee243600c5f64238b61ba",
                "text": "help me this my question: Spring Boot 2.0 start error The use of configuration keys that are no longer supported was found in the environment:\n\nProperty source 'bootstrapProperties':\n\tKey: flyway.locations\n\t\tReason: Replacement key 'spring.flyway.locations' uses an incompatible target type\n\tKey: security.basic.enabled\n\t\tReason: The security auto-configuration is no longer customizable.\n\tKey: security.oauth2.resource.filter-order\n\t\tReason: The security auto-configuration does no longer provide several security configurations.\n\n\nPlease refer to the migration guide or reference guide for potential alternatives.",
                "time": "2018-10-11 05:40:19",
                "index": 0,
                "user": "wushuaiping"
            },
            {
                "id": "5bbf0f431e23486b93af5fa7",
                "text": "@wushuaiping have you looked at the migration guide as the error message tells you? https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide",
                "time": "2018-10-11 08:52:19",
                "index": 4,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 891,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5ba13b8df7e1580625ed7971",
                "text": "any idea what gradle dependency I would need for `org.springframework.boot.context.properties.ConfigurationProperties` for a standalone jar? Would it be one of the spring boot starters?",
                "time": "2018-09-18 17:53:17",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5ba1454b8909f71f75f25279",
                "text": "`org.springframework.boot:spring-boot`",
                "time": "2018-09-18 18:34:51",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5ba1457bb9531f2dfa86d7eb",
                "text": "maven central has a good search feature where you can search by class name",
                "time": "2018-09-18 18:35:39",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5ba14593a56b215c97592223",
                "text": "https://search.maven.org/search?q=fc:org.springframework.boot.context.properties.ConfigurationProperties",
                "time": "2018-09-18 18:36:03",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5ba1461eb9531f2dfa86daf7",
                "text": "i would pull in `org.springframework.boot:spring-boot-starter`. It is the baseline dependency for any spring boot app, and it will pull in `org.springframework.boot:spring-boot`",
                "time": "2018-09-18 18:38:22",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5ba14625b4990c30eed48524",
                "text": "https://search.maven.org/artifact/org.springframework.boot/spring-boot-starter/2.0.5.RELEASE/jar",
                "time": "2018-09-18 18:38:29",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5ba14ac77dca3065031d9529",
                "text": "@edeandrea Thanks. I didn't know of the maven search feature, that will be extremely handy!",
                "time": "2018-09-18 18:58:15",
                "index": 9,
                "user": "springroll12"
            }
        ]
    },
    {
        "id": 892,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5de87068922f962c50e7c807",
                "text": "Hello Spring Boot team, what\u2019s the main reason behind deprecating `MediaType.APPLICATION_JSON_UTF8`? I think this media type is still valid for `Content-Type` header",
                "time": "2019-12-05 02:50:16",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5de8a866d64a052fb6bae5b4",
                "text": "@nnanda2016 utf8 is default, so no need to specify it",
                "time": "2019-12-05 06:49:10",
                "index": 1,
                "user": "boda2004"
            },
            {
                "id": "5de8a8a2f65fec1c8ec5593d",
                "text": "and according to https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/http/MediaType.html it's handled by browsers according to spec",
                "time": "2019-12-05 06:50:10",
                "index": 2,
                "user": "boda2004"
            },
            {
                "id": "5de8ba133646852ebfee7392",
                "text": "@boda2004 even if it is default, RFC still allows users to specify it (at least for `content-type` header). So, I don\u2019t really see a real value-add in deprecating this.",
                "time": "2019-12-05 08:04:35",
                "index": 4,
                "user": "nnanda2016"
            },
            {
                "id": "5de8beb75ac7f22fb563ea0d",
                "text": "i suppose the idea is to not specify defaults explicitly, and framework encourages you. i'm not from spring boot team so my guess may be wrong",
                "time": "2019-12-05 08:24:23",
                "index": 5,
                "user": "boda2004"
            },
            {
                "id": "5de8c0af922f962c50e7c876",
                "text": "well, as a framework, it should allow broader possibilities because server authors can accomodate that. In fact, after i upgraded my app to SB 2.2.x, I saw those deprecated constants and removed those usages, but in our code we were using that to validate input request and my removal of those usages broke the client integration\u2026.I had to define my own constant using `MediaType` constructor with `UTF-8` to fix the issue. :) That\u2019s why i feel it should not have been deprecated by Spring (as a framework)\n\nThat said, may be my understanding is not enough.\n\nThanks anyways for your time to explain :)",
                "time": "2019-12-05 08:32:47",
                "index": 6,
                "user": "nnanda2016"
            },
            {
                "id": "5de8c9cd1659720ca800d7da",
                "text": "@nnanda2016 specifying the charset was a workaround for browser bugs in the first place. Now that it's fixed, we removed the workaround. See https://github.com/spring-projects/spring-framework/issues/22788",
                "time": "2019-12-05 09:11:41",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5de8c9e932df1245cbe848e2",
                "text": "You can still use your own media type, it's just not a best practice from our point of view.",
                "time": "2019-12-05 09:12:09",
                "index": 8,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 893,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5bb266af5331811c2e343e66",
                "text": "Hiya folks. I just wanted to double check I understood the directions correctly. If I've put in a PR on github, then I should NOT also create an issue for it?",
                "time": "2018-10-01 18:25:51",
                "index": 0,
                "user": "BrianDeacon"
            },
            {
                "id": "5bb26ae56e5a401c2dffa68d",
                "text": "@BrianDeacon yes, that's right; if you create both, the issue will be closed as a duplicate.",
                "time": "2018-10-01 18:43:49",
                "index": 3,
                "user": "bclozel"
            },
            {
                "id": "5bb26b1abbdc0b2505cebee5",
                "text": "@bclozel Thanks!",
                "time": "2018-10-01 18:44:42",
                "index": 4,
                "user": "BrianDeacon"
            }
        ]
    },
    {
        "id": 894,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dca6ddc52b73c7cb202bf0c",
                "text": "Currently I try to run my application on Spring Boot 2.2.1/Spring Cloud Hoxton RC2 and my tests fail with\n```\norg/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter\njava.lang.NoClassDefFoundError: org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat java.base/java.lang.Class.getDeclaringClass0(Native Method)\n\tat java.base/java.lang.Class.getEnclosingClass(Class.java:1517)\n\tat org.springframework.core.annotation.AnnotationsScanner.processClassHierarchy(AnnotationsScanner.java:233)\n\tat org.springframework.core.annotation.AnnotationsScanner.processClassHierarchy(AnnotationsScanner.java:227)\n\tat org.springframework.core.annotation.AnnotationsScanner.processClassHierarchy(AnnotationsScanner.java:194)\n\tat org.springframework.core.annotation.AnnotationsScanner.processClass(AnnotationsScanner.java:126)\n\tat org.springframework.core.annotation.AnnotationsScanner.process(AnnotationsScanner.java:107)\n\tat org.springframework.core.annotation.AnnotationsScanner.scan(AnnotationsScanner.java:97)\n\tat org.springframework.core.annotation.AnnotationsScanner.scan(AnnotationsScanner.java:78)\n\tat org.springframework.core.annotation.TypeMappedAnnotations.scan(TypeMappedAnnotations.java:242)\n\tat org.springframework.core.annotation.TypeMappedAnnotations.getAggregates(TypeMappedAnnotations.java:226)\n\tat org.springframework.core.annotation.TypeMappedAnnotations.spliterator(TypeMappedAnnotations.java:220)\n\tat org.springframework.core.annotation.TypeMappedAnnotations.stream(TypeMappedAnnotations.java:184)\n\tat org.springframework.boot.test.mock.mockito.DefinitionsParser.parseElement(DefinitionsParser.java:69)\n\tat org.springframework.boot.test.mock.mockito.DefinitionsParser.parse(DefinitionsParser.java:63)\n\tat org.springframework.boot.test.mock.mockito.MockitoPostProcessor.postProcessBeanFactory(MockitoPostProcessor.java:135)\n\tat org.springframework.boot.test.mock.mockito.MockitoPostProcessor.postProcessBeanFactory(MockitoPostProcessor.java:128)\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:286)\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:706)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\n...\n```\n",
                "time": "2019-11-12 08:31:24",
                "index": 0,
                "user": "kschlesselmann"
            },
            {
                "id": "5dca6dfe5eb2e813db0d0153",
                "text": "Any ideas how I can find out which part is causing the issue? I have another service which is running fine with the update \u2026",
                "time": "2019-11-12 08:31:58",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5dca8dbee75b2d5a19bb13d9",
                "text": "@kschlesselmann I'd run your test in the debugger, configure it to break on `NoClassDefFoundError`, and then look at the arguments being passed into `AnnotationsScanner`.",
                "time": "2019-11-12 10:47:26",
                "index": 5,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 895,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bf67819a115c91ef7744e35",
                "text": "Hi, is there any why to configure a `ResponseTemplateTransformer` (http://wiremock.org/docs/response-templating/) when using the auto configuration (`@AutoConfigureWireMock`) of spring boot?",
                "time": "2018-11-22 09:34:17",
                "index": 0,
                "user": "fmisir"
            },
            {
                "id": "5bf67af1f048fa105104b9e0",
                "text": "`@AutoConfigureWireMock` isn't part of Spring Boot",
                "time": "2018-11-22 09:46:25",
                "index": 1,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 896,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ef3573de73f716949868a8c",
                "text": "I have a spring cloud gateway service, which uses web flux and I could not manage to get actuator run on a dedicated port.\nIs that still not possible? The github issues are closed as far as I have seen, but it\u2019s not working. Is there a way to do that or add another connector that listens at port 8080 and enables me to route requests to health and prometheus, that would be sufficient as workaround.",
                "time": "2020-06-24 13:38:05",
                "index": 0,
                "user": "pcornelissen"
            },
            {
                "id": "5ef38e0147fdfd21ede225b1",
                "text": "@pcornelissen we have actuator on a different port, but we're using the servlet stack",
                "time": "2020-06-24 17:31:45",
                "index": 1,
                "user": "konstantinblaesi"
            },
            {
                "id": "5ef4480c613d3b339408c660",
                "text": "@pcornelissen I could be wrong here - if your app uses netty and since it can start only on one port, that could be the reason why actuator cannot be started on a different port. We also use actuator, but we assign it a different context path",
                "time": "2020-06-25 06:45:32",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5ef44bdfc223cc536a346bf9",
                "text": "@pcornelissen That should work. All that should be necessary is to set management.server.port. Here's 2.3.1 starting with it set to 8081:\n\n```\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v2.3.1.RELEASE)\n\n2020-06-25 08:00:51.739  INFO 31404 --- [           main] c.e.w.WebfluxActuatorApplication         : Starting WebfluxActuatorApplication on fulcrum.local with PID 31404 (/Users/awilkinson/Downloads/webflux-actuator/target/classes started by awilkinson in /Users/awilkinson/Downloads/webflux-actuator)\n2020-06-25 08:00:51.741  INFO 31404 --- [           main] c.e.w.WebfluxActuatorApplication         : No active profile set, falling back to default profiles: default\n2020-06-25 08:00:52.770  INFO 31404 --- [           main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port(s): 8080\n2020-06-25 08:00:52.829  INFO 31404 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'\n2020-06-25 08:00:52.864  INFO 31404 --- [           main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port(s): 8081\n2020-06-25 08:00:52.879  INFO 31404 --- [           main] c.e.w.WebfluxActuatorApplication         : Started WebfluxActuatorApplication in 1.465 seconds (JVM running for 1.862)\n```",
                "time": "2020-06-25 07:01:51",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5ef45525e73f716949868b6c",
                "text": "Ah, ok. Thanks @wilkinsona I\u2019ll check if maybe my spring boot version is too old",
                "time": "2020-06-25 07:41:25",
                "index": 4,
                "user": "pcornelissen"
            }
        ]
    },
    {
        "id": 897,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eb415030b23797ec06a6109",
                "text": "if I have all the model properties directly in the controller I just do it with @RequestParam, but what is the equivalent if I have a separate class for it?",
                "time": "2020-05-07 14:02:43",
                "index": 0,
                "user": "konstantinblaesi"
            },
            {
                "id": "5eb4152f0b23797ec06a615e",
                "text": "https://www.baeldung.com/spring-request-response-body @konstantinblaesi ",
                "time": "2020-05-07 14:03:27",
                "index": 1,
                "user": "MOES-Media"
            },
            {
                "id": "5eb42c58347bd616305f601f",
                "text": "@konstantinblaesi I would add a `@JsonProperty(\"some_property\")` annotation to the `someProperty` property in the `SomeRequest` class. Some more options for Jackson annotations: https://www.baeldung.com/jackson-annotations & https://github.com/FasterXML/jackson-annotations/wiki/Jackson-Annotations",
                "time": "2020-05-07 15:42:16",
                "index": 2,
                "user": "breun"
            },
            {
                "id": "5eb42d90adb0ec5c2bee9abc",
                "text": "@breun thanks!",
                "time": "2020-05-07 15:47:28",
                "index": 3,
                "user": "konstantinblaesi"
            },
            {
                "id": "5eb42dbaf0377f1631727755",
                "text": "@MOES-Media I didn't see anything in that article that helps in my case",
                "time": "2020-05-07 15:48:10",
                "index": 4,
                "user": "konstantinblaesi"
            },
            {
                "id": "5eb50bec9f0c955d7db027c3",
                "text": "> @MOES-Media I didn't see anything in that article that helps in my case\n\nYeah I know sorry, I was to quick :laughing: glad you found your solution ",
                "time": "2020-05-08 07:36:12",
                "index": 8,
                "user": "MOES-Media"
            }
        ]
    },
    {
        "id": 898,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d3716135ea6e644ec064db3",
                "text": "Hello guys! I'm new in Spring Boot's world and I have a doubt to take off with you.\n\nThe question is about best practices in Spring Boot. A example about what I want to know:\n\nI have a Controller named PasswordController. This Controller has  the e-mail and cellPhoneNumber fields only.  I created too a Service named PasswordService that have a unique goal - validate if a cellPhone is a valid cellPhone - for this, I use the google's libphonenumber.\nThe question is: Is better call the PasswordService of \"PasswordService\" or \"CellPhoneService\"?",
                "time": "2019-07-23 14:13:39",
                "index": 0,
                "user": "MarianaSSABA_twitter"
            },
            {
                "id": "5d372d1e808425671cd50292",
                "text": "Service should be specific to a domain\nFor example if activities are related to Accounts\nThen probably you would want to name it as AccountService\nand in AccountService you might have functions like \ncreateAccount, deleteAccount, getAccountById, getAccounts, updateAccount",
                "time": "2019-07-23 15:51:58",
                "index": 1,
                "user": "deepakmehra10"
            },
            {
                "id": "5d372d31e2d1aa6688f6c73a",
                "text": "@MarianaSSABA_twitter ",
                "time": "2019-07-23 15:52:17",
                "index": 2,
                "user": "deepakmehra10"
            },
            {
                "id": "5d3766a8d1cceb1a8dac8d4e",
                "text": "Tks @deepakmehra10 . ",
                "time": "2019-07-23 19:57:28",
                "index": 5,
                "user": "MarianaSSABA_twitter"
            }
        ]
    },
    {
        "id": 899,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c58ba8813a2814df61e17f6",
                "text": "Hi Spring Booters :), \nCould someone tell me why I this does not work?  : \n```\n    @Bean\n    public Set<Trigger> triggersToSchedule() {\n        return new HashSet<>();\n    }\n\n    @Bean\n    public SchedulerFactoryBean schedulerFactoryBean(\n            @Qualifier( \"fisrtDataSource\" ) DataSource dataSource,\n            @Qualifier( \"firstTransactionManager\" ) PlatformTransactionManager txManager,\n            @Qualifier( \"triggersToSchedule\" ) Set<Trigger> triggers ) {  // got exception here \n             .... \n        return ... ;\n    }\n```\nThe exception : \n\n```\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'schedulerFactoryBean' defined in class path resource\n.....\nCaused by: java.lang.reflect.MalformedParametersException: Invalid parameter name \"\"\n\tat java.base/java.lang.reflect.Executable.verifyParameters(Executable.java:382)\n\tat java.base/java.lang.reflect.Executable.privateGetParameters(Executable.java:412)\n\tat java.base/java.lang.reflect.Executable.getParameters(Executable.java:353)\n\tat org.springframework.core.StandardReflectionParameterNameDiscoverer.getParameterNames(StandardReflectionParameterNameDiscoverer.java:39)\n\tat org.springframework.core.PrioritizedParameterNameDiscoverer.getParameterNames(PrioritizedParameterNameDiscoverer.java:55)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:507)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)\n\t... 20 common frames omitted\n```\nThe last parameter is not evaluated",
                "time": "2019-02-04 22:19:52",
                "index": 0,
                "user": "akuma8"
            },
            {
                "id": "5c58bafef04ef00644dd8724",
                "text": " @akuma8 looks like, you may need to use a Wrapper to wrap this: Set<Trigger> \u2014> Triggers which will hold Set<Trigger>",
                "time": "2019-02-04 22:21:50",
                "index": 1,
                "user": "abhishekransingh"
            },
            {
                "id": "5c58bb1893fe7d5ac043615c",
                "text": "Basically, a placeholder to contain Set<Trigger>",
                "time": "2019-02-04 22:22:16",
                "index": 2,
                "user": "abhishekransingh"
            },
            {
                "id": "5c58bb4bceb5a2264f94c26e",
                "text": "And, you need to annotate the Placeholder class and add a BEAN id to identify the Qualifier as you did for other 2",
                "time": "2019-02-04 22:23:07",
                "index": 3,
                "user": "abhishekransingh"
            },
            {
                "id": "5c58bb78ca428b0645560b18",
                "text": "I see what you mean @abhishekransingh  but that means adding an extra object :( ",
                "time": "2019-02-04 22:23:52",
                "index": 4,
                "user": "akuma8"
            },
            {
                "id": "5c58bbaa93fe7d5ac04365f4",
                "text": "Yep.. You may not be able to apply Qualifier like you did it in the code",
                "time": "2019-02-04 22:24:42",
                "index": 5,
                "user": "abhishekransingh"
            },
            {
                "id": "5c58bcaef04ef00644dd948f",
                "text": "@abhishekransingh Thanks I'll go for this solution but it's strange that with spirng 5.1.4 we still need to wrap this kind of beans",
                "time": "2019-02-04 22:29:02",
                "index": 6,
                "user": "akuma8"
            },
            {
                "id": "5c595475f46373406a56c44c",
                "text": "@akuma8 That looks like a bug in the JVM/JDK to me. It appears that it may be caused by the HotSpot JIT: https://bugs.openjdk.java.net/browse/JDK-8170063",
                "time": "2019-02-05 09:16:37",
                "index": 14,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 900,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c5225f87b68f9410245d431",
                "text": "[Question] In Spring, Is it possible to inject a library (through maven dependency) that has its own database? Thanks.",
                "time": "2019-01-30 22:32:24",
                "index": 0,
                "user": "RobotCharlie"
            },
            {
                "id": "5c522a0193fe7d5ac0191db4",
                "text": "@RobotCharlie Eh, Spring Dependency Injection is completely orthogonal to Maven's dependency management",
                "time": "2019-01-30 22:49:37",
                "index": 1,
                "user": "josiahhaswell"
            },
            {
                "id": "5c522a42ca428b06452b5787",
                "text": "@RobotCharlie There's nothing that prevents you from managing connections to multiple databases within a single spring context, though (e.g. service 1 connects to database 1, service 2 connects to database 2, both managed by Spring)",
                "time": "2019-01-30 22:50:42",
                "index": 2,
                "user": "josiahhaswell"
            },
            {
                "id": "5c522c7c1b62f126507766c5",
                "text": "@josiahhaswell I see. In my case I want the service 2 to be reusable, that\u2019s why I decide to make it a library.",
                "time": "2019-01-30 23:00:12",
                "index": 3,
                "user": "RobotCharlie"
            },
            {
                "id": "5c522c9d41775971a0ae6f6e",
                "text": "@josiahhaswell so that any other project can also use that service.",
                "time": "2019-01-30 23:00:45",
                "index": 4,
                "user": "RobotCharlie"
            },
            {
                "id": "5c522cc4c2dba5382eb4e5ef",
                "text": "@RobotCharlie Sure, just create the service, package it into a library, deploy it to a repository, then depend on it in your other projects.   ",
                "time": "2019-01-30 23:01:24",
                "index": 5,
                "user": "josiahhaswell"
            },
            {
                "id": "5c522d8413a2814df6f39530",
                "text": "@josiahhaswell Sorry yeah this is what I meant, but not sure can this service has its own database?",
                "time": "2019-01-30 23:04:36",
                "index": 6,
                "user": "RobotCharlie"
            },
            {
                "id": "5c522ea6ceb5a2264f6a2688",
                "text": "@josiahhaswell like it has its own configs files and leave a public method that anyone else who depending on it can call the method, instead of calling the service through API?",
                "time": "2019-01-30 23:09:26",
                "index": 7,
                "user": "RobotCharlie"
            },
            {
                "id": "5c52437193fe7d5ac019d481",
                "text": "@RobotCharlie Sure.  It's probably best to expose the service as a REST service and provide client stubs",
                "time": "2019-01-31 00:38:09",
                "index": 8,
                "user": "josiahhaswell"
            },
            {
                "id": "5c52542393fe7d5ac01a3115",
                "text": "@josiahhaswell Thanks!",
                "time": "2019-01-31 01:49:23",
                "index": 11,
                "user": "RobotCharlie"
            }
        ]
    },
    {
        "id": 901,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5e1c34381cf5106b35119a41",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/96qo/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/96qo/image.png)",
                "time": "2020-01-13 09:11:20",
                "index": 0,
                "user": "EugeneZakhno"
            },
            {
                "id": "5e1c3448b990d50d81a4de26",
                "text": "Can you help me?\n",
                "time": "2020-01-13 09:11:36",
                "index": 1,
                "user": "EugeneZakhno"
            },
            {
                "id": "5e1c3487cb2aaa2d782dd709",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/QS1a/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/QS1a/image.png)",
                "time": "2020-01-13 09:12:39",
                "index": 2,
                "user": "EugeneZakhno"
            },
            {
                "id": "5e1c34a9c6897e1bc62512f5",
                "text": "But nothing ",
                "time": "2020-01-13 09:13:13",
                "index": 3,
                "user": "EugeneZakhno"
            },
            {
                "id": "5e1c6da3cb2aaa2d782f6654",
                "text": "@EugeneZakhno this is an IntelliJ question, not a Spring Boot question. And the answer is because you haven't assigned a data source.",
                "time": "2020-01-13 13:16:19",
                "index": 4,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 902,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c542fd1f04ef00644c030aa",
                "text": "I would like to use a @Cacheable with a custom KeyGenerator from the context, but at the same time to be able to \"adapt\" the incoming parameters for the signature without extracting to another method.\nHow can I achieve this? I am looking for something like:\n\n```\n@Cacheable(key =\"#entity.id\", interceptedByKeyGeneratorAnyway = true)\npublic String methodToCache(MyCustomEntity entity){ \n   process(entity);\n   ...\n}\n```\n\nor \n\n```\n@Cacheable\npublic String methodToCache(@CacheAsKeyArg(\"#entity.id\") MyCustomEntity entity){ \n   process(entity);\n   ...\n}\n```",
                "time": "2019-02-01 11:38:57",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5c543bca7b68f94102538fab",
                "text": "Implement `KeyGenerator`",
                "time": "2019-02-01 12:30:02",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5c543c1fc2dba5382ec2acac",
                "text": "I don\u2019t understand what you mean by adapting",
                "time": "2019-02-01 12:31:27",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5c543c27f46373406a35f9e2",
                "text": "You can do all that stuff in your `KeyGenerator` implementation",
                "time": "2019-02-01 12:31:35",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 903,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c001d2c958fc538950bcd45",
                "text": "can anybody help me on how to use command design pattern in spring-boot. I am creating a HashMap adding new sendPhoto,sendText . Inside each class sendPhotos and sendText i am using some repositories. If i create instance using new operator and added it in map and both the classes implement an interface something like sendPhoto implements handler,sendText implements handler and from my code i would call handler.execute(map.get(\"PHOTO\"))",
                "time": "2018-11-29 17:09:00",
                "index": 0,
                "user": "gitmnd"
            },
            {
                "id": "5c001d5dcfa682348da41e66",
                "text": "i would not get any repository injected in sendPhotos and sendTest classes,as i'm creating classes with new operator",
                "time": "2018-11-29 17:09:49",
                "index": 1,
                "user": "gitmnd"
            },
            {
                "id": "5c001d74a115c91ef7b13756",
                "text": "what is the best way to approach this issue?",
                "time": "2018-11-29 17:10:12",
                "index": 2,
                "user": "gitmnd"
            },
            {
                "id": "5c00e0d99f38cc0fd58032f0",
                "text": "@gitmnd by not using the new operator, but using prototype scope and getting your commands from the application context (e.g. by using a provider). Or use a factory to create them. ",
                "time": "2018-11-30 07:03:53",
                "index": 6,
                "user": "TomRauchenwald"
            }
        ]
    },
    {
        "id": 904,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ea2a9e81eb8bd3978f0c0fc",
                "text": "Hi everyone. I just learned that there is a SpringBootConfiguration annotation that is found automatically by SpringBootTests. To me this looks like a good way to configure modules, but the documentation of the annotation says \"Application should only ever include one @SpringBootConfiguration and most idiomatic Spring Boot applications will inherit it from @SpringBootApplication.\"\n\nDoes that mean that the application should only include one root configuration that imports the modules or that there must only exist one SpringBootConfiguration in all modules?",
                "time": "2020-04-24 08:57:12",
                "index": 0,
                "user": "elch78"
            },
            {
                "id": "5ea2aba161a0002f7946f37b",
                "text": "@SpringBootConfiguration is not different to @Configuration except that it is found automatically, right? So it's fine to use it as a module configuration I guess.",
                "time": "2020-04-24 09:04:33",
                "index": 1,
                "user": "elch78"
            },
            {
                "id": "5ea2b36d11ffed12682fe6dd",
                "text": "module?",
                "time": "2020-04-24 09:37:49",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2b9de94ac2758e305705d",
                "text": "Modules of my application. I.e. java packages.",
                "time": "2020-04-24 10:05:18",
                "index": 3,
                "user": "elch78"
            },
            {
                "id": "5ea2c55661a0002f7947343f",
                "text": "Why don't you just use `@Configuration`?",
                "time": "2020-04-24 10:54:14",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2c727f6a6e5397973182a",
                "text": "because SpringBootTests finds SpringBootConfiguration automatically.",
                "time": "2020-04-24 11:01:59",
                "index": 11,
                "user": "elch78"
            },
            {
                "id": "5ea2c74a5d245d59f3152c0c",
                "text": "@elch78 what's that got to do with it?",
                "time": "2020-04-24 11:02:34",
                "index": 13,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2c76c3c03d320626521d4",
                "text": "`@SpringBootTest` is for testing the whole application, and an application can only have one `@SpringBootConfiguration`",
                "time": "2020-04-24 11:03:08",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2c78d2bf9ef12699f3db3",
                "text": "no with SpringBootConfig I can test a module of an application with SpringBootTest",
                "time": "2020-04-24 11:03:41",
                "index": 15,
                "user": "elch78"
            },
            {
                "id": "5ea2c79c5d245d59f3152ce5",
                "text": "it will just load the module not the whole application context.",
                "time": "2020-04-24 11:03:56",
                "index": 16,
                "user": "elch78"
            },
            {
                "id": "5ea2c7b81eb8bd3978f10eef",
                "text": "same as with a unit test. There I tell SpringBootTest to just load certain classes",
                "time": "2020-04-24 11:04:24",
                "index": 17,
                "user": "elch78"
            },
            {
                "id": "5ea2c7e71e3d5e20633f48eb",
                "text": "You cannot have multiple `@SpringBootConfiguration`. What is unclear?",
                "time": "2020-04-24 11:05:11",
                "index": 18,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2c7ef94ac2758e30593f8",
                "text": "why ^",
                "time": "2020-04-24 11:05:19",
                "index": 19,
                "user": "elch78"
            },
            {
                "id": "5ea2c8023c03d32062652333",
                "text": "Because it's for identifying the application root configuration",
                "time": "2020-04-24 11:05:38",
                "index": 20,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2c807501f8f72a5ffd04f",
                "text": "There can't be more that one",
                "time": "2020-04-24 11:05:43",
                "index": 21,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2c89394ac2758e3059560",
                "text": "that's not what I am observing. I have a @SpringBootApplication at the root and three @SpringBootConfigurations in the modules and the application is still working. That's why I am asking.",
                "time": "2020-04-24 11:08:03",
                "index": 22,
                "user": "elch78"
            },
            {
                "id": "5ea2c998e5ed621d4dd9a030",
                "text": "I don't see why there can't be an application root and multiple module roots. The source for this is this article https://reflectoring.io/testing-verticals-and-layers-spring-boot/",
                "time": "2020-04-24 11:12:24",
                "index": 23,
                "user": "elch78"
            },
            {
                "id": "5ea2dbf494ac2758e305c45b",
                "text": "Unless you mean actual modules, you should stop calling them modules for clarity",
                "time": "2020-04-24 12:30:44",
                "index": 24,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2dc342bf9ef12699f7476",
                "text": "what are \"actual modules\"?",
                "time": "2020-04-24 12:31:48",
                "index": 25,
                "user": "elch78"
            },
            {
                "id": "5ea2dc7c3ea9b172a488db68",
                "text": "https://www.oracle.com/corporate/features/understanding-java-9-modules.html",
                "time": "2020-04-24 12:33:00",
                "index": 26,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2dca81e3d5e20633f8305",
                "text": "Emphasis theirs\n> we can create a test configuration for each of our modules **within the test sources**",
                "time": "2020-04-24 12:33:44",
                "index": 27,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2dcbc1eb8bd3978f1450d",
                "text": "https://docs.spring.io/spring-javaconfig/docs/1.0.0.m3/reference/html/modularizing-configurations.html",
                "time": "2020-04-24 12:34:04",
                "index": 28,
                "user": "elch78"
            },
            {
                "id": "5ea2dcc611ffed1268305731",
                "text": "there are many ways to define modules",
                "time": "2020-04-24 12:34:14",
                "index": 29,
                "user": "elch78"
            },
            {
                "id": "5ea2dcdf3ea9b172a488dc6a",
                "text": "Along with a highlighted section entitled\n> Why not use `@SpringBootConfiguration` in production code?",
                "time": "2020-04-24 12:34:39",
                "index": 30,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2dd4794ac2758e305c946",
                "text": "That spring-javaconfig is a pre-release milestone from 2008. Java modules were released in 2017.",
                "time": "2020-04-24 12:36:23",
                "index": 31,
                "user": "OrangeDog"
            },
            {
                "id": "5ea2dd6e501f8f72a5000ddb",
                "text": "well we dont use java modules and guess what we still have modules.",
                "time": "2020-04-24 12:37:02",
                "index": 32,
                "user": "elch78"
            },
            {
                "id": "5ea2ddb8afa1f51d4e1985a1",
                "text": "and I don't want to discuss module theory. My question was about the SpringBootConfiguration annotation.",
                "time": "2020-04-24 12:38:16",
                "index": 33,
                "user": "elch78"
            }
        ]
    },
    {
        "id": 905,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c35b34f57c6883f9b875dfa",
                "text": "Hi All, I'm new to Spring Boot and this group.  I tried making a rest app with spring boot with embedded tomcat server running a jar from command prompt. I also tried deploying war file the traditional way. But I have this question what if I want to deploy jar file on server and run the web/REST application. Like running it on AWS Server with embedded tomcat. How can this be done?",
                "time": "2019-01-09 08:39:43",
                "index": 0,
                "user": "gpkm1469"
            },
            {
                "id": "5c35d76f26d86e4d564c4d2f",
                "text": "Embedded tomcat is only for development purpose. Avoid using it on prod.\nWe even use full tomcat on dev to simulate real deployment scenario",
                "time": "2019-01-09 11:13:51",
                "index": 1,
                "user": "arsyed04_twitter"
            },
            {
                "id": "5c35d7e45ec8fe5a8526592b",
                "text": "@arsyed04_twitter Dont agree with embedded tomcat is for dev purpose only.Can you give any reference where it is mentioned ?",
                "time": "2019-01-09 11:15:48",
                "index": 2,
                "user": "kamrankhan1"
            },
            {
                "id": "5c35e851357dd7655d3f34df",
                "text": " @arsyed04_twitter that is not accurate at all. Embedded tomcat is perfectly suited for production",
                "time": "2019-01-09 12:25:53",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5c35eba04ed18278778257fe",
                "text": "ping @kamrankhan1 ",
                "time": "2019-01-09 12:40:00",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 906,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5be086f4d3442e197293920d",
                "text": "Hello, I need to improve the performance of a request and I'm using parallstream to save a list of objects, but I'm having problems with session JPA.",
                "time": "2018-11-05 18:07:48",
                "index": 0,
                "user": "alexvingg"
            },
            {
                "id": "5be087204775f53eb3468c4a",
                "text": "session is probably not safe to be shared across threads",
                "time": "2018-11-05 18:08:32",
                "index": 1,
                "user": "rrva"
            },
            {
                "id": "5be087675760a73eb44277ea",
                "text": "Do you have any suggestions on how to persist objects within a parallelStream @rrva ?",
                "time": "2018-11-05 18:09:43",
                "index": 2,
                "user": "alexvingg"
            },
            {
                "id": "5be087d725b9875faeda9b3e",
                "text": "do you really need to parallelize to make saving of a list of objects faster? Possibly check out https://frightanic.com/software-development/jpa-batch-inserts/",
                "time": "2018-11-05 18:11:35",
                "index": 3,
                "user": "rrva"
            },
            {
                "id": "5be088446eb1e3597ab5755f",
                "text": "Tanks @rrva ",
                "time": "2018-11-05 18:13:24",
                "index": 4,
                "user": "alexvingg"
            },
            {
                "id": "5be08b3e076992347abecca3",
                "text": "Haven't tried the technique above in the article, as I haven't used JPA for a long time and can't recall, but in general batching of writes should be considered as opposed to threaded writes, you would have to compare yourself what is faster. Many databases also have some bulk insert/update interfaces for really fast insert/update of many records at once but that's maybe hard to access when using some OR-mapper and JPA... but sharing a JPA session across threads sounds like it could lead to trouble",
                "time": "2018-11-05 18:26:06",
                "index": 5,
                "user": "rrva"
            }
        ]
    },
    {
        "id": 907,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5dca755592a84f79fe5184f9",
                "text": "Hi. Can somebody tell me whether Skip Listeners reuse the transaction of the reader, processor and writer or whether skip listeners get their own transaction?",
                "time": "2019-11-12 09:03:17",
                "index": 0,
                "user": "PatrickGotthard"
            },
            {
                "id": "5dca75d24adf071a84159a06",
                "text": "I'm currently facing transaction problems when migrating from Spring Boot 1.4.1 to 2.2.1 (I wish my former colleague had updated Spring Boot constantly)",
                "time": "2019-11-12 09:05:22",
                "index": 1,
                "user": "PatrickGotthard"
            },
            {
                "id": "5dca8e0935889012b1f42c53",
                "text": "@PatrickGotthard Spring Batch's skip listener? If so https://gitter.im/spring-batch/Lobby is a better place to find Batch expertise",
                "time": "2019-11-12 10:48:41",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 908,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5df15bbaac14cc652c68b10a",
                "text": "I am trying to compile webflux-netty example from spring-graal-native project but it is failing",
                "time": "2019-12-11 21:12:26",
                "index": 0,
                "user": "emont01"
            },
            {
                "id": "5df15bbf2cc1b31e34011a23",
                "text": "`Error: No instances of org.springframework.util.unit.DataSize are allowed in the image heap as this class should be initialized at image runtime.Object has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked.`",
                "time": "2019-12-11 21:12:31",
                "index": 1,
                "user": "emont01"
            },
            {
                "id": "5df15c03e47fb31eb79686bd",
                "text": "I have created a new project, moved spring-graal-native-feature and webflux-netty next to each other and updated the paths in compile.sh ",
                "time": "2019-12-11 21:13:39",
                "index": 2,
                "user": "emont01"
            },
            {
                "id": "5df1652de72656230129d857",
                "text": "@emont01 Raising an issue at https://github.com/spring-projects-experimental/spring-graal-native/issues is probably your best bet for that one",
                "time": "2019-12-11 21:52:45",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5df168b5c6ce6027eba51890",
                "text": "@emont01 In fact, there's an existing issue: https://github.com/spring-projects-experimental/spring-graal-native/issues/10. Have you built the feature?",
                "time": "2019-12-11 22:07:49",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5df1691d2bca3016aa634b5b",
                "text": "yes @wilkinsona, thanks for the help! I am thinking that my changes somehow messed up the path and now the CP is not correct, just checking that",
                "time": "2019-12-11 22:09:33",
                "index": 6,
                "user": "emont01"
            }
        ]
    },
    {
        "id": 909,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5baf8a62e65a6343365a5bce",
                "text": "i am just new for spring boot can anybody help me how to get a headstatr",
                "time": "2018-09-29 14:21:22",
                "index": 0,
                "user": "tharindu1998"
            },
            {
                "id": "5baf8a65ae7be94016d6eef7",
                "text": "start",
                "time": "2018-09-29 14:21:25",
                "index": 1,
                "user": "tharindu1998"
            },
            {
                "id": "5baf8aae1c100a4f29063e1f",
                "text": "is there anybody who can guide me through",
                "time": "2018-09-29 14:22:38",
                "index": 2,
                "user": "tharindu1998"
            },
            {
                "id": "5baff8691e23486b936443e0",
                "text": "@tharindu1998 Have a look at https://spring.io/guides",
                "time": "2018-09-29 22:10:49",
                "index": 3,
                "user": "php-coder"
            }
        ]
    },
    {
        "id": 910,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5b9bf42e1ee2ca6502181d8f",
                "text": "Hello Everybody. I Have started a project on Spring Boot \"2.0.5.RELEASE\", but its not starting tomcat with it, if i change the version number to \"2.0.3.RELEASE\" it works perfectly, what should I do to enable tomcat?",
                "time": "2018-09-14 17:47:26",
                "index": 0,
                "user": "lamtf"
            },
            {
                "id": "5b9bf45ffcba1254fab70a0b",
                "text": "(keeping the version 2.0.5)",
                "time": "2018-09-14 17:48:15",
                "index": 1,
                "user": "lamtf"
            },
            {
                "id": "5b9bf51df4bd1056ac628e11",
                "text": "the last message is \"Unregistering JMX-exposed beans on shutdown\"",
                "time": "2018-09-14 17:51:25",
                "index": 3,
                "user": "lamtf"
            },
            {
                "id": "5b9bf5bbb9531f2dfa68c3ad",
                "text": "[![spring-boot.png](https://files.gitter.im/spring-projects/spring-boot/n3tN/thumb/spring-boot.png)](https://files.gitter.im/spring-projects/spring-boot/n3tN/spring-boot.png)",
                "time": "2018-09-14 17:54:03",
                "index": 4,
                "user": "lamtf"
            },
            {
                "id": "5b9bf5e98909f71f75d3c8c3",
                "text": "@lamtf you\u2019re error looks similar to this https://stackoverflow.com/questions/50738459/spring-boot-unregistering-jmx-exposed-beans-on-shutdown",
                "time": "2018-09-14 17:54:49",
                "index": 5,
                "user": "ivange94"
            },
            {
                "id": "5b9bf6158909f71f75d3c996",
                "text": "Have you tried the solutions there? Though I will not advice you delete .m2 folder if you\u2019ve been working on a lot of projects that use maven since you\u2019re next builds will take much longer",
                "time": "2018-09-14 17:55:33",
                "index": 6,
                "user": "ivange94"
            },
            {
                "id": "5b9bf6211ee2ca650218297f",
                "text": "Thankyou, I'm gonna try it",
                "time": "2018-09-14 17:55:45",
                "index": 7,
                "user": "lamtf"
            },
            {
                "id": "5b9bf65154587954f9a21009",
                "text": "I can\u2019t really tell which dependency is the culprit but what I usually do is delete the folder for that dependency. Not the whole .m2 folder. ",
                "time": "2018-09-14 17:56:33",
                "index": 8,
                "user": "ivange94"
            }
        ]
    },
    {
        "id": 911,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d5188735178a7247675607e",
                "text": "Hi, sorry if it isn't the right place for this kind of question but I found only one event sourcing channel and it was too outdated.\n\nI would like to know if you guys know or have a documentation about naming conventions for event sourcing?\n\nIn the flow that I'm implementing a service A send a Command to service B, if service B couldn't execute the action it publishes a event notifying the error and rollback actions on service A.\nMy doubt is if [Model]DeleteErrorEvent seems stranger to me, do you guys have any example?",
                "time": "2019-08-12 15:40:35",
                "index": 0,
                "user": "guibernardi"
            },
            {
                "id": "5d519b14bb5364334c1bd974",
                "text": "@guibernardi Does https://axoniq.io/ give you any?",
                "time": "2019-08-12 17:00:04",
                "index": 1,
                "user": "jonatan-ivanov"
            },
            {
                "id": "5d51a4e91db76d0ffebdbe06",
                "text": "Hi @jonatan-ivanov  I'll check axon samples.",
                "time": "2019-08-12 17:42:01",
                "index": 2,
                "user": "guibernardi"
            },
            {
                "id": "5d51a4eebb5364334c1c1d46",
                "text": "thanks",
                "time": "2019-08-12 17:42:06",
                "index": 3,
                "user": "guibernardi"
            }
        ]
    },
    {
        "id": 912,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba38898d655361f76292fb8",
                "text": "@snicoll  \nI followed https://spring.io/guides/tutorials/spring-security-and-angular-js/ \nANd I cloned tut-spring-security-and-angular-js/basic. Everyhting is good.\nI started migrating my jsf app to angular and spring. BUt I dont require\n http basic authentication popup. How can I remove it from this ?",
                "time": "2018-09-20 11:46:32",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38a64f4bd1056ac8e683e",
                "text": "@DoraRajappan \nadd this class to your project\n\n@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter{\n       @Override\n        protected void configure(HttpSecurity http) throws Exception {\n                     http.csrf().disable();\n                    http.authorizeRequests().antMatchers(\"/\").permitAll();\n    }\n}",
                "time": "2018-09-20 11:54:12",
                "index": 1,
                "user": "robinskumar33"
            },
            {
                "id": "5ba38ad01043315947bc11ea",
                "text": "Let me check thank you",
                "time": "2018-09-20 11:56:00",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38b097dca3065032b2884",
                "text": "Which package should I add where my UiApplicationa resides?",
                "time": "2018-09-20 11:56:57",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38b778909f71f750043f6",
                "text": "you can place it at root package also for now.",
                "time": "2018-09-20 11:58:47",
                "index": 4,
                "user": "robinskumar33"
            },
            {
                "id": "5ba38baaf7e1580625fb6daa",
                "text": "Great",
                "time": "2018-09-20 11:59:38",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38bce913ba7799b1a2b91",
                "text": "when i access localhost:8080 first I will get this popup and then it will go to homepage",
                "time": "2018-09-20 12:00:14",
                "index": 6,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38bf9e5c2cc56adb94c92",
                "text": "no you will see your home page directly, no popup",
                "time": "2018-09-20 12:00:57",
                "index": 7,
                "user": "robinskumar33"
            },
            {
                "id": "5ba38bfbd655361f762943b8",
                "text": "the above configuration will disable all default security configuration.",
                "time": "2018-09-20 12:00:59",
                "index": 8,
                "user": "robinskumar33"
            },
            {
                "id": "5ba38c59913ba7799b1a2ee2",
                "text": "@robinskumar33  Im checking that.. will confirm",
                "time": "2018-09-20 12:02:33",
                "index": 10,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38c697dca3065032b32cd",
                "text": "If thats the case I need that exactly",
                "time": "2018-09-20 12:02:49",
                "index": 11,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38c85d655361f762947a0",
                "text": "How have you tweeked it",
                "time": "2018-09-20 12:03:17",
                "index": 12,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38c9ae5c2cc56adb95105",
                "text": "I searched for basic to comment code in node -modules",
                "time": "2018-09-20 12:03:38",
                "index": 13,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38ca21043315947bc1c9c",
                "text": "to no avail",
                "time": "2018-09-20 12:03:46",
                "index": 14,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38d378909f71f75004e6b",
                "text": "that was not an UI issue, the whole application is serve by Spring-boot and by default spring gives basic authentication , so you just have to change spring-security.",
                "time": "2018-09-20 12:06:15",
                "index": 15,
                "user": "robinskumar33"
            },
            {
                "id": "5ba38d73b9531f2dfa94e58d",
                "text": "Hmm nice to know that....",
                "time": "2018-09-20 12:07:15",
                "index": 16,
                "user": "DoraRajappan"
            },
            {
                "id": "5ba38ff28909f71f75005ea6",
                "text": "That works well for me!! Thanks a ton!",
                "time": "2018-09-20 12:17:54",
                "index": 17,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 913,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5ceee7879b50f639354d092e",
                "text": "Hello",
                "time": "2019-05-29 20:11:51",
                "index": 0,
                "user": "mstellaluna"
            },
            {
                "id": "5ceee7bb6fc5846bab2cc324",
                "text": "I can't seem to access the spring boot site .. gives me an error ```404 Not Found: Requested route ('spring.io') does not exist.``` ?",
                "time": "2019-05-29 20:12:43",
                "index": 1,
                "user": "mstellaluna"
            },
            {
                "id": "5ceee938f3a60a79a41fc495",
                "text": "@wilkinsona @bclozel @snicoll @mbhave ^",
                "time": "2019-05-29 20:19:04",
                "index": 2,
                "user": "JigarJoshi"
            },
            {
                "id": "5ceeed496fc5846bab2ce818",
                "text": "spring.io and start.spring.io are currently unavailable. See https://twitter.com/springops/status/1133823351565238273",
                "time": "2019-05-29 20:36:25",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5ceeed67bf4cbd167cfaae97",
                "text": "@bclozel Thanks !",
                "time": "2019-05-29 20:36:55",
                "index": 5,
                "user": "JigarJoshi"
            },
            {
                "id": "5ceef3f09b50f639354d5f81",
                "text": "@bclozel thank you.",
                "time": "2019-05-29 21:04:48",
                "index": 7,
                "user": "mstellaluna"
            }
        ]
    },
    {
        "id": 914,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cdbdc796fd7c11cd8bef85a",
                "text": "@wilkinsona  hi , how can i secure swagger with basic authentication and permit the rest of all urls after swagger is authenticated   ",
                "time": "2019-05-15 09:31:37",
                "index": 0,
                "user": "HamzaOuni17_twitter"
            },
            {
                "id": "5cdbe3d3f52a2375163611c0",
                "text": "@HamzaOuni17_twitter It depends what security framework you are using. Spring Security has support for basic authentication and is what most people use for securing Spring Boot apps. If you haven't done so already, check out the reference documentation: https://docs.spring.io/spring-security/site/docs/5.1.4.RELEASE/reference/htmlsingle/. There's also a dedicated Spring Security room on Gitter: https://gitter.im/spring-projects/spring-security",
                "time": "2019-05-15 10:02:59",
                "index": 7,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 915,
        "project": "spring-boot",
        "intention": "task_progress",
        "messages": [
            {
                "id": "5bb5b7fdae7be94016fbcc9c",
                "text": "Hi, where is Spring boot so far with jdk10 or 11 support?",
                "time": "2018-10-04 06:49:33",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5ba5d271506518db4a511",
                "text": "2.0.x supports Java 10, 2.1.x supports Java 11 as far as I know",
                "time": "2018-10-04 06:59:41",
                "index": 1,
                "user": "shakuzen"
            },
            {
                "id": "5bb5baa61c100a4f292afd95",
                "text": "cool",
                "time": "2018-10-04 07:00:54",
                "index": 2,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bb5bc1d1e23486b9386c078",
                "text": "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-with-Java-9-and-above",
                "time": "2018-10-04 07:07:09",
                "index": 3,
                "user": "shakuzen"
            },
            {
                "id": "5bb5bc2cae7be94016fbe3ec",
                "text": "> Java 10 is supported as of Spring Boot 2.0.1.RELEASE. Java 11 is supported as of Spring Boot 2.1.0.M2.",
                "time": "2018-10-04 07:07:24",
                "index": 4,
                "user": "shakuzen"
            }
        ]
    },
    {
        "id": 916,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cccb68a990feb451849c99f",
                "text": "What is the best way to customize an existing actuator endpoint? Extending the endpoint and providing custom bean from user space's configuration is an option however if the customization is entirely different. For example: the return type of HealthEndpoint for readOperation is Health if I want to totally swap it out with something custom. \n\nI am thinking to disable the built in endpoint by leveraging `ConditionalOnEnabledEndpoint` switch and registering my custom Endpoint at the id=health.\n\nIs there a better way for this customization? ",
                "time": "2019-05-03 21:45:46",
                "index": 0,
                "user": "JigarJoshi"
            },
            {
                "id": "5ccd62e4375bac747052fd5f",
                "text": "@JigarJoshi those endpoints are not really meant to be customized. The whole point of them is to bring a standard output for a Spring Boot application. I\u2019d rather create your own endpoint in your own namespace and disable ours if you don\u2019t need it. Alternatively, you can disable it and create your own that you map to ours if that\u2019s really what you want to do.",
                "time": "2019-05-04 10:01:08",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ccdefcd1cd0b8307dc23d63",
                "text": "@snicoll Thanks that is what I ended up doing.",
                "time": "2019-05-04 20:02:21",
                "index": 12,
                "user": "JigarJoshi"
            }
        ]
    },
    {
        "id": 917,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e20726a4c1f9679ecf801c8",
                "text": "Hi! Does anybody know how can I force all nested transactions within a method to use its very same parent transactionManager? nested transactions com from dependencies annotated with @transactional, which ends up being binded to the @Primary TransactionManager, not the one declared in my parent method",
                "time": "2020-01-16 14:25:46",
                "index": 0,
                "user": "nightswimmings"
            },
            {
                "id": "5e2073f53ea53f0f663419ba",
                "text": "The weird thing is that theres no propagation specified, so I would have guessed that Propagation=REQUIRED adopted by all means parent transaction, including its transactionmanager",
                "time": "2020-01-16 14:32:21",
                "index": 1,
                "user": "nightswimmings"
            },
            {
                "id": "5e20787fa50f33623f494912",
                "text": "Observing this, https://github.com/spring-projects/spring-framework/blame/cef4478b7b917033a8a01a6e633f6f59aab67e59/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java#L449, which hasnt been changed in 3 years, I assume that's the expected behavior: \nevaluation of transactionmanager is done on each @Transactional and it's orthogonal to propagation type\n",
                "time": "2020-01-16 14:51:43",
                "index": 2,
                "user": "nightswimmings"
            },
            {
                "id": "5e2081fec7647778a5d39046",
                "text": "You need a primary transaction manager that understands multiple transaction managers",
                "time": "2020-01-16 15:32:14",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5e20822c3ea53f0f66348560",
                "text": "otherwise the individual managers have no way to know about each others' transactions",
                "time": "2020-01-16 15:33:00",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5e2082ba8e073f465f00ee85",
                "text": "or make sure you always specify the right one in `@Transactional`",
                "time": "2020-01-16 15:35:22",
                "index": 5,
                "user": "OrangeDog"
            },
            {
                "id": "5e208d84000f4978990938a9",
                "text": "@OrangeDog The thing is I dont need to understand multiples, I always specify it, but I cannot modify the third-party lib, so I am looking for a way to specify the txManager for the dependency or either exclude it at all as a last resort",
                "time": "2020-01-16 16:21:24",
                "index": 8,
                "user": "nightswimmings"
            },
            {
                "id": "5e208de95cd79646605f0bb5",
                "text": "What I said is still correct. Your primary manager will need some logic to decide which of the others it should delegate to (e.g. the one with a current transaction)",
                "time": "2020-01-16 16:23:05",
                "index": 9,
                "user": "OrangeDog"
            },
            {
                "id": "5e20937a5cd79646605f3bea",
                "text": "@OrangeDog sorry, I  am having difficulties to understand what you describe  but I am forgetting something for sure. If I go to the third-party library, delete or edit the @Transactional annotation to use same txmanager than mylib, then at what point theres delegation?",
                "time": "2020-01-16 16:46:50",
                "index": 11,
                "user": "nightswimmings"
            },
            {
                "id": "5e20939dea55e3623e65bc0e",
                "text": "I am assuming you don't want to or cannot edit the third-party library",
                "time": "2020-01-16 16:47:25",
                "index": 12,
                "user": "OrangeDog"
            },
            {
                "id": "5e20947e20d0f078a68ba040",
                "text": "exactly, but this is the behavior Id like to imitate, if i manage to do that, then do I need to do a composed manager?",
                "time": "2020-01-16 16:51:10",
                "index": 13,
                "user": "nightswimmings"
            },
            {
                "id": "5e2094a55b81ab262e38d3c9",
                "text": "if only I could do a @Transactional(propagation=ignoresubtransactions) or either something like @EnableTransactional(exclude=third-party.class)",
                "time": "2020-01-16 16:51:49",
                "index": 14,
                "user": "nightswimmings"
            },
            {
                "id": "5e2094e83ea53f0f6635082d",
                "text": "and that is assuming that the current and expected behavior is that upon propagation=REQUIRED, transaction does support parent transaction but not parent's transactionmanager which I don't see it obvious at all",
                "time": "2020-01-16 16:52:56",
                "index": 15,
                "user": "nightswimmings"
            },
            {
                "id": "5e2095f4a1dfaa3ba12d8a48",
                "text": "> You need a primary transaction manager that understands multiple transaction managers **or** make sure you always specify the right one in @Transactional",
                "time": "2020-01-16 16:57:24",
                "index": 16,
                "user": "OrangeDog"
            },
            {
                "id": "5e20962f5cd79646605f52ee",
                "text": "What the aspect does is determine what transaction manager to call around the method. It doesn't do any tracking of transactions or managers itself.",
                "time": "2020-01-16 16:58:23",
                "index": 17,
                "user": "OrangeDog"
            },
            {
                "id": "5e2096ec0dbd9379ed485ae3",
                "text": "A third option is a custom aspect that looks at the method's class/package to decide which transaction manager to use, but IMO that's more messy.",
                "time": "2020-01-16 17:01:32",
                "index": 18,
                "user": "OrangeDog"
            },
            {
                "id": "5e209715714883789886d6aa",
                "text": "none of which has anything to do with propagation",
                "time": "2020-01-16 17:02:13",
                "index": 19,
                "user": "OrangeDog"
            },
            {
                "id": "5e2098ea0289c83ba2ab7bfd",
                "text": "all the solutions seem no trivial for a hotfix then :'(...",
                "time": "2020-01-16 17:10:02",
                "index": 20,
                "user": "nightswimmings"
            },
            {
                "id": "5e20992cc7647778a5d43a76",
                "text": "Are we sure theres no mechanism for marking a bean as not qualifiable to support transactions? I mean something like @EnableTransactions(exclude=thirdparty.class). I need the bean to be managed, but I want the @Transactional to be ignored",
                "time": "2020-01-16 17:11:08",
                "index": 21,
                "user": "nightswimmings"
            },
            {
                "id": "5e209993a1dfaa3ba12da508",
                "text": "Anyway, thanks for your help james",
                "time": "2020-01-16 17:12:51",
                "index": 22,
                "user": "nightswimmings"
            },
            {
                "id": "5e209a62a1dfaa3ba12da9d7",
                "text": "there is not",
                "time": "2020-01-16 17:16:18",
                "index": 23,
                "user": "OrangeDog"
            },
            {
                "id": "5e209ac25cd79646605f77e7",
                "text": "perhaps you could do something really hacky with `Bean(Definition)PostProcessors` but the other solutions are all easier",
                "time": "2020-01-16 17:17:54",
                "index": 24,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 918,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bcf8dccc7bf7c36625bbeab",
                "text": "Is this the right place to ask questions about `spring-reactive-webflux`?",
                "time": "2018-10-23 21:08:28",
                "index": 0,
                "user": "juzerali"
            },
            {
                "id": "5bcf91736e5a401c2dbca013",
                "text": "I will ask anyway.\n\nI want to understand the semantics of `WebClient.ResponseSpec#bodyToFlux` method. Surprisingly I didn't find any implementation of this interface and the [javadoc](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/reactive/function/client/WebClient.ResponseSpec.html) doesn't state any either.\n\nI want to know if `bodyToFlux` actually streams response as it arrives or bundles the whole of response in a Flux object? Is it non-blocking?",
                "time": "2018-10-23 21:24:03",
                "index": 1,
                "user": "juzerali"
            },
            {
                "id": "5bd02da9ab17df2631e07f61",
                "text": "@juzerali it's implemented by https://github.com/spring-projects/spring-framework/blob/master/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java\nThe behavior depends on the response content-type. If it's a streaming content-type (such as `application/stream+json`) elements will be deserialized one by one as they come. If it's not a streaming type (`application/json`), we'll buffer the whole thing and deserialize with Jackson in one call (because it's way more efficient). In all cases this is non-blocking, since we're never blocking resources waiting for I/O operations to happen.",
                "time": "2018-10-24 08:30:33",
                "index": 6,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 919,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c6e2426c776985d8f291a1c",
                "text": "hi, i'm having custom filter in my web application, which is extending some third party filter, is it normal that the base class is used when running the application? at least it fails in a base class method, which has been overridden in child class, the filter is registered via FilterRegistrationBean",
                "time": "2019-02-21 04:08:06",
                "index": 0,
                "user": "kalnida1"
            },
            {
                "id": "5c6eade100aa630d9aea9a44",
                "text": "@wilkinsona hi, could you, please, tell something on my case above?",
                "time": "2019-02-21 13:55:45",
                "index": 15,
                "user": "kalnida1"
            },
            {
                "id": "5c6eb1709e430b3086a24abb",
                "text": "That doesn't sound usual to me. Perhaps some code is calling the super method? It's hard to say what's happening without seeing some code that reproduces the problem",
                "time": "2019-02-21 14:10:56",
                "index": 16,
                "user": "wilkinsona"
            },
            {
                "id": "5c6eb1bc9155d45d904f0401",
                "text": "there's not super method call, besides, the method which throws exception is private to base class",
                "time": "2019-02-21 14:12:12",
                "index": 17,
                "user": "kalnida1"
            },
            {
                "id": "5c6eb1fbc776985d8f2cb9e1",
                "text": "there's same method but with slight differences in derived class, but it is also private",
                "time": "2019-02-21 14:13:15",
                "index": 18,
                "user": "kalnida1"
            },
            {
                "id": "5c6eb216a378ef11f617aace",
                "text": "i'll try to compose similar example in order to reproduce the issue",
                "time": "2019-02-21 14:13:42",
                "index": 19,
                "user": "kalnida1"
            },
            {
                "id": "5c6ec2f01f14630421f91d59",
                "text": "@kalnida1 You can't override a private method so I now realise I don't understand the description of your code's structure. I'll take a look again if you're able to share something.",
                "time": "2019-02-21 15:25:36",
                "index": 21,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 920,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cb6edda8790b0307eb5a29c",
                "text": "Hi, everyone,\nI am facing an issue, let me explain.\nI am using Spring boot 2.1.2 with gradle. I created a MessageConverter by extending the abstract class `AbstractHttpMessageConverter`.\n\nWhen I call an endpoint with the right `Accept` header, the API returns a 406.\n\nWhen I debug, the `handleReturnValue` call of the `HandlerMethodReturnValueHandlerComposite` which uses the following handler `HttpEntityMethodProcessor` have onlye one converter in the list of `MessageConverter` which is the `MappingJackson2HttpMessageConverter`. When I look at the registered message converters in `RequestMappingHandlerAdapter` I find my MessageConverter with other default messageConverter. \n\nI have the impression that `HttpEntityMethodProcessor` has only one `MessageConverter` at any given time, even if I specify many other media types in `RequestMapping`'s `produces` field.\n\nI don't understand what I'm doing wrong in this case, if anyone has any idea, I'd be happy to know what I'm doing wrong :) Thank you.",
                "time": "2019-04-17 09:11:54",
                "index": 0,
                "user": "Rostom35"
            },
            {
                "id": "5cb704e02e2caa1aa671ab3c",
                "text": "@Rostom35 How are you registering your converter? It sounds like it's been registered after `ReqestMappingHandlerAdapter` has created the `HttpEntityMethodProcessor`.",
                "time": "2019-04-17 10:50:08",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cb713876a84d76ed8aa8417",
                "text": "@wilkinsona Thank you for answering me :) \nAs an exemple I have `QifHttpMessageConverter` which extend `AbstractHttpMessageConverter` and then I create a bean as shown bellow. \n```\n@Configuration\npublic class CustomMessageConverter {\n    @Bean\n    public HttpMessageConverter qifHttpMessageConverter() {\n        return new QifHttpMessageConverter();\n    }\n}\n```\nWhen I launch the application, the `afterPropertiesSet` method of the `RequestMappingHandlerAdapter` class creates `HttpEntityMethodProcessor` with all existing MessageConverters including mine. \nBut when I call the \"endpoint\", the only MessageConverter that `HttpEntityMethodProcessor` has is the `MappingJackson2HttpMessageConverter`... \ud83e\udd14",
                "time": "2019-04-17 11:52:39",
                "index": 3,
                "user": "Rostom35"
            },
            {
                "id": "5cb845df375bac7470c3e25a",
                "text": "@Rostom35 Is it the same `HttpEntityMethodProcessor` instance in each case? I would suspect that it's not. Perhaps you could place breakpoints in its constructors and see where it's getting created with only a single converter. I've just tried it and I see three instances being created, but each has the same converters including a custom one that I have defined as a bean.",
                "time": "2019-04-18 09:39:43",
                "index": 14,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 921,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c5aabe954f21a71a108c212",
                "text": "Hi all, I'm implementing rest ws with spring-boot, I have a method with takes as input a MultipartFile, now I would like to know how to invoke properly this service with a byte array, I don't want to save a File in client-side to invoke my service, does it exist a different approach? Thanks",
                "time": "2019-02-06 09:42:01",
                "index": 0,
                "user": "rgambelli"
            },
            {
                "id": "5c5aac319221b9382d22e6b1",
                "text": "Is it wrong having MultipartFile in method signature if my client has a byte array to send?",
                "time": "2019-02-06 09:43:13",
                "index": 1,
                "user": "rgambelli"
            },
            {
                "id": "5c5ae7f0454aad4df704b58f",
                "text": "@rgambelli No, it's not necessarily wrong. You can upload the byte[] as if it's a file, you just need to format the request correctly. Exactly how you'd do that depends on what you're using to implement the client.",
                "time": "2019-02-06 13:58:08",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5c5aeaf69221b9382d24a7ae",
                "text": "@wilkinsona thx, we are implementing client with resttemplate, we tried either with InputStreamResource or with ByteArrayResource, none of them worked, I've found this curious article but I would hope it isn't a real solution https://medium.com/@voziv/posting-a-byte-array-instead-of-a-file-using-spring-s-resttemplate-56268b45140b",
                "time": "2019-02-06 14:11:02",
                "index": 4,
                "user": "rgambelli"
            },
            {
                "id": "5c5af37e93fe7d5ac04e5321",
                "text": "That looks about right to me. You need `RestTemplate` to perform a multi-part upload for you and that's the way to do it if all you have is a `byte[]`",
                "time": "2019-02-06 14:47:26",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5c5af3daf04ef00644ec995f",
                "text": "If the server side doesn't care about the metadata that goes with the file's content (the filename, etc) then you could change to dealing with a `byte[]` or `InputStream` and then just upload the raw bytes on the client-side. It really depends on what contract your API needs to implement",
                "time": "2019-02-06 14:48:58",
                "index": 6,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 922,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d19af3579f6d94a8e088e5d",
                "text": "Iam using restemplate to invoke an API",
                "time": "2019-07-01 06:59:01",
                "index": 0,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19af7eda128007c6a53a2e",
                "text": "im one of our environment , the API is responding with a Header,  {application/json, q=1000}",
                "time": "2019-07-01 07:00:14",
                "index": 1,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19af84da128007c6a53a41",
                "text": "So am getting Invalid mime type \"{application/json, q=1000}\": Invalid token character '{' in token \"",
                "time": "2019-07-01 07:00:20",
                "index": 2,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19afa28dff05627ba35f00",
                "text": "I have added the headers ",
                "time": "2019-07-01 07:00:50",
                "index": 3,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19afa39cbde24b2f5140be",
                "text": "baseHeader.add(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE);\n\t\tbaseHeader.add(HttpHeaders.ACCEPT_CHARSET, StandardCharsets.UTF_8.name());",
                "time": "2019-07-01 07:00:51",
                "index": 4,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19afb8a8b20942bab8fdda",
                "text": "But no luck, also in my rest template config i have added the configs",
                "time": "2019-07-01 07:01:12",
                "index": 5,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19aff53d12712ce4c06db1",
                "text": "```\t@Bean\n\tpublic RestTemplate restTemplate() {\n\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();\n\n\t\tRestTemplate restTemplate = new RestTemplate(requestFactory);\n\t\tList<HttpMessageConverter<?>> converters = new ArrayList<>();\n\t\tStringHttpMessageConverter stringConverter = new StringHttpMessageConverter();\n\t\tstringConverter.setWriteAcceptCharset(false);\n\t\tconverters.add(stringConverter);\n\t\trestTemplate.setMessageConverters(converters);\n\n\t\trestTemplate.getMessageConverters().add(new ByteArrayHttpMessageConverter());\n\t\trestTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n\t\treturn new RestTemplate(requestFactory);\n\t}```",
                "time": "2019-07-01 07:02:13",
                "index": 6,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19b002ddd2c007c73d3042",
                "text": "But still getting the same error",
                "time": "2019-07-01 07:02:26",
                "index": 7,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19b017676ff14d275f28c7",
                "text": "Can anyone help on resolving it?",
                "time": "2019-07-01 07:02:47",
                "index": 8,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19c7982be6a2404dfe1812",
                "text": "@MohanJagadheeswaran The header's value is incorrect. As far as I know, it shouldn't have `{` and `}` characters in it. What is the API that you are calling? Could it be fixed?",
                "time": "2019-07-01 08:43:04",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5d19c98f03d62b4d28c07d10",
                "text": "@wilkinsona  its from a third party and limted to be fixed from our side",
                "time": "2019-07-01 08:51:27",
                "index": 19,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19c9afffd4b84a8fe5fd11",
                "text": "can Jackson be configured to parse or avoid that response mimetype not to be parsed?",
                "time": "2019-07-01 08:51:59",
                "index": 20,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19cc4f490abf627a54446a",
                "text": "@wilkinsona  i did the solution as mentioned here, https://stackoverflow.com/questions/48799409/invalid-mime-type-in-spring-rest-template?answertab=active#tab-top",
                "time": "2019-07-01 09:03:11",
                "index": 21,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19cc5ca8b20942bab9fd7b",
                "text": "But could able to resolve",
                "time": "2019-07-01 09:03:24",
                "index": 22,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19ce44676ff14d27603977",
                "text": "@MohanJagadheeswaran Jackson isn't involved yet at that point, since Spring is trying to figure out what to use to decode the response. This is a totally invalid response header so I doubt It'll work with any other client. At that point, your best bet is to fix the remote service or fix the incoming response headers (for that you can use a custom `ClientHttpResponse` that changes the response content-type header",
                "time": "2019-07-01 09:11:32",
                "index": 23,
                "user": "bclozel"
            },
            {
                "id": "5d19cfb28dff05627ba48b36",
                "text": "@bclozel thanks for the response. Is there any reference for that?",
                "time": "2019-07-01 09:17:38",
                "index": 24,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19cfbe9cbde24b2f5259c1",
                "text": "It wouldbe great if you help with that",
                "time": "2019-07-01 09:17:50",
                "index": 25,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19d46f490abf627a549365",
                "text": "You need to create a class that implements `ClientHttpRequestInterceptor`. In the method you need to implement the part where you replace the response header. You can register that new class against a `RestTemplateBuilder` that you should use to build your `RestTemplate` instance",
                "time": "2019-07-01 09:37:51",
                "index": 26,
                "user": "bclozel"
            },
            {
                "id": "5d19d540ffd4b84a8fe668ab",
                "text": "@bclozel Trying that out!",
                "time": "2019-07-01 09:41:20",
                "index": 27,
                "user": "MohanJagadheeswaran"
            },
            {
                "id": "5d19e985da128007c6a751e9",
                "text": "@bclozel It worked. thanks",
                "time": "2019-07-01 11:07:49",
                "index": 28,
                "user": "MohanJagadheeswaran"
            }
        ]
    },
    {
        "id": 923,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d164e70189e7b4ff028a8b2",
                "text": "is it possible to debug `@PreAuthorize`?",
                "time": "2019-06-28 17:29:20",
                "index": 0,
                "user": "sanjeevghimire"
            },
            {
                "id": "5d164eb503d62b4d28a2905a",
                "text": "I added a ROLE at runtime and when I try to hit the API which has that role in `hasAnyRole` the API gives me `Access Denied Exception`",
                "time": "2019-06-28 17:30:29",
                "index": 1,
                "user": "sanjeevghimire"
            },
            {
                "id": "5d164eb8da128007c688366b",
                "text": "Any Idea?",
                "time": "2019-06-28 17:30:32",
                "index": 2,
                "user": "sanjeevghimire"
            },
            {
                "id": "5d164ec579f6d94a8eeb2be3",
                "text": "when I get that user I see that ROLE in the list of authorities",
                "time": "2019-06-28 17:30:45",
                "index": 3,
                "user": "sanjeevghimire"
            },
            {
                "id": "5d1664b84db9b92ce3651dc9",
                "text": "@sanjeevghimire You could enable debug logging for `org.springframework.security`. Alternatively you could use a debugger with a breakpoint in `org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor`. If that doesn't help, there's a dedicated room for Spring Security which would a better place than here to follow up: https://gitter.im/spring-projects/spring-security.",
                "time": "2019-06-28 19:04:24",
                "index": 4,
                "user": "wilkinsona"
            },
            {
                "id": "5d167372aa095d404cd58ab5",
                "text": "thanks @wilkinsona ",
                "time": "2019-06-28 20:07:14",
                "index": 6,
                "user": "sanjeevghimire"
            }
        ]
    },
    {
        "id": 924,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba4ea6b0cfe7f30f1c910d3",
                "text": "if I have class like this:\n```\n@Configuration\n@ConditionalOnBean(DataSource.class)\n@ConditionalOnProperty(value = \"gls.enabled\", havingValue = \"true\")\n@AutoConfigureAfter({DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class})\npublic class GLSAutoConfiguration {\n\n    @Configuration\n    public static class GLSConfiguration {\n      ...\n    }\n}\n```\n\nand `gls.enabled` property is not present, does it mean that no configuration will be provided? I mean will be class `GLSConfiguration` called?\n",
                "time": "2018-09-21 12:56:11",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5ba4ebfef4bd1056ac96c6fe",
                "text": "simplified question means...that if parent class doesnt meet the conditions is child class configuration invoked? Because currently I see that it is",
                "time": "2018-09-21 13:02:54",
                "index": 1,
                "user": "bilak"
            },
            {
                "id": "5ba4ec42f7e158062503b08f",
                "text": "maybe problem is that I have entire class on componentscan?",
                "time": "2018-09-21 13:04:02",
                "index": 2,
                "user": "bilak"
            },
            {
                "id": "5ba4f57e913ba7799b22ba0a",
                "text": "component scan for an auto-configuration? That\u2019s not how it works",
                "time": "2018-09-21 13:43:26",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5ba4f7aef7e15806250402f1",
                "text": "I know I know...I need to move it to another package",
                "time": "2018-09-21 13:52:46",
                "index": 4,
                "user": "bilak"
            },
            {
                "id": "5ba4f8a7f7e15806250408ff",
                "text": "If you know, I\u2019d recommend fixing that before asking here then please",
                "time": "2018-09-21 13:56:55",
                "index": 5,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 925,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c62d264adf6cb0b2ca73352",
                "text": "I am completely new to spring boot application. Could you please share the material links",
                "time": "2019-02-12 14:04:20",
                "index": 0,
                "user": "Sunil-i5MB"
            },
            {
                "id": "5c62d321253c2b5ea3fd29f9",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/html/",
                "time": "2019-02-12 14:07:29",
                "index": 1,
                "user": "styx_hcr_twitter"
            },
            {
                "id": "5c62d6f3d1e3093ab50a452b",
                "text": "@styx_hcr_twitter  Thanks",
                "time": "2019-02-12 14:23:47",
                "index": 2,
                "user": "Sunil-i5MB"
            },
            {
                "id": "5c6302add1e3093ab50bad7e",
                "text": "@Sunil-i5MB The getting started guides (https://spring.io/guides#gs) will hopefully be of interest as well",
                "time": "2019-02-12 17:30:21",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5c641936ef98455ea42b4371",
                "text": "@wilkinsona  Thanks Andy",
                "time": "2019-02-13 13:18:46",
                "index": 20,
                "user": "Sunil-i5MB"
            }
        ]
    },
    {
        "id": 926,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ecff7144c9b0f060d2d5601",
                "text": "i use spring boot 2.3 and openjdk 11 i try create layered jar file but i got an error\nUnable to parse configuration of mojo org.springframework.boot:spring-boot-maven-plugin:2.3.0.RELEASE:repackage: Cannot convert 'LAYERED_JAR' to Enum: No enum constant org.springframework.boot.maven.AbstractPackagerMojo.LayoutType.LAYERED_JAR",
                "time": "2020-05-28 17:38:28",
                "index": 0,
                "user": "robatipoor"
            },
            {
                "id": "5ecff7529da05a060a38f212",
                "text": "Someone can help me",
                "time": "2020-05-28 17:39:30",
                "index": 1,
                "user": "robatipoor"
            },
            {
                "id": "5ecff905a789c4569b602ada",
                "text": "@robatipoor see the documentation for configuring layered jars here: https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/#repackage-layers. you\u2019re likely following a blog post for 2.3.0.M1 and the config changed between M1 and RELEASE.",
                "time": "2020-05-28 17:46:45",
                "index": 2,
                "user": "scottfrederick"
            },
            {
                "id": "5ecffa027da67d06fad9c059",
                "text": "ohhh thanks ",
                "time": "2020-05-28 17:50:58",
                "index": 3,
                "user": "robatipoor"
            }
        ]
    },
    {
        "id": 927,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c3a284fba5936605bac26d9",
                "text": "Hi everyone. When I use \"@WebFluxTest\" it required jpaAudintingHandler bean and use \"@AutoConfigureDataJpa\" everything is worked well, but when I sent request toController via WebClientTest I got error in the Controller bean. Because there were some dependencies in the Controller,a service class, there was a Repository interface in the Service class . Service class returned null pointer exception",
                "time": "2019-01-12 17:47:59",
                "index": 0,
                "user": "Nasibulloh"
            },
            {
                "id": "5c3a288628513d605a1645a1",
                "text": "I dont know why did it happen? I used @MockBean for Dependencies ",
                "time": "2019-01-12 17:48:54",
                "index": 1,
                "user": "Nasibulloh"
            },
            {
                "id": "5c3ad22135350772cf225241",
                "text": "@snicoll I understood. But in my case I am using JPA and Tomcat instead of Netty. With R2DBC  I think we ca use ReactiveRepositories and when I wanted to test it , it returned null from Service layer",
                "time": "2019-01-13 05:52:33",
                "index": 6,
                "user": "Nasibulloh"
            }
        ]
    },
    {
        "id": 928,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c3e304df780a1521f161c38",
                "text": "Alright I am going to build a billing software. One of the goals it to be modular so I am going to Have a plugin API. How can this plugin API add controllers. I know how to do url class loader and have it start the plugin. But I want to know how I can have it tell spring to add a controller",
                "time": "2019-01-15 19:11:09",
                "index": 0,
                "user": "wherkamp"
            },
            {
                "id": "5c3e3434ba355012a44420b9",
                "text": "one way to do it is each plugin could be its own custom spring boot starter and then each plugin could be responsible for adding its own beans to the Spring context",
                "time": "2019-01-15 19:27:48",
                "index": 1,
                "user": "edeandrea"
            },
            {
                "id": "5c3e34e70999400604f7b2e6",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-custom-starter & https://www.baeldung.com/spring-boot-custom-starter give a pretty good guide",
                "time": "2019-01-15 19:30:47",
                "index": 2,
                "user": "edeandrea"
            },
            {
                "id": "5c3e36050721b912a585fdfe",
                "text": "Ok thx. I know nothing about spring so I am wanting to make everything I need to be done is possible",
                "time": "2019-01-15 19:35:33",
                "index": 3,
                "user": "wherkamp"
            },
            {
                "id": "5c3e36471cb70a372ae3cffa",
                "text": "Spring is pretty flexible and there is probably a way to do anything you want",
                "time": "2019-01-15 19:36:39",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5c3e3f1235350772cf381267",
                "text": "Starters are not very handy, depending on the project, especially if you need to configure a lot of beans for private use within the starter",
                "time": "2019-01-15 20:14:10",
                "index": 5,
                "user": "nightswimmings"
            },
            {
                "id": "5c3e509239596c372be916a1",
                "text": "@nightswimmings what do you mean by \u201cstarters are not very handy\u201d?",
                "time": "2019-01-15 21:28:50",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c3f48871cb70a372aeacd23",
                "text": "  @snicoll\n> @nightswimmings what do you mean by \u201cstarters are not very handy\u201d?\n\nI experienced some problems in the past for using starters in the fashion the user suggested because I did not find a way to expose beans in the private context of the starter. At least no solution was found in this chat as a suggestion. Imagine an starter that needs autoconfiguration that must not been exposed to the importer project, then you end up having to configure manually all beans in order to avoid exposure beyond the starter. For example, imagine an starter that uses a resttemplate. If you don-t want to cause side/effects to importing projects, resttemplate cannot be configured through spring boot autoconifuguration. You have to do it manually and pass it manually as an argument to your starter-library class. Depending on the project this is not very practical. Besides, in this chat people ended up concluding that I should not use starters as a way to make reusable core libraries for my business, but think of that as an universal library for integrating with technologies in an universal way. I can look for the discussion. It's never late to relearn things, so if things have changed or I took the wrong message, I am glad to be corrected",
                "time": "2019-01-16 15:06:47",
                "index": 74,
                "user": "nightswimmings"
            },
            {
                "id": "5c3f543eba5936605bcce89b",
                "text": "@nightswimmings I am just thinking if java 9 module can solve this problem. If i dont expose my configurations as public class, will still other people will be able to configure it ?",
                "time": "2019-01-16 15:56:46",
                "index": 75,
                "user": "rajjaiswalsaumya"
            },
            {
                "id": "5c3f54c420b78635b632c8c6",
                "text": "@nightswimmings I don\u2019t understand the problem to be honest. What you\u2019re  describing isn\u2019t really related to Spring Boot. It looks like you\u2019d like a bean to be created privately or something. If I got this right, this is interesting feedback. You may not want to have that as a bean in a first place. In any case iit\u2019s hardly related to the starter as a concept.",
                "time": "2019-01-16 15:59:00",
                "index": 76,
                "user": "snicoll"
            },
            {
                "id": "5c3f821595e17b452560d250",
                "text": "@snicoll If only we could flag that @Configuration that is meant to be used out of the starter and that that it is not...  I think that is going through that direction: https://github.com/spring-projects/spring-boot/issues/4667",
                "time": "2019-01-16 19:12:21",
                "index": 85,
                "user": "nightswimmings"
            },
            {
                "id": "5c3f8e50f780a1521f1f35fe",
                "text": "What would that change in your particular situation?",
                "time": "2019-01-16 20:04:32",
                "index": 86,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 929,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c489e0fc45b986d11a9c11a",
                "text": "[repost from the weekend] i have a method that works fine with a mustache template using `@ModelAttribute`. but when i convert it to return a `DeferredResult`the template no longer gets called and the method returns json instead of the rendered html. is there a correct way to make the two work together ? or a recommended way to use templates with a non-blocking method ?",
                "time": "2019-01-23 17:02:07",
                "index": 0,
                "user": "nqzero"
            },
            {
                "id": "5c48a1cb0a491251e342b78d",
                "text": "@nqzero What did you do in the conversion? I believe it should work if your return `DeferredResult<String>` in the same way that you would have returned `String` before switching to `DeferredResult`",
                "time": "2019-01-23 17:18:03",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5c48a5efdab15872cedeca3f",
                "text": "@wilkinsona i was returning `DeferredResult<ResponseEntity<ArrayList<Fortune>>>`. let me revert back to that code (i've since been rendering the templates manually) and see if i can make it work. thanks !\nedit: that worked ! thanks again :)",
                "time": "2019-01-23 17:35:43",
                "index": 2,
                "user": "nqzero"
            }
        ]
    },
    {
        "id": 930,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5de9238105eec2433ddbaebf",
                "text": "Hi all",
                "time": "2019-12-05 15:34:25",
                "index": 0,
                "user": "gumruyanzh"
            },
            {
                "id": "5de923a0c3d6795b9f2ab2a5",
                "text": "can someone help me understand the problem behind not being able to use swagger2 with spring boot 2 ? ",
                "time": "2019-12-05 15:34:56",
                "index": 1,
                "user": "gumruyanzh"
            },
            {
                "id": "5de923a75ac7f22fb566dce5",
                "text": "I'm getting \n`Correct the classpath of your application so that it contains a single, compatible version of org.springframework.plugin.core.PluginRegistry\n`",
                "time": "2019-12-05 15:35:03",
                "index": 2,
                "user": "gumruyanzh"
            },
            {
                "id": "5de92c3af65fec1c8ec9469d",
                "text": "@gumruyanzh Spring Boot 2.2 uses a version of Spring Data that requires Spring Plugin 2.0. Unfortunately, the latest release of SpringFox is only compatible with Spring Plugin 1.2. Until there's a compatible version of Spring Fox, you can either stick with Spring Boot 2.1 or remove SpringFox from your application. While neither's great, I'd recommend removing SpringFox as getting stuck on an old version of a dependency isn't a good place to be.",
                "time": "2019-12-05 16:11:38",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5de92e37f65fec1c8ec9539c",
                "text": "@wilkinsona thank you very much,,, another solution I found is to remove spring-boot-starter-data-rest from the pom, and it worked, but still not primary solution",
                "time": "2019-12-05 16:20:07",
                "index": 4,
                "user": "gumruyanzh"
            }
        ]
    },
    {
        "id": 931,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ba1f5b4fcba1254fad97edb",
                "text": "I m totally new to spring so forgive me for so little questions,\n\nis config by \"java source code\" create \"config XML file\" in background?\n ",
                "time": "2018-09-19 07:07:32",
                "index": 0,
                "user": "dhruvdthakkar"
            },
            {
                "id": "5ba1ff658909f71f75f6b139",
                "text": "No",
                "time": "2018-09-19 07:48:53",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ba1ff857dca30650321b11d",
                "text": "There is a runtime model of `BeanDefinition`, java config creates instances of such model. For XML, we parse it and create such bean definitions as well",
                "time": "2018-09-19 07:49:25",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5ba2048fb4990c30eed8bb2b",
                "text": "oh okay, thank you! ",
                "time": "2018-09-19 08:10:55",
                "index": 3,
                "user": "dhruvdthakkar"
            }
        ]
    },
    {
        "id": 932,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ce54301d22ba766a2de3c54",
                "text": "Has anyone had luck uploading a file in a multipart request using webflux & webClient? I'm sending \n```\nMultipartBodyBuilder builder = new MultipartBodyBuilder();\nbuilder.asyncPart(\"file\", submission, FilePart.class);  // submission is a Mono<FilePart>\n\nreturn client.post()\n\t\t.uri(\"/submission\")\n\t\t.contentType(MediaType.MULTIPART_FORM_DATA)\n\t\t.syncBody(builder.build())\n\t\t.retrieve()\n\t\t.bodyToMono(String.class);\n```\nbut I get the error `No suitable writer found for part: file`.",
                "time": "2019-05-22 12:39:29",
                "index": 0,
                "user": "olanb7"
            },
            {
                "id": "5ce54386ad024978c60c759f",
                "text": "@olanb7 \n\n`\nprivate void upload(Publisher<String> publisher)\n      throws InterruptedException, ExecutionException, TimeoutException {\n    CompletableFuture<String> f = new CompletableFuture<>();\n\n    MultipartBodyBuilder builder = new MultipartBodyBuilder();\n    builder.asyncPart(\"file\", publisher, String.class).headers(h -> {\n      h.setContentDispositionFormData(\"file\", \"somefile.txt\");\n    });\n\n    WebClient.create().post() //\n        .uri(getURI()) //\n        .body(BodyInserters.fromMultipartData(builder.build())) //\n        .retrieve() //\n        .bodyToMono(String.class) //\n        .subscribe(filename -> {\n          f.complete(filename);\n        });\n\n    String filename = f.get(5, TimeUnit.SECONDS);\n    assertEquals(\"somefile.txt\", filename);\n  }`",
                "time": "2019-05-22 12:41:42",
                "index": 1,
                "user": "arifk2"
            },
            {
                "id": "5ce545c7ecdf942b4c272a9a",
                "text": "Thanks @arifk2! I didn't know we could alter headers on the part like that. I think the key difference here is that you are sending a String, which has can be encoded (using something like https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java) but FilePart does not have an equivalent, and I don't see an easy/stream way to convert it to a bytestream...",
                "time": "2019-05-22 12:51:19",
                "index": 2,
                "user": "olanb7"
            },
            {
                "id": "5ce546dead024978c60c8c73",
                "text": "Actually - I've just moved from FilePart to DataBuffer (which is fine for my usecase) and it's successfully written! Thanks for the help & being a sounding board :)",
                "time": "2019-05-22 12:55:58",
                "index": 3,
                "user": "olanb7"
            },
            {
                "id": "5ce54707ef853135c80387d8",
                "text": "@olanb7 \n\nGreat and welcome.",
                "time": "2019-05-22 12:56:39",
                "index": 4,
                "user": "arifk2"
            }
        ]
    },
    {
        "id": 933,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5e21cabac7647778a5dc932e",
                "text": "Just to double check: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#third-party-library-upgrades\nTomcat 9 is the baseline. Spring boot no longer guarantees to work with older version, right?",
                "time": "2020-01-17 14:54:50",
                "index": 0,
                "user": "NielsDoucet"
            },
            {
                "id": "5e21eca40289c83ba2b49665",
                "text": "System requirements are documented here: https://docs.spring.io/spring-boot/docs/current/reference/html/getting-started.html#getting-started-system-requirements",
                "time": "2020-01-17 17:19:32",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5e21eccc4c1f9679ec026395",
                "text": "That\u2019s for the embedded container though",
                "time": "2020-01-17 17:20:12",
                "index": 2,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 934,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5d25a517f867ec1687e1777c",
                "text": "do I need to do anything to create a new profile, or is adding a `foo/bar.properties` file enough for it to be loaded when setting the active profile to foo?",
                "time": "2019-07-10 08:43:03",
                "index": 0,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d25a602f867ec1687e1803d",
                "text": "@martijnhoekstra please check the documentation. What is this `foo/bar.properties`? Did you mean `application-foo.properties`?",
                "time": "2019-07-10 08:46:58",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5d25a6bff5dd1457425b8ed8",
                "text": "@snicoll I'm trying to hit the ground running on spring boot, so I'm trying to use it without actually understanding how any of this works. I know this is not ideal. I see a folder `/src/main/resources/profiles/` that contains a bunch of folders `profilename` that all contain a file called `database.properties`",
                "time": "2019-07-10 08:50:07",
                "index": 3,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d25a6c7270d2b1bfa6ef28d",
                "text": "or at least, I think the folder name is the profile name",
                "time": "2019-07-10 08:50:15",
                "index": 4,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d25a716acab0914d8e03830",
                "text": "So I wondered if I just add another folder with another `database.properties`, will that get \"picked up\" if I set an active profile with that folder name?",
                "time": "2019-07-10 08:51:34",
                "index": 5,
                "user": "martijnhoekstra"
            },
            {
                "id": "5d25e2d4bea9f357412c8780",
                "text": "@martijnhoekstra Adding a new profile is as simple as specifying it in `spring.profiles.active`.  Spring/Spring Boot will look for property files by convention based on all profile names supplied.",
                "time": "2019-07-10 13:06:28",
                "index": 8,
                "user": "glammr1"
            },
            {
                "id": "5d25e36cacab0914d8e21fbc",
                "text": "In the case outlined above my guess is there is some mechanism (external library/code) interacting with the Spring profiles to automatically look for `profilename`/`database.properties`.  I think it is a good guess that adding another folder named after the new profile containing a new database.properties file will work",
                "time": "2019-07-10 13:09:00",
                "index": 9,
                "user": "glammr1"
            },
            {
                "id": "5d25e4fd58c6811bf9848005",
                "text": "good, I'll experiment a bit",
                "time": "2019-07-10 13:15:41",
                "index": 10,
                "user": "martijnhoekstra"
            }
        ]
    },
    {
        "id": 935,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d23f7bcd0e06b66756ffa01",
                "text": "is the feign fallback factory not able to catch a feign.RetryableException?",
                "time": "2019-07-09 02:11:08",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5d245561f867ec1687d834bc",
                "text": "@chad_d_stud_twitter https://gitter.im/spring-cloud/spring-cloud is a better place to ask Feign questions",
                "time": "2019-07-09 08:50:41",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 936,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5efc2a037ba3965373dcb98c",
                "text": "How Can I ask my service for his current service-instance-id (after succs. registered at eureka)?",
                "time": "2020-07-01 06:15:31",
                "index": 0,
                "user": "ahoehma"
            },
            {
                "id": "5efc2a5ff99e8b38d27370dc",
                "text": "the EurekaClient should have the information",
                "time": "2020-07-01 06:17:03",
                "index": 1,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2a663bcb6a5aa2918b44",
                "text": "you can get it autowired",
                "time": "2020-07-01 06:17:10",
                "index": 2,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2ad7bb149531ede00b07",
                "text": "I tried that ... but the eurekaClient have only \"getInstance/ServiceFor/By...\" etc. but nothing to ask for  the instance-id of myself",
                "time": "2020-07-01 06:19:03",
                "index": 3,
                "user": "ahoehma"
            },
            {
                "id": "5efc2af647fdfd21edf6d727",
                "text": "I ried to use CloudEurekaInstanceConfig.getInstanceId() but this returns only null",
                "time": "2020-07-01 06:19:34",
                "index": 4,
                "user": "ahoehma"
            },
            {
                "id": "5efc2b324eb21134341b5451",
                "text": "InstanceInfo should do it",
                "time": "2020-07-01 06:20:34",
                "index": 5,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2b4954d7862dc4bc7199",
                "text": "Can I autowire this too?",
                "time": "2020-07-01 06:20:57",
                "index": 6,
                "user": "ahoehma"
            },
            {
                "id": "5efc2b5527fbeb24493fb4c7",
                "text": "ApplicationInfoManager provides it",
                "time": "2020-07-01 06:21:09",
                "index": 7,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2b60d65a3b0292be72e0",
                "text": "ahhh ...ok.. cool ... i will try this :D thnks",
                "time": "2020-07-01 06:21:20",
                "index": 8,
                "user": "ahoehma"
            },
            {
                "id": "5efc2c40c3362026a90a6482",
                "text": "EurekaConfigBasedInstanceInfoProvider could also work",
                "time": "2020-07-01 06:25:04",
                "index": 9,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2cf4d65a3b0292be76fc",
                "text": "I have another question: @ConditionalOnAwsCloudEnvironment\n    @Bean\n    public EurekaInstanceConfigBean eurekaInstanceConfig(final InetUtils inetUtils) {\n      LOGGER.info(\"Configure eureka-instance for AWS\");\n      final EurekaInstanceConfigBean b = new EurekaInstanceConfigBean(inetUtils);\n      b.setDataCenterInfo(AmazonInfo.Builder.newBuilder().autoBuild(\"eureka\"));\n      return b;\n    } .... I understand this bean is only created if I'm running in AWS ... but currently it happens also locally. I have no idea why :) Any idea?",
                "time": "2020-07-01 06:28:04",
                "index": 10,
                "user": "ahoehma"
            },
            {
                "id": "5efc2d10405be935cdd29389",
                "text": "i got this from  here: https://cloud.spring.io/spring-cloud-netflix/multi/multi__service_discovery_eureka_clients.html",
                "time": "2020-07-01 06:28:32",
                "index": 11,
                "user": "ahoehma"
            },
            {
                "id": "5efc2e02c3362026a90a6484",
                "text": "https://stackoverflow.com/questions/36485876/spring-cloud-aws-detect-if-running-local",
                "time": "2020-07-01 06:32:34",
                "index": 12,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2e253a0d3931fac4e59a",
                "text": "But this doesnt work :D",
                "time": "2020-07-01 06:33:09",
                "index": 13,
                "user": "ahoehma"
            },
            {
                "id": "5efc2e373baf5366e476cdf1",
                "text": "ah it was the other way around, the guy wanted to detect aws",
                "time": "2020-07-01 06:33:27",
                "index": 14,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2e3e47fdfd21edf6dd02",
                "text": "I annotated a bean with @ConditionalOnAwsCloudEnvironment and the bean will be created even on my local machine",
                "time": "2020-07-01 06:33:34",
                "index": 15,
                "user": "ahoehma"
            },
            {
                "id": "5efc2e45a813c72dcf1e573a",
                "text": "me too :D",
                "time": "2020-07-01 06:33:41",
                "index": 16,
                "user": "ahoehma"
            },
            {
                "id": "5efc2f4e3baf5366e476cdf3",
                "text": "https://github.com/spring-cloud/spring-cloud-aws/blob/master/spring-cloud-aws-context/src/main/java/org/springframework/cloud/aws/context/support/env/AwsCloudEnvironmentCheckUtils.java there is the check",
                "time": "2020-07-01 06:38:06",
                "index": 17,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2f644eb21134341b5453",
                "text": "maybe set a breakpoint there ",
                "time": "2020-07-01 06:38:28",
                "index": 18,
                "user": "pcornelissen"
            },
            {
                "id": "5efc2f87ec4a341beefd0ef1",
                "text": "yes good idea ... for me it seems that this check returns true :D",
                "time": "2020-07-01 06:39:03",
                "index": 19,
                "user": "ahoehma"
            },
            {
                "id": "5efc2fc03bcb6a5aa2918b47",
                "text": "I don\u2019t want to hunt for the source of EC2MetadataUtils, so just step through :-) Don\u2019t forget to download the source jars :-D",
                "time": "2020-07-01 06:40:00",
                "index": 20,
                "user": "pcornelissen"
            }
        ]
    },
    {
        "id": 937,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c32f6a51d1c2c3f9cd41de2",
                "text": "Hi there. I have a question. I'm using SpringWebFlux and I enabled it with @EnableWebFlux annotation, but I got some errors. \nErrors are :  \" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.reactive.config.DelegatingWebFluxConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalStateException: The Java/XML config for Spring MVC and Spring WebFlux cannot both be enabled, e.g. via @EnableWebMvc and @EnableWebFlux, in the same application.\"",
                "time": "2019-01-07 06:50:13",
                "index": 0,
                "user": "Nasibulloh"
            },
            {
                "id": "5c32f6af3cf6c35a84a29d65",
                "text": "How can fix it",
                "time": "2019-01-07 06:50:23",
                "index": 1,
                "user": "Nasibulloh"
            },
            {
                "id": "5c32f6be6370df0b91a11265",
                "text": "I'm using 2.1.1 version of spring",
                "time": "2019-01-07 06:50:38",
                "index": 2,
                "user": "Nasibulloh"
            },
            {
                "id": "5c330ee957c6883f9b76930e",
                "text": "> I enabled it with @EnableWebFlux ",
                "time": "2019-01-07 08:33:44",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5c330f1173360b4d55ceb1d7",
                "text": "You\u2019re not supposed to use that annotation unless you want to take full control over the setup of webflux. It\u2019s the same thing for `@EnableWebMvc` (don\u2019t use it unless you want to take full control)",
                "time": "2019-01-07 08:34:25",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5c330f411d1c2c3f9cd4be2b",
                "text": "@Nasibulloh I assume you got the answers you needed in https://stackoverflow.com/questions/54069614/springwebflux-error-with-enablewebflux-annotation",
                "time": "2019-01-07 08:35:13",
                "index": 5,
                "user": "bclozel"
            },
            {
                "id": "5c330f5826d86e4d563abf0e",
                "text": "Oh, there I am losing my time. Thank you @bclozel ",
                "time": "2019-01-07 08:35:36",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5c330f6d1d1c2c3f9cd4bf90",
                "text": "@Nasibulloh do not cross post, this is a waste of time for everyone",
                "time": "2019-01-07 08:35:57",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5c330f853cf6c35a84a33f1f",
                "text": "@Nasibulloh if you see this message, you probably have Spring MVC on the classpath, even if it's not obvious; maybe some dependency is bringing it without you being aware of that",
                "time": "2019-01-07 08:36:21",
                "index": 8,
                "user": "bclozel"
            },
            {
                "id": "5c3323db26d86e4d563b477e",
                "text": "@bclozel I asked in this url https://stackoverflow.com/questions/54069614/springwebflux-error-with-enablewebflux-annotation ))",
                "time": "2019-01-07 10:03:07",
                "index": 9,
                "user": "Nasibulloh"
            },
            {
                "id": "5c3323e526d86e4d563b4792",
                "text": "It was my question ",
                "time": "2019-01-07 10:03:17",
                "index": 10,
                "user": "Nasibulloh"
            },
            {
                "id": "5c3323faaac7082e6fe897bd",
                "text": "that's why you're asked to not cross-post",
                "time": "2019-01-07 10:03:38",
                "index": 11,
                "user": "62mkv"
            },
            {
                "id": "5c3324263cf6c35a84a3d038",
                "text": "@Nasibulloh I assume the same team is alo monitoring SO so if you have that asked there no point in copying it here",
                "time": "2019-01-07 10:04:22",
                "index": 12,
                "user": "62mkv"
            },
            {
                "id": "5c33244612db9607e74c9201",
                "text": "When I wanted to ask a question I wrote both places stackoverflow and here. Sorry I needed answer faster",
                "time": "2019-01-07 10:04:54",
                "index": 13,
                "user": "Nasibulloh"
            },
            {
                "id": "5c33246126d86e4d563b4a52",
                "text": "have you had it fixed ?",
                "time": "2019-01-07 10:05:21",
                "index": 14,
                "user": "62mkv"
            },
            {
                "id": "5c332461aac7082e6fe89c25",
                "text": "@snicoll  Sorry . I undertood",
                "time": "2019-01-07 10:05:21",
                "index": 15,
                "user": "Nasibulloh"
            },
            {
                "id": "5c33247612db9607e74c92ae",
                "text": "@62mkv yes I have",
                "time": "2019-01-07 10:05:42",
                "index": 16,
                "user": "Nasibulloh"
            }
        ]
    },
    {
        "id": 938,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cd930c6f251e60ffa733021",
                "text": "Hi, \n\nI am trying to deal with the endpoints which are not mapped to the controller in a spring boot application, what's the best way to handle such exception, say return 404 not found with some fancy custom json. Also, by default a json is generated if the path is not found in the context.\n\nI tried few solutions which worked but I am trying to learn the best way to deal with this.",
                "time": "2019-05-13 08:54:30",
                "index": 0,
                "user": "deepakmehra10"
            },
            {
                "id": "5cd9326abdc3b64fcf3a713f",
                "text": "@deepakmehra10 there are many options: https://www.baeldung.com/exception-handling-for-rest-with-spring",
                "time": "2019-05-13 09:01:30",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5cd932875a1d435d4632e579",
                "text": "Could define \"best\" as \"least code that satisfies your requirements\" if you want.",
                "time": "2019-05-13 09:01:59",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5cd938c3e7f42160fa7eddef",
                "text": "I was looking for an out of the box feature for the same, above would also do it :)",
                "time": "2019-05-13 09:28:35",
                "index": 3,
                "user": "deepakmehra10"
            }
        ]
    },
    {
        "id": 939,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5eeb8878b8152d34844d1f9e",
                "text": "Any git repo. with a project which has JMS Listeners ( in / out ) to queues and a multi-module setup. Clean separation of concerns for DDD.",
                "time": "2020-06-18 15:30:00",
                "index": 0,
                "user": "mohanr"
            },
            {
                "id": "5eeb88ad54d7862dc4950017",
                "text": "Everyone use Spring boot but hard to find such examples. Cloud is omnipresent.",
                "time": "2020-06-18 15:30:53",
                "index": 1,
                "user": "mohanr"
            },
            {
                "id": "5eeb8c12a813c72dcff705d3",
                "text": "Sounds like one of the Spring Integration samples?",
                "time": "2020-06-18 15:45:22",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5eeb8c4ae6668d35db08b4c6",
                "text": "https://github.com/spring-projects/spring-integration-samples/tree/master/basic/jms",
                "time": "2020-06-18 15:46:18",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5eec270647fdfd21edd0f754",
                "text": "Yes. Spring Integration adds another complex layer. Ours isn't very complicated at this  stage. I thought a module that has the JMS listener can communicate up through Spring events. Dependencies flow down in our multi-module setup.",
                "time": "2020-06-19 02:46:30",
                "index": 5,
                "user": "mohanr"
            }
        ]
    },
    {
        "id": 940,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5be6ffc047217e07ffff57fc",
                "text": "Hi, \nI have same problem as described here: https://gitter.im/spring-projects/spring-boot?at=5b85400b58a3797aa3ca46b3 and here:\nhttps://stackoverflow.com/questions/51367566/trouble-when-changing-spring-boot-version-from-2-0-3-release-to-2-1-0-build-snap\nWhen I remove the dependency of spring config server there is problem....",
                "time": "2018-11-10 15:56:48",
                "index": 0,
                "user": "BenEfrati"
            },
            {
                "id": "5be6ffdb7a36913a9a1fd07f",
                "text": "`spring-cloud-starter-config`",
                "time": "2018-11-10 15:57:15",
                "index": 1,
                "user": "BenEfrati"
            },
            {
                "id": "5be7039e4e7ca1452084e107",
                "text": "I mean **no problem** without spring cloud",
                "time": "2018-11-10 16:13:18",
                "index": 2,
                "user": "BenEfrati"
            },
            {
                "id": "5be73d689600d10e648d0b46",
                "text": "@BenEfrati Did you upgrade Spring Cloud at the same time? You should be using Spring Cloud Greenwich with Boot 2.1.",
                "time": "2018-11-10 20:19:52",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5be740b1d001b917203dbbd3",
                "text": "@wilkinsona https://gitter.im/spring-cloud/spring-cloud?at=5be7285392b7d117216b1ba8",
                "time": "2018-11-10 20:33:53",
                "index": 4,
                "user": "BenEfrati"
            },
            {
                "id": "5be740ced001b917203dbca5",
                "text": "No, because it still in milestone and not yet RELEASE",
                "time": "2018-11-10 20:34:22",
                "index": 5,
                "user": "BenEfrati"
            },
            {
                "id": "5be741fce0fd6b4360d2a659",
                "text": "But when using Greenwhich it works",
                "time": "2018-11-10 20:39:24",
                "index": 6,
                "user": "BenEfrati"
            }
        ]
    },
    {
        "id": 941,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e143b1df0cf294b19a36a0f",
                "text": "Hello just a curious question, how does one run Reliability testing on Spring Boot built applications?",
                "time": "2020-01-07 08:02:37",
                "index": 0,
                "user": "josephnicholas"
            },
            {
                "id": "5e1443279c13050f1f8a7767",
                "text": "@josephnicholas What do you mean?",
                "time": "2020-01-07 08:36:55",
                "index": 1,
                "user": "kschlesselmann"
            },
            {
                "id": "5e144ca1f6612e1a1967d55e",
                "text": "I\u2019m not really sure really but, I have a task on doing some reliability testing on our Spring based application, but I am quite confused on what does Reliability testing mean in a spring sense",
                "time": "2020-01-07 09:17:21",
                "index": 2,
                "user": "josephnicholas"
            },
            {
                "id": "5e144cb986a9fb1d32e3456a",
                "text": "Is it like doing manual testing or doing automated testing that hopes to break the API?",
                "time": "2020-01-07 09:17:45",
                "index": 3,
                "user": "josephnicholas"
            },
            {
                "id": "5e144d029c13050f1f8abfdd",
                "text": "If you mean load testing: Have a look at gatling for example",
                "time": "2020-01-07 09:18:58",
                "index": 4,
                "user": "kschlesselmann"
            },
            {
                "id": "5e144d830d400c71bcfab847",
                "text": "Thanks @kschlesselmann I will take a look, does load testing also include testing like api endpoint rate limiters?",
                "time": "2020-01-07 09:21:07",
                "index": 5,
                "user": "josephnicholas"
            },
            {
                "id": "5e144dab3dc84a56027c8b19",
                "text": "And .. I know its out of topic, but is it possible to mock DB crashes or disconnection in tests?",
                "time": "2020-01-07 09:21:47",
                "index": 6,
                "user": "josephnicholas"
            },
            {
                "id": "5e144e5e09534142ca23c46d",
                "text": "gatling is an external tool that just calls your API \u2026 it'll use real HTTP calls. So yes.",
                "time": "2020-01-07 09:24:46",
                "index": 7,
                "user": "kschlesselmann"
            }
        ]
    },
    {
        "id": 942,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cdd33a963dea422b48f936e",
                "text": "Hi! I have a small question: is there any way to register a \"Caffeine Cache\" in Spring Actuator? There are more details here:\nhttps://stackoverflow.com/questions/56158365/register-caffeine-cache-in-spring-actuator-cachemanager\nthanks!!!",
                "time": "2019-05-16 09:55:53",
                "index": 0,
                "user": "antmordel"
            },
            {
                "id": "5cdd40e98265145bbb1d0b5d",
                "text": "@antmordel use CacheManager",
                "time": "2019-05-16 10:52:25",
                "index": 4,
                "user": "timbotetsu_twitter"
            },
            {
                "id": "5cdd414bef853135c8cc5abd",
                "text": "@timbotetsu_twitter but `CacheManager` only has methods to get caches, no? I cannot register a new one",
                "time": "2019-05-16 10:54:03",
                "index": 5,
                "user": "antmordel"
            },
            {
                "id": "5cdd41a2879f4478c78a762f",
                "text": "add your custom cache into CacheManager, inject CacheManager and get that cache out for your usage",
                "time": "2019-05-16 10:55:30",
                "index": 6,
                "user": "timbotetsu_twitter"
            },
            {
                "id": "5cdd41cc6366992a94c8e550",
                "text": "https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-caching.html",
                "time": "2019-05-16 10:56:12",
                "index": 7,
                "user": "timbotetsu_twitter"
            },
            {
                "id": "5cdd42759404bf2aed55ffdd",
                "text": "@timbotetsu_twitter thanks!",
                "time": "2019-05-16 10:59:01",
                "index": 8,
                "user": "antmordel"
            }
        ]
    },
    {
        "id": 943,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5ef0aa9054d7862dc4a055eb",
                "text": "Hi all, \nI'm using the graceful shutdown that is included in latest Spring boot version (Spring boot 2.3). \nThe service that I'm currently working on has a background task that runs every 1 minute. I'm facing an issue with this background task on service shutdown: basically the service does not wait for the background task to complete before shutting down. Have you guys experienced the same or similar issue with the SB 2.3 graceful shutdown? ",
                "time": "2020-06-22 12:56:48",
                "index": 0,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef0b4fad65a3b0292a2e45c",
                "text": "A Spring-powered background task, or you're managing the thread yourself?",
                "time": "2020-06-22 13:41:14",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5ef0b5e6bb149531edc3f14f",
                "text": "@ruioliveiraz From what I understand, the graceful shutdown is about request/response handling. The service will not shut down if a client is waiting for a response. For background tasks (say batch job for example) the graceful shutdown will not work. ",
                "time": "2020-06-22 13:45:10",
                "index": 2,
                "user": "akuma8"
            },
            {
                "id": "5ef0b8ac405be935cdb6d68b",
                "text": "Hi @OrangeDog, I'm using Spring Scheduled annotation. ",
                "time": "2020-06-22 13:57:00",
                "index": 3,
                "user": "ruioliveiraz"
            },
            {
                "id": "5ef0ba3ca813c72dcf0278c3",
                "text": "I would've thought the default executor would use non-daemon threads. Or perhaps its bean shutdown hook isn't waiting for completion.",
                "time": "2020-06-22 14:03:40",
                "index": 4,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 944,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d01067f5656e6268b8871a5",
                "text": "hey im using webflux and my app starts just fine (ie `Started FriendsApplication in 4.328 seconds (JVM running for 4.865)`) but when trying to write a webflux test over a controller i get a  `NoSuchBeanDefinitionException`... ",
                "time": "2019-06-12 14:04:47",
                "index": 0,
                "user": "marcguilera"
            },
            {
                "id": "5d01068f049bf9263c5a8a51",
                "text": "test looks like this",
                "time": "2019-06-12 14:05:03",
                "index": 1,
                "user": "marcguilera"
            },
            {
                "id": "5d0106995213b62663712f9f",
                "text": "```\n@WebFluxTest(SignupLegacyController::class)\n@RunWith(SpringRunner::class)\nclass SignUpLegacyControllerTest {\n\n    companion object {\n        private const val URI = \"/signup\"\n        private const val PASSWORD_HEADER_KEY = \"X-PASSWORD\"\n        private const val USERNAME = \"username\"\n        private const val PASSWORD = \"password\"\n    }\n\n    private val USER_URI get() = \"$URI?username=$USERNAME\"\n\n    @Autowired\n    private lateinit var client: WebTestClient\n\n    @MockBean\n    private lateinit var service: MembershipService\n\n    @Test\n    fun `valid credentials return member`() {\n        client\n                .post()\n                .uri(USER_URI)\n                .header(PASSWORD_HEADER_KEY, PASSWORD)\n                .exchange()\n                .expectStatus().isCreated\n                .expectHeader().contentType(MediaType.APPLICATION_JSON)\n                .expectBody().jsonPath(\"$.username\", USERNAME)\n    }\n}\n```",
                "time": "2019-06-12 14:05:13",
                "index": 2,
                "user": "marcguilera"
            },
            {
                "id": "5d0106b6c7a8fc263a0ee26c",
                "text": "And ",
                "time": "2019-06-12 14:05:42",
                "index": 3,
                "user": "marcguilera"
            },
            {
                "id": "5d0106de44ed26263dc4212c",
                "text": "This runs:\n```\n@SpringBootTest\n@RunWith(SpringRunner::class)\nclass FriendsApplicationTest {\n    @Test\n    fun `spring context is able to start`() = Unit\n}\n```\nso it seems like the context is fine... just that controller test isnt. maybe im missing some annotation or something super obvious?\n",
                "time": "2019-06-12 14:06:22",
                "index": 4,
                "user": "marcguilera"
            },
            {
                "id": "5d01073817fefb263b09c96d",
                "text": "What bean hasn't been defined?",
                "time": "2019-06-12 14:07:52",
                "index": 5,
                "user": "wilkinsona"
            },
            {
                "id": "5d01077644ed26263dc427c6",
                "text": "The controller looks like: \n```\npackage com.myapp.spain.friends.legacy;\n\nimport com.myapp.membership.Member;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.*;\nimport reactor.core.publisher.Mono;\n\n@RestController\n@RequestMapping(\"/signup\")\npublic class SignupLegacyController {\n\n  private final SignUpFacade facade;\n\n  public SignupLegacyController(SignUpFacade facade) {\n    this.facade = facade;\n  }\n\n  @PostMapping\n  @ResponseStatus(HttpStatus.CREATED)\n  Mono<Member> signUp(\n      @RequestParam(\"username\") String username,\n      @RequestHeader(\"X-Password\") String password\n  ) {\n    return facade.signUp(username, password);\n  }\n}\n```\nAnd it's complaining about that facade bean which i defined as:\n```\npackage com.myapp.spain.friends.legacy\n\nimport com.myapp.membership.*\nimport org.springframework.http.HttpStatus\nimport org.springframework.stereotype.Component\nimport org.springframework.web.server.ResponseStatusException\nimport reactor.core.publisher.Mono\n\n/**\n * Abstracts away the logic behind the sign up controller.\n */\ninterface SignUpFacade {\n    /**\n     * Signs up a new member in the system.\n     */\n    fun signUp(username: Username, password: Password): Mono<Member>\n}\n\n/**\n * The default implementation of the facade which uses the service\n * to register members.\n */\n@Component\ninternal class DefaultSignUpFacade(\n        private val service: MembershipService\n) : SignUpFacade {\n    override fun signUp(username: Username, password: Password): Mono<Member> = service\n            .createMember(username, password)\n            .onErrorMap(MembershipException::class.java) {\n                ResponseStatusException(HttpStatus.BAD_REQUEST, it.message, it)\n            }\n\n}\n```\n",
                "time": "2019-06-12 14:08:54",
                "index": 6,
                "user": "marcguilera"
            },
            {
                "id": "5d010922c5386926f6d85e6b",
                "text": "That's expected with `@WebFluxTest` which filters out any non-controller beans",
                "time": "2019-06-12 14:16:02",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5d01093bc2e5ba268ce5521f",
                "text": "You'll need to provide a mock for the facade. You can use `@MockBean` for that",
                "time": "2019-06-12 14:16:27",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5d010985c12fd52664f50612",
                "text": "aah",
                "time": "2019-06-12 14:17:41",
                "index": 9,
                "user": "marcguilera"
            },
            {
                "id": "5d01098844ed26263dc436a6",
                "text": "okay",
                "time": "2019-06-12 14:17:44",
                "index": 10,
                "user": "marcguilera"
            },
            {
                "id": "5d0109a2c5386926f6d8636c",
                "text": "so if i wanted to write more integration - like tests?",
                "time": "2019-06-12 14:18:10",
                "index": 11,
                "user": "marcguilera"
            },
            {
                "id": "5d0109f244ed26263dc439e5",
                "text": "what you suggested solves my problem btw :)",
                "time": "2019-06-12 14:19:30",
                "index": 12,
                "user": "marcguilera"
            },
            {
                "id": "5d0109f38655842639e8ab4c",
                "text": "thanks",
                "time": "2019-06-12 14:19:31",
                "index": 13,
                "user": "marcguilera"
            },
            {
                "id": "5d010b8fc5386926f6d873a8",
                "text": "For full integration you probably want `@SpringBootTest`",
                "time": "2019-06-12 14:26:23",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5d010d308655842639e8c825",
                "text": "cool",
                "time": "2019-06-12 14:33:20",
                "index": 15,
                "user": "marcguilera"
            },
            {
                "id": "5d010d345656e6268b88a4a8",
                "text": "thanks",
                "time": "2019-06-12 14:33:24",
                "index": 16,
                "user": "marcguilera"
            }
        ]
    },
    {
        "id": 945,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5eda5d677f08394226cb30aa",
                "text": "Hi eveyone!",
                "time": "2020-06-05 14:57:43",
                "index": 0,
                "user": "kevin-madhu"
            },
            {
                "id": "5eda5d74ff7a920a7233d066",
                "text": "Can someone help me out with some upgrade issues?",
                "time": "2020-06-05 14:57:56",
                "index": 1,
                "user": "kevin-madhu"
            },
            {
                "id": "5eda5d7e2c49c45f5ac4b160",
                "text": "https://gist.github.com/kevin-madhu/d6f0371f7b7af1760be84d9ab4e98a6b",
                "time": "2020-06-05 14:58:06",
                "index": 2,
                "user": "kevin-madhu"
            },
            {
                "id": "5eda5d937da67d06faf3c262",
                "text": "org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.context.event.internalEventListenerProcessor': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationPropertiesBean\n",
                "time": "2020-06-05 14:58:27",
                "index": 3,
                "user": "kevin-madhu"
            },
            {
                "id": "5eda60b689941d051a458643",
                "text": "Any ideas what might be causing this issue? The project is being upgraded from Spring boot 1.4.3 to Spring boot 2.2.6",
                "time": "2020-06-05 15:11:50",
                "index": 4,
                "user": "kevin-madhu"
            },
            {
                "id": "5eda60ca7da67d06faf3cb8d",
                "text": "https://github.com/apache/fineract-cn-template/commit/0f20260dc5d37eff2ecb7e7ca548f6c2b47b5eac",
                "time": "2020-06-05 15:12:10",
                "index": 5,
                "user": "kevin-madhu"
            },
            {
                "id": "5edb3e11a91f120a6ce7e399",
                "text": "@kevin-madhu The commit shows an upgrade to Spring Boot 2.2.6 but stack trace shows you are using Spring Boot 2.0.9. That\u2019s what\u2019s causing the failure as Spring Cloud Hoxton requires Boot 2.2 or 2.3.",
                "time": "2020-06-06 06:56:17",
                "index": 7,
                "user": "wilkinsona"
            },
            {
                "id": "5ede4b514c9b0f060d50ab5f",
                "text": "> @kevin-madhu The commit shows an upgrade to Spring Boot 2.2.6 but stack trace shows you are using Spring Boot 2.0.9. That\u2019s what\u2019s causing the failure as Spring Cloud Hoxton requires Boot 2.2 or 2.3.\n\nThanks :)",
                "time": "2020-06-08 14:29:37",
                "index": 25,
                "user": "kevin-madhu"
            }
        ]
    },
    {
        "id": 946,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cffa3c4d4e3840c696ab14b",
                "text": "Every time our test suite creates a new context it creates a new hikari pool, but the previous test's hikari pool isn't closed so eventually the database runs out of connections. Is there something we're missing please?",
                "time": "2019-06-11 12:51:16",
                "index": 0,
                "user": "molexx"
            },
            {
                "id": "5cffeb0da360c2397d05f3d1",
                "text": "@molexx Test contexts are cached by default. You can disable that using `@DirtiesContext`. You may want to review your test configuration and try and share it between test classes so that they can share a context too.",
                "time": "2019-06-11 17:55:25",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5d016a97c7a8fc263a1212ae",
                "text": "@wilkinsona thanks, will investigate why the test context isn't being reused.",
                "time": "2019-06-12 21:11:51",
                "index": 53,
                "user": "molexx"
            }
        ]
    },
    {
        "id": 947,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5d27c1f8f4fe943971f01051",
                "text": "Hey everyone,\n\nis there any documentation which gives an overview of all the servlet filter registrations handled by spring boot and their order? I'm currently trying to figure out which order my own filter should have and a list of all the other filters with their orders would be really helpful.",
                "time": "2019-07-11 23:10:48",
                "index": 0,
                "user": "larsgrefer"
            },
            {
                "id": "5d2844d8096dec3f019b5363",
                "text": "@larsgrefer we've got this: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-embedded-container-servlets-filters-listeners-beans",
                "time": "2019-07-12 08:29:12",
                "index": 6,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 948,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e28a2c46b64bc54d132ec06",
                "text": "Is there a Slack or is this the main chat for Spring Boot?",
                "time": "2020-01-22 19:30:12",
                "index": 0,
                "user": "djensen47"
            },
            {
                "id": "5e28a354342e1054d066dfa3",
                "text": "I believe this is the official place",
                "time": "2020-01-22 19:32:36",
                "index": 1,
                "user": "mickeelm"
            },
            {
                "id": "5e2956fb42ae383fa9705c3f",
                "text": "@djensen47 this is the community channel for Spring Boot  related questions. We don\u2019t have slack.",
                "time": "2020-01-23 08:19:07",
                "index": 3,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 949,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5cad9152f851ee043d911711",
                "text": "Hi All, I'm using spring boot2 and h2 database, i get the error- >  Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver",
                "time": "2019-04-10 06:46:42",
                "index": 0,
                "user": "ThameemAnsari2200"
            },
            {
                "id": "5cad915925686a7dc306defd",
                "text": "Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]",
                "time": "2019-04-10 06:46:49",
                "index": 1,
                "user": "ThameemAnsari2200"
            },
            {
                "id": "5cad9babbd70a40d5f268e2f",
                "text": "well, do you have the H2 driver as a dependency on your classpath?",
                "time": "2019-04-10 07:30:51",
                "index": 2,
                "user": "tonisostrat"
            },
            {
                "id": "5cada5cabd70a40d5f26dd1b",
                "text": "I think so as well.",
                "time": "2019-04-10 08:14:02",
                "index": 3,
                "user": "lengweijian"
            },
            {
                "id": "5cadab733ebbdc55b391eb05",
                "text": "@tonisostrat @lengweijian My maven h2 dependency:  <dependency>\n\t\t\t<groupId>com.h2database</groupId>\n\t\t\t<artifactId>h2</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>",
                "time": "2019-04-10 08:38:11",
                "index": 4,
                "user": "ThameemAnsari2200"
            },
            {
                "id": "5cadb01e3ebbdc55b3920b23",
                "text": "@ThameemAnsari2200, you're missing the `<version/>` tag. are you using spring's dependency management plugin? is the dependency actually **resolved** and **added to the classpath**?",
                "time": "2019-04-10 08:58:06",
                "index": 5,
                "user": "tonisostrat"
            },
            {
                "id": "5cadb151759abc043c990810",
                "text": "@tonisostrat I'm using springboot and do we still need to mention the <version/>",
                "time": "2019-04-10 09:03:13",
                "index": 6,
                "user": "ThameemAnsari2200"
            },
            {
                "id": "5cadb211bd70a40d5f272fb9",
                "text": "i can't say for sure but add it just in case",
                "time": "2019-04-10 09:06:25",
                "index": 7,
                "user": "tonisostrat"
            },
            {
                "id": "5cadb332c55bd14d35bdf1a7",
                "text": "ok",
                "time": "2019-04-10 09:11:14",
                "index": 8,
                "user": "ThameemAnsari2200"
            }
        ]
    },
    {
        "id": 950,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ddda49b05eec2433d889589",
                "text": "I am getting this at runtime when trying to migrate from 1.5.22 to 2.0.9 . Anyone seen this before? \n`Caused by: java.io.FileNotFoundException: class path resource [org/springframework/boot/autoconfigure/PropertyPlaceholderAutoConfiguration.class] cannot be opened because it does not exist`",
                "time": "2019-11-26 22:18:03",
                "index": 0,
                "user": "gagekehoe"
            },
            {
                "id": "5dde361b8e906a1c8d25f7ec",
                "text": "@gagekehoe you most likely have incompatible versions on the classpath. Perhaps a version of Spring Cloud that should be upgraded first?",
                "time": "2019-11-27 08:38:51",
                "index": 6,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 951,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e15f86609534142ca2fd601",
                "text": "Hi all, I don't know if this is the correct channel or if we should ask in a spring-scurity related channel but because we are dealing with spring boot we will try it here first!\nWe are currently trying to secure our Spring Boot 2.0.9 service with Spring Security. \nWe have a REST API running behind '/api' which should be protected by OAuth.\nWe have a little UI running behind '/ui' which should be protected by basic auth.\nWe have the actuator endpoints enabled and running behind '/admin' which should as well be protected by basic auth (but through another user).\nTherefore we are currently trying to configure/implement all the different parts to be playing together but we don't completely understand how to do it.\nWe read https://spring.io/guides/topicals/spring-security-architecture/\nWe read https://docs.spring.io/spring-security-oauth2-boot/docs/2.0.9.RELEASE/reference/html/\nWe read https://docs.spring.io/spring-boot/docs/2.0.9.RELEASE/reference/html/boot-features-security.html\nWe read https://docs.spring.io/spring-boot/docs/2.0.9.RELEASE/reference/html/production-ready-endpoints.html#production-ready-endpoints-security\nBut we still don't understand completely what we do need to do on our own if we want to bring all the parts together. For example, the moment we are extending a ResourceServerConfigurerAdapter or a WebSecurityConfigurerAdapter it looks like the defaults are gone.\nTherefore it would be really nice if someone could give us a hint or point us to a tutorial/guide/example which explains how to handle such a use case.\n",
                "time": "2020-01-08 15:42:30",
                "index": 0,
                "user": "ingogriebsch"
            },
            {
                "id": "5e160352a74ac8537774f675",
                "text": "Yes, as with most things in Boot, if you define your own then the automatic stuff backs off",
                "time": "2020-01-08 16:29:06",
                "index": 1,
                "user": "OrangeDog"
            },
            {
                "id": "5e16042d3679536f962ebdbe",
                "text": "You probably want multiple `WebSecurityConfigurerAdapter`, at one with `http.antMatcher(\"/api/**\")` and one with `http.antMatcher(\"/**\")`. The \"through another user\" is done by e.g. assigning roles to users and using `.authorizeRequests().antMatchers(\"/admin/**\").hasRole(\"ADMIN\")`.",
                "time": "2020-01-08 16:32:45",
                "index": 2,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 952,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5ca374218148e555b237f53c",
                "text": "Does spring boot have some framework to support dynamic plugins ? We do have frameworks like equinox which brings in osgi . But what are the pro's and con's with respect to using them in springboot ? Were there any examples coming from spring-boot ? Were there any larger implementations based on dynamic plugins using springboot?",
                "time": "2019-04-02 14:39:29",
                "index": 0,
                "user": "devicharan"
            },
            {
                "id": "5ca374fdb34ccd69e75204fe",
                "text": "take a look at Spring's own `[ID]AutoConfiguration` classes and Java's `ServiceLoader`",
                "time": "2019-04-02 14:43:09",
                "index": 1,
                "user": "tonisostrat"
            },
            {
                "id": "5ca37c6925686a7dc3c31b56",
                "text": "Thank you . Let me have a look.",
                "time": "2019-04-02 15:14:49",
                "index": 2,
                "user": "devicharan"
            }
        ]
    },
    {
        "id": 953,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5d44471526e273244603174a",
                "text": "Hello, I have a question regarding spring kafka.. I have topic with 3 partitions and 2 consumers (app nodes, different client-id) withing 1 group. Problem is that 3rd partition is not being assigned to any of consumers. Any idea why this happens? (spring boot 2.0.9)",
                "time": "2019-08-02 14:22:13",
                "index": 0,
                "user": "bossqone"
            },
            {
                "id": "5d445233a96def4751a58c2c",
                "text": "@bossqone check if the 3rd partition has a leader available",
                "time": "2019-08-02 15:09:39",
                "index": 2,
                "user": "xsreality"
            },
            {
                "id": "5d44531de939ab2447e38bee",
                "text": "@xsreality I can see this:\n```\npartition 0, leader 1, replicas: 1,3,2, isrs: 2,3,1\npartition 1, leader 2, replicas: 2,1,3, isrs: 2,3,1\npartition 2, leader 3, replicas: 3,2,1, isrs: 2,3,1\n```\n",
                "time": "2019-08-02 15:13:33",
                "index": 3,
                "user": "bossqone"
            },
            {
                "id": "5d4453b2ee80d76164d70144",
                "text": "looks good. You can try consuming using kafka-console-consumer.sh to check if the problem is in spring-kafka or kafka itself.",
                "time": "2019-08-02 15:16:02",
                "index": 4,
                "user": "xsreality"
            },
            {
                "id": "5d445f5845da450fec936534",
                "text": "@xsreality thanks for tip with kafka cli tools.. I've found it.. problem was that our DEV environment was misconfigured and was using INT environment kafka broker. Clients on DEV and INT environment has same group id configured, therefore 4 consumers were connected in group, not 2 as I was expecting. `kafka-consumer-groups.sh --bootstrap-server broker:9092 --describe --group my-group --members -verbose` was helpful.. thanks anyway",
                "time": "2019-08-02 16:05:44",
                "index": 6,
                "user": "bossqone"
            },
            {
                "id": "5d44634641d5cd61b5a07105",
                "text": "great!",
                "time": "2019-08-02 16:22:30",
                "index": 7,
                "user": "xsreality"
            }
        ]
    },
    {
        "id": 954,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5dd66288b010e622764318cc",
                "text": "Hello, can anyone assist me with sample codes for a spring email application which only listens to activities?",
                "time": "2019-11-21 10:10:16",
                "index": 0,
                "user": "samuelbartels20"
            },
            {
                "id": "5dd66de3986060548951f95e",
                "text": "@samuelbartels20 What do you mean by \"listens to activities\"?",
                "time": "2019-11-21 10:58:43",
                "index": 3,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 955,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5c337e335ec8fe5a85177459",
                "text": "At my day job we do header based api versioning...is there a way you guys suggest we do this using plain spring boot?",
                "time": "2019-01-07 16:28:35",
                "index": 0,
                "user": "chtompki"
            },
            {
                "id": "5c337e4d73360b4d55d19700",
                "text": "REST* api",
                "time": "2019-01-07 16:29:01",
                "index": 1,
                "user": "chtompki"
            },
            {
                "id": "5c337ece82a6c30b909c73a4",
                "text": "Using `@RestController`",
                "time": "2019-01-07 16:31:10",
                "index": 2,
                "user": "chtompki"
            },
            {
                "id": "5c3385793cf6c35a84a64dad",
                "text": "in your `@RestController`\u2019s mappings (i.e. `@GetMapping` /  `@PostMapping` /etc) you use the `produces` / `consumes` attributes to handle content negotiation ",
                "time": "2019-01-07 16:59:37",
                "index": 3,
                "user": "edeandrea"
            },
            {
                "id": "5c33859d26d86e4d563dc15a",
                "text": "So if the version is on the `Accept` / `Content-Type` header you\u2019d match it that way",
                "time": "2019-01-07 17:00:13",
                "index": 4,
                "user": "edeandrea"
            },
            {
                "id": "5c33860f57c6883f9b799800",
                "text": "i.e. like\n\n```java\n@RestController\n@RequestMapping(\u201c/someApi\u201d)\npublic class SomeApi {\n  @GetMapping(path = \u201c/somePath\u201d, produces = \u201capplication/vnd.mycompany.myapp.myresource.v1+json\u201d)\n  public SomeV1Object getV1() {\n    // Do whatever for v1\n  }\n\n  @GetMapping(path = \u201c/somePath\u201d, produces = \u201capplication/vnd.mycompany.myapp.myresource.v2+json\u201d)\n  public SomeV2Object getV2() {\n    // Do whatever for v2\n  }\n}\n```",
                "time": "2019-01-07 17:02:07",
                "index": 5,
                "user": "edeandrea"
            },
            {
                "id": "5c339bf9aac7082e6febbb17",
                "text": "Makes sense to me, just wanted to get that from you guys so I can take a quote back to my colleagues ",
                "time": "2019-01-07 18:35:37",
                "index": 6,
                "user": "chtompki"
            },
            {
                "id": "5c339c035ec8fe5a851844f1",
                "text": "Many thanks",
                "time": "2019-01-07 18:35:47",
                "index": 7,
                "user": "chtompki"
            },
            {
                "id": "5c339c8673360b4d55d26349",
                "text": "you\u2019re very welcome",
                "time": "2019-01-07 18:37:58",
                "index": 8,
                "user": "edeandrea"
            }
        ]
    },
    {
        "id": 956,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ca62f57a84e0c501ad6c608",
                "text": "i am facing issue with spring boot azure service buss",
                "time": "2019-04-04 16:22:47",
                "index": 0,
                "user": "vyasamit"
            },
            {
                "id": "5ca62f59b34ccd69e7644376",
                "text": "Failed to bind properties under 'azure.servicebus.subscription-receive-mode' to com.microsoft.azure.servicebus.ReceiveMode:\n\n    Property: azure.servicebus.subscription-receive-mode\n    Value: PEEKLOCK\n    Origin: class path resource [application.properties]:7:44\n    Reason: 0",
                "time": "2019-04-04 16:22:49",
                "index": 1,
                "user": "vyasamit"
            },
            {
                "id": "5ca62f6d7ecbdc29cafc8e28",
                "text": "any idea",
                "time": "2019-04-04 16:23:09",
                "index": 2,
                "user": "vyasamit"
            },
            {
                "id": "5ca62f7d0aad6350192a0217",
                "text": "<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.0.6.RELEASE</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>",
                "time": "2019-04-04 16:23:25",
                "index": 3,
                "user": "vyasamit"
            },
            {
                "id": "5ca62f870aad6350192a0287",
                "text": "<properties>\n\t\t<java.version>1.8</java.version>\n\t\t<azure.version>2.0.5</azure.version>\n\t</properties>",
                "time": "2019-04-04 16:23:35",
                "index": 4,
                "user": "vyasamit"
            },
            {
                "id": "5ca62f96c55bd14d358aedd8",
                "text": "\t<dependency>\n\t\t\t<groupId>com.microsoft.azure</groupId>\n\t\t\t<artifactId>azure-servicebus-spring-boot-starter</artifactId>\n\t\t</dependency>",
                "time": "2019-04-04 16:23:50",
                "index": 5,
                "user": "vyasamit"
            },
            {
                "id": "5ca6303ab22d2c592cdfcdb3",
                "text": " @vyasamit ..  can you share exact exception message ? ",
                "time": "2019-04-04 16:26:34",
                "index": 6,
                "user": "anumalasri"
            },
            {
                "id": "5ca6305d8148e555b24b0b5f",
                "text": "APPLICATION FAILED TO START\n***************************\n\nDescription:\n\nFailed to bind properties under 'azure.servicebus.subscription-receive-mode' to com.microsoft.azure.servicebus.ReceiveMode:\n\n    Property: azure.servicebus.subscription-receive-mode\n    Value: PEEKLOCK\n    Origin: class path resource [application.properties]:7:44\n    Reason: 0\n\nAction:\n\nUpdate your application's configuration\n",
                "time": "2019-04-04 16:27:09",
                "index": 7,
                "user": "vyasamit"
            },
            {
                "id": "5ca6306fb34ccd69e76449e1",
                "text": "this is exact error message",
                "time": "2019-04-04 16:27:27",
                "index": 8,
                "user": "vyasamit"
            },
            {
                "id": "5ca6312f7915365fc557bbe3",
                "text": "Azure spring boot starters are managed by Microsoft and they are still making enhancements... I  could suggest to use latest versions of Azure Spring dependencies. \n\nTry with Azure Spring Boot starter v2.1.2+.   ",
                "time": "2019-04-04 16:30:39",
                "index": 9,
                "user": "anumalasri"
            },
            {
                "id": "5ca63177b22d2c592cdfcdb6",
                "text": "Also try to override Azure Service Bus verison\ndependency \"com.microsoft.azure:azure-servicebus:1.2.8\"",
                "time": "2019-04-04 16:31:51",
                "index": 10,
                "user": "anumalasri"
            },
            {
                "id": "5ca63183a0790b29c95f5e94",
                "text": "spring boot parent 2.0.6.RELEASE needs to be changed or that can remain same",
                "time": "2019-04-04 16:32:03",
                "index": 11,
                "user": "vyasamit"
            },
            {
                "id": "5ca631f151a27101eb79fae7",
                "text": "Azure defined Spring Boot dependency as 2.1.0.RELEASE \nhttps://mvnrepository.com/artifact/com.microsoft.azure/azure-spring-boot-starter/2.1.6\n",
                "time": "2019-04-04 16:33:53",
                "index": 12,
                "user": "anumalasri"
            },
            {
                "id": "5ca63202ef19d564e9cbc7c8",
                "text": "https://mvnrepository.com/artifact/com.microsoft.azure/azure-spring-boot-starter/2.1.2",
                "time": "2019-04-04 16:34:10",
                "index": 13,
                "user": "anumalasri"
            },
            {
                "id": "5ca63218f851ee043d5faacc",
                "text": "thanks trying ",
                "time": "2019-04-04 16:34:32",
                "index": 14,
                "user": "vyasamit"
            },
            {
                "id": "5ca634d5016a930a45622b82",
                "text": "still same...i think it is basic think which is broken...",
                "time": "2019-04-04 16:46:13",
                "index": 15,
                "user": "vyasamit"
            },
            {
                "id": "5ca636174319ef5537544bb7",
                "text": "do you have any sample project to share ? ",
                "time": "2019-04-04 16:51:35",
                "index": 16,
                "user": "anumalasri"
            },
            {
                "id": "5ca6393331aec969e85093f7",
                "text": "let me add to github",
                "time": "2019-04-04 17:04:51",
                "index": 17,
                "user": "vyasamit"
            }
        ]
    },
    {
        "id": 957,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5e0a1caefd580457e79884bb",
                "text": "Hi, I've been playing around with records (https://openjdk.java.net/jeps/359).  Looks like they work quite well out of the box. I must say that I was surprised that they work with SpEL - `${point.x}` works no matter that the generated accessorors do not follow the Java Beans convention. For example it is `point.x()` not `point.getX(). I didn't investigated if it really works as expected calling the accessor (`point.x()`) or just reads the private value. \n\nRecords seems like quite well suitable to be used as `@ConfigurationProperties`. I've tested that as well and found two issues with it. Records are immutable so using `@ConstructorBinding`seems like redundant - how to initialize a record if not using the constructor? I guess there might be some edge cases so even if `@ConstructorBinding`is not implied for records an alias annotation may do the trick (similarly to the way `@RestController` implies `@ResponseBody`). \n\nThe second issue is related to the fact records are implemented as final classes and `@Validated`does not work with final classes. If you annotate a class with `@Validated` Spring will try to advice it with `MethodValidationInterceptor`, but this fails for final classes, exception is thrown and the application fails to initialize.  `ConfigurationPropertiesBinder` uses `@Validated`as marker interface and I don't think the `MethodValidationInterceptor` is really needed in order for the validation of  `@ConfigurationProperties`to work. So maybe we can have a second annotation that marks that the configuration properties class should be validated without triggering any advice creation.\n\np.s. I'm not sure if this is the right place for discussions like this one.",
                "time": "2019-12-30 15:50:06",
                "index": 0,
                "user": "plamentotev"
            },
            {
                "id": "5e0a1f5807a1a67d1d839fbf",
                "text": "@plamentotev thanks for trying. It\u2019s a bit early but we\u2019ll investigate records when time permits. Having a way to avoid `@ConstructorBinding` for both records and Kotlin data class has already been discussed. ",
                "time": "2019-12-30 16:01:28",
                "index": 1,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 958,
        "project": "spring-boot",
        "intention": "general_information",
        "messages": [
            {
                "id": "5e26caed6b64bc54d125d079",
                "text": "Hi, I want to run multiple short-lived java applications in isolation.",
                "time": "2020-01-21 09:57:01",
                "index": 0,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cb0f364db33faa08218a",
                "text": "is there any particular framework / approach I should follow ?",
                "time": "2020-01-21 09:57:35",
                "index": 1,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cbe8075a19397cde4447",
                "text": "@himanshushukla254 what kind of isolation do you prefer? maybe Docker?",
                "time": "2020-01-21 10:01:12",
                "index": 3,
                "user": "bvn13"
            },
            {
                "id": "5e26cc213fd0cc7cfe0d2010",
                "text": "@bvn13 - no, they are very small applications.  Dockerizing them requires a lot of time and effort",
                "time": "2020-01-21 10:02:09",
                "index": 4,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cc61075a19397cde4767",
                "text": "they are like health monitors which were running based on cron. Now, we are migrating them to QuartzScheduler but i can see a lot of logging issue. ",
                "time": "2020-01-21 10:03:13",
                "index": 5,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cc89b674071d4ecd3494",
                "text": "Since each file is configuring their own log4j and DomConfigurator/ PropertyConfigurator changing the whole log tree structur.",
                "time": "2020-01-21 10:03:53",
                "index": 6,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cc99fdee3c74f553bd01",
                "text": "at first level, logger isolation is also enough",
                "time": "2020-01-21 10:04:09",
                "index": 7,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cd32075a19397cde4f4f",
                "text": "@himanshushukla254 Do you place your applications into one jar? If not you could adjust logging into separated folders.",
                "time": "2020-01-21 10:06:42",
                "index": 8,
                "user": "bvn13"
            },
            {
                "id": "5e26ce4b075a19397cde561e",
                "text": "@bvn13 There are multiple jar files, we are loading the application classes using dynamic class loader.  however, there can be a jar from where we are loading more than one classes",
                "time": "2020-01-21 10:11:23",
                "index": 9,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26cf27fdee3c74f553ccdd",
                "text": "@himanshushukla254 did you try to use different FileAppenders for your applications?",
                "time": "2020-01-21 10:15:03",
                "index": 10,
                "user": "bvn13"
            },
            {
                "id": "5e26d1079797b560f2c3a117",
                "text": "@bvn13  yes, i tried it. There are some places where we are using DOMConfigurator also and as per my understanding it changes the whole log tree.",
                "time": "2020-01-21 10:23:03",
                "index": 11,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26d11d364db33faa084e93",
                "text": "and because of this, application logs are getting messed up.",
                "time": "2020-01-21 10:23:25",
                "index": 12,
                "user": "himanshushukla254"
            },
            {
                "id": "5e26d213342e1054d059accc",
                "text": "@bvn13  if i am configuring the property other files, the main logger is also getting changed to the new property i added.",
                "time": "2020-01-21 10:27:31",
                "index": 13,
                "user": "himanshushukla254"
            }
        ]
    },
    {
        "id": 959,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5dd13b1f68ad1c4a0fe11aa2",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/UDZw/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/UDZw/image.png)",
                "time": "2019-11-17 12:20:47",
                "index": 0,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b2852b73c7cb2338c3b",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/tQoR/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/tQoR/image.png)",
                "time": "2019-11-17 12:20:56",
                "index": 1,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b30fd6fe41fc09dde5e",
                "text": "Hi",
                "time": "2019-11-17 12:21:04",
                "index": 2,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b3beeb63e1a83cc4d3e",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/iBWc/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/iBWc/image.png)",
                "time": "2019-11-17 12:21:15",
                "index": 3,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b506ba2347d2dad19e9",
                "text": "My angular request is failing at 404",
                "time": "2019-11-17 12:21:36",
                "index": 4,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b5aea7d147cb395ed74",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/KCTc/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/KCTc/image.png)",
                "time": "2019-11-17 12:21:46",
                "index": 5,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b666ba2347d2dad1a86",
                "text": "withe 404 CORS",
                "time": "2019-11-17 12:21:58",
                "index": 6,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b70fd6fe41fc09ddedf",
                "text": "what should I do at server",
                "time": "2019-11-17 12:22:08",
                "index": 7,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b8335889012b1243d89",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/49lo/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/49lo/image.png)",
                "time": "2019-11-17 12:22:27",
                "index": 8,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13b9fe75b2d5a19eb2913",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/B783/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/B783/image.png)",
                "time": "2019-11-17 12:22:55",
                "index": 9,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13bd05eb2e813db3e5dd4",
                "text": "My security right now is basic ",
                "time": "2019-11-17 12:23:44",
                "index": 10,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13bd06ba2347d2dad1c6c",
                "text": "@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\t@Override\n\tprotected void configure(HttpSecurity http) throws Exception {\n\t\thttp.csrf().disable();\n\t\t// http.authorizeRequests().antMatchers(\"/\").permitAll();\n\t}\n}\n",
                "time": "2019-11-17 12:23:44",
                "index": 11,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd13fe1eeb63e1a83cc7252",
                "text": "404 has no business with security ",
                "time": "2019-11-17 12:41:05",
                "index": 12,
                "user": "LiinNs"
            },
            {
                "id": "5dd14e95ca778c1fbf1c71d2",
                "text": "i got it resolved",
                "time": "2019-11-17 13:43:49",
                "index": 13,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd14e9d68ad1c4a0fe1ad5b",
                "text": "configure  proxy at angular",
                "time": "2019-11-17 13:43:57",
                "index": 14,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd14ec04adf071a8446cdf6",
                "text": "angular needed a root  path so I had to add a root path to the controller to get it wporking",
                "time": "2019-11-17 13:44:32",
                "index": 15,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd14edceeb63e1a83cce090",
                "text": "works like a charm",
                "time": "2019-11-17 13:45:00",
                "index": 16,
                "user": "DoraRajappan"
            },
            {
                "id": "5dd14ee550010612b2d4fb78",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/HMn1/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/HMn1/image.png)",
                "time": "2019-11-17 13:45:09",
                "index": 17,
                "user": "DoraRajappan"
            }
        ]
    },
    {
        "id": 960,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bfdbea5f59704348e141022",
                "text": "Hey all, apologies if this is the wrong place to ask but does anyone know if it's possible to configure WebFlux to use Gson has the HttpMessageConverter for rest controllers? I've been banging my head against a wall for a while with this.",
                "time": "2018-11-27 22:01:09",
                "index": 0,
                "user": "jeethridge"
            },
            {
                "id": "5bfe46ebd24f9324d266175e",
                "text": "@jeethridge There's no support for GSON with WebFlux. My understanding is that is because it doesn't support streaming JSON in a non-blocking manner",
                "time": "2018-11-28 07:42:35",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5bfea290958fc53895025e94",
                "text": "@wilkinsona Thanks for the heads up -- a bit of a bummer but at least now I know not to waste more time looking for a way to configure it!",
                "time": "2018-11-28 14:13:36",
                "index": 7,
                "user": "jeethridge"
            }
        ]
    },
    {
        "id": 961,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5ec4e9bab8869e38c49c7992",
                "text": "Hey, I was upgrading one of our applications (2.2.6->2.3.0) containing hibernate + hibernate-search and I hit a wall. Any idea how I can get more information what is happening / missing? \n\nWith 2.2.6 everything is working and the application starts and works as expected.. \n\n```log\n\n<7> 2020-05-20 10:10:34.683 DEBUG 18135 --- [  restartedMain] o.h.s.b.impl.lucene.SyncWorkProcessor    : HSEARCH000230: Starting sync consumer thread for index 'xxx.backend.entities.Question'\n<7> 2020-05-20 10:10:34.683 DEBUG 18135 --- [  restartedMain] o.h.s.b.impl.lucene.WorkspaceHolder      : HSEARCH000235: Backend for index 'xxx.backend.entities.Question' started: using a Synchronous batching backend.\n<7> 2020-05-20 10:10:34.746 DEBUG 18135 --- [  restartedMain] o.h.s.i.i.LuceneEmbeddedIndexFamilyImpl  : Setting Lucene compatibility to Version 5.5.5\n<7> 2020-05-20 10:10:34.760 DEBUG 18135 --- [  restartedMain] o.h.s.e.m.i.AnnotationMetadataProvider   : Found JPA id and using it as document id\n<7> 2020-05-20 10:10:34.764 DEBUG 18135 --- [  restartedMain] o.h.s.e.m.i.AnnotationMetadataProvider   : Found JPA id and using it as document id\n<7> 2020-05-20 10:10:34.766 DEBUG 18135 --- [  restartedMain] o.s.orm.hibernate5.SpringBeanContainer   : Falling back to Hibernate's default producer after bean creation failure for class xxx.backend.search.ByteArrayFieldBridge: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'xxx.backend.search.ByteArrayFieldBridge' available\n<7> 2020-05-20 10:10:34.774 DEBUG 18135 --- [  restartedMain] o.h.s.e.s.DocumentBuilderIndexedEntity   : Field selection in projections is set to true for entity xxx.backend.entities.Question.\n<7> 2020-05-20 10:10:34.776 TRACE 18135 --- [  restartedMain] o.h.search.spi.SearchIntegratorBuilder   : Dirty checking optimizations disabled for class class xxx.backend.entities.Question\n...\n\n```\n\nWith 2.3.0 the application stays for multiple minutes at this log lines.. until I kill the process.\n\n```log\n<7> 2020-05-20 10:13:39.710 DEBUG 18503 --- [         task-1] o.h.s.b.impl.lucene.WorkspaceFactory     : Starting workspace for index xxx.backend.entities.Question using an exclusive index strategy\n<7> 2020-05-20 10:13:39.715 DEBUG 18503 --- [         task-1] o.h.s.b.impl.lucene.SyncWorkProcessor    : HSEARCH000230: Starting sync consumer thread for index 'xxx.backend.entities.Question'\n<7> 2020-05-20 10:13:39.715 DEBUG 18503 --- [         task-1] o.h.s.b.impl.lucene.WorkspaceHolder      : HSEARCH000235: Backend for index 'xxx.backend.entities.Question' started: using a Synchronous batching backend.\n<7> 2020-05-20 10:13:39.766 DEBUG 18503 --- [         task-1] o.h.s.i.i.LuceneEmbeddedIndexFamilyImpl  : Setting Lucene compatibility to Version 5.5.5\n<7> 2020-05-20 10:13:39.777 DEBUG 18503 --- [         task-1] o.h.s.e.m.i.AnnotationMetadataProvider   : Found JPA id and using it as document id\n<7> 2020-05-20 10:13:39.781 DEBUG 18503 --- [         task-1] o.h.s.e.m.i.AnnotationMetadataProvider   : Found JPA id and using it as document id\n\n```\n\nLogging Level is already at trace. \"Fixing\" the NoSuchBeanDefinitionException sadly did not do the trick. \n",
                "time": "2020-05-20 08:26:34",
                "index": 0,
                "user": "knoobie"
            },
            {
                "id": "5ec4ed0e3854713815bd530c",
                "text": "@knoobie Can you take a thread-dump when it appears to be stuck?",
                "time": "2020-05-20 08:40:46",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5ec500559832dd6f0463537e",
                "text": "@wilkinsona created https://github.com/spring-projects/spring-boot/issues/21516 with thread dump and example code to reproduce it",
                "time": "2020-05-20 10:03:01",
                "index": 4,
                "user": "knoobie"
            }
        ]
    },
    {
        "id": 962,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5cf8b86f67b5d147b75ac481",
                "text": "Hi all, i need a help..i am trying to use a custom `FailureAnalyzer`, but it\u2019s not getting invoked. Sample Repo: https://github.com/nnanda2016/springboot2-executable-jar-demo.git \n\nAm I doing something wrong?",
                "time": "2019-06-06 06:53:35",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5cf8b8ae3d46b639437a5c9d",
                "text": "basically i wanted to capture app failure and take some action (log the details, send the failure details to another system)",
                "time": "2019-06-06 06:54:38",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5cf8b96af31ba302588e453b",
                "text": "in this sample, i am inducing a `RuntimeException` in the class `DemoAppConfig`. This would cause `BeanCreationException`. ",
                "time": "2019-06-06 06:57:46",
                "index": 2,
                "user": "nnanda2016"
            },
            {
                "id": "5cf8f0636f530d3b6146fb69",
                "text": "@nnanda2016 It looks like it's working to me. The analysis appears in `spring.log`:\n\n```\n2019-06-06T11:49:13.715|main|ERROR|org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter#report \n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nSample description\n\nAction:\n\nSample action\n```",
                "time": "2019-06-06 10:52:19",
                "index": 8,
                "user": "wilkinsona"
            },
            {
                "id": "5cf8f07df3a60a79a4627073",
                "text": "And I can see the analyser's log message in `demo-app.log`",
                "time": "2019-06-06 10:52:45",
                "index": 9,
                "user": "wilkinsona"
            },
            {
                "id": "5cf943e382e5c67322288509",
                "text": "[demo-app.log](https://files.gitter.im/spring-projects/spring-boot/bGYY/demo-app.log)",
                "time": "2019-06-06 16:48:35",
                "index": 14,
                "user": "nnanda2016"
            },
            {
                "id": "5cf943e382e5c6732228850a",
                "text": "[spring.log](https://files.gitter.im/spring-projects/spring-boot/bGYY/spring.log)",
                "time": "2019-06-06 16:48:35",
                "index": 15,
                "user": "nnanda2016"
            },
            {
                "id": "5cf943e5883451632476417f",
                "text": "@wilkinsona i am not able to see when I run in my system. Do I need to enable some config? I ran the code with command `<jar> start` and these are the logs.\n",
                "time": "2019-06-06 16:48:37",
                "index": 16,
                "user": "nnanda2016"
            },
            {
                "id": "5cf952a63dcdab4003fee2a2",
                "text": "I ran it in my IDE and the failure analysis occurred. I just tried with java -jar and it occurred then too. However, it doesn't occur when I launch it as an executable so I'd guess there's a problem with your custom launch script",
                "time": "2019-06-06 17:51:34",
                "index": 17,
                "user": "wilkinsona"
            },
            {
                "id": "5cf9778088345163247641fa",
                "text": "@wilkinsona i found the issue, it\u2019s not the launch script\u2026i was able to reproduce the issue in IDE by running that java class . If I add `-Dlog4j.shutdownHookEnabled=false` it does not print those analyzer log lines\u2026looks like Log4J2 is shutdown before analyzer completes its analysis ",
                "time": "2019-06-06 20:28:48",
                "index": 22,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 963,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5c935d8149fdaa0d81ee96f7",
                "text": "hi there. is there a documentation on how to change an application property via an actuator enpoint? retrieval is documented, but I cannot find how to change a value. ",
                "time": "2019-03-21 09:46:41",
                "index": 0,
                "user": "molk"
            },
            {
                "id": "5c9362a352c7a91455cea6c2",
                "text": "@molk I'm not sure you can do that. AFAIK cloud config can change properties on the fly (with @RefreshScope)",
                "time": "2019-03-21 10:08:35",
                "index": 1,
                "user": "TomRauchenwald"
            },
            {
                "id": "5c93631edfc69a1454cdb7aa",
                "text": "@TomRauchenwald Yeah \u2026 that's correct I think. I tried this once using some library that didn't support `@RefreshScope` in its `@ConfigurationProperties` and there was no success in changeing it at runtime :-(",
                "time": "2019-03-21 10:10:38",
                "index": 2,
                "user": "kschlesselmann"
            },
            {
                "id": "5c93650c2fb6800d80571bef",
                "text": "so I need an application restart if I do not have cloud config available?",
                "time": "2019-03-21 10:18:52",
                "index": 3,
                "user": "molk"
            },
            {
                "id": "5c936eafd0133e21e5ee5c1b",
                "text": "if your bean.property is annotated by @RefreshScope (or bean, not sure) it should renew value, some time ago i tryed this case just for fun and it had work correctly",
                "time": "2019-03-21 10:59:59",
                "index": 4,
                "user": "brrshh"
            }
        ]
    },
    {
        "id": 964,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5e861c59b6bdcf0c5ecb1662",
                "text": "Hi, is there any API to get protocol scheme (HTTP/HTTPS) from Spring WebFlux `ServerRequest` object?",
                "time": "2020-04-02 17:09:45",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5e86c9cb81a582042e969ce3",
                "text": "@nnanda2016 Probably you can use ServerHttpRequest from reactive package",
                "time": "2020-04-03 05:29:47",
                "index": 6,
                "user": "marcinsobejko"
            },
            {
                "id": "5e86ca2a5ad4dd068674119c",
                "text": "You can pass it as argumrnt in your Controller method",
                "time": "2020-04-03 05:31:22",
                "index": 7,
                "user": "marcinsobejko"
            },
            {
                "id": "5e86e60c26dafb36651ebfd1",
                "text": "@marcinsobejko Do you know which API in `ServerHttpRequest` can give this? ",
                "time": "2020-04-03 07:30:20",
                "index": 8,
                "user": "nnanda2016"
            },
            {
                "id": "5e86e60fd90e114088208e7b",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/xCsd/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/xCsd/image.png)",
                "time": "2020-04-03 07:30:23",
                "index": 9,
                "user": "nnanda2016"
            },
            {
                "id": "5e86e6ab4e14eb618b99ee14",
                "text": "i have one filter which is built around this and if I know i can make use of that and make it available to underlying handlers either via request attribute or reactor context",
                "time": "2020-04-03 07:32:59",
                "index": 10,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 965,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5ca180de8148e555b22a7df2",
                "text": "Hi all,I want to import the spring boot opensource code in my Eclipse IDE,because i want to contribute to the project.In the guide here is what was indicated to import the project via Eclipse Installer,\n \"For the \u201cProject\u201d click on \u201c+\u201d to add a new setup file. Select \u201cGithub Projects\u201d and browser for <checkout>/eclipse/spring-boot-project.setup from your locally cloned copy of the source code. Click \u201cOK\u201d to add the setup file to the list. \" .  \nI\u2019ve been looking and I don\u2019t know how to get through this. Someone could help me",
                "time": "2019-04-01 03:09:18",
                "index": 0,
                "user": "andresetevejob"
            },
            {
                "id": "5ca187e5bd70a40d5fd5d4cd",
                "text": "Hi all,I want to import the spring boot opensource code in my Eclipse IDE,because i want to contribute to the project.In the guide here is what was indicated to import the project via Eclipse Installer,\n \"For the \u201cProject\u201d click on \u201c+\u201d to add a new setup file. Select \u201cGithub Projects\u201d and browser for <checkout>/eclipse/spring-boot-project.setup from your locally cloned copy of the source code. Click \u201cOK\u201d to add the setup file to the list. \" .  \nI\u2019ve been looking and I don\u2019t know how to get through this. Someone could help me",
                "time": "2019-04-01 03:39:17",
                "index": 2,
                "user": "andresetevejob"
            },
            {
                "id": "5ca1c03b3ebbdc55b34068ba",
                "text": "@andresetevejob What, specifically, don't you know how to get through? If you follow the instructions step-by-step they should work (they did the last time I used them at least). Can you please describe exactly what you've done so far and the point at which you're stuck?",
                "time": "2019-04-01 07:39:39",
                "index": 3,
                "user": "wilkinsona"
            },
            {
                "id": "5ca3cc041f6e900d5eca165e",
                "text": "@wilkinsona, I follow this step :",
                "time": "2019-04-02 20:54:28",
                "index": 85,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc073ebbdc55b34edf15",
                "text": "Download and run the latest Eclipse Installer from eclipse.org/downloads/ (under \"Get Eclipse\").\n\nSwitch to \"Advanced Mode\" using the drop down menu on the right.\n\nSelect \u201cEclipse IDE for Java Developers\u201d under \u201cEclipse.org\u201d as the product to install and click \u201cnext\u201d.",
                "time": "2019-04-02 20:54:31",
                "index": 86,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc117ecbdc29caec50f3",
                "text": "They work well",
                "time": "2019-04-02 20:54:41",
                "index": 87,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc1331aec969e840b8dc",
                "text": "But",
                "time": "2019-04-02 20:54:43",
                "index": 88,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc2d8148e555b23a6cf9",
                "text": "I don't know how to this step :",
                "time": "2019-04-02 20:55:09",
                "index": 89,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc2e7ecbdc29caec5157",
                "text": "For the \u201cProject\u201d click on \u201c+\u201d to add a new setup file. Select \u201cGithub Projects\u201d and browser for <checkout>/eclipse/spring-boot-project.setup from your locally cloned copy of the source code. Click \u201cOK\u201d to add the setup file to the list.",
                "time": "2019-04-02 20:55:10",
                "index": 90,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc363ebbdc55b34ee0e3",
                "text": "According the guidlines",
                "time": "2019-04-02 20:55:18",
                "index": 91,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc4cb34ccd69e7548c08",
                "text": "Sorry,for example",
                "time": "2019-04-02 20:55:40",
                "index": 92,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc51bd70a40d5fe5cafc",
                "text": "with infinispan",
                "time": "2019-04-02 20:55:45",
                "index": 93,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc628148e555b23a6ddf",
                "text": "the guide is illustrated with the image",
                "time": "2019-04-02 20:56:02",
                "index": 94,
                "user": "andresetevejob"
            },
            {
                "id": "5ca3cc635a83c30a46fd3c57",
                "text": "http://infinispan.org/docs/stable/contributing/contributing.html#the_basics",
                "time": "2019-04-02 20:56:03",
                "index": 95,
                "user": "andresetevejob"
            },
            {
                "id": "5ca476c21f6e900d5ece81ce",
                "text": "@andresetevejob That step is made up of a few sub-steps. Which part of it don't you know how to do? The `+` is in the top-right corner (on macOS) at least beneath the Oomph logo. You then need to select `GitHub Project` as the Catalog and then click `Browse File System\u2026` and navigate to the `spring-boot-project.setup` file in your local clone of the Spring Boot source code.",
                "time": "2019-04-03 09:02:58",
                "index": 100,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 966,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cc8f41a97dcb371d840c7e9",
                "text": "Anyone know how to send oauth2 user:pass information through post data rather than url parameters?",
                "time": "2019-05-01 01:19:22",
                "index": 0,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc8f4658790b0307e2e0c53",
                "text": "As of right now I have to retrieve tokens via:\n\n```\nhttp://localhost:8080/api/oauth/token?grant_type=password&username=user&password=pass\n```\nThat is undesirable",
                "time": "2019-05-01 01:20:37",
                "index": 1,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc8f7b13d78aa6c03c38947",
                "text": "Found the solution: https://stackoverflow.com/a/38284206/3404367",
                "time": "2019-05-01 01:34:41",
                "index": 2,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc905763d78aa6c03c3de8f",
                "text": "Does anyone have any resources on how to assign an oauth2 token to a users ip address?",
                "time": "2019-05-01 02:33:26",
                "index": 3,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc90619b4700e023dff53e0",
                "text": "It's a ghost town in here. Anyone know of any other active communities?",
                "time": "2019-05-01 02:36:09",
                "index": 4,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc9cc7d8790b0307e33b808",
                "text": "> As of right now I have to retrieve tokens via:\n> \n> ```\n> http://localhost:8080/api/oauth/token?grant_type=password&username=user&password=pass\n> ```\n> That is undesirable\n\nYou can send credentials using POST as well.",
                "time": "2019-05-01 16:42:37",
                "index": 6,
                "user": "geekdroid"
            },
            {
                "id": "5cc9cccb990feb451835322c",
                "text": "> It's a ghost town in here. Anyone know of any other active communities?\n\n@en-lofty, couldn\u2019t agree more! It\u2019s a ghost town indeed!",
                "time": "2019-05-01 16:43:55",
                "index": 7,
                "user": "geekdroid"
            },
            {
                "id": "5cc9ccfeb4700e023d04c78d",
                "text": "@geekdroid I tried send via POST, but that wasn't supported until I added a a filter to parse the json object",
                "time": "2019-05-01 16:44:46",
                "index": 8,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc9cd6e375bac747039e3d7",
                "text": "I basically had to `POST http://localhost:8080/api/oauth/token?grant_type=password&username=user&password=pass`\nbecause it was not expecting the client-credentials via json object",
                "time": "2019-05-01 16:46:38",
                "index": 9,
                "user": "RaphaelNanje"
            },
            {
                "id": "5cc9da974b4cb471d98d87f4",
                "text": ">  I tried send via POST, but that wasn't supported \n\nThen you've done something to turn it off. The default configuration should support POST",
                "time": "2019-05-01 17:42:47",
                "index": 10,
                "user": "OrangeDog"
            },
            {
                "id": "5cc9db10b4700e023d053661",
                "text": "@OrangeDog For sure. I am not sure what I did to turn it off",
                "time": "2019-05-01 17:44:48",
                "index": 11,
                "user": "RaphaelNanje"
            }
        ]
    },
    {
        "id": 967,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5eccdfa64412600ccd6a53cb",
                "text": "I'm looking for a reasonable way to compose/extend `StringToDurationConverter` with a new style, but it has a package-private constructor and is final.",
                "time": "2020-05-26 09:21:42",
                "index": 0,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce16f2280c80cbfcb6b65",
                "text": "Create your own converter. It\u2019s not meant to be extended. Or if the feature is generally useful we can discuss how we can improve it",
                "time": "2020-05-26 09:29:19",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5ecce38089941d051a2244de",
                "text": "Yes, but there's a lot of code in there and I want to do exactly that plus one extra thing.",
                "time": "2020-05-26 09:38:08",
                "index": 2,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce38d2280c80cbfcb712b",
                "text": "I can't even compose with it because the constructor isn't accessible",
                "time": "2020-05-26 09:38:21",
                "index": 3,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce3a72280c80cbfcb7163",
                "text": "Unless there's something I'm missing?",
                "time": "2020-05-26 09:38:47",
                "index": 4,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce3b43ffa6106f1d4a44d",
                "text": "There\u2019s no reason for us to open up that thing",
                "time": "2020-05-26 09:39:00",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5ecce3c2b101510b201966b4",
                "text": "It\u2019s also backed by IDE support so whatever you\u2019re changing there is going to break IDE support I suspect",
                "time": "2020-05-26 09:39:14",
                "index": 6,
                "user": "snicoll"
            },
            {
                "id": "5ecce3d389941d051a224577",
                "text": "You can do that of course but I don\u2019t think we should be encouraging you with a public API",
                "time": "2020-05-26 09:39:31",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5ecce3d7b101510b201966ca",
                "text": "What does that mean?",
                "time": "2020-05-26 09:39:35",
                "index": 8,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce3e7778fad0b132800f2",
                "text": "What part?",
                "time": "2020-05-26 09:39:51",
                "index": 9,
                "user": "snicoll"
            },
            {
                "id": "5ecce3e7a91f120a6cc27ff0",
                "text": "Why can't it have a public constructor, so you can make an instance of it?",
                "time": "2020-05-26 09:39:51",
                "index": 10,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce3ef2280c80cbfcb7308",
                "text": "Because it\u2019s not meant to be used externally",
                "time": "2020-05-26 09:39:59",
                "index": 11,
                "user": "snicoll"
            },
            {
                "id": "5ecce3f4b101510b201966e5",
                "text": "I just wrote that",
                "time": "2020-05-26 09:40:04",
                "index": 12,
                "user": "snicoll"
            },
            {
                "id": "5ecce4339da05a060a2f8714",
                "text": "Look at converter implementations. The vast majority of them aren\u2019t public",
                "time": "2020-05-26 09:41:07",
                "index": 13,
                "user": "snicoll"
            },
            {
                "id": "5ecce4587da67d06fad05c0c",
                "text": "The first one I looked at was `StringToPeriodConverter`, which is",
                "time": "2020-05-26 09:41:44",
                "index": 14,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce4614412600ccd6a6065",
                "text": "(it's also not final)",
                "time": "2020-05-26 09:41:53",
                "index": 15,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce468a91f120a6cc280e7",
                "text": "It\u2019s a mistake, it should have been",
                "time": "2020-05-26 09:42:00",
                "index": 16,
                "user": "snicoll"
            },
            {
                "id": "5ecce498f0b8a2053ab39d81",
                "text": "So there's no way to get an instance of a converter in another converter bean?",
                "time": "2020-05-26 09:42:48",
                "index": 17,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce4ba778fad0b1328029b",
                "text": "The class isn\u2019t public. The conversion from A to B is. So if you need to do that, ask the conversion service.",
                "time": "2020-05-26 09:43:22",
                "index": 18,
                "user": "snicoll"
            },
            {
                "id": "5ecce4d4a91f120a6cc281d9",
                "text": "Then I get a recursive dependency",
                "time": "2020-05-26 09:43:48",
                "index": 19,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce4fc9da05a060a2f887b",
                "text": "What are you trying to do?",
                "time": "2020-05-26 09:44:28",
                "index": 20,
                "user": "snicoll"
            },
            {
                "id": "5ecce51089941d051a2247c4",
                "text": "> compose/extend StringToDurationConverter with a new style",
                "time": "2020-05-26 09:44:48",
                "index": 21,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce518a91f120a6cc28374",
                "text": "What exactly",
                "time": "2020-05-26 09:44:56",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5ecce51c3ffa6106f1d4a82b",
                "text": "hh:mm:ss",
                "time": "2020-05-26 09:45:00",
                "index": 23,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce5362c49c45f5aa162cd",
                "text": "```\n Duration.between(LocalTime.MIDNIGHT, LocalTime.parse(string));\n```",
                "time": "2020-05-26 09:45:26",
                "index": 24,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce55389941d051a224952",
                "text": "(yes I know that caps it at 24h)",
                "time": "2020-05-26 09:45:55",
                "index": 25,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce567ff7a920a7210afdc",
                "text": "create an issue?",
                "time": "2020-05-26 09:46:15",
                "index": 26,
                "user": "snicoll"
            },
            {
                "id": "5ecce5aa2280c80cbfcb77d3",
                "text": "Wait",
                "time": "2020-05-26 09:47:22",
                "index": 27,
                "user": "snicoll"
            },
            {
                "id": "5ecce5aeb101510b20196a86",
                "text": "Yeah, I can submit a PR to do it too, but that doesn't help me right now.",
                "time": "2020-05-26 09:47:26",
                "index": 28,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce5ba778fad0b1328056f",
                "text": "You should try to parse your format and then bail if you can't",
                "time": "2020-05-26 09:47:38",
                "index": 29,
                "user": "snicoll"
            },
            {
                "id": "5ecce5c47da67d06fad05f09",
                "text": "then whatever converter that\u2019s next in the chain will be invoked",
                "time": "2020-05-26 09:47:48",
                "index": 30,
                "user": "snicoll"
            },
            {
                "id": "5ecce5c94c9b0f060d240f2a",
                "text": "you don\u2019t need to call ours",
                "time": "2020-05-26 09:47:53",
                "index": 31,
                "user": "snicoll"
            },
            {
                "id": "5ecce5cfb101510b20196ac9",
                "text": "oH!",
                "time": "2020-05-26 09:47:59",
                "index": 32,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce5d8ff7a920a7210b0c9",
                "text": "Look at the javadoc?",
                "time": "2020-05-26 09:48:08",
                "index": 33,
                "user": "snicoll"
            },
            {
                "id": "5ecce5df4412600ccd6a63a9",
                "text": "which bit?",
                "time": "2020-05-26 09:48:15",
                "index": 34,
                "user": "OrangeDog"
            },
            {
                "id": "5ecce9c727513a72fbb2921c",
                "text": "I'm guessing it wasn't working before because I was letting it throw `DateTimeParseException` instead of `IllegalArgumentException`",
                "time": "2020-05-26 10:04:55",
                "index": 35,
                "user": "OrangeDog"
            },
            {
                "id": "5eccfbc27da67d06fad0a7f6",
                "text": "No, that doesn't work either. How is the next in chain supposed to work?",
                "time": "2020-05-26 11:21:38",
                "index": 36,
                "user": "OrangeDog"
            },
            {
                "id": "5ecd04adb101510b2019ce90",
                "text": ":point_up: [May 26, 2020 12:21 PM](https://gitter.im/spring-projects/spring-boot?at=5eccfbc27da67d06fad0a7f6)\n@snicoll - how do you \"bail\"? Where is the JavaDoc for this?",
                "time": "2020-05-26 11:59:41",
                "index": 38,
                "user": "OrangeDog"
            },
            {
                "id": "5ecd0a2a3ffa6106f1d52580",
                "text": "I'm also having trouble getting the same conversion service in a test as the actual application uses",
                "time": "2020-05-26 12:23:06",
                "index": 39,
                "user": "OrangeDog"
            },
            {
                "id": "5ecd1520225dc25f54a7e7da",
                "text": "looks like I was wrong. I thought returning `null` would do the delegation but it doesn\u2019t. Sorry @OrangeDog ",
                "time": "2020-05-26 13:09:52",
                "index": 43,
                "user": "snicoll"
            },
            {
                "id": "5ecd15a12c49c45f5aa210fe",
                "text": "OK, so I'm back where I started.",
                "time": "2020-05-26 13:12:01",
                "index": 44,
                "user": "OrangeDog"
            },
            {
                "id": "5ecd160f2c49c45f5aa21534",
                "text": "Any idea on testing? I thought it would be `ApplicationConversionService.getSharedInstance()` but  in e.g. a `@WebMvcTest` that doesn't have the additional converter beans, and I don't know what date/time formats it's using, but it's not the ones in `spring.mvc.format`",
                "time": "2020-05-26 13:13:51",
                "index": 45,
                "user": "OrangeDog"
            },
            {
                "id": "5ecd1678778fad0b1328a47d",
                "text": "(for my original issue, I discovered `DurationStyle.detectAndParse` is public so I can use that)",
                "time": "2020-05-26 13:15:36",
                "index": 46,
                "user": "OrangeDog"
            }
        ]
    },
    {
        "id": 968,
        "project": "spring-boot",
        "intention": "library_problem",
        "messages": [
            {
                "id": "5cfd45e4faac64393469badb",
                "text": "Any ideas on how I can have a spring boot 1.5.21 dependency setup that doesn't try to override everything to 2.x all the time? I use a custom parent unrelated to spring boot.",
                "time": "2019-06-09 17:46:12",
                "index": 0,
                "user": "mschipperheyn"
            },
            {
                "id": "5cfd474b84c08f5414045415",
                "text": "Keep running into `java.lang.NoClassDefFoundError: javax/xml/bind/ValidationException` on a 1.8 setup. Presumably because `org.springframework.boot:spring-boot-maven-plugin:2.1.5.RELEASE` is loaded instead of org.springframework.boot:spring-boot-maven-plugin:1.5.21.RELEASE",
                "time": "2019-06-09 17:52:11",
                "index": 1,
                "user": "mschipperheyn"
            },
            {
                "id": "5cfd6b30faac6439346ab709",
                "text": "if you are using the spring boot maven plugin to manage dependencies this cannot happen",
                "time": "2019-06-09 20:25:20",
                "index": 2,
                "user": "bjoernhaeuser"
            }
        ]
    },
    {
        "id": 969,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5bc8fe03ae7be940167c03b3",
                "text": "Does someone know what exactly the status supersede on issues means?",
                "time": "2018-10-18 21:41:23",
                "index": 0,
                "user": "filiphr"
            },
            {
                "id": "5bca08a7ab17df2631b9f658",
                "text": "@filiphr We use superseded when an issue was raised and then someone contributes a pull request that essentially replaces the issue. We used to use duplicate for that, but superseded is more accurate.",
                "time": "2018-10-19 16:39:03",
                "index": 9,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 970,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c49929a20b78635b674a52a",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/zmhN/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/zmhN/image.png)",
                "time": "2019-01-24 10:25:30",
                "index": 0,
                "user": "danielang2020"
            },
            {
                "id": "5c49929dba355012a48ccb27",
                "text": "hi, everyone, my webflux code doesn't work properly.\nplease help me.\nI just want to finish in 3 seconds later, but actually finish in 10 seconds later.\nhow to fix it.   thanks in advances.",
                "time": "2019-01-24 10:25:33",
                "index": 1,
                "user": "danielang2020"
            },
            {
                "id": "5c499546f780a1521f5ecc6c",
                "text": "@Lang11 you should not use `Thread.sleep`, even for testing purposes. This is not simulating a long service call as you might expect, it's merely destroying the runtime model. You should chain your mono with a `Mono.delay(Duration)` operator instead.",
                "time": "2019-01-24 10:36:54",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5c4997a78ce4bb25b800dcf0",
                "text": "@bclozel   thanks for your reply. I just want to simulate a time-consuming operation scenario, in fact, this code  will be replaced by a loop to get information from a cache.",
                "time": "2019-01-24 10:47:03",
                "index": 5,
                "user": "danielang2020"
            },
            {
                "id": "5c49986595e17b4525a0c0e1",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/H3bK/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/H3bK/image.png)",
                "time": "2019-01-24 10:50:13",
                "index": 7,
                "user": "danielang2020"
            },
            {
                "id": "5c499867ba355012a48cf359",
                "text": "@bclozel Just like this, get a value.",
                "time": "2019-01-24 10:50:15",
                "index": 8,
                "user": "danielang2020"
            },
            {
                "id": "5c499884cb47ec3000942e65",
                "text": "But after 3 seconds later, no timeout response here.",
                "time": "2019-01-24 10:50:44",
                "index": 9,
                "user": "danielang2020"
            },
            {
                "id": "5c49990195e17b4525a0c57f",
                "text": "@Lang11 if that CacheUtil class is doing I/O (like reading from a redis instance or a cache server), then you should avoid doing that. You'd be blocking. Now I think the timeout operator should still work. Do you have a sample repo I could take a look at?",
                "time": "2019-01-24 10:52:49",
                "index": 10,
                "user": "bclozel"
            },
            {
                "id": "5c499978dab15872cee4c95c",
                "text": "thank you very much, please wait a moment. I will upload my code to github.",
                "time": "2019-01-24 10:54:48",
                "index": 11,
                "user": "danielang2020"
            },
            {
                "id": "5c499ff395e17b4525a0f14b",
                "text": "@bclozel  please https://github.com/Lang11/cdemo.git",
                "time": "2019-01-24 11:22:27",
                "index": 22,
                "user": "danielang2020"
            },
            {
                "id": "5c49c0e8ba355012a48e1836",
                "text": "@Lang11 I think the issue comes from `SendResult sendResult = producer.send(msg);` this is a blocking call, and you should never call such a blocking operation in the middle of a controller handler. The timeout doesn't work on this since this code is outside of the reactive pipeline",
                "time": "2019-01-24 13:43:04",
                "index": 42,
                "user": "bclozel"
            },
            {
                "id": "5c49c0f9cb47ec3000954572",
                "text": "this piece of code is dangerous since you're blocking one of the few threads in your app",
                "time": "2019-01-24 13:43:21",
                "index": 43,
                "user": "bclozel"
            },
            {
                "id": "5c49c2490721b912a5cf8239",
                "text": "Ideally, you should use a reactive library for sending those messages. If you really can't, then instead you could follow the advice here: https://projectreactor.io/docs/core/release/reference/#faq.wrap-blocking (using `fromCallable` and scheduling the work on a thread pool)",
                "time": "2019-01-24 13:48:57",
                "index": 44,
                "user": "bclozel"
            },
            {
                "id": "5c49c25bdab15872cee5e5a6",
                "text": "Note that by doing that you're working against the runtime advantages of reactive",
                "time": "2019-01-24 13:49:15",
                "index": 45,
                "user": "bclozel"
            },
            {
                "id": "5c49cacaba355012a48e6184",
                "text": "@bclozel Thanks for your advice. You mean we couldn't  have some blocking codes in webflux app?",
                "time": "2019-01-24 14:25:14",
                "index": 60,
                "user": "danielang2020"
            },
            {
                "id": "5c49cb109bfa375aab522353",
                "text": "@Lang11 you can, with the link I've provided. But if performance/scalability is your primary driver for using reactive, you should know that you'll be losing part of those benefits if you do that.",
                "time": "2019-01-24 14:26:24",
                "index": 61,
                "user": "bclozel"
            },
            {
                "id": "5c49cba57a0f4d5b19fe7dab",
                "text": "@bclozel I have confused about it these days.  Thank you for answering my question.",
                "time": "2019-01-24 14:28:53",
                "index": 62,
                "user": "danielang2020"
            },
            {
                "id": "5c4a790b0721b912a5d474f3",
                "text": "@Lang11 DefaultMQProducer also supports send with callback `send(Message msg, SendCallback sendCallback)`. You can create Mono using the callback. I think this [post](https://dzone.com/articles/spring-reactor-and-elasticsearch-from-callbacks-to) will be helpful.\nI find creating publisher from callback more preferable over scheduler. I'm fairly new in reactor, so I'd like @bclozel  's opinion on this.",
                "time": "2019-01-25 02:48:43",
                "index": 71,
                "user": "sarowar-cse"
            },
            {
                "id": "5c4aba5820b78635b67c4009",
                "text": "@sarowar-cse thank you.",
                "time": "2019-01-25 07:27:20",
                "index": 72,
                "user": "danielang2020"
            }
        ]
    },
    {
        "id": 971,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d402e57c356af25e0553ea4",
                "text": "hello, I'm looking into [micrometer](http://micrometer.io) and I'm wondering if there is some support in spring-boot with which I can monitor the length of execution of each method which is annotated with one of REST annotations (e.g. `GetMapping`, `PostMapping`, ...). If not could someone give me some idea how to implement it? I would go with some filter, but don't know which objects do i need to have inside to get the informations about called method (e.g method `GET|POST`, path `/some/url/{id}`, current params `id=1`, ...).",
                "time": "2019-07-30 11:47:35",
                "index": 0,
                "user": "bilak"
            },
            {
                "id": "5d4031e3d254cf27dfa53ce0",
                "text": "@bilak ```management.metrics.web.server.auto-time-requests```https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-metrics.html#production-ready-metrics-spring-mvc or you could use the ```@Timed```annotation",
                "time": "2019-07-30 12:02:43",
                "index": 1,
                "user": "sklaholz"
            },
            {
                "id": "5d403213071bb025df18ffff",
                "text": "@sklaholz thanks",
                "time": "2019-07-30 12:03:31",
                "index": 2,
                "user": "bilak"
            },
            {
                "id": "5d40321f84536e27e0753cb8",
                "text": "I use the ```@Timed```annotation for my tracking",
                "time": "2019-07-30 12:03:43",
                "index": 3,
                "user": "sklaholz"
            }
        ]
    },
    {
        "id": 972,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cecf6a0ecdf942b4c5baf66",
                "text": "when testing using MockMvc I want to know that I get the correct errors on requests. However, it seems it just propagates the IllegalArgumentException when performing the request, rather than translating it as expected. What can I do?",
                "time": "2019-05-28 08:51:44",
                "index": 0,
                "user": "rfftrifork"
            },
            {
                "id": "5cecfb8d879f4478c7f5e652",
                "text": "There's more than MVC involved in the error handling (it relies on servlet page error handling, for example) so I'd recommend using a full-blown server to test it. `@SpringBootTest` will a random port and testing with `TestRestTemplate` is what I would do.",
                "time": "2019-05-28 09:12:45",
                "index": 1,
                "user": "wilkinsona"
            },
            {
                "id": "5cecfba76366992a9435b39e",
                "text": "You can `@Autowire` a `TestRestTemplate` that's pre-configured to use the server's random port into your test",
                "time": "2019-05-28 09:13:11",
                "index": 2,
                "user": "wilkinsona"
            },
            {
                "id": "5cecfbd06366992a9435b452",
                "text": "@wilkinsona ah I see, yeah it kind of sounds like what I'm trying to do",
                "time": "2019-05-28 09:13:52",
                "index": 3,
                "user": "rfftrifork"
            }
        ]
    },
    {
        "id": 973,
        "project": "spring-boot",
        "intention": "documentation_problem",
        "messages": [
            {
                "id": "5bbbd4fbbbdc0b250509630c",
                "text": "hey I was following this (https://medium.com/@tminussi/building-the-backend-for-a-real-time-chat-app-with-reactive-spring-d22b4039fcc8) tutorial and i'm getting an error in the log \n\n```\n!!!\nStreaming through a reactive type requires an Executor to write to the response.\nPlease, configure a TaskExecutor in the MVC config under \"async support\".\nThe SimpleAsyncTaskExecutor currently in use is not suitable under load.\n-------------------------------\nController:\tcom.basicwindow.votune.server.mono.playlist.controller.PlaylistController\nMethod:\t\tgetPlaylists\nReturning:\treactor.core.publisher.Flux<com.basicwindow.votune.server.mono.playlist.Playlist>\n!!!\n```\nI'm pretty new but looks like a simple config error. \n\nThe endpoint looks like this:\n```\n@GetMapping(produces = [(MediaType.TEXT_EVENT_STREAM_VALUE)])\n    fun getPlaylists(): Flux<Playlist> {\n        return playlistService.getPlaylists()\n    }\n```\nIf I remove the produces it returns the expected\n array but doesn't refresh the client.",
                "time": "2018-10-08 22:06:51",
                "index": 0,
                "user": "marcguilera"
            },
            {
                "id": "5bbc49fa6e5a401c2d3ce22c",
                "text": "it\u2019s not an error but a warning",
                "time": "2018-10-09 06:26:02",
                "index": 1,
                "user": "snicoll"
            },
            {
                "id": "5bbc4a0d5331811c2e71e69d",
                "text": "The warning tells you what to do, if that\u2019s not clear let\u2019s see how we can improve the message (this is auto-configured as of Spring Boot 2.1 as well)",
                "time": "2018-10-09 06:26:21",
                "index": 2,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 974,
        "project": "spring-boot",
        "intention": "documentation_information",
        "messages": [
            {
                "id": "5bfea8adcb32736b29a89c41",
                "text": "I need some clarification. I was shown this page through a search: https://docs.spring.io/spring-framework/docs/5.0.0.M1/spring-framework-reference/html/web-reactive.html \nI compared it with the most recent documentation and I want to know what happened to the extract() method and how do I get a Single<> result? Am I using the wrong modules?",
                "time": "2018-11-28 14:39:41",
                "index": 0,
                "user": "chad_d_stud_twitter"
            },
            {
                "id": "5bfeb5a3ced7003fe19cc4a9",
                "text": "@chad_d_stud_twitter that API evolved; it's been replaced by retrieve().bodyToMono() for `Mono`; as for `Single`, I don't think the `RxJavaResponseExtractors` were ported. We're using now `ReactiveAdapterRegistry` in different places, but not in `WebClient` as far as I remember. Maybe create an issue on jira.spring.io on the Spring Framework project?",
                "time": "2018-11-28 15:34:59",
                "index": 1,
                "user": "bclozel"
            }
        ]
    },
    {
        "id": 975,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5d09d81b6f0ec85ade4175bb",
                "text": "Hi everyone,\nI was using Google guice to eagerlyInstantiate a Scheduler in my project, nor I am doing the same thing spring boot. Any idea, how I can eagerlyInstantiate a class having schduler\n\nGoogle guice Impl \nbind(Classname.class).asEagerSingleton()\n\nI am wondering what would be the spring equivalent of the same",
                "time": "2019-06-19 06:37:15",
                "index": 0,
                "user": "deepakmehra10"
            },
            {
                "id": "5d09d879d100e447fc4c8861",
                "text": "in Spring all Beans are eagerly instantiated by default. ",
                "time": "2019-06-19 06:38:49",
                "index": 1,
                "user": "brrshh"
            },
            {
                "id": "5d09d8e126477710bbe5818d",
                "text": "just mark class `@Bean` annotation for example",
                "time": "2019-06-19 06:40:33",
                "index": 2,
                "user": "brrshh"
            },
            {
                "id": "5d09d9482313502d38790e4c",
                "text": "@Bean\nClassname startJob() {\nnew Classname()\n}\nWill this do the job for the above scenario @brrshh ",
                "time": "2019-06-19 06:42:16",
                "index": 3,
                "user": "deepakmehra10"
            },
            {
                "id": "5d09d9b5f5cf1f10bca87039",
                "text": "simple example .. https://www.baeldung.com/spring-scheduled-tasks",
                "time": "2019-06-19 06:44:05",
                "index": 4,
                "user": "brrshh"
            }
        ]
    },
    {
        "id": 976,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5c9a63e53f7ede0c84ec3ff8",
                "text": "I have this in my `WebClient` configuration (Spring Boot version `2.0.3`, reactor extra version `3.1.6.RELEASE`)\n```java\n.retryWhen(Retry.anyOf(RuntimeException.class, ReadTimeoutException.class)\n\t\t.retryMax(maxRetryAttempt)\n\t\t.backoff(Backoff.exponential(Duration.ofMillis(1000L), Duration.ofSeconds(30), 3, true))\n\t\t.jitter(Jitter.random(0.9))\n\t\t.doOnRetry(retryContext -> logger.error(\"[Retry count: {}][Retry Backoff: {}][Throwable: {}]\", retryContext.iteration(), retryContext.backoff(), retryContext.exception()))\n)\n```\n\nOur log file shows:\n\n```\n2019-03-26 10:37:21.878 [ERROR] Thread: reactor-http-client-epoll-16 [Retry count: 1][Retry Backoff: PT1.063S][Throwable: 1]\n2019-03-26 10:37:22.947 [ERROR] Thread: reactor-http-client-epoll-12 [Retry count: 2][Retry Backoff: PT5.663S][Throwable: 2]\n```\n\nI have couple of questions:\n- Does `WebClient` assign different threads for each retry? Or, is it possible?\n- Why `retryContext.exception()` prints numeric values like `1, 2` instead of the error message (if not stack trace)? \n",
                "time": "2019-03-26 17:39:49",
                "index": 0,
                "user": "nnanda2016"
            },
            {
                "id": "5c9a64528fa8dc6ba4683b13",
                "text": "appreciate if someone from spring boot/reactor team to give some hints",
                "time": "2019-03-26 17:41:38",
                "index": 1,
                "user": "nnanda2016"
            },
            {
                "id": "5c9a65761f74fc4d4ca04049",
                "text": "@nnanda2016 unless specified by your code (with `publishOn` or `subscribeOn`), work is done on one of the netty worker threads. When the client retries, the work can be scheduled on any of those.\nAs for the logger message, I don't know why you're seeing that.",
                "time": "2019-03-26 17:46:30",
                "index": 2,
                "user": "bclozel"
            },
            {
                "id": "5c9a6633425a5d12042ec111",
                "text": "@bclozel  we do not have `publishOn` or `subscribeOn` in our code. So, your explnation helps me understand the `(1)` behavior. But the point `(2)` is weird, `retryContext.exception()` should print the error message from the `Throwable` instance; not these numbers. Should I ask this in `reactor` channel?",
                "time": "2019-03-26 17:49:39",
                "index": 3,
                "user": "nnanda2016"
            },
            {
                "id": "5c9a669e5c7a815f27d14156",
                "text": "I doesn't sound specific to reactor, as the method signatures and types check out; the reactor team might help here. In any case, a small repro project will be useful as I'm not sure they'll spot the problem just by looking at this code snippet",
                "time": "2019-03-26 17:51:26",
                "index": 4,
                "user": "bclozel"
            },
            {
                "id": "5c9a671c8fa8dc6ba4683b26",
                "text": "sure, this is happening in one of our production code (as part of a bigger issue related to `reactor-netty` which I am still analyzing). Let me see if i can put up a sample code. Thanks for the help. ",
                "time": "2019-03-26 17:53:32",
                "index": 5,
                "user": "nnanda2016"
            },
            {
                "id": "5c9a88768fa8dc6ba4683b95",
                "text": "@bclozel Appreciate if you could provide some hint.\n- Does `WebClient` maintain any kind of connection pool? \n- If so, how to refresh/renew the connections in case they become stale (may be firewall or destination server has already closed those connections)?\n\nThe context of these questions is, we are seeing a lot of `reactor.core.Exceptions$ReactiveException: java.io.IOException: Connection closed prematurely` in our server log and we are thinking it could be related to https://github.com/reactor/reactor-netty/issues/498 . \n",
                "time": "2019-03-26 20:15:50",
                "index": 6,
                "user": "nnanda2016"
            },
            {
                "id": "5c9a8dbc1f74fc4d4ca16bc9",
                "text": "@nnanda2016 Yes, WebClient (actually the reactor netty client underneath) is pooling HTTP connections. I'm not sure you can manually \"refresh\" those connections. AFAIK the connection pool might be unbounded and you can't just loop over the existing connections. For more about the actual behavior of the reactor netty connection pool, the reactor team should know better. Especially about when and how invalid connections are discarded.",
                "time": "2019-03-26 20:38:20",
                "index": 7,
                "user": "bclozel"
            },
            {
                "id": "5c9a8df94aa6d540c62af3b5",
                "text": "Thanks Brian, let me ask this pool related qn in reactor channel. ",
                "time": "2019-03-26 20:39:21",
                "index": 8,
                "user": "nnanda2016"
            }
        ]
    },
    {
        "id": 977,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bee8366ddad8777ef710590",
                "text": "any idea where is annotation proceesor of @query annotation  - spring boot repository ",
                "time": "2018-11-16 08:44:22",
                "index": 0,
                "user": "Razi007"
            },
            {
                "id": "5bee8bb92ef5b06e4074a6db",
                "text": "@Razi007 There are several `@Query` annotations. Assuming you are referring to one from Spring Data, you'll find the code that handles the annotation in the relevant Spring Data repository. Spring Boot itself doesn't do anything with them.",
                "time": "2018-11-16 09:19:53",
                "index": 4,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 978,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5e30446458f02e349736fdaa",
                "text": "Hello. I'm trying to get around a dependency issue on a spring boot BuildProperties bean. My project is not a spring boot project, but it includes spring-boot-starter-security and spring-web. It also has a dependency on a library which autowires a BuildProperties bean. When I try to launch the application, I get a bunch of errors about no qualifying bean of type `org.springframework.boot.info.BuildProperties`. How can I include this bean in my project without importing all of spring boot, or converting my project to a spring boot project?",
                "time": "2020-01-28 14:25:40",
                "index": 0,
                "user": "springroll12"
            },
            {
                "id": "5e3061b1e8a8383559ec5d58",
                "text": "@springroll12 Add a dependency on `org.springframework.boot:spring-boot` if you do not have one already and then declare a `BuildProperties` bean:\n\n```\n@Bean\nBuildProperties buildProperties() {\n    return new BuildProperties();\n}\n```",
                "time": "2020-01-28 16:30:41",
                "index": 2,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 979,
        "project": "spring-boot",
        "intention": "technical_discussion",
        "messages": [
            {
                "id": "5ba1f1198909f71f75f65cf9",
                "text": "@mdeinum not at the agenda and not keen to go that far at this point, especially for `TaskExecutor` for the reason already mentionned (it\u2019s very cheap to create a proxy, different story for a JNDI lookup)",
                "time": "2018-09-19 06:47:53",
                "index": 0,
                "user": "snicoll"
            },
            {
                "id": "5ba20d3ef7e1580625f25adb",
                "text": "@snicoll ok thanks. Was just a suggestion to align it with the datasource configuration. ",
                "time": "2018-09-19 08:47:58",
                "index": 11,
                "user": "mdeinum"
            },
            {
                "id": "5ba20da5a56b215c975db1d1",
                "text": "@mdeinum not the same thing I am afraid",
                "time": "2018-09-19 08:49:41",
                "index": 15,
                "user": "snicoll"
            },
            {
                "id": "5ba20e3af4bd1056ac855b93",
                "text": "@snicoll I also made a comment on `@EntityScan` a while ago, what is your take on that? ",
                "time": "2018-09-19 08:52:10",
                "index": 21,
                "user": "mdeinum"
            },
            {
                "id": "5ba20e4dfcba1254fada28ca",
                "text": "Just back from PTO. What comment?",
                "time": "2018-09-19 08:52:29",
                "index": 22,
                "user": "snicoll"
            },
            {
                "id": "5ba20e507dca3065032212a5",
                "text": "@snicoll BTW Hope you had a nice holiday...",
                "time": "2018-09-19 08:52:32",
                "index": 23,
                "user": "mdeinum"
            },
            {
                "id": "5ba20e590cfe7f30f1b79a42",
                "text": "It was awesome, thanks",
                "time": "2018-09-19 08:52:41",
                "index": 24,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 980,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5b8d5e7e58a3797aa3f8e26e",
                "text": "I have a question about @SpringBootConfiguration: the javadocs say there should be only one class annotated with @SpringBootConfiguration (which is the @SpringBootApplication). Why is that?",
                "time": "2018-09-03 16:17:02",
                "index": 0,
                "user": "thombergs"
            },
            {
                "id": "5b8d5e8658a3797aa3f8e27d",
                "text": " I'm asking because @SpringBootConfiguration provides a nice way to modularize an application and make modules testable on their own when used with @SpringBootTest.",
                "time": "2018-09-03 16:17:10",
                "index": 1,
                "user": "thombergs"
            },
            {
                "id": "5b8d5eb611b41f69dbb4f7b5",
                "text": "The missing part is \u201cApplication\"",
                "time": "2018-09-03 16:17:58",
                "index": 2,
                "user": "snicoll"
            },
            {
                "id": "5b8d5ecbc9500b4bab77f783",
                "text": "That\u2019s not a recommendation for tests for wich, indeed, you can have different ones in different package structure",
                "time": "2018-09-03 16:18:19",
                "index": 3,
                "user": "snicoll"
            },
            {
                "id": "5b8d5edac2bd5d117a130b81",
                "text": "But the application should only define one",
                "time": "2018-09-03 16:18:34",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5b8d6013cff55e56179fda30",
                "text": "But why is it not recommended? It feels good declaring a @SpringBootConfiguration per \"module\" and then writing integration tests for each module in isolation using @SpringBootTest.  What's a better way to define and test modules in isolation?",
                "time": "2018-09-03 16:23:47",
                "index": 5,
                "user": "thombergs"
            },
            {
                "id": "5b8e2279ac25fd11b5d9fa4a",
                "text": "@thombergs I am not following. That recommendation does not apply for tests (the recommendation states \u201capplication\u201d). For tests you can have several `@SpringBootConfiguration` in different packages to tune how `@SpringBootTest` behaves. That\u2019s a feature actually. Not sure what you\u2019re complaining about really",
                "time": "2018-09-04 06:13:13",
                "index": 16,
                "user": "snicoll"
            }
        ]
    },
    {
        "id": 981,
        "project": "spring-boot",
        "intention": "programming_problem",
        "messages": [
            {
                "id": "5b976c9645318b2dfe9086bd",
                "text": "Im so boring but I can't get a Hibernate SessionFactory in springboot  v-2.0.4.RELEASE\uff0csomebody can help\uff1f",
                "time": "2018-09-11 07:19:50",
                "index": 0,
                "user": "xiaonanfeng"
            },
            {
                "id": "5b976d2ae481f854a69f2834",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/cPVl/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/cPVl/image.png)",
                "time": "2018-09-11 07:22:18",
                "index": 1,
                "user": "xiaonanfeng"
            },
            {
                "id": "5b976d56e6e309365e3616cf",
                "text": "[![image.png](https://files.gitter.im/spring-projects/spring-boot/NNvb/thumb/image.png)](https://files.gitter.im/spring-projects/spring-boot/NNvb/image.png)",
                "time": "2018-09-11 07:23:02",
                "index": 2,
                "user": "xiaonanfeng"
            },
            {
                "id": "5b976d7951a02e2a26125d6f",
                "text": "and its working well in v-1.5.x",
                "time": "2018-09-11 07:23:37",
                "index": 3,
                "user": "xiaonanfeng"
            },
            {
                "id": "5b976d847ce5f5314f94a1fa",
                "text": "As of hibernate2 the `SessionFactory` extends `EntityManagerFactory` which makes that code unusable. ",
                "time": "2018-09-11 07:23:48",
                "index": 4,
                "user": "mdeinum"
            },
            {
                "id": "5b976d9251a02e2a26125da4",
                "text": "Hibernate 5.2 (I meant)",
                "time": "2018-09-11 07:24:02",
                "index": 5,
                "user": "mdeinum"
            },
            {
                "id": "5b976daea04db554a70b23ef",
                "text": "Downgrade to an earlier Hibernate version to make it work, or don't use the `SessionFactory` but rather the `EntityManager` and unwrap that to the `Session`. ",
                "time": "2018-09-11 07:24:30",
                "index": 6,
                "user": "mdeinum"
            },
            {
                "id": "5b9778680fb4232e38a87f51",
                "text": "its really horrible to see screenshots instead of formatted code. ```entityManagerFactory.unwrap(SessionFactory.class)``` is still fine even with Hibernate 5.3. The reason is a circularity in bean creation, like the exception says.",
                "time": "2018-09-11 08:10:16",
                "index": 7,
                "user": "thackel"
            },
            {
                "id": "5b97788b51a02e2a2612a287",
                "text": "The reason for the circularity is the fact that `SessionFactory` extends `EntityManagerFactory`. ",
                "time": "2018-09-11 08:10:51",
                "index": 8,
                "user": "mdeinum"
            },
            {
                "id": "5b9778c30fb4232e38a8817a",
                "text": "Spring Boot detects that you configured an `EntitymanagerFactory` (because the `SessionFactory` is one). Backs off. Now as the `SessionFactory` is an`EntityManagerFactory`. The `sessionFactory` method needs to reference the `SessionFactory` (as that is considered the `EntityManagerFactory`) and forms a cycle with itself. ",
                "time": "2018-09-11 08:11:47",
                "index": 9,
                "user": "mdeinum"
            },
            {
                "id": "5b9778e651a02e2a2612a3af",
                "text": "So yes you can still use `unwrap` but it won't work if you define the `SessionFactory` as an `@Bean`. ",
                "time": "2018-09-11 08:12:22",
                "index": 10,
                "user": "mdeinum"
            },
            {
                "id": "5b97799233ebb72e37fe4352",
                "text": "lol , yes. ur right , but ive downgrade the boot-starter-data-jpa with maven exclusions\uff0cand  dependency  hibernate-core\uff0cbut it still errrrrrrrr.........",
                "time": "2018-09-11 08:15:14",
                "index": 11,
                "user": "xiaonanfeng"
            },
            {
                "id": "5b9779cfe481f854a69f7b1b",
                "text": "Don't downgrade the starter. Just specify `<hibernate.version>5.1.x.Final</hibernate.version>` to override the hibernate version. Don't mix different versions of Spring Boot jars that will lead to all sorts of other exceptions. ",
                "time": "2018-09-11 08:16:15",
                "index": 12,
                "user": "mdeinum"
            },
            {
                "id": "5b9779e9e6e309365e3669bb",
                "text": "ok, ill try this",
                "time": "2018-09-11 08:16:41",
                "index": 13,
                "user": "xiaonanfeng"
            },
            {
                "id": "5b9779eacddb292dff577c80",
                "text": "ok, you are right. i am using the unwrap only directly in der ```@Bean HibernateTemplate public ...``` method, which does not expose the ```SessionFactory``` as a bean",
                "time": "2018-09-11 08:16:42",
                "index": 14,
                "user": "thackel"
            }
        ]
    },
    {
        "id": 982,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5cf859b0b76eac527aacf308",
                "text": "hello everyone,\ncould you guys tell me what is different between `tomcat-embed-jasper` vs `tomcat-jasper` vs `tomcat starter` why i am asking for difference is that i was creating sample hello world app in springboot mvc so when ever i hit to localhost:8080/hello URL, in console i saw `NO MAPPING for /WEB-INF/views/hi.jsp` (i am sending `hi` string from controller) but when i add \n```\n<dependency>\n   <groupId>org.apache.tomcat</groupId>\n   <artifactId>tomcat-jasper</artifactId>\n   <version>9.0.19</version>\n  </dependency>\n```\nabove in pom.xml error gone.",
                "time": "2019-06-06 00:09:20",
                "index": 0,
                "user": "iammohsinar"
            },
            {
                "id": "5cf8ef00b76eac527ab0cabb",
                "text": "@iammohsinar The Tomcat starter (`spring-boot-starter-tomcat`) contains all the dependencies you need to use Tomcat as your Boot app's embedded web server (minus JSP support). `org.apache.tomcat:tomcat-jasper` and `org.apache.tomcat.embed:tomcat-embed-jasper` add JSP support. That have slightly different contents and slightly different dependencies. You should use the latter. As its name suggests, it's intended for use when embedding Tomcat as Boot does. It's also the version that's covered by Boot's dependency management so you don't have to declare a version.",
                "time": "2019-06-06 10:46:24",
                "index": 10,
                "user": "wilkinsona"
            }
        ]
    },
    {
        "id": 983,
        "project": "spring-boot",
        "intention": "library_information",
        "messages": [
            {
                "id": "5c9209b62f6ded0abb127a74",
                "text": "Hey guys and gals. How can I configure spring boot build.gradle to ensure that when a user updates a file (such as controller or service) the hot swapping process takes place. Also, would be ideal if it works when a user updates the code using a plain text editor and not jus an IDE such as IntelliJ",
                "time": "2019-03-20 09:36:54",
                "index": 0,
                "user": "PrinceAdeleke"
            },
            {
                "id": "5c920ab42fb6800d804db36c",
                "text": "@EmmanuelAdeleke as you need to hot swap the compiled classes, just updating the Java source from a text editor will not work. And for the hot swap you could use JRebel or an alternative",
                "time": "2019-03-20 09:41:08",
                "index": 2,
                "user": "FWiesner"
            },
            {
                "id": "5c920be6fa5b721a1fbc9b47",
                "text": "@EmmanuelAdeleke there is a way to configure gradle to watch your files and do that for you. I don\u2019t have the command at hand though, sorry",
                "time": "2019-03-20 09:46:14",
                "index": 4,
                "user": "snicoll"
            },
            {
                "id": "5c920c153dd81711491f3e5a",
                "text": "Maybe that? https://blog.gradle.org/introducing-continuous-build",
                "time": "2019-03-20 09:47:01",
                "index": 5,
                "user": "snicoll"
            },
            {
                "id": "5c920c202fb6800d804dbcbc",
                "text": "@snicoll but a running boot app would not be updated",
                "time": "2019-03-20 09:47:12",
                "index": 6,
                "user": "FWiesner"
            },
            {
                "id": "5c920c272fb6800d804dbd22",
                "text": "why not?",
                "time": "2019-03-20 09:47:19",
                "index": 7,
                "user": "snicoll"
            },
            {
                "id": "5c920c358aa66959b63e9c41",
                "text": "if it has devtools it will be updated",
                "time": "2019-03-20 09:47:33",
                "index": 8,
                "user": "snicoll"
            },
            {
                "id": "5c920c8e49fdaa0d81e5814d",
                "text": "ok, learned something new then - we're long time users of JRebel, so never checked for something Spring native ;)",
                "time": "2019-03-20 09:49:02",
                "index": 9,
                "user": "FWiesner"
            },
            {
                "id": "5c929f50fa5b721a1fc0c93a",
                "text": "Thanks @FWiesner and @snicoll - `./gradlew build --continuous` followed by `./gradlew bootRun` in another terminal window works ",
                "time": "2019-03-20 20:15:11",
                "index": 13,
                "user": "PrinceAdeleke"
            }
        ]
    },
    {
        "id": 984,
        "project": "spring-boot",
        "intention": "programming_information",
        "messages": [
            {
                "id": "5bd2ea77bbdc0b2505a1522a",
                "text": "does anyone know What's the difference between `zuul.ignoredHeaders` and `zuul.sensitiveHeaders` properties in zuul?",
                "time": "2018-10-26 10:20:39",
                "index": 0,
                "user": "ofabricio"
            },
            {
                "id": "5bd32551c7bf7c366273251a",
                "text": "@ofabricio Never used zuul but got a bit curious by the question : ) Found this, https://cloud.spring.io/spring-cloud-netflix/multi/multi__router_and_filter_zuul.html . From what I can tell the property allows you to change the default filtering out of headers considered sensitive to allow them to propagate.",
                "time": "2018-10-26 14:31:45",
                "index": 1,
                "user": "micke-a"
            },
            {
                "id": "5bd32fa96e5a401c2dd3ebb9",
                "text": "I understood the opposite, sensitive won't propagate. I got a slight diff behaviour in zuul after updating to spring boot 2. I had sensitive headers set, and now they dont propagate",
                "time": "2018-10-26 15:15:53",
                "index": 2,
                "user": "ofabricio"
            }
        ]
    }
]